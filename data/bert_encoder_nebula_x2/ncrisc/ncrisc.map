
/proj_sw/user_dev/jnie/budabackend/./tt_build/test_inference_8381574644216967368/ncrisc/ncrisc.elf:     file format elf32-littleriscv
/proj_sw/user_dev/jnie/budabackend/./tt_build/test_inference_8381574644216967368/ncrisc/ncrisc.elf
architecture: riscv:rv32, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0xffc00000

Program Header:
    LOAD off    0x00000000 vaddr 0x00005200 paddr 0x00005200 align 2**4
         filesz 0x00000000 memsz 0x000002c4 flags rw-
    LOAD off    0x000000c0 vaddr 0x00009000 paddr 0x00009000 align 2**4
         filesz 0x000038d8 memsz 0x000038d8 flags r-x
    LOAD off    0x00000000 vaddr 0xffb00000 paddr 0xffb00000 align 2**4
         filesz 0x00000000 memsz 0x00000fd0 flags rw-
    LOAD off    0x000039a0 vaddr 0xffc00000 paddr 0xffc00000 align 2**4
         filesz 0x00003e6c memsz 0x00003e6c flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init         00000210  ffc00000  ffc00000  000039a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         00003c5c  ffc00210  ffc00210  00003bb0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 code_l1       000038d8  00009000  00009000  000000c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .sbss         00000050  ffb00000  ffb00000  000039a0  2**3
                  ALLOC
  4 .bss          00000050  ffb00050  ffb00050  000039a0  2**3
                  ALLOC
  5 .stack        000003d0  ffb000a0  ffb000a0  000039a0  2**0
                  ALLOC
  6 data_noinit   00000b60  ffb00470  ffb00470  000039a0  2**2
                  ALLOC
  7 data_l1_noinit 000002c4  00005200  00005200  000000c0  2**5
                  ALLOC
  8 .comment      00000012  00000000  00000000  0000780c  2**0
                  CONTENTS, READONLY
  9 .riscv.attributes 00000026  00000000  00000000  0000781e  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00000118  00000000  00000000  00007848  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_info   0001ee05  00000000  00000000  00007960  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_abbrev 000020cf  00000000  00000000  00026765  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line   0000ebe1  00000000  00000000  00028834  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_frame  000007b0  00000000  00000000  00037418  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00007afe  00000000  00000000  00037bc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_loc    0001031f  00000000  00000000  0003f6c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 000040e8  00000000  00000000  0004f9e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
ffc00000 l    d  .init	00000000 .init
ffc00210 l    d  .text	00000000 .text
00009000 l    d  code_l1	00000000 code_l1
ffb00000 l    d  .sbss	00000000 .sbss
ffb00050 l    d  .bss	00000000 .bss
ffb000a0 l    d  .stack	00000000 .stack
ffb00470 l    d  data_noinit	00000000 data_noinit
00005200 l    d  data_l1_noinit	00000000 data_l1_noinit
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 tmu-crt0.o
ffc0017c l       .init	00000000 CRT_START
00000000 l    df *ABS*	00000000 
ffc00c30 l     F .text	0000003c get_operand_stream_id(int)
ffc00c6c l     F .text	00000038 stream_id_to_operand(unsigned long)
ffc00ca4 l     F .text	00000030 is_input_operand_decoupled(int)
ffc00cd4 l     F .text	00000024 ncrisc_noc_reads_flushed(unsigned long, unsigned long)
ffc00cd4 l     F .text	00000024 ncrisc_noc_nonposted_writes_flushed(unsigned long, unsigned long)
ffc00cf8 l     F .text	00000024 ncrisc_noc_fast_read_ok(unsigned long, unsigned long)
ffc00cf8 l     F .text	00000024 ncrisc_noc_fast_write_ok(unsigned long, unsigned long)
00009000 l     F code_l1	00000058 init_ncrisc_streams(void*, unsigned long)
ffc00d1c l     F .text	00000048 stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)
00009058 l     F code_l1	000000ac get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)
ffc00d64 l     F .text	000000c4 read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)
ffc00e28 l     F .text	00000128 push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)
00009104 l     F code_l1	000001d0 dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)
ffb00014 l     O .sbss	00000008 noc_xy_local_addr
000092d4 l     F code_l1	000000ac risc::init_perf_dram_state_first_epoch()
ffb0000c l     O .sbss	00000005 risc::thread_l1_buf_sel
ffb00008 l     O .sbss	00000004 risc::perf_dram_initialized
00009380 l     F code_l1	000000c8 risc::init_perf_dram_state()
00009448 l     F code_l1	00000064 risc::allocate_perf_buffer()
ffb00004 l     O .sbss	00000004 risc::perf_buf_base
ffb00000 l     O .sbss	00000004 local_mem_barrier
000094ac l     F code_l1	00000048 risc::record_timestamp_at_offset_l1(unsigned long, unsigned long)
ffc00f50 l     F .text	00000048 risc::record_timestamp_at_offset(unsigned long, unsigned long)
ffc00f98 l     F .text	00000034 stream_dram_write_ok(unsigned long)
ffc00f98 l     F .text	00000034 stream_dram_writes_sent(unsigned long)
ffc00fcc l     F .text	0000003c get_epoch_table_x(int, int)
000094f4 l     F code_l1	00000080 ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]
00009574 l     F code_l1	000000c8 replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0000963c l     F code_l1	000000dc ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]
00009718 l     F code_l1	000002b8 risc::check_dram_spill_requests_once()
ffc01008 l     F .text	00000044 risc::record_perf_value_and_check_overflow(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
ffc0104c l     F .text	00000054 risc::record_timestamp(unsigned long) [clone .constprop.0]
ffc010a0 l     F .text	00000068 clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]
000099d0 l     F code_l1	00000084 ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
00009a54 l     F code_l1	0000001c ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
00009a70 l     F code_l1	000011a8 risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)
ffb0004f l     O .sbss	00000001 loading_noc
ffb00040 l     O .sbss	00000002 my_y
ffb00044 l     O .sbss	00000002 my_x
0000ac18 l     F code_l1	0000030c run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]
0000af24 l     F code_l1	00000270 poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]
ffc01108 l     F .text	000000ec ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
ffc011f4 l     F .text	00000064 risc_epoch_load(unsigned long long)
ffc01258 l     F .text	00000054 risc_extra_overlay_blob_load(unsigned long long, unsigned long)
ffc012ac l     F .text	0000001c risc_kernels_load(unsigned long long)
ffc012c8 l     F .text	00000080 ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]
ffc01348 l     F .text	00000358 dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)
ffc016a0 l     F .text	0000017c update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]
ffc0181c l     F .text	00000200 risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]
ffc01a1c l     F .text	00000198 dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0000b194 l     F code_l1	0000038c process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]
0000b520 l     F code_l1	000009f4 run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]
ffb00030 l     O .sbss	00000008 my_q_table_offset
ffb0001d l     O .sbss	00000001 noc_size_y
ffb0001c l     O .sbss	00000001 noc_size_x
0000bf14 l     F code_l1	000000fc risc::check_dram_spill_requests(bool) [clone .constprop.0]
0000c010 l     F code_l1	00000540 risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)
0000c550 l     F code_l1	00000048 risc::record_perf_dump_end()
0000c598 l     F code_l1	000002b0 process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]
ffc01bb4 l     F .text	000020d0 risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]
ffb0004c l     O .sbss	00000003 unused0
ffb00048 l     O .sbss	00000004 epoch_empty_check_cnt
ffb0003e l     O .sbss	00000001 noc_trans_table_en
ffb0003c l     O .sbss	00000002 my_logical_x
ffb00038 l     O .sbss	00000002 my_logical_y
ffb00028 l     O .sbss	00000004 my_q_rd_ptr
ffb00024 l     O .sbss	00000004 my_q_wr_ptr
ffb00020 l     O .sbss	00000004 risc::overlay_decouple_epoch_idx
ffb00050 l     O .bss	00000028 risc::thread_dram_ptr
ffb00078 l     O .bss	0000000a risc::thread_req_max
ffb00084 l     O .bss	0000000a risc::thread_dram_copy_ack
ffb00090 l     O .bss	00000001 risc::epoch_perf_en
ffb00094 l     O .bss	00000004 risc::perf_index
ffb00098 l     O .bss	00000004 risc::perf_end
ffb0009c l     O .bss	00000004 risc::wall_clk_h
00005200 l     O data_l1_noinit	00000100 active_stream_info
00005300 l     O data_l1_noinit	00000080 noc_read_scratch_buf
00005380 l     O data_l1_noinit	00000008 epoch_q_dram_addr
000053a0 l     O data_l1_noinit	00000060 dram_prefetch_active_stream_info
00005400 l     O data_l1_noinit	00000060 dram_prefetch_epoch_stream_info
00005460 l     O data_l1_noinit	00000064 risc::epoch_perf_scratch
ffb00470 l     O data_noinit	00000004 num_active_streams
ffb00474 l     O data_noinit	000005a0 dram_q_state
ffb00a14 l     O data_noinit	00000004 num_active_dram_queues
ffb00a18 l     O data_noinit	000002a0 dram_input_stream_state
ffb00cb8 l     O data_noinit	00000300 dram_output_stream_state
ffb00fb8 l     O data_noinit	00000004 num_dram_input_streams
ffb00fbc l     O data_noinit	00000004 num_dram_output_streams
ffb00fc4 l     O data_noinit	00000008 riscvContext
ffb00fcc l     O data_noinit	00000004 num_dram_prefetch_streams
00000000 l    df *ABS*	00000000 contextASM.o
ffc03d88 l       .text	00000000 halt
00000000 l    df *ABS*	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
0000abea l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
0000e326 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
0000e413 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
000138cb l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
000155bf l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
0001822f l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
0001a4d7 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
0001e3d9 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
0001e916 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
ffb00000 l       code_l1	00000000 __init_array_end
ffb00000 l       code_l1	00000000 __init_array_start
00002000 g       *ABS*	00000000 __trisc1_size
ffb00800 g       code_l1	00000000 __global_pointer$
ffb00fc0 g     O data_noinit	00000004 pContext
0000e413  w      .debug_info	00000000 .hidden dram_stream_intf.cc.5f8411f1
ffb00050 g       .bss	00000000 __l1_bss_end
ffc00020 g       .init	00000000 FW_TEST_RESULT
ffc03c90 g     F .text	00000014 wzerorange
ffe40000 g       *ABS*	00000000 TENSIX_INSTRN_BUF_BASE
00000000 g       *ABS*	00000000 TENSIX_L1_BASE
ffc00060 g       .init	00000000 WALL_CLOCK_MAILBOX
ffc03cc0 g       .text	00000000 call_with_cpu_flush_args2
000138cb  w      .debug_info	00000000 .hidden risc_common.cc.50b1dc2a
0000e326  w      .debug_info	00000000 .hidden context.cc.d6782c86
ffc0020c g     F .init	00000004 _init
ffc00170 g       .init	00000000 CQ_MAILBOX
ffc03cb0 g       .text	00000000 call_with_cpu_flush_args
ffc03cd0 g       .text	00000000 call_with_cpu_flush_args3
ffb00470 g       .stack	00000000 __stack_top
ffec0000 g       *ABS*	00000000 TENSIX_MAILBOX_BASE
ffb00050 g       .bss	00000000 __ldm_bss_start
0000c850 g       code_l1	00000000 context_restore
0001a4d7  w      .debug_info	00000000 .hidden risc_chip_specific.cc.8c30f987
ffc00000 g     F .init	0000020c _start
ffc0001c g       .init	00000000 FWEVENT_MAILBOX
ffc00000 g       .init	00000000 __firmware_start
000003d0 g       *ABS*	00000000 __firmware_stack_size
ffb10000 g       *ABS*	00000000 TENSIX_NIU_REG_BASE
ffc03d90 g     F .text	000000dc memset
ffc00210 g     F .text	00000a1c main
0001822f  w      .debug_info	00000000 .hidden risc_perf.cc.d861206f
00006c00 g       *ABS*	00000000 __trisc_base
ffb00000 g       .sbss	00000000 __l1_bss_start
ffc03cf0 g       .text	00000000 call_with_cpu_flush
ffc00000 g       *ABS*	00000000 TENSIX_NOCRISC_MEM_BASE
ffc0020c g     F .init	00000004 _fini
ffc00174 g       .init	00000000 FIRMWARE_VERSION
ffe00000 g       *ABS*	00000000 TENSIX_REGFILE_BASE
0000abea  w      .debug_info	00000000 .hidden ncrisc.cc.80732e7e
ffb000a0 g       .stack	00000000 __stack_bottom
00005000 g       *ABS*	00000000 __trisc2_size
00004000 g       *ABS*	00000000 __trisc0_size
000155bf  w      .debug_info	00000000 .hidden risc_epoch.cc.f04908e8
ffb00000 g       .sbss	00000000 _edata
ffb000a0 g       .bss	00000000 _end
0001e3d9  w      .debug_info	00000000 .hidden noc_nonblocking_api.cc.421462ed
ffb000a0 g       .bss	00000000 __ldm_bss_end
ffc00008 g       .init	00000000 FWLOG_MAILBOX
ffc03c84 g     F .text	00000004 exit
ffc00070 g       .init	00000000 DEBUG_MAILBOX
ffc00004 g       .init	00000000 TEST_MAILBOX
ffb00000 g       *ABS*	00000000 TENSIX_LOCAL_DATA_MEM_BASE
ffc03ce0 g       .text	00000000 call_with_cpu_flush_args4
ffe80000 g       *ABS*	00000000 TENSIX_PC_BUF_BUF_BASE
0001e916  w      .debug_info	00000000 .hidden substitutes.cpp.cd30c172



Disassembly of section .init:

ffc00000 <_start>:
_start():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:8
.type   _start, @function

_start:

# produce an empty word at a known location
  j 1f
ffc00000:	17c0006f          	j	ffc0017c <CRT_START>

ffc00004 <TEST_MAILBOX>:
ffc00004:	00000000          	0x0

ffc00008 <FWLOG_MAILBOX>:
	...

ffc0001c <FWEVENT_MAILBOX>:
ffc0001c:	00000000          	0x0

ffc00020 <FW_TEST_RESULT>:
	...

ffc00060 <WALL_CLOCK_MAILBOX>:
	...

ffc00070 <DEBUG_MAILBOX>:
	...

ffc00170 <CQ_MAILBOX>:
ffc00170:	00000000          	0x0

ffc00174 <FIRMWARE_VERSION>:
ffc00174:	00000004          	0x1
ffc00178:	5da30992          	0x9768c264

ffc0017c <CRT_START>:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:56

CRT_START:
  # Initialize global pointer
  .option push
  .option norelax
1:auipc gp, %pcrel_hi(__global_pointer$)
ffc0017c:	fff00197          	auipc	gp, 0xfff00
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:57
  addi  gp, gp, %pcrel_lo(1b)
ffc00180:	68418193          	addi	gp, gp, 1668 # ffb00800 <__global_pointer$>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:60

/* set stack pointer */
la sp, __stack_top
ffc00184:	fff00117          	auipc	sp, 0xfff00
ffc00188:	2ec10113          	addi	sp, sp, 748 # ffb00470 <num_active_streams>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:63

  # Clear the bss segment
  la      a0, __l1_bss_start
ffc0018c:	fff00517          	auipc	a0, 0xfff00
ffc00190:	e7450513          	addi	a0, a0, -396 # ffb00000 <local_mem_barrier>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:64
  la      a1, __l1_bss_end
ffc00194:	fff00597          	auipc	a1, 0xfff00
ffc00198:	ebc58593          	addi	a1, a1, -324 # ffb00050 <risc::thread_dram_ptr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:65
  call    wzerorange
ffc0019c:	00004097          	auipc	ra, 0x4
ffc001a0:	af4080e7          	jalr	-1292(ra) # ffc03c90 <wzerorange>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:67

  la      a0, __ldm_bss_start
ffc001a4:	fff00517          	auipc	a0, 0xfff00
ffc001a8:	eac50513          	addi	a0, a0, -340 # ffb00050 <risc::thread_dram_ptr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:68
  la      a1, __ldm_bss_end
ffc001ac:	fff00597          	auipc	a1, 0xfff00
ffc001b0:	ef458593          	addi	a1, a1, -268 # ffb000a0 <__ldm_bss_end>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:69
  call    wzerorange
ffc001b4:	00004097          	auipc	ra, 0x4
ffc001b8:	adc080e7          	jalr	-1316(ra) # ffc03c90 <wzerorange>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:71

  la      s2, __init_array_start
ffc001bc:	fff00917          	auipc	s2, 0xfff00
ffc001c0:	e4490913          	addi	s2, s2, -444 # ffb00000 <local_mem_barrier>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:72
  la      s3, __init_array_end
ffc001c4:	fff00997          	auipc	s3, 0xfff00
ffc001c8:	e3c98993          	addi	s3, s3, -452 # ffb00000 <local_mem_barrier>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:73
  j       2f
ffc001cc:	0100006f          	j	ffc001dc <CRT_START+0x60>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:74
1:lw      a0, 0(s2)
ffc001d0:	00092503          	lw	a0, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:75
  jalr    a0
ffc001d4:	000500e7          	jalr	a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:76
  addi    s2, s2, 4
ffc001d8:	00490913          	addi	s2, s2, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:77
2:bne     s2, s3, 1b
ffc001dc:	ff391ae3          	bne	s2, s3, ffc001d0 <CRT_START+0x54>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:87
   * sp+0: argv[0] -> sp+8
   * sp+4: argv[1] = NULL
   * sp+8: s1
   * sp+c: 0
   */
  addi    sp, sp, -16 /* (stack is aligned to 16 bytes in riscv calling convention) */
ffc001e0:	ff010113          	addi	sp, sp, -16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:88
  addi    a0, sp, 8
ffc001e4:	00810513          	addi	a0, sp, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:89
  sw      a0, 0(sp)
ffc001e8:	00a12023          	sw	a0, 0(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:90
  sw      zero, 4(sp)
ffc001ec:	00012223          	sw	zero, 4(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:91
  sw      s1, 8(sp)
ffc001f0:	00912423          	sw	s1, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:92
  sw      zero, 12(sp)
ffc001f4:	00012623          	sw	zero, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:94

  li      a0, 1 # argc = 1
ffc001f8:	00100513          	li	a0, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:95
  mv      a1, sp
ffc001fc:	00010593          	mv	a1, sp
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:96
  mv      a2, zero
ffc00200:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:98

  call    main
ffc00204:	00c000ef          	jal	ra, ffc00210 <main>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:99
  tail    exit
ffc00208:	27d0306f          	j	ffc03c84 <exit>

ffc0020c <_fini>:
_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:109
  .global _fini
  .type   _fini, @function
_init:
_fini:
  # These don't have to do anything since we use init_array/fini_array.
  ret
ffc0020c:	00008067          	ret

Disassembly of section .text:

ffc00210 <main>:
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:186
inline __attribute__((section("code_l1"))) void allocate_debug_mailbox_buffer() {
  std::int32_t debug_mailbox_addr = l1_mem::address_map::DEBUG_MAILBOX_BUF_BASE + 3*l1_mem::address_map::DEBUG_MAILBOX_BUF_SIZE;
  debug_mailbox_base = reinterpret_cast<volatile uint16_t tt_l1_ptr *>(debug_mailbox_addr);
}

int main(int argc, char *argv[]) {
ffc00210:	f3010113          	addi	sp, sp, -208
ffc00214:	0c912223          	sw	s1, 196(sp)
init_riscv_context():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/context.cc:15
ContextInfo_t *pContext __attribute__((section ("data_noinit")));


void init_riscv_context()
{
	    pContext = &riscvContext;
ffc00218:	ffb014b7          	lui	s1, 0xffb01
ffc0021c:	47048793          	addi	a5, s1, 1136 # ffb01470 <TENSIX_MAILBOX_BASE+0xffc41470>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:186
ffc00220:	0b812423          	sw	s8, 168(sp)
ffc00224:	0b912223          	sw	s9, 164(sp)
ffc00228:	0c112623          	sw	ra, 204(sp)
ffc0022c:	0c812423          	sw	s0, 200(sp)
ffc00230:	0d212023          	sw	s2, 192(sp)
ffc00234:	0b312e23          	sw	s3, 188(sp)
ffc00238:	0b412c23          	sw	s4, 184(sp)
ffc0023c:	0b512a23          	sw	s5, 180(sp)
ffc00240:	0b612823          	sw	s6, 176(sp)
ffc00244:	0b712623          	sw	s7, 172(sp)
ffc00248:	0ba12023          	sw	s10, 160(sp)
ffc0024c:	09b12e23          	sw	s11, 156(sp)
init_riscv_context():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/context.cc:15
ffc00250:	b5478713          	addi	a4, a5, -1196
ffc00254:	b4e7a823          	sw	a4, -1200(a5)
risc_l1_epoch_q_reset():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:59
      return ptr < 0 ? true : false;
    }
};

inline void risc_l1_epoch_q_reset() {
  RISC_L1_EPOCH_Q_PTR->rd_ptr = 0;
ffc00258:	000077b7          	lui	a5, 0x7
ffc0025c:	0007a023          	sw	zero, 0(a5) # 7000 <__trisc_base+0x400>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:60
  RISC_L1_EPOCH_Q_PTR->wr_ptr = 0;
ffc00260:	0007a223          	sw	zero, 4(a5)
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:191

  init_riscv_context();
  allocate_debug_mailbox_buffer();
  risc_l1_epoch_q_reset();
  test_mailbox_ptr[0] = 0xF; // Indicates to host that l1 epoch queue is ready.
ffc00264:	00f00713          	li	a4, 15
ffc00268:	000057b7          	lui	a5, 0x5
ffc0026c:	00e7a223          	sw	a4, 4(a5) # 5004 <__trisc2_size+0x4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:192
  unused0[0] = 0;
ffc00270:	84018623          	sb	zero, -1972(gp) # ffb0004c <unused0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:193
  unused0[1] = 0;
ffc00274:	84c18793          	addi	a5, gp, -1972 # ffb0004c <unused0>
ffc00278:	000780a3          	sb	zero, 1(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:194
  unused0[2] = 0;
ffc0027c:	00078123          	sb	zero, 2(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:195
  epoch_empty_check_cnt = 0;
ffc00280:	8401a423          	sw	zero, -1976(gp) # ffb00048 <epoch_empty_check_cnt>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45


inline uint32_t NOC_CMD_BUF_READ_REG(uint32_t noc, uint32_t buf, uint32_t addr) {
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
  volatile uint32_t tt_reg_ptr * ptr = (volatile uint32_t tt_reg_ptr *)offset;
  return *ptr;
ffc00284:	ffb20637          	lui	a2, 0xffb20
ffc00288:	02c62703          	lw	a4, 44(a2) # ffb2002c <TENSIX_MAILBOX_BASE+0xffc6002c>
ncrisc_noc_init():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:300
  for (int noc = 0; noc < NUM_NOCS; noc++) {
    uint32_t noc_id_reg = NOC_CMD_BUF_READ_REG(noc, 0, NOC_NODE_ID);
    uint32_t my_x = noc_id_reg & NOC_NODE_ID_MASK;
    uint32_t my_y = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    uint64_t xy_local_addr = NOC_XY_ADDR(my_x, my_y, 0);
    noc_xy_local_addr[noc] = (uint32_t)(xy_local_addr >> 32);
ffc0028c:	ffb006b7          	lui	a3, 0xffb00
ffc00290:	01468693          	addi	a3, a3, 20 # ffb00014 <TENSIX_MAILBOX_BASE+0xffc40014>
ffc00294:	47048493          	addi	s1, s1, 1136
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:298
    uint32_t my_y = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc00298:	00675793          	srli	a5, a4, 0x6
ffc0029c:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:297
    uint32_t my_x = noc_id_reg & NOC_NODE_ID_MASK;
ffc002a0:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:299
    uint64_t xy_local_addr = NOC_XY_ADDR(my_x, my_y, 0);
ffc002a4:	00471713          	slli	a4, a4, 0x4
ffc002a8:	00a79793          	slli	a5, a5, 0xa
ffc002ac:	00e7e7b3          	or	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:300
    noc_xy_local_addr[noc] = (uint32_t)(xy_local_addr >> 32);
ffc002b0:	00f6a023          	sw	a5, 0(a3)
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
ffc002b4:	00f62223          	sw	a5, 4(a2)
ffc002b8:	40f62223          	sw	a5, 1028(a2)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
ffc002bc:	ffb30637          	lui	a2, 0xffb30
ffc002c0:	02c62703          	lw	a4, 44(a2) # ffb3002c <TENSIX_MAILBOX_BASE+0xffc7002c>
ncrisc_noc_init():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:300
    noc_xy_local_addr[noc] = (uint32_t)(xy_local_addr >> 32);
ffc002c4:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:298
    uint32_t my_y = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc002c8:	00675793          	srli	a5, a4, 0x6
ffc002cc:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:297
    uint32_t my_x = noc_id_reg & NOC_NODE_ID_MASK;
ffc002d0:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:299
    uint64_t xy_local_addr = NOC_XY_ADDR(my_x, my_y, 0);
ffc002d4:	00471713          	slli	a4, a4, 0x4
ffc002d8:	00a79793          	slli	a5, a5, 0xa
ffc002dc:	00e7e7b3          	or	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:300
    noc_xy_local_addr[noc] = (uint32_t)(xy_local_addr >> 32);
ffc002e0:	00f6a223          	sw	a5, 4(a3)
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
ffc002e4:	00f62223          	sw	a5, 4(a2)
ffc002e8:	40f62223          	sw	a5, 1028(a2)
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:208
  RISC_POST_STATUS(0x10000001);
#endif
  uint32_t epoch_command = epoch_queue::EpochCmdNotValid;
  uint32_t next_command = epoch_queue::EpochCmdNotValid;
  uint32_t dram_decouple_mask = 0;
  bool skip_initial_epoch_dram_load = EPOCH_INFO_PTR->epoch_valid;
ffc002ec:	000237b7          	lui	a5, 0x23
ffc002f0:	08c7c703          	lbu	a4, 140(a5) # 2308c <substitutes.cpp.cd30c172+0x4776>
ffc002f4:	00e12c23          	sw	a4, 24(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:210
  uint64_t dram_next_epoch_ptr;
  bool skip_kernels = skip_initial_epoch_dram_load ? EPOCH_INFO_PTR->skip_kernels : false;
ffc002f8:	00070463          	beqz	a4, ffc00300 <main+0xf0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:210 (discriminator 1)
ffc002fc:	30a7dc03          	lhu	s8, 778(a5)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45 (discriminator 4)
  return *ptr;
ffc00300:	ffb20737          	lui	a4, 0xffb20
ffc00304:	02c72403          	lw	s0, 44(a4) # ffb2002c <TENSIX_MAILBOX_BASE+0xffc6002c>
risc_init():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:77 (discriminator 4)
  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    uint32_t noc_id_reg = NOC_CMD_BUF_READ_REG(n, 0, NOC_NODE_ID);
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    if (n == 0) {
      noc_size_x = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS)) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
ffc00308:	ffb00db7          	lui	s11, 0xffb00
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:75 (discriminator 4)
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc0030c:	00645913          	srli	s2, s0, 0x6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:74 (discriminator 4)
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
ffc00310:	03f47793          	andi	a5, s0, 63
ffc00314:	84f18223          	sb	a5, -1980(gp) # ffb00044 <my_x>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:75 (discriminator 4)
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc00318:	03f97793          	andi	a5, s2, 63
ffc0031c:	84f18023          	sb	a5, -1984(gp) # ffb00040 <my_y>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:77 (discriminator 4)
      noc_size_x = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS)) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
ffc00320:	00c45793          	srli	a5, s0, 0xc
ffc00324:	07f7f793          	andi	a5, a5, 127
ffc00328:	00fd8e23          	sb	a5, 28(s11) # ffb0001c <TENSIX_MAILBOX_BASE+0xffc4001c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:78 (discriminator 4)
      noc_size_y = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS+(NOC_ADDR_NODE_ID_BITS+1))) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
ffc0032c:	01345793          	srli	a5, s0, 0x13
ffc00330:	ffb00d37          	lui	s10, 0xffb00
ffc00334:	07f7f793          	andi	a5, a5, 127
ffc00338:	00fd0ea3          	sb	a5, 29(s10) # ffb0001d <TENSIX_MAILBOX_BASE+0xffc4001d>
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:79 (discriminator 4)
  return *ptr;
ffc0033c:	10072783          	lw	a5, 256(a4)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:66 (discriminator 4)
  uint32_t y = NOC_UNICAST_ADDR_Y(dram_ptr_addr);
  return x == 0 && y == 3;
}

inline void set_noc_trans_table(uint32_t noc, uint8_t& noc_trans_table_en, uint8_t& my_logical_x, uint8_t& my_logical_y) {
  noc_trans_table_en = (NOC_CFG_READ_REG(noc, NIU_CFG_0) >> NIU_CFG_0_NOC_ID_TRANSLATE_EN) & 0x1;
ffc00340:	00e7d793          	srli	a5, a5, 0xe
ffc00344:	0017f793          	andi	a5, a5, 1
ffc00348:	82f18f23          	sb	a5, -1986(gp) # ffb0003e <noc_trans_table_en>
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:79 (discriminator 4)
ffc0034c:	13872703          	lw	a4, 312(a4)
risc_init():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:74 (discriminator 4)
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
ffc00350:	84418693          	addi	a3, gp, -1980 # ffb00044 <my_x>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:222 (discriminator 4)
  bool llk_tb = ((0 == my_x[0]) && (0 == my_y[0])); // DV-only: core (0,0) will execute risc fw only in LLK TB
  loading_noc = my_x[0] % NUM_NOCS;
  int exec_iteration = NUM_EXEC_LOOP_ITERATIONS; // initialize to not inside of a loop iteration

  // Global loop stack
  LoopStack<4> loopstack;
ffc00354:	00000593          	li	a1, 0
ffc00358:	05c10513          	addi	a0, sp, 92
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69 (discriminator 4)

  uint32_t noc_id_logical_reg = NOC_CFG_READ_REG(noc, NOC_ID_LOGICAL);
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
ffc0035c:	03f77793          	andi	a5, a4, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70 (discriminator 4)
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc00360:	00675713          	srli	a4, a4, 0x6
ffc00364:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69 (discriminator 4)
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
ffc00368:	82f18e23          	sb	a5, -1988(gp) # ffb0003c <my_logical_x>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70 (discriminator 4)
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc0036c:	82e18c23          	sb	a4, -1992(gp) # ffb00038 <my_logical_y>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45 (discriminator 4)
  return *ptr;
ffc00370:	ffb307b7          	lui	a5, 0xffb30
ffc00374:	02c7a703          	lw	a4, 44(a5) # ffb3002c <TENSIX_MAILBOX_BASE+0xffc7002c>
risc_init():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:74 (discriminator 4)
ffc00378:	03f77613          	andi	a2, a4, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:75 (discriminator 4)
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc0037c:	00675713          	srli	a4, a4, 0x6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:74 (discriminator 4)
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
ffc00380:	00c680a3          	sb	a2, 1(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:75 (discriminator 4)
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc00384:	03f77713          	andi	a4, a4, 63
ffc00388:	84018693          	addi	a3, gp, -1984 # ffb00040 <my_y>
ffc0038c:	00e680a3          	sb	a4, 1(a3)
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:79 (discriminator 4)
  return *ptr;
ffc00390:	1007a703          	lw	a4, 256(a5)
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:222 (discriminator 4)
ffc00394:	03000613          	li	a2, 48
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:66 (discriminator 4)
  noc_trans_table_en = (NOC_CFG_READ_REG(noc, NIU_CFG_0) >> NIU_CFG_0_NOC_ID_TRANSLATE_EN) & 0x1;
ffc00398:	00e75713          	srli	a4, a4, 0xe
ffc0039c:	00177713          	andi	a4, a4, 1
ffc003a0:	82e18f23          	sb	a4, -1986(gp) # ffb0003e <noc_trans_table_en>
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:79 (discriminator 4)
ffc003a4:	1387a703          	lw	a4, 312(a5)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69 (discriminator 4)
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
ffc003a8:	83c18793          	addi	a5, gp, -1988 # ffb0003c <my_logical_x>
ffc003ac:	03f77693          	andi	a3, a4, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70 (discriminator 4)
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc003b0:	00675713          	srli	a4, a4, 0x6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69 (discriminator 4)
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
ffc003b4:	00d780a3          	sb	a3, 1(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70 (discriminator 4)
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
ffc003b8:	03f77713          	andi	a4, a4, 63
ffc003bc:	83818793          	addi	a5, gp, -1992 # ffb00038 <my_logical_y>
ffc003c0:	00e780a3          	sb	a4, 1(a5)
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:218 (discriminator 4)
  loading_noc = my_x[0] % NUM_NOCS;
ffc003c4:	00147793          	andi	a5, s0, 1
ffc003c8:	84f187a3          	sb	a5, -1969(gp) # ffb0004f <loading_noc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:222 (discriminator 4)
  LoopStack<4> loopstack;
ffc003cc:	1c5030ef          	jal	ra, ffc03d90 <memset>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:225 (discriminator 4)

#ifdef PERF_DUMP
  call_with_cpu_flush((void *)risc::allocate_perf_buffer, 0);
ffc003d0:	00009737          	lui	a4, 0x9
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:222 (discriminator 4)
  LoopStack<4> loopstack;
ffc003d4:	fff00793          	li	a5, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:225 (discriminator 4)
  call_with_cpu_flush((void *)risc::allocate_perf_buffer, 0);
ffc003d8:	44870513          	addi	a0, a4, 1096 # 9448 <risc::allocate_perf_buffer()>
ffc003dc:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:222 (discriminator 4)
  LoopStack<4> loopstack;
ffc003e0:	08f12623          	sw	a5, 140(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:225 (discriminator 4)
  call_with_cpu_flush((void *)risc::allocate_perf_buffer, 0);
ffc003e4:	10d030ef          	jal	ra, ffc03cf0 <call_with_cpu_flush>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:231 (discriminator 4)
#endif

#ifdef RISC_GSYNC_ENABLED
  global_sync_init(gsync_epoch, epochs_in_progress);
#endif
  if (!llk_tb) {
ffc003e8:	012467b3          	or	a5, s0, s2
ffc003ec:	00009737          	lui	a4, 0x9
ffc003f0:	00005437          	lui	s0, 0x5
ffc003f4:	03f7f793          	andi	a5, a5, 63
ffc003f8:	03b12223          	sw	s11, 36(sp)
ffc003fc:	03a12423          	sw	s10, 40(sp)
ffc00400:	02e12c23          	sw	a4, 56(sp)
ffc00404:	00068913          	mv	s2, a3
ffc00408:	20040413          	addi	s0, s0, 512 # 5200 <active_stream_info>
ffc0040c:	76078063          	beqz	a5, ffc00b6c <main+0x95c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:232
    uint32_t my_x_trans = noc_trans_table_en ? my_logical_x[0] : my_x[0];
ffc00410:	83e1c783          	lbu	a5, -1986(gp) # ffb0003e <noc_trans_table_en>
ffc00414:	16078c63          	beqz	a5, ffc0058c <main+0x37c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:232 (discriminator 1)
ffc00418:	83c1c983          	lbu	s3, -1988(gp) # ffb0003c <my_logical_x>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:233 (discriminator 1)
    uint32_t my_y_trans = noc_trans_table_en ? my_logical_y[0] : my_y[0];
ffc0041c:	8381c783          	lbu	a5, -1992(gp) # ffb00038 <my_logical_y>
get_epoch_index_x(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:163 (discriminator 4)
  return my_y;
#endif
}

int get_epoch_index_x(int my_x) {
  if (my_x >= 18 && my_x <= 21)
ffc00420:	fee98693          	addi	a3, s3, -18
ffc00424:	00300713          	li	a4, 3
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:116 (discriminator 4)
  ncrisc_noc_fast_write(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, noc_write_dest_buf_ptr_addr, q_rd_ptr_addr, 4,
                        DRAM_PTR_UPDATE_VC, false, false, 1, NCRISC_WR_DEF_TRID);
}

inline uint64_t risc_get_epoch_q_dram_ptr(uint32_t my_x, uint32_t my_y) {
  my_x = get_epoch_index_x(my_x);
ffc00428:	00098a13          	mv	s4, s3
get_epoch_index_x(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:163 (discriminator 4)
ffc0042c:	16d76663          	bltu	a4, a3, ffc00598 <main+0x388>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:164
    my_x -= 17;
ffc00430:	fef98a13          	addi	s4, s3, -17
get_epoch_index_y(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:172

  return my_x;
}

int get_epoch_index_y(int my_y) {
  if (my_y == 16)
ffc00434:	01000713          	li	a4, 16
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:173
    my_y = 0;
ffc00438:	00000993          	li	s3, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:172
  if (my_y == 16)
ffc0043c:	02e78063          	beq	a5, a4, ffc0045c <main+0x24c>
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:117
  my_y = get_epoch_index_y(my_y);
ffc00440:	00078993          	mv	s3, a5
get_epoch_index_y(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:174
  else if (my_y == 17)
ffc00444:	01100793          	li	a5, 17
ffc00448:	16f98863          	beq	s3, a5, ffc005b8 <main+0x3a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:176
    my_y = 6;
  else if (my_y <= 22 && my_y > 17)
ffc0044c:	fee98793          	addi	a5, s3, -18
ffc00450:	00400713          	li	a4, 4
ffc00454:	14f76a63          	bltu	a4, a5, ffc005a8 <main+0x398>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:177
    my_y = (my_y - 17);
ffc00458:	fef98993          	addi	s3, s3, -17
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:118
  const uint64_t INITIAL_EPOCH_VECTOR_TABLE_ADDR = NOC_XY_ADDR(NOC_X(get_epoch_table_x(my_x, my_y)), NOC_Y(get_epoch_table_y(my_x, my_y)), EPOCH_TABLE_DRAM_ADDRESS);
ffc0045c:	84f1ca83          	lbu	s5, -1969(gp) # ffb0004f <loading_noc>
ffc00460:	00098513          	mv	a0, s3
ffc00464:	000a8a63          	beqz	s5, ffc00478 <main+0x268>
ffc00468:	02812783          	lw	a5, 40(sp)
ffc0046c:	01d7c503          	lbu	a0, 29(a5)
ffc00470:	fff50513          	addi	a0, a0, -1
ffc00474:	41350533          	sub	a0, a0, s3
ffc00478:	00a51b13          	slli	s6, a0, 0xa
ffc0047c:	00098593          	mv	a1, s3
ffc00480:	000a0513          	mv	a0, s4
ffc00484:	349000ef          	jal	ra, ffc00fcc <get_epoch_table_x(int, int)>
ffc00488:	000a8a63          	beqz	s5, ffc0049c <main+0x28c>
ffc0048c:	02412783          	lw	a5, 36(sp)
ffc00490:	01c7c783          	lbu	a5, 28(a5)
ffc00494:	fff78793          	addi	a5, a5, -1
ffc00498:	40a78533          	sub	a0, a5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:119
  uint64_t q_table_offset = INITIAL_EPOCH_VECTOR_TABLE_ADDR + ((my_y * epoch_queue::GridSizeCol) + my_x) * EPOCH_ENTRY_SIZE_BYTES;
ffc0049c:	00a00593          	li	a1, 10
ffc004a0:	02b989b3          	mul	s3, s3, a1
ffc004a4:	000025b7          	lui	a1, 0x2
ffc004a8:	014989b3          	add	s3, s3, s4
ffc004ac:	02058593          	addi	a1, a1, 32 # 2020 <__trisc1_size+0x20>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:118
  const uint64_t INITIAL_EPOCH_VECTOR_TABLE_ADDR = NOC_XY_ADDR(NOC_X(get_epoch_table_x(my_x, my_y)), NOC_Y(get_epoch_table_y(my_x, my_y)), EPOCH_TABLE_DRAM_ADDRESS);
ffc004b0:	0070f7b7          	lui	a5, 0x70f
ffc004b4:	10078793          	addi	a5, a5, 256 # 70f100 <substitutes.cpp.cd30c172+0x6f07ea>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:119
  uint64_t q_table_offset = INITIAL_EPOCH_VECTOR_TABLE_ADDR + ((my_y * epoch_queue::GridSizeCol) + my_x) * EPOCH_ENTRY_SIZE_BYTES;
ffc004b8:	02b989b3          	mul	s3, s3, a1
ffc004bc:	013789b3          	add	s3, a5, s3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:118
  const uint64_t INITIAL_EPOCH_VECTOR_TABLE_ADDR = NOC_XY_ADDR(NOC_X(get_epoch_table_x(my_x, my_y)), NOC_Y(get_epoch_table_y(my_x, my_y)), EPOCH_TABLE_DRAM_ADDRESS);
ffc004c0:	00451513          	slli	a0, a0, 0x4
ffc004c4:	01656533          	or	a0, a0, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:119
  uint64_t q_table_offset = INITIAL_EPOCH_VECTOR_TABLE_ADDR + ((my_y * epoch_queue::GridSizeCol) + my_x) * EPOCH_ENTRY_SIZE_BYTES;
ffc004c8:	00f9b7b3          	sltu	a5, s3, a5
ffc004cc:	00a788b3          	add	a7, a5, a0
risc_epoch_q_get_ptr(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:128
inline void risc_epoch_q_get_ptr(volatile uint32_t *noc_read_scratch_buf, uint64_t &my_q_table_offset, uint32_t &my_q_rd_ptr, uint32_t &my_q_wr_ptr) {

  uint32_t noc_read_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
  uint32_t noc_read_dest_buf_addr = (uint32_t)(noc_read_scratch_buf);
  uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF,
ffc004d0:	000056b7          	lui	a3, 0x5
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:235
    my_q_table_offset = risc_get_epoch_q_dram_ptr(my_x_trans, my_y_trans);
    epoch_q_dram_addr = my_q_table_offset;
ffc004d4:	19342023          	sw	s3, 384(s0)
risc_epoch_q_get_ptr(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:128
ffc004d8:	00200793          	li	a5, 2
ffc004dc:	00800713          	li	a4, 8
ffc004e0:	30068693          	addi	a3, a3, 768 # 5300 <noc_read_scratch_buf>
ffc004e4:	00098593          	mv	a1, s3
ffc004e8:	00088613          	mv	a2, a7
ffc004ec:	000a8513          	mv	a0, s5
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:234
    my_q_table_offset = risc_get_epoch_q_dram_ptr(my_x_trans, my_y_trans);
ffc004f0:	8331a823          	sw	s3, -2000(gp) # ffb00030 <my_q_table_offset>
ffc004f4:	8311aa23          	sw	a7, -1996(gp) # ffb00034 <my_q_table_offset+0x4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:235
    epoch_q_dram_addr = my_q_table_offset;
ffc004f8:	19142223          	sw	a7, 388(s0)
risc_epoch_q_get_ptr(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:128
ffc004fc:	40d000ef          	jal	ra, ffc01108 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:132
                               my_q_table_offset,
                               noc_read_dest_buf_ptr_addr,
                               8, NCRISC_RD_DEF_TRID);
  while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
ffc00500:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc00504:	00200593          	li	a1, 2
ffc00508:	7cc000ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc0050c:	00a12e23          	sw	a0, 28(sp)
ffc00510:	fe0508e3          	beqz	a0, ffc00500 <main+0x2f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:134
  volatile uint32_t *noc_read_dest_buf_ptr = (volatile uint32_t *)(noc_read_dest_buf_ptr_addr); 
  my_q_rd_ptr = noc_read_dest_buf_ptr[0];
ffc00514:	10042783          	lw	a5, 256(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:135
  my_q_wr_ptr = noc_read_dest_buf_ptr[1];
ffc00518:	10442703          	lw	a4, 260(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:134
  my_q_rd_ptr = noc_read_dest_buf_ptr[0];
ffc0051c:	82f1a423          	sw	a5, -2008(gp) # ffb00028 <my_q_rd_ptr>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:135
  my_q_wr_ptr = noc_read_dest_buf_ptr[1];
ffc00520:	82e1a223          	sw	a4, -2012(gp) # ffb00024 <my_q_wr_ptr>
ffc00524:	02f12623          	sw	a5, 44(sp)
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:162
    }
  } else {
    is_empty = false;
  }

  epoch_empty_check_cnt = (epoch_empty_check_cnt + 1) & EPOCH_EMPTY_CHECK_MASK;
ffc00528:	000017b7          	lui	a5, 0x1
ffc0052c:	fff78793          	addi	a5, a5, -1 # fff <__firmware_stack_size+0xc2f>
ffc00530:	02f12a23          	sw	a5, 52(sp)
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:57
#else
        call_with_cpu_flush((void *)init_ncrisc_streams, (void *)dram_decouple_mask);
#endif

#if defined(ERISC) || defined(RISC_B0_HW)
        risc_dram_stream_handler_init_l1(
ffc00534:	c7018d13          	addi	s10, gp, -912 # ffb00470 <num_active_streams>
ffc00538:	21818793          	addi	a5, gp, 536 # ffb00a18 <dram_input_stream_state>
ffc0053c:	02f12e23          	sw	a5, 60(sp)
ffc00540:	c7418793          	addi	a5, gp, -908 # ffb00474 <dram_q_state>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:210
  bool skip_kernels = skip_initial_epoch_dram_load ? EPOCH_INFO_PTR->skip_kernels : false;
ffc00544:	01803c33          	snez	s8, s8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:212
  uint32_t epoch_q_empty = 0;
ffc00548:	00000a93          	li	s5, 0
ffc0054c:	04f12023          	sw	a5, 64(sp)
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:142
  if (dram_io_empty(my_q_rd_ptr, my_q_wr_ptr)) {
ffc00550:	02c12703          	lw	a4, 44(sp)
ffc00554:	8281a783          	lw	a5, -2008(gp) # ffb00028 <my_q_rd_ptr>
ffc00558:	8241a683          	lw	a3, -2012(gp) # ffb00024 <my_q_wr_ptr>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:159
    is_empty = false;
ffc0055c:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:142
  if (dram_io_empty(my_q_rd_ptr, my_q_wr_ptr)) {
ffc00560:	0cd79263          	bne	a5, a3, ffc00624 <main+0x414>
risc_get_l1_epoch_q_wrptr():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:68
  return RISC_L1_EPOCH_Q_PTR->wr_ptr;
ffc00564:	000076b7          	lui	a3, 0x7
ffc00568:	0046a603          	lw	a2, 4(a3) # 7004 <__trisc_base+0x404>
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:143
    if (risc_get_l1_epoch_q_wrptr() == epoch_queue::POLLING_EPOCH_QUEUE_TAG ? epoch_empty_check_cnt == 0 : !risc_is_l1_epoch_q_empty(my_q_rd_ptr)) {
ffc0056c:	aca0d737          	lui	a4, 0xaca0d
ffc00570:	afe70713          	addi	a4, a4, -1282 # aca0cafe <TENSIX_MAILBOX_BASE+0xacb4cafe>
ffc00574:	04e61663          	bne	a2, a4, ffc005c0 <main+0x3b0>
ffc00578:	8481a783          	lw	a5, -1976(gp) # ffb00048 <epoch_empty_check_cnt>
ffc0057c:	0017b793          	seqz	a5, a5
ffc00580:	04079863          	bnez	a5, ffc005d0 <main+0x3c0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:156
      is_empty = true;
ffc00584:	01c12703          	lw	a4, 28(sp)
ffc00588:	09c0006f          	j	ffc00624 <main+0x414>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:232 (discriminator 2)
    uint32_t my_x_trans = noc_trans_table_en ? my_logical_x[0] : my_x[0];
ffc0058c:	8441c983          	lbu	s3, -1980(gp) # ffb00044 <my_x>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:233 (discriminator 2)
    uint32_t my_y_trans = noc_trans_table_en ? my_logical_y[0] : my_y[0];
ffc00590:	8401c783          	lbu	a5, -1984(gp) # ffb00040 <my_y>
ffc00594:	e8dff06f          	j	ffc00420 <main+0x210>
get_epoch_index_x(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:165
  else if (my_x > 21)
ffc00598:	01500713          	li	a4, 21
ffc0059c:	e9377ce3          	bgeu	a4, s3, ffc00434 <main+0x224>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:166
    my_x -= 16;
ffc005a0:	ff098a13          	addi	s4, s3, -16
ffc005a4:	e91ff06f          	j	ffc00434 <main+0x224>
get_epoch_index_y(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:178
  else if (my_y > 22)
ffc005a8:	01600793          	li	a5, 22
ffc005ac:	eb37d8e3          	bge	a5, s3, ffc0045c <main+0x24c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:179
    my_y = (my_y - 16);
ffc005b0:	ff098993          	addi	s3, s3, -16
ffc005b4:	ea9ff06f          	j	ffc0045c <main+0x24c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:175
    my_y = 6;
ffc005b8:	00600993          	li	s3, 6
ffc005bc:	ea1ff06f          	j	ffc0045c <main+0x24c>
risc_is_l1_epoch_q_empty(unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:76
  bool is_empty = my_q_rd_ptr == RISC_L1_EPOCH_Q_PTR->wr_ptr;
ffc005c0:	0046a703          	lw	a4, 4(a3)
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:143
    if (risc_get_l1_epoch_q_wrptr() == epoch_queue::POLLING_EPOCH_QUEUE_TAG ? epoch_empty_check_cnt == 0 : !risc_is_l1_epoch_q_empty(my_q_rd_ptr)) {
ffc005c4:	40e787b3          	sub	a5, a5, a4
ffc005c8:	00f037b3          	snez	a5, a5
ffc005cc:	fb5ff06f          	j	ffc00580 <main+0x370>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:144
      uint32_t noc_read_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
ffc005d0:	8301a583          	lw	a1, -2000(gp) # ffb00030 <my_q_table_offset>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:146
      uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
ffc005d4:	000057b7          	lui	a5, 0x5
ffc005d8:	30078793          	addi	a5, a5, 768 # 5300 <noc_read_scratch_buf>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:144
      uint32_t noc_read_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
ffc005dc:	01f5fb13          	andi	s6, a1, 31
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:146
      uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
ffc005e0:	00fb0b33          	add	s6, s6, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:147
      ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF,
ffc005e4:	8341a603          	lw	a2, -1996(gp) # ffb00034 <my_q_table_offset+0x4>
ffc005e8:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc005ec:	00200793          	li	a5, 2
ffc005f0:	00800713          	li	a4, 8
ffc005f4:	000b0693          	mv	a3, s6
ffc005f8:	311000ef          	jal	ra, ffc01108 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:151
      while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
ffc005fc:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc00600:	00200593          	li	a1, 2
ffc00604:	6d0000ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc00608:	fe050ae3          	beqz	a0, ffc005fc <main+0x3ec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:153
      my_q_wr_ptr = noc_read_dest_buf_ptr[1];
ffc0060c:	004b2783          	lw	a5, 4(s6)
ffc00610:	02c12703          	lw	a4, 44(sp)
ffc00614:	82f1a223          	sw	a5, -2012(gp) # ffb00024 <my_q_wr_ptr>
dram_io_empty(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:71
  }
  return next_ptr;
}

inline __attribute__((always_inline)) uint32_t dram_io_empty(uint32_t rd_ptr, uint32_t wr_ptr) {
  return (rd_ptr == wr_ptr);
ffc00618:	8281a703          	lw	a4, -2008(gp) # ffb00028 <my_q_rd_ptr>
ffc0061c:	40f70733          	sub	a4, a4, a5
ffc00620:	00173713          	seqz	a4, a4
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:162
  epoch_empty_check_cnt = (epoch_empty_check_cnt + 1) & EPOCH_EMPTY_CHECK_MASK;
ffc00624:	8481a783          	lw	a5, -1976(gp) # ffb00048 <epoch_empty_check_cnt>
ffc00628:	03412683          	lw	a3, 52(sp)
ffc0062c:	00178793          	addi	a5, a5, 1
ffc00630:	00d7f7b3          	and	a5, a5, a3
ffc00634:	84f1a423          	sw	a5, -1976(gp) # ffb00048 <epoch_empty_check_cnt>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:238
    risc_epoch_q_get_ptr(noc_read_scratch_buf, my_q_table_offset, my_q_rd_ptr, my_q_wr_ptr);
    do {
      if (!risc_is_epoch_q_empty(noc_read_scratch_buf, my_q_table_offset, my_q_rd_ptr, my_q_wr_ptr, epoch_empty_check_cnt) || exec_iteration < NUM_EXEC_LOOP_ITERATIONS) {
ffc00638:	18071663          	bnez	a4, ffc007c4 <main+0x5b4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:242
        uint32_t num_loops_cmd = 0;
        if (exec_iteration >= NUM_EXEC_LOOP_ITERATIONS) {
#if defined(PERF_DUMP)
          if (epoch_q_empty == 1) {
ffc0063c:	000a8463          	beqz	s5, ffc00644 <main+0x434>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:244
            epoch_q_empty = 0;
            risc::record_timestamp(risc::perf_event::EPOCH_Q_EMPTY);
ffc00640:	20d000ef          	jal	ra, ffc0104c <risc::record_timestamp(unsigned long) [clone .constprop.0]>
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:193
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
}

inline uint64_t risc_get_epoch_dram_ptr(uint32_t &epoch_command, uint32_t &dram_decouple_mask, volatile uint32_t *noc_read_scratch_buf, uint64_t &my_q_table_offset, uint32_t &my_q_rd_ptr, uint32_t &num_loops) {

  uint64_t my_q_entry_offset = (my_q_rd_ptr & (EPOCH_QUEUE_NUM_SLOTS-1)) * epoch_queue::EPOCH_Q_SLOT_SIZE + epoch_queue::EPOCH_Q_SLOTS_OFFSET + my_q_table_offset;
ffc00644:	8281c783          	lbu	a5, -2008(gp) # ffb00028 <my_q_rd_ptr>
ffc00648:	8301a583          	lw	a1, -2000(gp) # ffb00030 <my_q_table_offset>
ffc0064c:	00178793          	addi	a5, a5, 1
ffc00650:	00579793          	slli	a5, a5, 0x5
ffc00654:	00b785b3          	add	a1, a5, a1
ffc00658:	8341a503          	lw	a0, -1996(gp) # ffb00034 <my_q_table_offset+0x4>
ffc0065c:	00f5b633          	sltu	a2, a1, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:196
  uint32_t noc_read_dest_buf_offset = my_q_entry_offset % (NOC_WORD_BYTES);
  uint32_t noc_read_dest_buf_addr = (uint32_t)(noc_read_scratch_buf);
  uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
ffc00660:	000057b7          	lui	a5, 0x5
ffc00664:	30078793          	addi	a5, a5, 768 # 5300 <noc_read_scratch_buf>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:194
  uint32_t noc_read_dest_buf_offset = my_q_entry_offset % (NOC_WORD_BYTES);
ffc00668:	01f5fb13          	andi	s6, a1, 31
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:196
  uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
ffc0066c:	00fb0b33          	add	s6, s6, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:197
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF,
ffc00670:	00a60633          	add	a2, a2, a0
ffc00674:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc00678:	00200793          	li	a5, 2
ffc0067c:	02000713          	li	a4, 32
ffc00680:	000b0693          	mv	a3, s6
ffc00684:	285000ef          	jal	ra, ffc01108 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:201
                               my_q_entry_offset,
                               noc_read_dest_buf_ptr_addr,
                               32, NCRISC_RD_DEF_TRID);
  while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
ffc00688:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc0068c:	00200593          	li	a1, 2
ffc00690:	644000ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc00694:	02a12023          	sw	a0, 32(sp)
ffc00698:	fe0508e3          	beqz	a0, ffc00688 <main+0x478>
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:168
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
ffc0069c:	000b2d83          	lw	s11, 0(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:169
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
ffc006a0:	004b2783          	lw	a5, 4(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
ffc006a4:	004b2b83          	lw	s7, 4(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
ffc006a8:	004b2583          	lw	a1, 4(s6)
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:207
  volatile uint32_t *noc_read_dest_buf_ptr = (uint32_t *)(noc_read_dest_buf_ptr_addr); 
  uint64_t dram_addr_offset;
  uint32_t dram_coord_x;
  uint32_t dram_coord_y;
  risc_get_noc_addr_from_dram_ptr(noc_read_dest_buf_ptr, dram_addr_offset, dram_coord_x, dram_coord_y);
  epoch_command = (noc_read_dest_buf_ptr[1] >> 28) & 0xF;
ffc006ac:	004b2a83          	lw	s5, 4(s6)
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:169
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
ffc006b0:	02f12823          	sw	a5, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
ffc006b4:	010bdb93          	srli	s7, s7, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
ffc006b8:	0165d593          	srli	a1, a1, 0x16
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:207
  epoch_command = (noc_read_dest_buf_ptr[1] >> 28) & 0xF;
ffc006bc:	01cada93          	srli	s5, s5, 0x1c
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:208
  num_loops = (epoch_command == epoch_queue::EpochCmdLoopStart) ? noc_read_dest_buf_ptr[1] & 0xFFFFFFF : 1;
ffc006c0:	00500793          	li	a5, 5
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
ffc006c4:	03fbfb93          	andi	s7, s7, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
ffc006c8:	03f5f593          	andi	a1, a1, 63
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:208
  num_loops = (epoch_command == epoch_queue::EpochCmdLoopStart) ? noc_read_dest_buf_ptr[1] & 0xFFFFFFF : 1;
ffc006cc:	00100713          	li	a4, 1
ffc006d0:	00fa9863          	bne	s5, a5, ffc006e0 <main+0x4d0>
ffc006d4:	004b2703          	lw	a4, 4(s6)
ffc006d8:	00471713          	slli	a4, a4, 0x4
ffc006dc:	00475713          	srli	a4, a4, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:210
#ifdef PERF_DUMP
  risc::epoch_perf_en = noc_read_dest_buf_ptr[2] & 0xff;
ffc006e0:	008b2683          	lw	a3, 8(s6)
ffc006e4:	88d18823          	sb	a3, -1904(gp) # ffb00090 <risc::epoch_perf_en>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:212
#if OVERLAY_DECOUPLE == 1
  uint8_t input_decouple_mask = (noc_read_dest_buf_ptr[2] >> 8) & 0xff;
ffc006e8:	008b2683          	lw	a3, 8(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:213
  uint8_t output_decouple_mask = (noc_read_dest_buf_ptr[2] >> 16) & 0xff;
ffc006ec:	008b2783          	lw	a5, 8(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:212
  uint8_t input_decouple_mask = (noc_read_dest_buf_ptr[2] >> 8) & 0xff;
ffc006f0:	0086d693          	srli	a3, a3, 0x8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:214
  PERF_RISC_MAILBOX_INPUT_DECOUPLE_MASK_PTR[0] = input_decouple_mask;
ffc006f4:	00002637          	lui	a2, 0x2
ffc006f8:	0ff6f693          	zext.b	a3, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:213
  uint8_t output_decouple_mask = (noc_read_dest_buf_ptr[2] >> 16) & 0xff;
ffc006fc:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:214
  PERF_RISC_MAILBOX_INPUT_DECOUPLE_MASK_PTR[0] = input_decouple_mask;
ffc00700:	30d62823          	sw	a3, 784(a2) # 2310 <__trisc1_size+0x310>
ffc00704:	0ff7f793          	zext.b	a5, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:215
  PERF_RISC_MAILBOX_OUTPUT_DECOUPLE_MASK_PTR[0] = output_decouple_mask;
ffc00708:	30f62a23          	sw	a5, 788(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:221
#else
  PERF_RISC_MAILBOX_INPUT_DECOUPLE_MASK_PTR[0] = 0;
  PERF_RISC_MAILBOX_OUTPUT_DECOUPLE_MASK_PTR[0] = 0;
#endif
#endif
  return NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
ffc0070c:	84f1c783          	lbu	a5, -1969(gp) # ffb0004f <loading_noc>
ffc00710:	00a59b13          	slli	s6, a1, 0xa
ffc00714:	02078463          	beqz	a5, ffc0073c <main+0x52c>
ffc00718:	02812783          	lw	a5, 40(sp)
ffc0071c:	01d7cb03          	lbu	s6, 29(a5)
ffc00720:	02412783          	lw	a5, 36(sp)
ffc00724:	fffb0b13          	addi	s6, s6, -1
ffc00728:	40bb0b33          	sub	s6, s6, a1
ffc0072c:	01c7c583          	lbu	a1, 28(a5)
ffc00730:	00ab1b13          	slli	s6, s6, 0xa
ffc00734:	fff58593          	addi	a1, a1, -1
ffc00738:	41758bb3          	sub	s7, a1, s7
LoopStack<4>::is_empty():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:54
      return ptr < 0 ? true : false;
ffc0073c:	08c12783          	lw	a5, 140(sp)
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:221
  return NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
ffc00740:	004b9b93          	slli	s7, s7, 0x4
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:258
          }
        } else if (epoch_queue::EpochCmdValid == epoch_command) {
          exec_iteration++;
        }

        uint32_t loop_iteration = loopstack.is_empty() ? 0 : loopstack.top()->curr_iter;
ffc00744:	00000693          	li	a3, 0
ffc00748:	0007ce63          	bltz	a5, ffc00764 <main+0x554>
LoopStack<4>::top():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:41
        if (ptr < 0) return nullptr;
ffc0074c:	0007ca63          	bltz	a5, ffc00760 <main+0x550>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:42
        return &table[ptr];
ffc00750:	00c00693          	li	a3, 12
ffc00754:	02d786b3          	mul	a3, a5, a3
ffc00758:	05c10613          	addi	a2, sp, 92
ffc0075c:	00d606b3          	add	a3, a2, a3
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:258
ffc00760:	0006a683          	lw	a3, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:258 (discriminator 4)
ffc00764:	04d12c23          	sw	a3, 88(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:260 (discriminator 4)

        if (epoch_queue::EpochCmdValid == epoch_command) {
ffc00768:	00100693          	li	a3, 1
ffc0076c:	2eda9a63          	bne	s5, a3, ffc00a60 <main+0x850>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/risc.h:16
  uint16_t flags;
} active_stream_info_t;

inline __attribute__((always_inline)) void RISC_POST_STATUS(uint32_t status) {
  volatile uint32_t* ptr = (volatile uint32_t*)(NOC_CFG(ROUTER_CFG_2));
  ptr[0] = status;
ffc00770:	100007b7          	lui	a5, 0x10000
ffc00774:	ffb20737          	lui	a4, 0xffb20
ffc00778:	10178793          	addi	a5, a5, 257 # 10000101 <substitutes.cpp.cd30c172+0xffe17eb>
ffc0077c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc::wait_for_all_epoch_commands_sent_signal():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:34
#if OVERLAY_DECOUPLE == 1
uint32_t overlay_decouple_epoch_idx = 0;
bool selected = false;
void wait_for_all_epoch_commands_sent_signal() {

  overlay_decouple_epoch_idx++;
ffc00780:	ffb007b7          	lui	a5, 0xffb00
ffc00784:	0207a803          	lw	a6, 32(a5) # ffb00020 <TENSIX_MAILBOX_BASE+0xffc40020>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:41
  uint64_t epoch_command_start_addr = (uint64_t(PERF_ANALYZER_COMMAND_START_PTR[1]) << 32) | PERF_ANALYZER_COMMAND_START_PTR[0];
  uint32_t dst_addr = l1_mem::address_map::PERF_ANALYZER_COMMAND_START_VAL_ADDR;

  uint32_t epoch_command_pushed_idx = PERF_ANALYZER_COMMAND_START_VAL[0];

  if (selected) {
ffc00788:	12345737          	lui	a4, 0x12345
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:34
  overlay_decouple_epoch_idx++;
ffc0078c:	00180813          	addi	a6, a6, 1
ffc00790:	0307a023          	sw	a6, 32(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:35
  selected = PERF_ANALYZER_COMMAND_START_PTR[0] == 0x12345678;
ffc00794:	000027b7          	lui	a5, 0x2
ffc00798:	31c7a503          	lw	a0, 796(a5) # 231c <__trisc1_size+0x31c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:39
  uint32_t epoch_command_pushed_idx = PERF_ANALYZER_COMMAND_START_VAL[0];
ffc0079c:	32478693          	addi	a3, a5, 804
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:36
  uint64_t epoch_command_start_addr = (uint64_t(PERF_ANALYZER_COMMAND_START_PTR[1]) << 32) | PERF_ANALYZER_COMMAND_START_PTR[0];
ffc007a0:	3207a603          	lw	a2, 800(a5)
ffc007a4:	31c7a583          	lw	a1, 796(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:39
  uint32_t epoch_command_pushed_idx = PERF_ANALYZER_COMMAND_START_VAL[0];
ffc007a8:	3247a783          	lw	a5, 804(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:41
  if (selected) {
ffc007ac:	67870713          	addi	a4, a4, 1656 # 12345678 <substitutes.cpp.cd30c172+0x12326d62>
ffc007b0:	02e51263          	bne	a0, a4, ffc007d4 <main+0x5c4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:43
    while(epoch_command_pushed_idx != overlay_decouple_epoch_idx) {
      epoch_command_pushed_idx = PERF_ANALYZER_COMMAND_START_VAL[0];
ffc007b4:	00002737          	lui	a4, 0x2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:42
    while(epoch_command_pushed_idx != overlay_decouple_epoch_idx) {
ffc007b8:	06f80c63          	beq	a6, a5, ffc00830 <main+0x620>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:43
      epoch_command_pushed_idx = PERF_ANALYZER_COMMAND_START_VAL[0];
ffc007bc:	32472783          	lw	a5, 804(a4) # 2324 <__trisc1_size+0x324>
ffc007c0:	ff9ff06f          	j	ffc007b8 <main+0x5a8>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:345
        call_with_cpu_flush((void *)risc::allocate_perf_buffer, 0);
#endif
      }
#if defined(PERF_DUMP)
      else {
        if (epoch_q_empty == 0) {
ffc007c4:	d80a96e3          	bnez	s5, ffc00550 <main+0x340>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:346
          epoch_q_empty = 1;
ffc007c8:	00100a93          	li	s5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:347
          risc::record_timestamp(risc::perf_event::EPOCH_Q_EMPTY);
ffc007cc:	081000ef          	jal	ra, ffc0104c <risc::record_timestamp(unsigned long) [clone .constprop.0]>
ffc007d0:	d81ff06f          	j	ffc00550 <main+0x340>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
ffc007d4:	ffb218b7          	lui	a7, 0xffb21
risc::wait_for_all_epoch_commands_sent_signal():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:46
    }
  } else {
    while (epoch_command_pushed_idx != overlay_decouple_epoch_idx) {
ffc007d8:	04f80c63          	beq	a6, a5, ffc00830 <main+0x620>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
ffc007dc:	c288a783          	lw	a5, -984(a7) # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
risc::wait_for_all_epoch_commands_sent_signal():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:47
      while (!ncrisc_noc_fast_read_ok(PERF_DUMP_NOC, NCRISC_SMALL_TXN_CMD_BUF)) {};
ffc007e0:	fe079ee3          	bnez	a5, ffc007dc <main+0x5cc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:48
      ncrisc_noc_fast_read_any_len_l1(PERF_DUMP_NOC, NCRISC_SMALL_TXN_CMD_BUF, epoch_command_start_addr, dst_addr, 4, NCRISC_RD_DEF_TRID);
ffc007e4:	00200793          	li	a5, 2
ffc007e8:	00400713          	li	a4, 4
ffc007ec:	00000513          	li	a0, 0
ffc007f0:	05012623          	sw	a6, 76(sp)
ffc007f4:	04b12423          	sw	a1, 72(sp)
ffc007f8:	04c12223          	sw	a2, 68(sp)
ffc007fc:	00409097          	auipc	ra, 0x409
ffc00800:	258080e7          	jalr	600(ra) # 9a54 <TENSIX_MAILBOX_BASE+0x149a54>
ffc00804:	000027b7          	lui	a5, 0x2
ffc00808:	04c12803          	lw	a6, 76(sp)
ffc0080c:	04812583          	lw	a1, 72(sp)
ffc00810:	04412603          	lw	a2, 68(sp)
ffc00814:	ffb20337          	lui	t1, 0xffb20
ffc00818:	ffb218b7          	lui	a7, 0xffb21
ffc0081c:	32478693          	addi	a3, a5, 804 # 2324 <__trisc1_size+0x324>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
ffc00820:	24832783          	lw	a5, 584(t1) # ffb20248 <TENSIX_MAILBOX_BASE+0xffc60248>
risc::wait_for_all_epoch_commands_sent_signal():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:49
      while (!ncrisc_noc_reads_flushed_l1(PERF_DUMP_NOC, NCRISC_RD_DEF_TRID)) {};
ffc00824:	fe079ee3          	bnez	a5, ffc00820 <main+0x610>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:51

      epoch_command_pushed_idx = PERF_ANALYZER_COMMAND_START_VAL[0];
ffc00828:	0006a783          	lw	a5, 0(a3)
ffc0082c:	fadff06f          	j	ffc007d8 <main+0x5c8>
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:27
    risc::record_timestamp_at_offset(risc::perf_event::EPOCH, risc::EPOCH_START_OFFSET);
ffc00830:	00100593          	li	a1, 1
ffc00834:	01000537          	lui	a0, 0x1000
ffc00838:	718000ef          	jal	ra, ffc00f50 <risc::record_timestamp_at_offset(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:29
    if (!skip_initial_epoch_dram_load) {
ffc0083c:	01812783          	lw	a5, 24(sp)
ffc00840:	04079c63          	bnez	a5, ffc00898 <main+0x688>
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:169
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
ffc00844:	03015583          	lhu	a1, 48(sp)
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:33
        risc_epoch_load(dram_next_epoch_ptr);
ffc00848:	000d8513          	mv	a0, s11
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:221
  return NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
ffc0084c:	0175ebb3          	or	s7, a1, s7
ffc00850:	016beb33          	or	s6, s7, s6
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:33
ffc00854:	000b0593          	mv	a1, s6
ffc00858:	19d000ef          	jal	ra, ffc011f4 <risc_epoch_load(unsigned long long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:34
        uint32_t overlay_blob_extra_size = RISC_EPOCH_INFO_PTR->overlay_blob_extra_size;
ffc0085c:	000237b7          	lui	a5, 0x23
ffc00860:	49c7a603          	lw	a2, 1180(a5) # 2349c <substitutes.cpp.cd30c172+0x4b86>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:35
        if (overlay_blob_extra_size > 0)
ffc00864:	00060863          	beqz	a2, ffc00874 <main+0x664>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:36
          risc_extra_overlay_blob_load(dram_next_epoch_ptr, overlay_blob_extra_size);
ffc00868:	000d8513          	mv	a0, s11
ffc0086c:	000b0593          	mv	a1, s6
ffc00870:	1e9000ef          	jal	ra, ffc01258 <risc_extra_overlay_blob_load(unsigned long long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:38
        skip_kernels = RISC_EPOCH_INFO_PTR->skip_kernels;
ffc00874:	000237b7          	lui	a5, 0x23
ffc00878:	08078793          	addi	a5, a5, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
ffc0087c:	28a7d783          	lhu	a5, 650(a5)
ffc00880:	02012c03          	lw	s8, 32(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:39
        if (!skip_kernels)
ffc00884:	00079a63          	bnez	a5, ffc00898 <main+0x688>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:40
          risc_kernels_load(dram_next_epoch_ptr);
ffc00888:	000d8513          	mv	a0, s11
ffc0088c:	000b0593          	mv	a1, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:38
        skip_kernels = RISC_EPOCH_INFO_PTR->skip_kernels;
ffc00890:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:40
          risc_kernels_load(dram_next_epoch_ptr);
ffc00894:	219000ef          	jal	ra, ffc012ac <risc_kernels_load(unsigned long long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:44
    RISC_EPOCH_INFO_PTR->end_program = 0;
ffc00898:	000237b7          	lui	a5, 0x23
ffc0089c:	080787a3          	sb	zero, 143(a5) # 2308f <substitutes.cpp.cd30c172+0x4779>
ffc008a0:	08078793          	addi	a5, a5, 128
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:45
    if (RISC_EPOCH_INFO_PTR->overlay_valid) {
ffc008a4:	2887d783          	lhu	a5, 648(a5)
ffc008a8:	10078063          	beqz	a5, ffc009a8 <main+0x798>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:47
        call_with_cpu_flush((void *)risc::init_perf_dram_state, 0);
ffc008ac:	00009537          	lui	a0, 0x9
ffc008b0:	00000593          	li	a1, 0
ffc008b4:	38050513          	addi	a0, a0, 896 # 9380 <risc::init_perf_dram_state()>
ffc008b8:	438030ef          	jal	ra, ffc03cf0 <call_with_cpu_flush>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:51
        init_ncrisc_streams(0, dram_decouple_mask);
ffc008bc:	00000593          	li	a1, 0
ffc008c0:	00000513          	li	a0, 0
ffc008c4:	00408097          	auipc	ra, 0x408
ffc008c8:	73c080e7          	jalr	1852(ra) # 9000 <TENSIX_MAILBOX_BASE+0x149000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:57
        risc_dram_stream_handler_init_l1(
ffc008cc:	1a040793          	addi	a5, s0, 416
ffc008d0:	00f12623          	sw	a5, 12(sp)
ffc008d4:	20040793          	addi	a5, s0, 512
ffc008d8:	00f12423          	sw	a5, 8(sp)
ffc008dc:	84848793          	addi	a5, s1, -1976
ffc008e0:	00f12023          	sw	a5, 0(sp)
ffc008e4:	21818893          	addi	a7, gp, 536 # ffb00a18 <dram_input_stream_state>
ffc008e8:	00812223          	sw	s0, 4(sp)
ffc008ec:	004d0813          	addi	a6, s10, 4
ffc008f0:	b5c48793          	addi	a5, s1, -1188
ffc008f4:	5a4d0713          	addi	a4, s10, 1444
ffc008f8:	000d0693          	mv	a3, s10
ffc008fc:	b4c48613          	addi	a2, s1, -1204
ffc00900:	b4848593          	addi	a1, s1, -1208
ffc00904:	00000513          	li	a0, 0
ffc00908:	00409097          	auipc	ra, 0x409
ffc0090c:	168080e7          	jalr	360(ra) # 9a70 <TENSIX_MAILBOX_BASE+0x149a70>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:88
          (void *) dram_prefetch_epoch_stream_info, (void *) dram_prefetch_active_stream_info
        );
#endif

#ifndef ERISC
        if (!skip_kernels)
ffc00910:	000c1e63          	bnez	s8, ffc0092c <main+0x71c>
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
  return ptr[0];
ffc00914:	ffb12837          	lui	a6, 0xffb12
ffc00918:	1b082683          	lw	a3, 432(a6) # ffb121b0 <TENSIX_MAILBOX_BASE+0xffc521b0>
deassert_trisc_reset():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:142


inline void deassert_trisc_reset() {
  uint32_t soft_reset_0 = READ_REG(RISCV_DEBUG_REG_SOFT_RESET_0);
  uint32_t trisc_reset_mask = 0x7000;
  WRITE_REG(RISCV_DEBUG_REG_SOFT_RESET_0, soft_reset_0 & ~trisc_reset_mask);
ffc0091c:	ffff9537          	lui	a0, 0xffff9
ffc00920:	fff50513          	addi	a0, a0, -1 # ffff8fff <TENSIX_MAILBOX_BASE+0x138fff>
ffc00924:	00a6f6b3          	and	a3, a3, a0
WRITE_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:42
  ptr[0] = val;
ffc00928:	1ad82823          	sw	a3, 432(a6)
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:92
          deassert_trisc_reset();
#endif

        risc_dram_stream_handler_loop(
ffc0092c:	288010ef          	jal	ra, ffc01bb4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:108
          num_output_streams, output_stream_state
#endif
        );

#if defined(ERISC) || defined(RISC_B0_HW)
        risc_dram_stream_handler_epilogue_l1(
ffc00930:	1a040713          	addi	a4, s0, 416
ffc00934:	4b818693          	addi	a3, gp, 1208 # ffb00cb8 <dram_output_stream_state>
ffc00938:	00e12623          	sw	a4, 12(sp)
ffc0093c:	00d12023          	sw	a3, 0(sp)
ffc00940:	20040713          	addi	a4, s0, 512
ffc00944:	03c12883          	lw	a7, 60(sp)
ffc00948:	04012803          	lw	a6, 64(sp)
ffc0094c:	00e12423          	sw	a4, 8(sp)
ffc00950:	00812223          	sw	s0, 4(sp)
ffc00954:	7cc18793          	addi	a5, gp, 1996 # ffb00fcc <num_dram_prefetch_streams>
ffc00958:	21418713          	addi	a4, gp, 532 # ffb00a14 <num_active_dram_queues>
ffc0095c:	c7018693          	addi	a3, gp, -912 # ffb00470 <num_active_streams>
ffc00960:	7bc18613          	addi	a2, gp, 1980 # ffb00fbc <num_dram_output_streams>
ffc00964:	7b818593          	addi	a1, gp, 1976 # ffb00fb8 <num_dram_input_streams>
ffc00968:	00000513          	li	a0, 0
ffc0096c:	0040b097          	auipc	ra, 0x40b
ffc00970:	6a4080e7          	jalr	1700(ra) # c010 <TENSIX_MAILBOX_BASE+0x14c010>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:129
          (void *) dram_prefetch_epoch_stream_info, (void *) dram_prefetch_active_stream_info
        );
#endif

#ifndef ERISC
        if (!skip_kernels)
ffc00974:	000c1c63          	bnez	s8, ffc0098c <main+0x77c>
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
  return ptr[0];
ffc00978:	ffb12737          	lui	a4, 0xffb12
ffc0097c:	1b072783          	lw	a5, 432(a4) # ffb121b0 <TENSIX_MAILBOX_BASE+0xffc521b0>
assert_trisc_reset():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:135
  WRITE_REG(RISCV_DEBUG_REG_SOFT_RESET_0, soft_reset_0 | trisc_reset_mask);
ffc00980:	000076b7          	lui	a3, 0x7
ffc00984:	00d7e7b3          	or	a5, a5, a3
WRITE_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:42
  ptr[0] = val;
ffc00988:	1af72823          	sw	a5, 432(a4)
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:133
          assert_trisc_reset();
#endif
#ifdef PERF_DUMP
        risc::record_timestamp_at_offset(risc::perf_event::EPOCH, risc::EPOCH_END_OFFSET);
ffc0098c:	00400593          	li	a1, 4
ffc00990:	01000537          	lui	a0, 0x1000
ffc00994:	5bc000ef          	jal	ra, ffc00f50 <risc::record_timestamp_at_offset(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:134
        call_with_cpu_flush((void *)risc::record_perf_dump_end, 0);
ffc00998:	0000c537          	lui	a0, 0xc
ffc0099c:	00000593          	li	a1, 0
ffc009a0:	55050513          	addi	a0, a0, 1360 # c550 <risc::record_perf_dump_end()>
ffc009a4:	34c030ef          	jal	ra, ffc03cf0 <call_with_cpu_flush>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:317
          my_q_rd_ptr = dram_io_incr_ptr(my_q_rd_ptr, 1, EPOCH_QUEUE_NUM_SLOTS);
ffc009a8:	8281a703          	lw	a4, -2008(gp) # ffb00028 <my_q_rd_ptr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:313
        epoch_empty_check_cnt = 0;
ffc009ac:	8401a423          	sw	zero, -1976(gp) # ffb00048 <epoch_empty_check_cnt>
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
ffc009b0:	00170793          	addi	a5, a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
ffc009b4:	1ff00693          	li	a3, 511
ffc009b8:	00f6f463          	bgeu	a3, a5, ffc009c0 <main+0x7b0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
ffc009bc:	e0170793          	addi	a5, a4, -511
LoopStack<4>::is_empty():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:54
      return ptr < 0 ? true : false;
ffc009c0:	08c12703          	lw	a4, 140(sp)
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:317
          my_q_rd_ptr = dram_io_incr_ptr(my_q_rd_ptr, 1, EPOCH_QUEUE_NUM_SLOTS);
ffc009c4:	82f1a423          	sw	a5, -2008(gp) # ffb00028 <my_q_rd_ptr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:320
          if (loopstack.is_empty()){
ffc009c8:	06075263          	bgez	a4, ffc00a2c <main+0x81c>
risc_epoch_q_rdptr_update(unsigned long, unsigned long volatile*, unsigned long long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:98
  uint32_t noc_write_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
ffc009cc:	8301a683          	lw	a3, -2000(gp) # ffb00030 <my_q_table_offset>
risc_l1_epoch_q_rdptr_update(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:72
  RISC_L1_EPOCH_Q_PTR->rd_ptr = rd_ptr;
ffc009d0:	00007737          	lui	a4, 0x7
risc_epoch_q_rdptr_update(unsigned long, unsigned long volatile*, unsigned long long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:98
  uint32_t noc_write_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
ffc009d4:	01f6f613          	andi	a2, a3, 31
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:99
  uint32_t noc_write_dest_buf_addr = (uint32_t)(&(noc_read_scratch_buf[SCRATCH_PAD_DRAM_WRITE_IDX]));
ffc009d8:	14040593          	addi	a1, s0, 320
risc_l1_epoch_q_rdptr_update(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:72
  RISC_L1_EPOCH_Q_PTR->rd_ptr = rd_ptr;
ffc009dc:	00f72023          	sw	a5, 0(a4) # 7000 <__trisc_base+0x400>
risc_epoch_q_rdptr_update(unsigned long, unsigned long volatile*, unsigned long long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:100
  uint32_t noc_write_dest_buf_ptr_addr = noc_write_dest_buf_addr+noc_write_dest_buf_offset;
ffc009e0:	00b60633          	add	a2, a2, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:98
  uint32_t noc_write_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
ffc009e4:	8341a703          	lw	a4, -1996(gp) # ffb00034 <my_q_table_offset+0x4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:102
  *noc_write_dest_buf_ptr = rd_ptr;
ffc009e8:	00f62023          	sw	a5, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:110
  while (!ncrisc_noc_fast_write_ok(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc009ec:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc009f0:	00300593          	li	a1, 3
ffc009f4:	04e12223          	sw	a4, 68(sp)
ffc009f8:	02d12823          	sw	a3, 48(sp)
ffc009fc:	02c12023          	sw	a2, 32(sp)
ffc00a00:	2f8000ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc00a04:	02012603          	lw	a2, 32(sp)
ffc00a08:	03012683          	lw	a3, 48(sp)
ffc00a0c:	04412703          	lw	a4, 68(sp)
ffc00a10:	fc050ee3          	beqz	a0, ffc009ec <main+0x7dc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:111
  ncrisc_noc_fast_write(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, noc_write_dest_buf_ptr_addr, q_rd_ptr_addr, 4,
ffc00a14:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc00a18:	00000893          	li	a7, 0
ffc00a1c:	00100813          	li	a6, 1
ffc00a20:	00400793          	li	a5, 4
ffc00a24:	00300593          	li	a1, 3
ffc00a28:	0a1000ef          	jal	ra, ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:329
        if (epoch_queue::EpochCmdEndProgram == epoch_command) {
ffc00a2c:	00f00793          	li	a5, 15
ffc00a30:	12fa9463          	bne	s5, a5, ffc00b58 <main+0x948>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:332
          while (!ncrisc_noc_nonposted_writes_flushed(loading_noc, NCRISC_WR_DEF_TRID));
ffc00a34:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc00a38:	00000593          	li	a1, 0
ffc00a3c:	298000ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc00a40:	fe050ae3          	beqz	a0, ffc00a34 <main+0x824>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:389
    );
    assert_trisc_reset();
#ifndef PERF_DUMP
    RISC_POST_STATUS(0x10000030);
#endif
    EPOCH_INFO_PTR->end_program = 1;
ffc00a44:	000237b7          	lui	a5, 0x23
ffc00a48:	00100713          	li	a4, 1
ffc00a4c:	08e787a3          	sb	a4, 143(a5) # 2308f <substitutes.cpp.cd30c172+0x4779>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:398
  }
#ifndef PERF_DUMP
  RISC_POST_STATUS(0x1FFFFFF1);
#endif

  test_mailbox_ptr[0] = 0x1;
ffc00a50:	000057b7          	lui	a5, 0x5
ffc00a54:	00100713          	li	a4, 1
ffc00a58:	00e7a223          	sw	a4, 4(a5) # 5004 <__trisc2_size+0x4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:400 (discriminator 2)
  
  while (true);
ffc00a5c:	0000006f          	j	ffc00a5c <main+0x84c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:275
        } else if (epoch_queue::EpochCmdIOQueueUpdate == epoch_command) {
ffc00a60:	00300613          	li	a2, 3
ffc00a64:	02ca9663          	bne	s5, a2, ffc00a90 <main+0x880>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/risc.h:16
ffc00a68:	100007b7          	lui	a5, 0x10000
ffc00a6c:	ffb20737          	lui	a4, 0xffb20
ffc00a70:	10178793          	addi	a5, a5, 257 # 10000101 <substitutes.cpp.cd30c172+0xffe17eb>
ffc00a74:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:277
            bool varinst_cmd = false;
ffc00a78:	04010ba3          	sb	zero, 87(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:289
          run_dram_queue_update(0, noc_read_scratch_buf, my_q_table_offset, my_q_rd_ptr, dram_next_epoch_ptr, loading_noc, varinst_cmd, loop_iteration);
ffc00a7c:	05810593          	addi	a1, sp, 88
ffc00a80:	05710513          	addi	a0, sp, 87
ffc00a84:	0040b097          	auipc	ra, 0x40b
ffc00a88:	a9c080e7          	jalr	-1380(ra) # b520 <TENSIX_MAILBOX_BASE+0x14b520>
ffc00a8c:	f1dff06f          	j	ffc009a8 <main+0x798>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:285
        } else if (epoch_queue::EpochCmdVarinst == epoch_command) {
ffc00a90:	00400613          	li	a2, 4
ffc00a94:	00ca9e63          	bne	s5, a2, ffc00ab0 <main+0x8a0>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/risc.h:16
ffc00a98:	110007b7          	lui	a5, 0x11000
ffc00a9c:	ffb20737          	lui	a4, 0xffb20
ffc00aa0:	10178793          	addi	a5, a5, 257 # 11000101 <substitutes.cpp.cd30c172+0x10fe17eb>
ffc00aa4:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:287
          bool varinst_cmd = true;
ffc00aa8:	04d10ba3          	sb	a3, 87(sp)
ffc00aac:	fd1ff06f          	j	ffc00a7c <main+0x86c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:295
        } else if (epoch_queue::EpochCmdLoopStart == epoch_command) {
ffc00ab0:	00500693          	li	a3, 5
ffc00ab4:	04da9263          	bne	s5, a3, ffc00af8 <main+0x8e8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:297
          uint32_t loop_start_rd_ptr = dram_io_incr_ptr(my_q_rd_ptr, 1, EPOCH_QUEUE_NUM_SLOTS);
ffc00ab8:	8281a603          	lw	a2, -2008(gp) # ffb00028 <my_q_rd_ptr>
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
ffc00abc:	1ff00593          	li	a1, 511
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
ffc00ac0:	00160693          	addi	a3, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
ffc00ac4:	00d5f463          	bgeu	a1, a3, ffc00acc <main+0x8bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
ffc00ac8:	e0160693          	addi	a3, a2, -511
LoopStack<4>::push(LoopInfo const&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:45
        ptr++;
ffc00acc:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:46
        table[ptr] = info;
ffc00ad0:	00c00613          	li	a2, 12
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:45
        ptr++;
ffc00ad4:	08f12623          	sw	a5, 140(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:46
        table[ptr] = info;
ffc00ad8:	02c787b3          	mul	a5, a5, a2
ffc00adc:	09010613          	addi	a2, sp, 144
ffc00ae0:	00f607b3          	add	a5, a2, a5
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:298
          loopstack.push({.last_iter = num_loops_cmd-1, .epoch_ptr = loop_start_rd_ptr});
ffc00ae4:	fff70713          	addi	a4, a4, -1
LoopStack<4>::push(LoopInfo const&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:46
ffc00ae8:	fc07a623          	sw	zero, -52(a5)
ffc00aec:	fce7a823          	sw	a4, -48(a5)
ffc00af0:	fcd7aa23          	sw	a3, -44(a5)
ffc00af4:	eb5ff06f          	j	ffc009a8 <main+0x798>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:299
        } else if (epoch_queue::EpochCmdLoopEnd == epoch_command) {
ffc00af8:	00600713          	li	a4, 6
ffc00afc:	eaea96e3          	bne	s5, a4, ffc009a8 <main+0x798>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:41
        if (ptr < 0) return nullptr;
ffc00b00:	00000713          	li	a4, 0
LoopStack<4>::top():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:41
ffc00b04:	0007ca63          	bltz	a5, ffc00b18 <main+0x908>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:42
        return &table[ptr];
ffc00b08:	00c00713          	li	a4, 12
ffc00b0c:	02e78733          	mul	a4, a5, a4
ffc00b10:	05c10693          	addi	a3, sp, 92
ffc00b14:	00e68733          	add	a4, a3, a4
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:302
            if (curr_loop->curr_iter < curr_loop->last_iter) {
ffc00b18:	00072683          	lw	a3, 0(a4)
ffc00b1c:	00472603          	lw	a2, 4(a4)
ffc00b20:	02c6f663          	bgeu	a3, a2, ffc00b4c <main+0x93c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:304
                my_q_rd_ptr = curr_loop->epoch_ptr;
ffc00b24:	00872783          	lw	a5, 8(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:303
                curr_loop->curr_iter++;
ffc00b28:	00168693          	addi	a3, a3, 1 # 7001 <__trisc_base+0x401>
ffc00b2c:	00d72023          	sw	a3, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:304
                my_q_rd_ptr = curr_loop->epoch_ptr;
ffc00b30:	82f1a423          	sw	a5, -2008(gp) # ffb00028 <my_q_rd_ptr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:306
                while (!ncrisc_noc_nonposted_writes_flushed(loading_noc, NCRISC_WR_DEF_TRID));
ffc00b34:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc00b38:	00000593          	li	a1, 0
ffc00b3c:	198000ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc00b40:	fe050ae3          	beqz	a0, ffc00b34 <main+0x924>
ffc00b44:	00000a93          	li	s5, 0
ffc00b48:	a09ff06f          	j	ffc00550 <main+0x340>
LoopStack<4>::pop():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:50
        ptr--;
ffc00b4c:	fff78793          	addi	a5, a5, -1
ffc00b50:	08f12623          	sw	a5, 140(sp)
ffc00b54:	e55ff06f          	j	ffc009a8 <main+0x798>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:340
        call_with_cpu_flush((void *)risc::allocate_perf_buffer, 0);
ffc00b58:	03812783          	lw	a5, 56(sp)
ffc00b5c:	00000593          	li	a1, 0
ffc00b60:	44878513          	addi	a0, a5, 1096
ffc00b64:	18c030ef          	jal	ra, ffc03cf0 <call_with_cpu_flush>
ffc00b68:	fddff06f          	j	ffc00b44 <main+0x934>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:356
    call_with_cpu_flush((void *)init_ncrisc_streams, 0);
ffc00b6c:	00009537          	lui	a0, 0x9
ffc00b70:	00000593          	li	a1, 0
ffc00b74:	00050513          	mv	a0, a0
ffc00b78:	178030ef          	jal	ra, ffc03cf0 <call_with_cpu_flush>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:357
    call_with_cpu_flush_args((void *)risc_dram_stream_handler_init_l1,
ffc00b7c:	b5c48793          	addi	a5, s1, -1188
ffc00b80:	b4c48613          	addi	a2, s1, -1204
ffc00b84:	b4848593          	addi	a1, s1, -1208
ffc00b88:	c7018713          	addi	a4, gp, -912 # ffb00470 <num_active_streams>
ffc00b8c:	1a040a93          	addi	s5, s0, 416
ffc00b90:	20040a13          	addi	s4, s0, 512
ffc00b94:	84848493          	addi	s1, s1, -1976
ffc00b98:	0000a537          	lui	a0, 0xa
ffc00b9c:	5a870893          	addi	a7, a4, 1448
ffc00ba0:	00470813          	addi	a6, a4, 4
ffc00ba4:	c7018693          	addi	a3, gp, -912 # ffb00470 <num_active_streams>
ffc00ba8:	5a470713          	addi	a4, a4, 1444
ffc00bac:	a7050513          	addi	a0, a0, -1424 # 9a70 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)>
ffc00bb0:	01512623          	sw	s5, 12(sp)
ffc00bb4:	01412423          	sw	s4, 8(sp)
ffc00bb8:	00812223          	sw	s0, 4(sp)
ffc00bbc:	00912023          	sw	s1, 0(sp)
ffc00bc0:	0f0030ef          	jal	ra, ffc03cb0 <call_with_cpu_flush_args>
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
  return ptr[0];
ffc00bc4:	ffb12937          	lui	s2, 0xffb12
ffc00bc8:	1b092683          	lw	a3, 432(s2) # ffb121b0 <TENSIX_MAILBOX_BASE+0xffc521b0>
deassert_trisc_reset():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:142
  WRITE_REG(RISCV_DEBUG_REG_SOFT_RESET_0, soft_reset_0 & ~trisc_reset_mask);
ffc00bcc:	ffff9537          	lui	a0, 0xffff9
ffc00bd0:	fff50513          	addi	a0, a0, -1 # ffff8fff <TENSIX_MAILBOX_BASE+0x138fff>
ffc00bd4:	00a6f6b3          	and	a3, a3, a0
WRITE_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:42
  ptr[0] = val;
ffc00bd8:	1ad92823          	sw	a3, 432(s2)
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:369
    risc_dram_stream_handler_loop(
ffc00bdc:	7d9000ef          	jal	ra, ffc01bb4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:377
    call_with_cpu_flush_args((void *)risc_dram_stream_handler_epilogue_l1,
ffc00be0:	21818893          	addi	a7, gp, 536 # ffb00a18 <dram_input_stream_state>
ffc00be4:	c7418813          	addi	a6, gp, -908 # ffb00474 <dram_q_state>
ffc00be8:	0000c537          	lui	a0, 0xc
ffc00bec:	7cc18793          	addi	a5, gp, 1996 # ffb00fcc <num_dram_prefetch_streams>
ffc00bf0:	21418713          	addi	a4, gp, 532 # ffb00a14 <num_active_dram_queues>
ffc00bf4:	01512623          	sw	s5, 12(sp)
ffc00bf8:	01412423          	sw	s4, 8(sp)
ffc00bfc:	00812223          	sw	s0, 4(sp)
ffc00c00:	00912023          	sw	s1, 0(sp)
ffc00c04:	c7018693          	addi	a3, gp, -912 # ffb00470 <num_active_streams>
ffc00c08:	7bc18613          	addi	a2, gp, 1980 # ffb00fbc <num_dram_output_streams>
ffc00c0c:	7b818593          	addi	a1, gp, 1976 # ffb00fb8 <num_dram_input_streams>
ffc00c10:	01050513          	addi	a0, a0, 16 # c010 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)>
ffc00c14:	09c030ef          	jal	ra, ffc03cb0 <call_with_cpu_flush_args>
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
  return ptr[0];
ffc00c18:	1b092783          	lw	a5, 432(s2)
assert_trisc_reset():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:135
  WRITE_REG(RISCV_DEBUG_REG_SOFT_RESET_0, soft_reset_0 | trisc_reset_mask);
ffc00c1c:	00007737          	lui	a4, 0x7
ffc00c20:	00e7e7b3          	or	a5, a5, a4
WRITE_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:42
  ptr[0] = val;
ffc00c24:	1af92823          	sw	a5, 432(s2)
ffc00c28:	e1dff06f          	j	ffc00a44 <main+0x834>
main():
ffc00c2c:	00000000          	0x0

ffc00c30 <get_operand_stream_id(int)>:
get_operand_stream_id(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:43

// Indexed with operand = kernel operand ID (0-31) per the table above
// Used for tile push/pop operations. 
inline uint32_t get_operand_stream_id(int operand) {
#ifdef TENSIX_FIRMWARE
  if (*MCAST_PACKER_OPT_EN && operand >= OPERAND_OUTPUT_START_INDEX && operand < OPERAND_INTERMEDIATES_START_INDEX) {
ffc00c30:	ffb43737          	lui	a4, 0xffb43
ffc00c34:	3f472703          	lw	a4, 1012(a4) # ffb433f4 <TENSIX_MAILBOX_BASE+0xffc833f4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:41
inline uint32_t get_operand_stream_id(int operand) {
ffc00c38:	00050793          	mv	a5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:43
  if (*MCAST_PACKER_OPT_EN && operand >= OPERAND_OUTPUT_START_INDEX && operand < OPERAND_INTERMEDIATES_START_INDEX) {
ffc00c3c:	00070e63          	beqz	a4, ffc00c58 <get_operand_stream_id(int)+0x28>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:43 (discriminator 1)
ffc00c40:	ff050713          	addi	a4, a0, -16
ffc00c44:	00700693          	li	a3, 7
ffc00c48:	00e6e863          	bltu	a3, a4, ffc00c58 <get_operand_stream_id(int)+0x28>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:44
    return MCAST_END_STREAM - (operand - OPERAND_OUTPUT_START_INDEX);
ffc00c4c:	01300513          	li	a0, 19
ffc00c50:	40f50533          	sub	a0, a0, a5
ffc00c54:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:48
  }
#endif

  return ((uint32_t)operand) >= INPUT_START_STREAM_1_SIZE ? INPUT_START_STREAM_2 + operand - INPUT_START_STREAM_1_SIZE : OPERAND_START_STREAM + operand;
ffc00c58:	00100713          	li	a4, 1
ffc00c5c:	00478513          	addi	a0, a5, 4
ffc00c60:	00f77463          	bgeu	a4, a5, ffc00c68 <get_operand_stream_id(int)+0x38>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:48 (discriminator 1)
ffc00c64:	00878513          	addi	a0, a5, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:49
}
ffc00c68:	00008067          	ret

ffc00c6c <stream_id_to_operand(unsigned long)>:
stream_id_to_operand(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:53

inline int stream_id_to_operand(uint32_t stream_id) {
#ifdef TENSIX_FIRMWARE
  if (*MCAST_PACKER_OPT_EN && stream_id >= MCAST_START_STREAM && stream_id <= MCAST_END_STREAM) {
ffc00c6c:	ffb43737          	lui	a4, 0xffb43
ffc00c70:	3f472703          	lw	a4, 1012(a4) # ffb433f4 <TENSIX_MAILBOX_BASE+0xffc833f4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:51
inline int stream_id_to_operand(uint32_t stream_id) {
ffc00c74:	00050793          	mv	a5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:53
  if (*MCAST_PACKER_OPT_EN && stream_id >= MCAST_START_STREAM && stream_id <= MCAST_END_STREAM) {
ffc00c78:	00070c63          	beqz	a4, ffc00c90 <stream_id_to_operand(unsigned long)+0x24>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:53 (discriminator 1)
ffc00c7c:	00300713          	li	a4, 3
ffc00c80:	00a76863          	bltu	a4, a0, ffc00c90 <stream_id_to_operand(unsigned long)+0x24>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:54
    return OPERAND_OUTPUT_START_INDEX + (MCAST_END_STREAM - stream_id);
ffc00c84:	01300513          	li	a0, 19
ffc00c88:	40f50533          	sub	a0, a0, a5
ffc00c8c:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:58
  }
#endif

  return stream_id >= INPUT_START_STREAM_2 ? (stream_id - INPUT_START_STREAM_2 + INPUT_START_STREAM_1_SIZE) : (stream_id - OPERAND_START_STREAM);
ffc00c90:	00900713          	li	a4, 9
ffc00c94:	ffc78513          	addi	a0, a5, -4
ffc00c98:	00f77463          	bgeu	a4, a5, ffc00ca0 <stream_id_to_operand(unsigned long)+0x34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:58 (discriminator 1)
ffc00c9c:	ff878513          	addi	a0, a5, -8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:59
}
ffc00ca0:	00008067          	ret

ffc00ca4 <is_input_operand_decoupled(int)>:
is_input_operand_decoupled(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:128
  #if OVERLAY_DECOUPLE == 1
  #define PERF_ANALYZER_COMMAND_START_PTR            ((volatile uint32_t tt_l1_ptr *) (l1_mem::address_map::PERF_ANALYZER_COMMAND_START_PTR_ADDR))
  #define PERF_ANALYZER_COMMAND_START_VAL            ((volatile uint32_t tt_l1_ptr *) (l1_mem::address_map::PERF_ANALYZER_COMMAND_START_VAL_ADDR))

  inline bool is_input_operand_decoupled(int operand) {
    if (operand >= OPERAND_INPUT_PARAMS_START_INDEX) {
ffc00ca4:	00700793          	li	a5, 7
ffc00ca8:	02a7c263          	blt	a5, a0, ffc00ccc <is_input_operand_decoupled(int)+0x28>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:131
        return false;
    }
    uint32_t overlay_input_decouple_mask = *PERF_RISC_MAILBOX_INPUT_DECOUPLE_MASK_PTR;
ffc00cac:	000027b7          	lui	a5, 0x2
ffc00cb0:	3107a703          	lw	a4, 784(a5) # 2310 <__trisc1_size+0x310>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:132
    const uint8_t operand_mask = 1 << (operand & 0xff);
ffc00cb4:	00100793          	li	a5, 1
ffc00cb8:	00a79533          	sll	a0, a5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:133
    return (overlay_input_decouple_mask & 0xff) & operand_mask;
ffc00cbc:	0ff57513          	zext.b	a0, a0
ffc00cc0:	00e57533          	and	a0, a0, a4
ffc00cc4:	00a03533          	snez	a0, a0
ffc00cc8:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:129
        return false;
ffc00ccc:	00000513          	li	a0, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:134
  }
ffc00cd0:	00008067          	ret

ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>:
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc00cd4:	3fec87b7          	lui	a5, 0x3fec8
ffc00cd8:	09078793          	addi	a5, a5, 144 # 3fec8090 <substitutes.cpp.cd30c172+0x3fea977a>
ffc00cdc:	00f585b3          	add	a1, a1, a5
ffc00ce0:	01051513          	slli	a0, a0, 0x10
ffc00ce4:	00259593          	slli	a1, a1, 0x2
ffc00ce8:	00a585b3          	add	a1, a1, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc00cec:	0005a503          	lw	a0, 0(a1)
ncrisc_noc_reads_flushed(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:127
}
ffc00cf0:	00153513          	seqz	a0, a0
ffc00cf4:	00008067          	ret

ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>:
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
ffc00cf8:	ffb207b7          	lui	a5, 0xffb20
ffc00cfc:	02878793          	addi	a5, a5, 40 # ffb20028 <TENSIX_MAILBOX_BASE+0xffc60028>
ffc00d00:	00a59593          	slli	a1, a1, 0xa
ffc00d04:	00f585b3          	add	a1, a1, a5
ffc00d08:	01051513          	slli	a0, a0, 0x10
ffc00d0c:	00a585b3          	add	a1, a1, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
ffc00d10:	0005a503          	lw	a0, 0(a1)
ncrisc_noc_fast_read_ok(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:151
}
ffc00d14:	00153513          	seqz	a0, a0
ffc00d18:	00008067          	ret

ffc00d1c <stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)>:
stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:349

  *dram_wrptr_byte_ptr = dram_wrptr_byte;
}

inline bool stride_iter_matches(volatile dram_io_state_t tt_l1_ptr * l1_ptrs, uint32_t& rd_stride, uint32_t& curr_stride_wrap, uint32_t& next_stride_wrap) {
  uint32_t vanilla_stride_wrap = l1_ptrs->stride_wrap;
ffc00d1c:	05754783          	lbu	a5, 87(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:350
  rd_stride = l1_ptrs->rd_stride;
ffc00d20:	00c55503          	lhu	a0, 12(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:351
  curr_stride_wrap = rd_stride & DRAM_STRIDE_WRAP_BIT;
ffc00d24:	00004737          	lui	a4, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:354
  uint32_t stride_wrap = vanilla_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
  bool stride_iter_matches_expr = !(stride_wrap ^ curr_stride_wrap);
  rd_stride = rd_stride & ~DRAM_STRIDE_WRAP_BIT;
ffc00d28:	ffffc837          	lui	a6, 0xffffc
ffc00d2c:	fff80813          	addi	a6, a6, -1 # ffffbfff <TENSIX_MAILBOX_BASE+0x13bfff>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:350
  rd_stride = l1_ptrs->rd_stride;
ffc00d30:	00a5a023          	sw	a0, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:351
  curr_stride_wrap = rd_stride & DRAM_STRIDE_WRAP_BIT;
ffc00d34:	00e57533          	and	a0, a0, a4
ffc00d38:	00a62023          	sw	a0, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:354
  rd_stride = rd_stride & ~DRAM_STRIDE_WRAP_BIT;
ffc00d3c:	0005a603          	lw	a2, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:352
  uint32_t stride_wrap = vanilla_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc00d40:	00f03733          	snez	a4, a5
ffc00d44:	00e71713          	slli	a4, a4, 0xe
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:354
  rd_stride = rd_stride & ~DRAM_STRIDE_WRAP_BIT;
ffc00d48:	01067633          	and	a2, a2, a6
ffc00d4c:	00c5a023          	sw	a2, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:355
  next_stride_wrap = !vanilla_stride_wrap;
ffc00d50:	0017b793          	seqz	a5, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:353
  bool stride_iter_matches_expr = !(stride_wrap ^ curr_stride_wrap);
ffc00d54:	40e50533          	sub	a0, a0, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:355
  next_stride_wrap = !vanilla_stride_wrap;
ffc00d58:	00f6a023          	sw	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:357
  return stride_iter_matches_expr;
}
ffc00d5c:	00153513          	seqz	a0, a0
ffc00d60:	00008067          	ret

ffc00d64 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)>:
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
inline __attribute__((always_inline)) void stream_set_auto_cfg_header(uint32_t stream_id, uint32_t val) {
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, val);
}

inline __attribute__((always_inline)) uint32_t stream_phase_is_active(uint32_t stream_id) {
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc00d64:	001007b7          	lui	a5, 0x100
ffc00d68:	b4078793          	addi	a5, a5, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
ffc00d6c:	00f50533          	add	a0, a0, a5
ffc00d70:	00c51513          	slli	a0, a0, 0xc
ffc00d74:	08c52703          	lw	a4, 140(a0)
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:38
#endif


void read_phase_active(uint32_t stream_id, dram_input_stream_state_t* curr_dram_input_stream_state, uint32_t& phase_active, uint32_t& curr_phase_tiles_remaining_to_issue) {
  // reg read, flushed by subsequent use
  phase_active = stream_phase_is_active(stream_id) && !is_dummy_phase(stream_id);
ffc00d78:	00000793          	li	a5, 0
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
ffc00d7c:	00275713          	srli	a4, a4, 0x2
ffc00d80:	00177713          	andi	a4, a4, 1
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:38
ffc00d84:	00070a63          	beqz	a4, ffc00d98 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0x34>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
}

inline __attribute__((always_inline)) uint32_t stream_get_curr_phase(uint32_t stream_id) {
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
ffc00d88:	02c52783          	lw	a5, 44(a0)
is_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:438
    }
  }
}

inline bool is_dummy_phase(uint32_t stream_id) {
  uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
ffc00d8c:	00f7d793          	srli	a5, a5, 0xf
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:38
ffc00d90:	fe178793          	addi	a5, a5, -31
ffc00d94:	00f037b3          	snez	a5, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:38 (discriminator 6)
ffc00d98:	00f62023          	sw	a5, 0(a2)
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170 (discriminator 6)
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
ffc00d9c:	00452783          	lw	a5, 4(a0)
ffc00da0:	00010537          	lui	a0, 0x10
ffc00da4:	fff50513          	addi	a0, a0, -1 # ffff <dram_stream_intf.cc.5f8411f1+0x1bec>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62 (discriminator 6)
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc00da8:	00100837          	lui	a6, 0x100
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170 (discriminator 6)
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
ffc00dac:	00a7f7b3          	and	a5, a5, a0
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:39 (discriminator 6)
  curr_phase_tiles_remaining_to_issue = stream_src_endpoint_get_phase_tiles_count(stream_id);
ffc00db0:	00f6a023          	sw	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:40 (discriminator 6)
  uint32_t fork_index = 0;
ffc00db4:	03858593          	addi	a1, a1, 56
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:43 (discriminator 6)
  while (phase_active && curr_phase_tiles_remaining_to_issue) {
    uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    if (fork_stream_id == NULL_STREAM) {
ffc00db8:	0ff00e13          	li	t3, 255
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62 (discriminator 6)
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc00dbc:	b4080813          	addi	a6, a6, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:41
  while (phase_active && curr_phase_tiles_remaining_to_issue) {
ffc00dc0:	00062303          	lw	t1, 0(a2)
ffc00dc4:	06030063          	beqz	t1, ffc00e24 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0xc0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:41 (discriminator 1)
ffc00dc8:	0006a783          	lw	a5, 0(a3)
ffc00dcc:	04078c63          	beqz	a5, ffc00e24 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0xc0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:42
    uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
ffc00dd0:	0005c703          	lbu	a4, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:43
    if (fork_stream_id == NULL_STREAM) {
ffc00dd4:	05c70863          	beq	a4, t3, ffc00e24 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0xc0>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
ffc00dd8:	01070733          	add	a4, a4, a6
ffc00ddc:	00c71713          	slli	a4, a4, 0xc
ffc00de0:	08c72883          	lw	a7, 140(a4) # 408c <__trisc0_size+0x8c>
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:47
      break;
    }
    // reg read, flushed by use in loop condition
    phase_active &= stream_phase_is_active(fork_stream_id) && !is_dummy_phase(fork_stream_id);
ffc00de4:	00000793          	li	a5, 0
ffc00de8:	0048f893          	andi	a7, a7, 4
ffc00dec:	00088a63          	beqz	a7, ffc00e00 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0x9c>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
ffc00df0:	02c72783          	lw	a5, 44(a4)
is_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:438
  uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
ffc00df4:	00f7d793          	srli	a5, a5, 0xf
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:47
ffc00df8:	fe178793          	addi	a5, a5, -31
ffc00dfc:	00f037b3          	snez	a5, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:47 (discriminator 6)
ffc00e00:	0067f7b3          	and	a5, a5, t1
ffc00e04:	00f62023          	sw	a5, 0(a2)
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170 (discriminator 6)
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
ffc00e08:	00472783          	lw	a5, 4(a4)
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:49 (discriminator 6)
    uint32_t fork_phase_tiles_remaining_to_issue = stream_src_endpoint_get_phase_tiles_count(fork_stream_id);
    if (fork_phase_tiles_remaining_to_issue < curr_phase_tiles_remaining_to_issue)
ffc00e0c:	0006a703          	lw	a4, 0(a3)
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170 (discriminator 6)
ffc00e10:	00a7f7b3          	and	a5, a5, a0
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:49 (discriminator 6)
ffc00e14:	00e7f463          	bgeu	a5, a4, ffc00e1c <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0xb8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:50
      curr_phase_tiles_remaining_to_issue = fork_phase_tiles_remaining_to_issue;
ffc00e18:	00f6a023          	sw	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:51
    fork_index++;
ffc00e1c:	00158593          	addi	a1, a1, 1
ffc00e20:	fa1ff06f          	j	ffc00dc0 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0x5c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:53
  }
}
ffc00e24:	00008067          	ret

ffc00e28 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)>:
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:98
  }
}


void push_readdata_to_stream(dram_input_stream_state_t* curr_dram_input_stream_state, uint32_t stream_id, bool moves_raw_data,
                             uint32_t prev_data_rec_chunk_size_tiles, uint32_t prev_data_rec_chunk_size_bytes) {
ffc00e28:	fe010113          	addi	sp, sp, -32
ffc00e2c:	00812c23          	sw	s0, 24(sp)
ffc00e30:	00912a23          	sw	s1, 20(sp)
ffc00e34:	01212823          	sw	s2, 16(sp)
ffc00e38:	01312623          	sw	s3, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:113
    }

    uint16_t new_epoch_tiles_received = op_pack_tiles_ptr_add(operand_tiles_received, prev_data_rec_chunk_size_tiles);
    tiles_received_ptr[0] = new_epoch_tiles_received;
  } else {
    stream_signal_flushed_tiles(stream_id, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes/MEM_WORD_WIDTH);
ffc00e3c:	00475413          	srli	s0, a4, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:98
                             uint32_t prev_data_rec_chunk_size_tiles, uint32_t prev_data_rec_chunk_size_bytes) {
ffc00e40:	00112e23          	sw	ra, 28(sp)
ffc00e44:	01412423          	sw	s4, 8(sp)
ffc00e48:	01512223          	sw	s5, 4(sp)
ffc00e4c:	00050913          	mv	s2, a0
ffc00e50:	00060493          	mv	s1, a2
ffc00e54:	00058513          	mv	a0, a1
ffc00e58:	00068993          	mv	s3, a3
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:185
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
ffc00e5c:	00c41413          	slli	s0, s0, 0xc
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:99
  if (moves_raw_data) {
ffc00e60:	0a060063          	beqz	a2, ffc00f00 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0xd8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:100
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
ffc00e64:	05092783          	lw	a5, 80(s2)
ffc00e68:	0887aa03          	lw	s4, 136(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:101
    volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc00e6c:	e01ff0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147

  #endif
#endif

inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_operand_tiles_received_ptr(int operand) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc00e70:	dc1ff0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc00e74:	001007b7          	lui	a5, 0x100
ffc00e78:	b4078793          	addi	a5, a5, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
ffc00e7c:	00f50533          	add	a0, a0, a5
ffc00e80:	00c51513          	slli	a0, a0, 0xc
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:102
    uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
ffc00e84:	01052783          	lw	a5, 16(a0)
ffc00e88:	01079793          	slli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:106
    if (scatter_list_stream_id || hw_tilize) {
ffc00e8c:	008a5683          	lhu	a3, 8(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:104
    uint32_t hw_tilize = dram_io_info->hw_tilize;
ffc00e90:	01ba4703          	lbu	a4, 27(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:102
    uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
ffc00e94:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:106
    if (scatter_list_stream_id || hw_tilize) {
ffc00e98:	00069463          	bnez	a3, ffc00ea0 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0x78>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:106 (discriminator 1)
ffc00e9c:	00070463          	beqz	a4, ffc00ea4 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0x7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:107
      prev_data_rec_chunk_size_tiles = dram_io_info->dram_embeddings_row_tiles;
ffc00ea0:	018a5983          	lhu	s3, 24(s4)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
ffc00ea4:	013787b3          	add	a5, a5, s3
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:111
    tiles_received_ptr[0] = new_epoch_tiles_received;
ffc00ea8:	01079793          	slli	a5, a5, 0x10
ffc00eac:	0107d793          	srli	a5, a5, 0x10
ffc00eb0:	00f52823          	sw	a5, 16(a0)
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:185
ffc00eb4:	00100a37          	lui	s4, 0x100
ffc00eb8:	0089e433          	or	s0, s3, s0
ffc00ebc:	03890913          	addi	s2, s2, 56
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:122
#endif

  uint32_t fork_index = 0;
  while (true) {
    uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    if (fork_stream_id == NULL_STREAM) {
ffc00ec0:	0ff00a93          	li	s5, 255
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:185
ffc00ec4:	b40a0a13          	addi	s4, s4, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:121
    uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
ffc00ec8:	00094503          	lbu	a0, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:122
    if (fork_stream_id == NULL_STREAM) {
ffc00ecc:	07550063          	beq	a0, s5, ffc00f2c <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0x104>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:125
      break;
    }
    if (moves_raw_data) {
ffc00ed0:	04048663          	beqz	s1, ffc00f1c <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0xf4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:126
      volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(fork_stream_id));
ffc00ed4:	d99ff0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
ffc00ed8:	d59ff0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc00edc:	01450533          	add	a0, a0, s4
ffc00ee0:	00c51513          	slli	a0, a0, 0xc
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:127
      uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
ffc00ee4:	01052783          	lw	a5, 16(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
ffc00ee8:	00f987b3          	add	a5, s3, a5
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:129
      uint16_t new_epoch_tiles_received = op_pack_tiles_ptr_add(operand_tiles_received, prev_data_rec_chunk_size_tiles);
      tiles_received_ptr[0] = new_epoch_tiles_received;
ffc00eec:	01079793          	slli	a5, a5, 0x10
ffc00ef0:	0107d793          	srli	a5, a5, 0x10
ffc00ef4:	00f52823          	sw	a5, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:120
  while (true) {
ffc00ef8:	00190913          	addi	s2, s2, 1
ffc00efc:	fcdff06f          	j	ffc00ec8 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0xa0>
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:185
ffc00f00:	001005b7          	lui	a1, 0x100
ffc00f04:	b4058593          	addi	a1, a1, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
ffc00f08:	00b505b3          	add	a1, a0, a1
ffc00f0c:	00c59593          	slli	a1, a1, 0xc
ffc00f10:	0086e7b3          	or	a5, a3, s0
ffc00f14:	06f5ac23          	sw	a5, 120(a1)
ffc00f18:	f9dff06f          	j	ffc00eb4 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0x8c>
ffc00f1c:	01450533          	add	a0, a0, s4
ffc00f20:	00c51513          	slli	a0, a0, 0xc
ffc00f24:	06852c23          	sw	s0, 120(a0)
ffc00f28:	fd1ff06f          	j	ffc00ef8 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0xd0>
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:135
    } else {
      stream_signal_flushed_tiles(fork_stream_id, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes/MEM_WORD_WIDTH);
    }
    fork_index++;
  }
}
ffc00f2c:	01c12083          	lw	ra, 28(sp)
ffc00f30:	01812403          	lw	s0, 24(sp)
ffc00f34:	01412483          	lw	s1, 20(sp)
ffc00f38:	01012903          	lw	s2, 16(sp)
ffc00f3c:	00c12983          	lw	s3, 12(sp)
ffc00f40:	00812a03          	lw	s4, 8(sp)
ffc00f44:	00412a83          	lw	s5, 4(sp)
ffc00f48:	02010113          	addi	sp, sp, 32
ffc00f4c:	00008067          	ret

ffc00f50 <risc::record_timestamp_at_offset(unsigned long, unsigned long)>:
reg_read_barrier_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:127
    uint32_t data = p_reg[0];
ffc00f50:	ffb12737          	lui	a4, 0xffb12
ffc00f54:	1f072603          	lw	a2, 496(a4) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:128
    local_mem_barrier = data;
ffc00f58:	ffb007b7          	lui	a5, 0xffb00
ffc00f5c:	00c7a023          	sw	a2, 0(a5) # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:127
    uint32_t data = p_reg[0];
ffc00f60:	1f872683          	lw	a3, 504(a4)
risc::record_perf_value_at_offset(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:152
    if constexpr ((INTERMED_DUMP || PERF_DUMP_CONCURRENT) && (PERF_DUMP_LEVEL > 1)) {
        epoch_perf_scratch[offset] = event_id;
        epoch_perf_scratch[offset + 1] = event_value1;
        epoch_perf_scratch[offset + 2] = event_value2;
    } else {
        perf_buf_base[offset] = event_id;
ffc00f64:	00259593          	slli	a1, a1, 0x2
reg_read_barrier_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:128
    local_mem_barrier = data;
ffc00f68:	00d7a023          	sw	a3, 0(a5)
risc::record_perf_value_at_offset(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:152
ffc00f6c:	ffb007b7          	lui	a5, 0xffb00
ffc00f70:	0047a783          	lw	a5, 4(a5) # ffb00004 <TENSIX_MAILBOX_BASE+0xffc40004>
ffc00f74:	00b78733          	add	a4, a5, a1
ffc00f78:	00a72023          	sw	a0, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:153
        perf_buf_base[offset + 1] = event_value1;
ffc00f7c:	00458713          	addi	a4, a1, 4
ffc00f80:	00e78733          	add	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:154
        perf_buf_base[offset + 2] = event_value2;
ffc00f84:	00858593          	addi	a1, a1, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:153
        perf_buf_base[offset + 1] = event_value1;
ffc00f88:	00c72023          	sw	a2, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:154
        perf_buf_base[offset + 2] = event_value2;
ffc00f8c:	00b785b3          	add	a1, a5, a1
ffc00f90:	00d5a023          	sw	a3, 0(a1)
risc::record_timestamp_at_offset(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:234
  uint32_t high;
  low = reg_read_barrier_l1(RISCV_DEBUG_REG_WALL_CLOCK_L);
  high = reg_read_barrier_l1(RISCV_DEBUG_REG_WALL_CLOCK_H);
  record_perf_value_at_offset(event_id, low, high, offset);
  
}
ffc00f94:	00008067          	ret

ffc00f98 <stream_dram_write_ok(unsigned long)>:
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
ffc00f98:	001007b7          	lui	a5, 0x100
ffc00f9c:	b4078793          	addi	a5, a5, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
ffc00fa0:	00f50533          	add	a0, a0, a5
ffc00fa4:	00c51513          	slli	a0, a0, 0xc
ffc00fa8:	08c52783          	lw	a5, 140(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
ffc00fac:	3a452503          	lw	a0, 932(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
ffc00fb0:	0017f793          	andi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc00fb4:	00078863          	beqz	a5, ffc00fc4 <stream_dram_write_ok(unsigned long)+0x2c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
ffc00fb8:	01155513          	srli	a0, a0, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc00fbc:	00153513          	seqz	a0, a0
ffc00fc0:	00008067          	ret
stream_dram_write_ok(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
ffc00fc4:	00000513          	li	a0, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:496
  }
}

inline bool stream_dram_write_ok(uint32_t stream_id) {
  return stream_phase_advance_wait(stream_id);
}
ffc00fc8:	00008067          	ret

ffc00fcc <get_epoch_table_x(int, int)>:
get_epoch_table_x(int, int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:140
  if (my_y == 0 || my_y == 11 || my_y == 1 || my_y == 7 || my_y == 5 || my_y == 6) {
ffc00fcc:	00b00793          	li	a5, 11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:128
int get_epoch_table_x(int my_x, int my_y) {
ffc00fd0:	00050713          	mv	a4, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:140
  if (my_y == 0 || my_y == 11 || my_y == 1 || my_y == 7 || my_y == 5 || my_y == 6) {
ffc00fd4:	02b7e663          	bltu	a5, a1, ffc01000 <get_epoch_table_x(int, int)+0x34>
ffc00fd8:	000017b7          	lui	a5, 0x1
ffc00fdc:	8e378793          	addi	a5, a5, -1821 # 8e3 <__firmware_stack_size+0x513>
ffc00fe0:	00b7d5b3          	srl	a1, a5, a1
ffc00fe4:	0015f593          	andi	a1, a1, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:146
    epoch_x = 5;
ffc00fe8:	00500513          	li	a0, 5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:140
  if (my_y == 0 || my_y == 11 || my_y == 1 || my_y == 7 || my_y == 5 || my_y == 6) {
ffc00fec:	00058c63          	beqz	a1, ffc01004 <get_epoch_table_x(int, int)+0x38>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:141
    if (my_x >= 5)
ffc00ff0:	00400793          	li	a5, 4
ffc00ff4:	00e7c863          	blt	a5, a4, ffc01004 <get_epoch_table_x(int, int)+0x38>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:144
      epoch_x = 0;
ffc00ff8:	00000513          	li	a0, 0
ffc00ffc:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:146
    epoch_x = 5;
ffc01000:	00500513          	li	a0, 5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:151
}
ffc01004:	00008067          	ret

ffc01008 <risc::record_perf_value_and_check_overflow(unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
risc::record_perf_value_and_check_overflow(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:194
            record_perf_value(event_id, event_value);
        } else {
            switch_perf_buffers_and_record_event(event_id, event_value);
        }
    } else {
        if (perf_index + 1 < perf_end - 1) {
ffc01008:	89018793          	addi	a5, gp, -1904 # ffb00090 <risc::epoch_perf_en>
ffc0100c:	0047a703          	lw	a4, 4(a5)
ffc01010:	0087a683          	lw	a3, 8(a5)
ffc01014:	00170613          	addi	a2, a4, 1
ffc01018:	fff68693          	addi	a3, a3, -1
ffc0101c:	02d67663          	bgeu	a2, a3, ffc01048 <risc::record_perf_value_and_check_overflow(unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x40>
risc::record_perf_value(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:138
    perf_buf_base[perf_index] = event_id;
ffc01020:	ffb006b7          	lui	a3, 0xffb00
ffc01024:	0046a683          	lw	a3, 4(a3) # ffb00004 <TENSIX_MAILBOX_BASE+0xffc40004>
ffc01028:	00271613          	slli	a2, a4, 0x2
ffc0102c:	00c68833          	add	a6, a3, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:139
    perf_buf_base[perf_index + 1] = event_value;
ffc01030:	00460613          	addi	a2, a2, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:138
    perf_buf_base[perf_index] = event_id;
ffc01034:	00a82023          	sw	a0, 0(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:139
    perf_buf_base[perf_index + 1] = event_value;
ffc01038:	00c686b3          	add	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:140
    perf_index += 2;
ffc0103c:	00270713          	addi	a4, a4, 2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:139
    perf_buf_base[perf_index + 1] = event_value;
ffc01040:	00b6a023          	sw	a1, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:140
    perf_index += 2;
ffc01044:	00e7a223          	sw	a4, 4(a5)
risc::record_perf_value_and_check_overflow(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:198
            record_perf_value(event_id, event_value);
        }
    }
}
ffc01048:	00008067          	ret

ffc0104c <risc::record_timestamp(unsigned long) [clone .constprop.0]>:
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
ffc0104c:	ffb12737          	lui	a4, 0xffb12
risc::record_timestamp(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:199
void record_timestamp(uint32_t event_id) {
ffc01050:	ff010113          	addi	sp, sp, -16
ffc01054:	00812423          	sw	s0, 8(sp)
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
ffc01058:	1f072403          	lw	s0, 496(a4) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
ffc0105c:	ffb007b7          	lui	a5, 0xffb00
ffc01060:	0087a023          	sw	s0, 0(a5) # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
ffc01064:	1f872583          	lw	a1, 504(a4)
risc::record_timestamp(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:199
ffc01068:	00112623          	sw	ra, 12(sp)
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
ffc0106c:	00b7a023          	sw	a1, 0(a5)
risc::record_timestamp(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:204
  if (high != wall_clk_h) {
ffc01070:	89018793          	addi	a5, gp, -1904 # ffb00090 <risc::epoch_perf_en>
ffc01074:	00c7a703          	lw	a4, 12(a5)
ffc01078:	00e58863          	beq	a1, a4, ffc01088 <risc::record_timestamp(unsigned long) [clone .constprop.0]+0x3c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:207
    record_perf_value_and_check_overflow(perf_event::WALL_CLOCK_TOP_32B, high);
ffc0107c:	06000537          	lui	a0, 0x6000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:205
    wall_clk_h = high;
ffc01080:	00b7a623          	sw	a1, 12(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:207
    record_perf_value_and_check_overflow(perf_event::WALL_CLOCK_TOP_32B, high);
ffc01084:	f85ff0ef          	jal	ra, ffc01008 <risc::record_perf_value_and_check_overflow(unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:210
  record_perf_value_and_check_overflow(event_id, low);
ffc01088:	00040593          	mv	a1, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:211
}
ffc0108c:	00812403          	lw	s0, 8(sp)
ffc01090:	00c12083          	lw	ra, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:210
  record_perf_value_and_check_overflow(event_id, low);
ffc01094:	0f000537          	lui	a0, 0xf000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:211
}
ffc01098:	01010113          	addi	sp, sp, 16
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:210
  record_perf_value_and_check_overflow(event_id, low);
ffc0109c:	f6dff06f          	j	ffc01008 <risc::record_perf_value_and_check_overflow(unsigned long, unsigned long, unsigned long) [clone .constprop.0]>

ffc010a0 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]>:
clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:258
void clear_scatter_offsets(uint32_t& scatter_list_input_index_saved, dram_q_state_t tt_l1_ptr * next_dram_q_issue, dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state, 
                           epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info,
                           uint32_t dram_io_scatter_size, uint32_t& scatter_idx, uint32_t scatter_list_stream_id) {
  if (scatter_list_stream_id) {
    uint32_t scatter_list_input_index = scatter_list_input_index_saved;
    scatter_list_input_index += scatter_idx;
ffc010a0:	00072803          	lw	a6, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:256
  if (scatter_list_stream_id) {
ffc010a4:	04078a63          	beqz	a5, ffc010f8 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x58>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:260
    uint32_t scatter_list_indicies_per_tile = dram_io_info->scatter_list_indicies_per_tile;
    uint32_t scatter_list_indicies_per_input = dram_io_info->scatter_list_indicies_per_input;
ffc010a8:	00c62883          	lw	a7, 12(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:259
    uint32_t scatter_list_indicies_per_tile = dram_io_info->scatter_list_indicies_per_tile;
ffc010ac:	00a65603          	lhu	a2, 10(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:257
    uint32_t scatter_list_input_index = scatter_list_input_index_saved;
ffc010b0:	00052683          	lw	a3, 0(a0) # f000000 <substitutes.cpp.cd30c172+0xefe16ea>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:258
    scatter_list_input_index += scatter_idx;
ffc010b4:	010686b3          	add	a3, a3, a6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:261
    if (scatter_idx == scatter_list_indicies_per_tile || scatter_list_input_index == scatter_list_indicies_per_input) {
ffc010b8:	01060463          	beq	a2, a6, ffc010c0 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x20>
ffc010bc:	03169863          	bne	a3, a7, ffc010ec <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x4c>
stream_receiver_endpoint_single_clear_op(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:311
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_CLEAR_REG_INDEX, num_tiles);
ffc010c0:	00100637          	lui	a2, 0x100
ffc010c4:	b4060613          	addi	a2, a2, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
ffc010c8:	00c787b3          	add	a5, a5, a2
ffc010cc:	00c79793          	slli	a5, a5, 0xc
ffc010d0:	00100613          	li	a2, 1
ffc010d4:	04c7aa23          	sw	a2, 84(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:312
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_DATA_CLEAR_REG_INDEX, num_tiles);
ffc010d8:	04c7ac23          	sw	a2, 88(a5)
clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:263
      stream_receiver_endpoint_single_clear_op(scatter_list_stream_id, 1);
      scatter_idx = 0;
ffc010dc:	00072023          	sw	zero, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:264
      if (scatter_list_input_index == scatter_list_indicies_per_input) {
ffc010e0:	01169463          	bne	a3, a7, ffc010e8 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x48>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:265
        scatter_list_input_index = 0;
ffc010e4:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:267
      }
      scatter_list_input_index_saved = scatter_list_input_index;
ffc010e8:	00d52023          	sw	a3, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:273
    }
    next_dram_q_issue->scatter_offsets_index = scatter_idx;
  } else {
    if (scatter_idx >= dram_io_scatter_size)
      scatter_idx -= dram_io_scatter_size;
    next_dram_q_issue->scatter_offsets_index = scatter_idx;
ffc010ec:	00072783          	lw	a5, 0(a4)
ffc010f0:	00f5ae23          	sw	a5, 28(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:275
  }
}
ffc010f4:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:271
    if (scatter_idx >= dram_io_scatter_size)
ffc010f8:	fed86ae3          	bltu	a6, a3, ffc010ec <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x4c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:272
      scatter_idx -= dram_io_scatter_size;
ffc010fc:	40d80833          	sub	a6, a6, a3
ffc01100:	01072023          	sw	a6, 0(a4)
ffc01104:	fe9ff06f          	j	ffc010ec <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x4c>

ffc01108 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:328
    while (!ncrisc_noc_all_flushed(n));
  }
}

#ifdef RISC_B0_HW
inline void ncrisc_noc_fast_read_any_len(uint32_t noc, uint32_t cmd_buf, uint64_t src_addr, uint32_t dest_addr, uint32_t len_bytes, uint32_t transaction_id) {
ffc01108:	fe010113          	addi	sp, sp, -32
ffc0110c:	00812c23          	sw	s0, 24(sp)
ffc01110:	00912a23          	sw	s1, 20(sp)
ffc01114:	01212823          	sw	s2, 16(sp)
ffc01118:	01312623          	sw	s3, 12(sp)
ffc0111c:	01412423          	sw	s4, 8(sp)
ffc01120:	01512223          	sw	s5, 4(sp)
ffc01124:	00112e23          	sw	ra, 28(sp)
ffc01128:	00050413          	mv	s0, a0
ffc0112c:	00058a13          	mv	s4, a1
ffc01130:	00060993          	mv	s3, a2
ffc01134:	00068a93          	mv	s5, a3
ffc01138:	00070913          	mv	s2, a4
ffc0113c:	00078493          	mv	s1, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:329
  while (!ncrisc_noc_fast_read_ok(noc, cmd_buf));
ffc01140:	00300593          	li	a1, 3
ffc01144:	00040513          	mv	a0, s0
ffc01148:	bb1ff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc0114c:	fe050ae3          	beqz	a0, ffc01140 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x38>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc01150:	3fec88b7          	lui	a7, 0x3fec8
ffc01154:	09088893          	addi	a7, a7, 144 # 3fec8090 <substitutes.cpp.cd30c172+0x3fea977a>
ffc01158:	011488b3          	add	a7, s1, a7
ffc0115c:	01041813          	slli	a6, s0, 0x10
ffc01160:	00289893          	slli	a7, a7, 0x2
ffc01164:	010888b3          	add	a7, a7, a6
ncrisc_noc_fast_read(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:83
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc01168:	08000793          	li	a5, 128
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc0116c:	0008a703          	lw	a4, 0(a7)
ncrisc_noc_fast_read(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:83
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc01170:	fee7eee3          	bltu	a5, a4, ffc0116c <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x64>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:85
  if (len_bytes > 0) {
ffc01174:	04090e63          	beqz	s2, ffc011d0 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0xc8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc01178:	000017b7          	lui	a5, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc0117c:	ffb006b7          	lui	a3, 0xffb00
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc01180:	c0078793          	addi	a5, a5, -1024 # c00 <__firmware_stack_size+0x830>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc01184:	00241513          	slli	a0, s0, 0x2
ffc01188:	01468413          	addi	s0, a3, 20 # ffb00014 <TENSIX_MAILBOX_BASE+0xffc40014>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc0118c:	00f80833          	add	a6, a6, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc01190:	00a40433          	add	s0, s0, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:91
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
ffc01194:	ffb207b7          	lui	a5, 0xffb20
ffc01198:	00f80733          	add	a4, a6, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc0119c:	00042783          	lw	a5, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:91
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
ffc011a0:	01572623          	sw	s5, 12(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc011a4:	00f72823          	sw	a5, 16(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:93
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
ffc011a8:	000027b7          	lui	a5, 0x2
ffc011ac:	09078793          	addi	a5, a5, 144 # 2090 <__trisc1_size+0x90>
ffc011b0:	00f72e23          	sw	a5, 28(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:94
    ptr[NOC_TARG_ADDR_LO >> 2] = (uint32_t)src_addr;
ffc011b4:	01472023          	sw	s4, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:95
    ptr[NOC_TARG_ADDR_MID >> 2] = src_addr >> 32;
ffc011b8:	01372223          	sw	s3, 4(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:96
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
ffc011bc:	00a49493          	slli	s1, s1, 0xa
ffc011c0:	00972c23          	sw	s1, 24(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:97
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
ffc011c4:	03272023          	sw	s2, 32(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:98
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
ffc011c8:	00100793          	li	a5, 1
ffc011cc:	02f72423          	sw	a5, 40(a4)
ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:331
  ncrisc_noc_fast_read(noc, cmd_buf, src_addr, dest_addr, len_bytes, transaction_id); 
}
ffc011d0:	01c12083          	lw	ra, 28(sp)
ffc011d4:	01812403          	lw	s0, 24(sp)
ffc011d8:	01412483          	lw	s1, 20(sp)
ffc011dc:	01012903          	lw	s2, 16(sp)
ffc011e0:	00c12983          	lw	s3, 12(sp)
ffc011e4:	00812a03          	lw	s4, 8(sp)
ffc011e8:	00412a83          	lw	s5, 4(sp)
ffc011ec:	02010113          	addi	sp, sp, 32
ffc011f0:	00008067          	ret

ffc011f4 <risc_epoch_load(unsigned long long)>:
risc_epoch_load(unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:124
void risc_epoch_load(uint64_t dram_next_epoch_ptr) {
ffc011f4:	00058613          	mv	a2, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:127
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_next_epoch_ptr + dram_mem::address_map::EPOCH_RUNTIME_CONFIG_BASE, l1_mem::address_map::EPOCH_RUNTIME_CONFIG_BASE, epoch_size_bytes, NCRISC_RD_DEF_TRID);
ffc011f8:	0000e5b7          	lui	a1, 0xe
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:124
void risc_epoch_load(uint64_t dram_next_epoch_ptr) {
ffc011fc:	ff010113          	addi	sp, sp, -16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:127
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_next_epoch_ptr + dram_mem::address_map::EPOCH_RUNTIME_CONFIG_BASE, l1_mem::address_map::EPOCH_RUNTIME_CONFIG_BASE, epoch_size_bytes, NCRISC_RD_DEF_TRID);
ffc01200:	00b505b3          	add	a1, a0, a1
ffc01204:	00a5b533          	sltu	a0, a1, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:124
void risc_epoch_load(uint64_t dram_next_epoch_ptr) {
ffc01208:	00812423          	sw	s0, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:127
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_next_epoch_ptr + dram_mem::address_map::EPOCH_RUNTIME_CONFIG_BASE, l1_mem::address_map::EPOCH_RUNTIME_CONFIG_BASE, epoch_size_bytes, NCRISC_RD_DEF_TRID);
ffc0120c:	00c50633          	add	a2, a0, a2
ffc01210:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc01214:	00200793          	li	a5, 2
ffc01218:	00010737          	lui	a4, 0x10
ffc0121c:	000236b7          	lui	a3, 0x23
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:124
void risc_epoch_load(uint64_t dram_next_epoch_ptr) {
ffc01220:	00112623          	sw	ra, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:127
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_next_epoch_ptr + dram_mem::address_map::EPOCH_RUNTIME_CONFIG_BASE, l1_mem::address_map::EPOCH_RUNTIME_CONFIG_BASE, epoch_size_bytes, NCRISC_RD_DEF_TRID);
ffc01224:	ee5ff0ef          	jal	ra, ffc01108 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:128
  while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
ffc01228:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc0122c:	00200593          	li	a1, 2
ffc01230:	aa5ff0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc01234:	fe050ae3          	beqz	a0, ffc01228 <risc_epoch_load(unsigned long long)+0x34>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:129
  *MCAST_PACKER_OPT_EN = EPOCH_INFO_PTR->has_packer_mcast_opt;
ffc01238:	000237b7          	lui	a5, 0x23
ffc0123c:	3077c703          	lbu	a4, 775(a5) # 23307 <substitutes.cpp.cd30c172+0x49f1>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:131
}
ffc01240:	00c12083          	lw	ra, 12(sp)
ffc01244:	00812403          	lw	s0, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:129
  *MCAST_PACKER_OPT_EN = EPOCH_INFO_PTR->has_packer_mcast_opt;
ffc01248:	ffb437b7          	lui	a5, 0xffb43
ffc0124c:	3ee7aa23          	sw	a4, 1012(a5) # ffb433f4 <TENSIX_MAILBOX_BASE+0xffc833f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:131
}
ffc01250:	01010113          	addi	sp, sp, 16
ffc01254:	00008067          	ret

ffc01258 <risc_extra_overlay_blob_load(unsigned long long, unsigned long)>:
risc_extra_overlay_blob_load(unsigned long long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:133
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc01258:	00058813          	mv	a6, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:135
  uint64_t extra_blob_base_dram = dram_next_epoch_ptr + dram_mem::address_map::OVERLAY_BLOB_BASE + l1_mem::address_map::OVERLAY_BLOB_SIZE;
ffc0125c:	0001e5b7          	lui	a1, 0x1e
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:133
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc01260:	ff010113          	addi	sp, sp, -16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:135
  uint64_t extra_blob_base_dram = dram_next_epoch_ptr + dram_mem::address_map::OVERLAY_BLOB_BASE + l1_mem::address_map::OVERLAY_BLOB_SIZE;
ffc01264:	00b505b3          	add	a1, a0, a1
ffc01268:	00a5b533          	sltu	a0, a1, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:133
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc0126c:	00812423          	sw	s0, 8(sp)
ffc01270:	00060713          	mv	a4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:136
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, extra_blob_base_dram, l1_mem::address_map::OVERLAY_BLOB_BASE + l1_mem::address_map::OVERLAY_BLOB_SIZE, overlay_blob_extra_size, NCRISC_RD_DEF_TRID);
ffc01274:	01050633          	add	a2, a0, a6
ffc01278:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc0127c:	00200793          	li	a5, 2
ffc01280:	000336b7          	lui	a3, 0x33
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:133
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc01284:	00112623          	sw	ra, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:136
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, extra_blob_base_dram, l1_mem::address_map::OVERLAY_BLOB_BASE + l1_mem::address_map::OVERLAY_BLOB_SIZE, overlay_blob_extra_size, NCRISC_RD_DEF_TRID);
ffc01288:	e81ff0ef          	jal	ra, ffc01108 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:137
  while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
ffc0128c:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc01290:	00200593          	li	a1, 2
ffc01294:	a41ff0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc01298:	fe050ae3          	beqz	a0, ffc0128c <risc_extra_overlay_blob_load(unsigned long long, unsigned long)+0x34>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:139
}
ffc0129c:	00c12083          	lw	ra, 12(sp)
ffc012a0:	00812403          	lw	s0, 8(sp)
ffc012a4:	01010113          	addi	sp, sp, 16
ffc012a8:	00008067          	ret

ffc012ac <risc_kernels_load(unsigned long long)>:
risc_kernels_load(unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:144
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, kernels_address, l1_mem::address_map::TRISC_BASE, kernels_size_bytes, NCRISC_RD_START_TRID);
ffc012ac:	00058613          	mv	a2, a1
ffc012b0:	00050593          	mv	a1, a0
ffc012b4:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
ffc012b8:	00400793          	li	a5, 4
ffc012bc:	0000e737          	lui	a4, 0xe
ffc012c0:	0000d6b7          	lui	a3, 0xd
ffc012c4:	e45ff06f          	j	ffc01108 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>

ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>:
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc012c8:	3fec8337          	lui	t1, 0x3fec8
ffc012cc:	09030313          	addi	t1, t1, 144 # 3fec8090 <substitutes.cpp.cd30c172+0x3fea977a>
ffc012d0:	00688333          	add	t1, a7, t1
ffc012d4:	01051e13          	slli	t3, a0, 0x10
ffc012d8:	00231313          	slli	t1, t1, 0x2
ffc012dc:	01c30333          	add	t1, t1, t3
ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:166
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc012e0:	08000e93          	li	t4, 128
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc012e4:	00032f03          	lw	t5, 0(t1)
ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:166
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc012e8:	ffeeeee3          	bltu	t4, t5, ffc012e4 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x1c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:168
  if (len_bytes > 0) {
ffc012ec:	04078c63          	beqz	a5, ffc01344 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:178
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc012f0:	00a59593          	slli	a1, a1, 0xa
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:172
      NOC_CMD_STATIC_VC(vc) | 
ffc012f4:	00d81813          	slli	a6, a6, 0xd
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:178
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc012f8:	01c585b3          	add	a1, a1, t3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:180
    ptr[NOC_CTRL >> 2] = noc_cmd_field;
ffc012fc:	ffb20337          	lui	t1, 0xffb20
ffc01300:	00658e33          	add	t3, a1, t1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:169
    uint32_t noc_cmd_field =
ffc01304:	09286813          	ori	a6, a6, 146
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:180
    ptr[NOC_CTRL >> 2] = noc_cmd_field;
ffc01308:	010e2e23          	sw	a6, 28(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:181
    ptr[NOC_TARG_ADDR_LO >> 2] = src_addr;
ffc0130c:	00ce2023          	sw	a2, 0(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:182
    ptr[NOC_TARG_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc01310:	ffb00637          	lui	a2, 0xffb00
ffc01314:	00251813          	slli	a6, a0, 0x2
ffc01318:	01460513          	addi	a0, a2, 20 # ffb00014 <TENSIX_MAILBOX_BASE+0xffc40014>
ffc0131c:	01050533          	add	a0, a0, a6
ffc01320:	00052603          	lw	a2, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:185
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
ffc01324:	00a89893          	slli	a7, a7, 0xa
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:182
    ptr[NOC_TARG_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc01328:	00ce2223          	sw	a2, 4(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:183
    ptr[NOC_RET_ADDR_LO >> 2] = (uint32_t)dest_addr;
ffc0132c:	00de2623          	sw	a3, 12(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:184
    ptr[NOC_RET_ADDR_MID >> 2] = dest_addr >> 32;
ffc01330:	00ee2823          	sw	a4, 16(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:185
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
ffc01334:	011e2c23          	sw	a7, 24(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:186
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
ffc01338:	02fe2023          	sw	a5, 32(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:187
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
ffc0133c:	00100793          	li	a5, 1
ffc01340:	02fe2423          	sw	a5, 40(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:189
}
ffc01344:	00008067          	ret

ffc01348 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)>:
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:345
}


void __attribute__ ((noinline)) dram_input_stream_issue_scatter_read_indicies(bool hw_tilize, uint32_t input_noc, uint32_t dram_data_buf_fetch_rdptr_byte, uint32_t data_rec_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_tiles,
                                                                              uint32_t dram_io_scatter_chunk_size_bytes, uint32_t stream_dest_addr, volatile tt_uint64_t tt_l1_ptr * scatter_offsets, uint32_t& scatter_idx, uint32_t& scatter_loop_index,
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc01348:	f9010113          	addi	sp, sp, -112
ffc0134c:	06912223          	sw	s1, 100(sp)
ffc01350:	00078493          	mv	s1, a5
ffc01354:	07812783          	lw	a5, 120(sp)
ffc01358:	05412c23          	sw	s4, 88(sp)
ffc0135c:	00f12c23          	sw	a5, 24(sp)
ffc01360:	07c12783          	lw	a5, 124(sp)
ffc01364:	05512a23          	sw	s5, 84(sp)
ffc01368:	00f12e23          	sw	a5, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:356

    volatile uint32_t tt_l1_ptr * new_scatter_offsets = (volatile uint32_t tt_l1_ptr *)(scatter_offsets);
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
    scatter_idx++;
    if (scatter_offset_val == DRAM_SCATTER_LIST_INVALID) {
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc0136c:	84018a13          	addi	s4, gp, -1984 # ffb00040 <my_y>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:347
  uint32_t addr_with_offset = dram_data_buf_fetch_rdptr_byte + DRAM_BUF_DATA_OFFSET;
ffc01370:	02060793          	addi	a5, a2, 32
ffc01374:	00f12623          	sw	a5, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc01378:	84418a93          	addi	s5, gp, -1980 # ffb00044 <my_x>
ffc0137c:	014587b3          	add	a5, a1, s4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc01380:	05a12023          	sw	s10, 64(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc01384:	02f12023          	sw	a5, 32(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:362
      uint32_t bytes_left = dram_io_scatter_chunk_size_bytes;
      const uint32_t REPLICATE_VC = 0;
      while (bytes_left) {
        uint32_t trans_size_bytes = bytes_left >= ZERO_GRAD_CHUNK_SIZE_BYTES ? ZERO_GRAD_CHUNK_SIZE_BYTES : bytes_left;
        while (!ncrisc_noc_fast_write_ok(input_noc, NCRISC_WR_CMD_BUF));
        ncrisc_noc_fast_write(input_noc, NCRISC_WR_CMD_BUF,
ffc01388:	00002d37          	lui	s10, 0x2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc0138c:	015587b3          	add	a5, a1, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc01390:	05712623          	sw	s7, 76(sp)
ffc01394:	05912223          	sw	s9, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc01398:	02f12223          	sw	a5, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc0139c:	07012c83          	lw	s9, 112(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:362
        ncrisc_noc_fast_write(input_noc, NCRISC_WR_CMD_BUF,
ffc013a0:	100d0793          	addi	a5, s10, 256 # 2100 <__trisc1_size+0x100>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc013a4:	09412b83          	lw	s7, 148(sp)
ffc013a8:	06812423          	sw	s0, 104(sp)
ffc013ac:	07212023          	sw	s2, 96(sp)
ffc013b0:	05312e23          	sw	s3, 92(sp)
ffc013b4:	05612823          	sw	s6, 80(sp)
ffc013b8:	05812423          	sw	s8, 72(sp)
ffc013bc:	00080913          	mv	s2, a6
ffc013c0:	06112623          	sw	ra, 108(sp)
ffc013c4:	03b12e23          	sw	s11, 60(sp)
ffc013c8:	00050b13          	mv	s6, a0
ffc013cc:	00058413          	mv	s0, a1
ffc013d0:	00d12823          	sw	a3, 16(sp)
ffc013d4:	00e12a23          	sw	a4, 20(sp)
ffc013d8:	00088993          	mv	s3, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:348
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc013dc:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:346
  bool wait_for_zeros = false;
ffc013e0:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:362
        ncrisc_noc_fast_write(input_noc, NCRISC_WR_CMD_BUF,
ffc013e4:	02f12423          	sw	a5, 40(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:348 (discriminator 1)
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc013e8:	01012783          	lw	a5, 16(sp)
ffc013ec:	26fc7263          	bgeu	s8, a5, ffc01650 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x308>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:353
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
ffc013f0:	000ca703          	lw	a4, 0(s9)
ffc013f4:	00271793          	slli	a5, a4, 0x2
ffc013f8:	00f986b3          	add	a3, s3, a5
ffc013fc:	0006aa03          	lw	s4, 0(a3) # d000 <context_restore+0x7b0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:354
    scatter_idx++;
ffc01400:	00170713          	addi	a4, a4, 1 # e001 <context_restore+0x17b1>
ffc01404:	00eca023          	sw	a4, 0(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:355
    if (scatter_offset_val == DRAM_SCATTER_LIST_INVALID) {
ffc01408:	fff00713          	li	a4, -1
ffc0140c:	08ea1863          	bne	s4, a4, ffc0149c <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x154>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc01410:	02012783          	lw	a5, 32(sp)
ffc01414:	00090693          	mv	a3, s2
ffc01418:	0007c703          	lbu	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:357
      uint32_t bytes_left = dram_io_scatter_chunk_size_bytes;
ffc0141c:	00048d93          	mv	s11, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc01420:	00a71793          	slli	a5, a4, 0xa
ffc01424:	02412703          	lw	a4, 36(sp)
ffc01428:	00074703          	lbu	a4, 0(a4)
ffc0142c:	00471713          	slli	a4, a4, 0x4
ffc01430:	00e7ed33          	or	s10, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:359
      while (bytes_left) {
ffc01434:	1c0d8463          	beqz	s11, ffc015fc <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2b4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:360
        uint32_t trans_size_bytes = bytes_left >= ZERO_GRAD_CHUNK_SIZE_BYTES ? ZERO_GRAD_CHUNK_SIZE_BYTES : bytes_left;
ffc01438:	1ff00793          	li	a5, 511
ffc0143c:	20000a93          	li	s5, 512
ffc01440:	01b7e463          	bltu	a5, s11, ffc01448 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x100>
ffc01444:	000d8a93          	mv	s5, s11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:361
        while (!ncrisc_noc_fast_write_ok(input_noc, NCRISC_WR_CMD_BUF));
ffc01448:	00300593          	li	a1, 3
ffc0144c:	00040513          	mv	a0, s0
ffc01450:	02d12623          	sw	a3, 44(sp)
ffc01454:	8a5ff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc01458:	02c12683          	lw	a3, 44(sp)
ffc0145c:	fe0506e3          	beqz	a0, ffc01448 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x100>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:362
        ncrisc_noc_fast_write(input_noc, NCRISC_WR_CMD_BUF,
ffc01460:	02812603          	lw	a2, 40(sp)
ffc01464:	000d0713          	mv	a4, s10
ffc01468:	00300593          	li	a1, 3
ffc0146c:	00100893          	li	a7, 1
ffc01470:	00000813          	li	a6, 0
ffc01474:	000a8793          	mv	a5, s5
ffc01478:	00040513          	mv	a0, s0
ffc0147c:	e4dff0ef          	jal	ra, ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:367
                              l1_mem::address_map::ZEROS_BASE,
                              replicate_dest_addr,
                              trans_size_bytes,
                              REPLICATE_VC, false, false, 1, NCRISC_WR_LOCAL_TRID);
        replicate_dest_addr += trans_size_bytes;
ffc01480:	02c12683          	lw	a3, 44(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:368
        bytes_left -= trans_size_bytes;
ffc01484:	415d8db3          	sub	s11, s11, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:367
        replicate_dest_addr += trans_size_bytes;
ffc01488:	01568633          	add	a2, a3, s5
ffc0148c:	00d635b3          	sltu	a1, a2, a3
ffc01490:	01a58d33          	add	s10, a1, s10
ffc01494:	00060693          	mv	a3, a2
ffc01498:	f9dff06f          	j	ffc01434 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0xec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:350
    uint32_t scatter_offset_val_inc = 1;
ffc0149c:	00100d93          	li	s11, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:372
      }
      wait_for_zeros = true;
    } else {
      if (hw_tilize && scatter_loop_index > 0) {
ffc014a0:	040b0263          	beqz	s6, ffc014e4 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x19c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:372 (discriminator 1)
ffc014a4:	07412703          	lw	a4, 116(sp)
ffc014a8:	00072703          	lw	a4, 0(a4)
ffc014ac:	02070c63          	beqz	a4, ffc014e4 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x19c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:373
        uint32_t prev_scatter_offset_val = new_scatter_offsets[scatter_idx-2]; // -2 due to the increment above
ffc014b0:	ffc78793          	addi	a5, a5, -4
ffc014b4:	00f987b3          	add	a5, s3, a5
ffc014b8:	0007ad83          	lw	s11, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164
  return 0;
}

inline __attribute__((always_inline)) unsigned int mulsi3 (unsigned int a, unsigned int b)
{
  unsigned int r = 0;
ffc014bc:	00000793          	li	a5, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:374
        scatter_offset_val_inc = scatter_offset_val - prev_scatter_offset_val;
ffc014c0:	41ba0db3          	sub	s11, s4, s11
ffc014c4:	000d8693          	mv	a3, s11
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
  while (a)
    {
      if (a & 1)
ffc014c8:	00177613          	andi	a2, a4, 1
ffc014cc:	00060463          	beqz	a2, ffc014d4 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x18c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc014d0:	00d787b3          	add	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc014d4:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc014d8:	00169693          	slli	a3, a3, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc014dc:	fe0716e3          	bnez	a4, ffc014c8 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x180>
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:375
        scatter_offset_val += mulsi3(scatter_loop_index, scatter_offset_val_inc);
ffc014e0:	00fa0a33          	add	s4, s4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:350
    uint32_t scatter_offset_val_inc = 1;
ffc014e4:	08012683          	lw	a3, 128(sp)
ffc014e8:	000a0793          	mv	a5, s4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
ffc014ec:	00000713          	li	a4, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc014f0:	00078e63          	beqz	a5, ffc0150c <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x1c4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
ffc014f4:	0017f613          	andi	a2, a5, 1
ffc014f8:	00060463          	beqz	a2, ffc01500 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x1b8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc014fc:	00d70733          	add	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc01500:	0017d793          	srli	a5, a5, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc01504:	00169693          	slli	a3, a3, 0x1
ffc01508:	fe9ff06f          	j	ffc014f0 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x1a8>
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:377
      }
      dram_src_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes + tilize_row_col_offset);
ffc0150c:	08412783          	lw	a5, 132(sp)
ffc01510:	000ba603          	lw	a2, 0(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:378
      ncrisc_noc_fast_read_any_len(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_dest_addr, dram_io_scatter_chunk_size_bytes, transaction_id);
ffc01514:	01c12503          	lw	a0, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:377
      dram_src_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes + tilize_row_col_offset);
ffc01518:	00c78633          	add	a2, a5, a2
ffc0151c:	00c12783          	lw	a5, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:378
      ncrisc_noc_fast_read_any_len(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_dest_addr, dram_io_scatter_chunk_size_bytes, transaction_id);
ffc01520:	00090693          	mv	a3, s2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:377
      dram_src_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes + tilize_row_col_offset);
ffc01524:	00f60633          	add	a2, a2, a5
ffc01528:	01812783          	lw	a5, 24(sp)
ffc0152c:	00e60633          	add	a2, a2, a4
ffc01530:	00f605b3          	add	a1, a2, a5
ffc01534:	00c5b633          	sltu	a2, a1, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:378
      ncrisc_noc_fast_read_any_len(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_dest_addr, dram_io_scatter_chunk_size_bytes, transaction_id);
ffc01538:	09812783          	lw	a5, 152(sp)
ffc0153c:	00a60633          	add	a2, a2, a0
ffc01540:	00048713          	mv	a4, s1
ffc01544:	00040513          	mv	a0, s0
ffc01548:	03012623          	sw	a6, 44(sp)
ffc0154c:	bbdff0ef          	jal	ra, ffc01108 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
ffc01550:	02c12803          	lw	a6, 44(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:381
    }

    stream_dest_addr += dram_io_scatter_chunk_size_bytes;
ffc01554:	00990933          	add	s2, s2, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:383

    uint32_t row_idx = hw_tilize ? scatter_offset_val + scatter_offset_val_inc : scatter_idx;
ffc01558:	014d8db3          	add	s11, s11, s4
ffc0155c:	000b1463          	bnez	s6, ffc01564 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x21c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:383 (discriminator 2)
ffc01560:	000cad83          	lw	s11, 0(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:384 (discriminator 4)
    uint32_t prev_scatter_loop_index = scatter_loop_index;
ffc01564:	07412783          	lw	a5, 116(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:386 (discriminator 4)

    bool done_simpler_decompress_scatter_offsets = false;
ffc01568:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:384 (discriminator 4)
    uint32_t prev_scatter_loop_index = scatter_loop_index;
ffc0156c:	0007a603          	lw	a2, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:387 (discriminator 4)
    if (hw_tilize)
ffc01570:	040b0663          	beqz	s6, ffc015bc <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x274>
simpler_decompress_scatter_offsets(unsigned long volatile* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:299
  uint32_t num_iter = scatter_offsets[scatter_idx];
ffc01574:	000ca703          	lw	a4, 0(s9)
ffc01578:	00271713          	slli	a4, a4, 0x2
ffc0157c:	00e98733          	add	a4, s3, a4
ffc01580:	00072683          	lw	a3, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:300
  uint32_t magic_number = (num_iter & DRAM_IO_IS_SCATTER_LOOP) && (num_iter != DRAM_SCATTER_LIST_INVALID);
ffc01584:	80000737          	lui	a4, 0x80000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:301
  if (magic_number) {
ffc01588:	ffe74793          	xori	a5, a4, -2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:300
  uint32_t magic_number = (num_iter & DRAM_IO_IS_SCATTER_LOOP) && (num_iter != DRAM_SCATTER_LIST_INVALID);
ffc0158c:	00e68533          	add	a0, a3, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:301
  if (magic_number) {
ffc01590:	02a7e663          	bltu	a5, a0, ffc015bc <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x274>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:302
    num_iter = num_iter & ~DRAM_IO_IS_SCATTER_LOOP;
ffc01594:	fff74713          	not	a4, a4
ffc01598:	00e6f733          	and	a4, a3, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:303
    if (scatter_loop_index < num_iter) {
ffc0159c:	06e67663          	bgeu	a2, a4, ffc01608 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2c0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:304
      scatter_loop_index++;
ffc015a0:	07412703          	lw	a4, 116(sp)
ffc015a4:	00160793          	addi	a5, a2, 1
ffc015a8:	00f72023          	sw	a5, 0(a4) # 80000000 <TENSIX_MAILBOX_BASE+0x80140000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:305
      scatter_idx -= 1;
ffc015ac:	000ca783          	lw	a5, 0(s9)
ffc015b0:	fff78793          	addi	a5, a5, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:308
      scatter_idx += 1;
ffc015b4:	00fca023          	sw	a5, 0(s9)
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:310
    return true;
ffc015b8:	000b0593          	mv	a1, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:391
      done_simpler_decompress_scatter_offsets = simpler_decompress_scatter_offsets(new_scatter_offsets, scatter_idx, scatter_loop_index);

    // c_dim_loop_num_rows is always power of 2 so rather than doing a mod, we can just check if the lower bits are 0
    if ((row_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc015bc:	09012783          	lw	a5, 144(sp)
ffc015c0:	fff78793          	addi	a5, a5, -1
ffc015c4:	01b7fdb3          	and	s11, a5, s11
ffc015c8:	020d9463          	bnez	s11, ffc015f0 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:392
      c_dim_count++;
ffc015cc:	08812783          	lw	a5, 136(sp)
ffc015d0:	0007a703          	lw	a4, 0(a5)
ffc015d4:	00170713          	addi	a4, a4, 1
ffc015d8:	00e7a023          	sw	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:393
      if (c_dim_count >= c_dim_size) {
ffc015dc:	08c12783          	lw	a5, 140(sp)
ffc015e0:	02f76e63          	bltu	a4, a5, ffc0161c <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:395
        col_offset_bytes = 0;
        c_dim_count = 0;
ffc015e4:	08812783          	lw	a5, 136(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:394
        col_offset_bytes = 0;
ffc015e8:	000ba023          	sw	zero, 0(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:395
        c_dim_count = 0;
ffc015ec:	0007a023          	sw	zero, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:348 (discriminator 2)
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc015f0:	01412783          	lw	a5, 20(sp)
ffc015f4:	00fc0c33          	add	s8, s8, a5
ffc015f8:	df1ff06f          	j	ffc013e8 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0xa0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:350
    uint32_t scatter_offset_val_inc = 1;
ffc015fc:	00100d93          	li	s11, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:370
      wait_for_zeros = true;
ffc01600:	00100813          	li	a6, 1
ffc01604:	f51ff06f          	j	ffc01554 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x20c>
simpler_decompress_scatter_offsets(unsigned long volatile* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:307
      scatter_loop_index = 0;
ffc01608:	07412783          	lw	a5, 116(sp)
ffc0160c:	0007a023          	sw	zero, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:308
      scatter_idx += 1;
ffc01610:	000ca783          	lw	a5, 0(s9)
ffc01614:	00178793          	addi	a5, a5, 1
ffc01618:	f9dff06f          	j	ffc015b4 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x26c>
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:397
      } else {
        col_offset_bytes += dram_io_scatter_chunk_size_bytes;
ffc0161c:	000ba783          	lw	a5, 0(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:399
        if (done_simpler_decompress_scatter_offsets)
          scatter_idx -= (c_dim_loop_num_rows-prev_scatter_loop_index+1);
ffc01620:	09012703          	lw	a4, 144(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:397
        col_offset_bytes += dram_io_scatter_chunk_size_bytes;
ffc01624:	009787b3          	add	a5, a5, s1
ffc01628:	00fba023          	sw	a5, 0(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:398
        if (done_simpler_decompress_scatter_offsets)
ffc0162c:	000ca783          	lw	a5, 0(s9)
ffc01630:	00058c63          	beqz	a1, ffc01648 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x300>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:399
          scatter_idx -= (c_dim_loop_num_rows-prev_scatter_loop_index+1);
ffc01634:	fff74713          	not	a4, a4
ffc01638:	00c70733          	add	a4, a4, a2
ffc0163c:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:401
        else
          scatter_idx -= c_dim_loop_num_rows;
ffc01640:	00fca023          	sw	a5, 0(s9)
ffc01644:	fadff06f          	j	ffc015f0 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2a8>
ffc01648:	40e787b3          	sub	a5, a5, a4
ffc0164c:	ff5ff06f          	j	ffc01640 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2f8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:407
      }
    }

  }

  if (wait_for_zeros)
ffc01650:	00080a63          	beqz	a6, ffc01664 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x31c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:408
    while (!ncrisc_noc_nonposted_writes_flushed(input_noc, NCRISC_WR_LOCAL_TRID));
ffc01654:	00100593          	li	a1, 1
ffc01658:	00040513          	mv	a0, s0
ffc0165c:	e78ff0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc01660:	fe050ae3          	beqz	a0, ffc01654 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x30c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:409
}
ffc01664:	06c12083          	lw	ra, 108(sp)
ffc01668:	06812403          	lw	s0, 104(sp)
ffc0166c:	06412483          	lw	s1, 100(sp)
ffc01670:	06012903          	lw	s2, 96(sp)
ffc01674:	05c12983          	lw	s3, 92(sp)
ffc01678:	05812a03          	lw	s4, 88(sp)
ffc0167c:	05412a83          	lw	s5, 84(sp)
ffc01680:	05012b03          	lw	s6, 80(sp)
ffc01684:	04c12b83          	lw	s7, 76(sp)
ffc01688:	04812c03          	lw	s8, 72(sp)
ffc0168c:	04412c83          	lw	s9, 68(sp)
ffc01690:	04012d03          	lw	s10, 64(sp)
ffc01694:	03c12d83          	lw	s11, 60(sp)
ffc01698:	07010113          	addi	sp, sp, 112
ffc0169c:	00008067          	ret

ffc016a0 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]>:
update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:56
void update_dram_write_ptrs(bool is_ram, bool is_strided_write, uint32_t write_stride, uint32_t total_write_strides, uint32_t dram_wrptr_q_slots, uint32_t output_noc, uint32_t output_vc, 
ffc016a0:	fd010113          	addi	sp, sp, -48
ffc016a4:	00812c23          	sw	s0, 24(sp)
ffc016a8:	00912a23          	sw	s1, 20(sp)
ffc016ac:	01212823          	sw	s2, 16(sp)
ffc016b0:	01312623          	sw	s3, 12(sp)
ffc016b4:	01412423          	sw	s4, 8(sp)
ffc016b8:	01512223          	sw	s5, 4(sp)
ffc016bc:	01612023          	sw	s6, 0(sp)
ffc016c0:	00112e23          	sw	ra, 28(sp)
ffc016c4:	00058b13          	mv	s6, a1
ffc016c8:	03112623          	sw	a7, 44(sp)
ffc016cc:	00078913          	mv	s2, a5
ffc016d0:	03012a83          	lw	s5, 48(sp)
ffc016d4:	03412483          	lw	s1, 52(sp)
ffc016d8:	03812783          	lw	a5, 56(sp)
ffc016dc:	03c12983          	lw	s3, 60(sp)
ffc016e0:	00070593          	mv	a1, a4
ffc016e4:	00080a13          	mv	s4, a6
ffc016e8:	00088413          	mv	s0, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:58
  if (!is_strided_write || write_stride == total_write_strides-1) {
ffc016ec:	000b0663          	beqz	s6, ffc016f8 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x58>
ffc016f0:	fff68693          	addi	a3, a3, -1
ffc016f4:	0ec69263          	bne	a3, a2, ffc017d8 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x138>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:59
    l1_ptrs->wr_dram_wrptr = dram_wrptr_q_slots;
ffc016f8:	02b49223          	sh	a1, 36(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:60
    if (!is_ram) {
ffc016fc:	02051e63          	bnez	a0, ffc01738 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x98>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:61
      while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc01700:	00300593          	li	a1, 3
ffc01704:	00090513          	mv	a0, s2
ffc01708:	df0ff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc0170c:	fe050ae3          	beqz	a0, ffc01700 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x60>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:62
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_dram_wrptr)), dram_buf_addr+DRAM_BUF_WRPTR_OFFSET, 2,
ffc01710:	00440693          	addi	a3, s0, 4
ffc01714:	0086b733          	sltu	a4, a3, s0
ffc01718:	00000893          	li	a7, 0
ffc0171c:	000a0813          	mv	a6, s4
ffc01720:	00200793          	li	a5, 2
ffc01724:	01570733          	add	a4, a4, s5
ffc01728:	02448613          	addi	a2, s1, 36
ffc0172c:	00300593          	li	a1, 3
ffc01730:	00090513          	mv	a0, s2
ffc01734:	b95ff0ef          	jal	ra, ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:72
      l1_ptrs->wr_epoch_id_tag = DRAM_QUEUE_NO_EPOCH_CHECK;
ffc01738:	02049523          	sh	zero, 42(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:74
    if (is_strided_write) {
ffc0173c:	060b0a63          	beqz	s6, ffc017b0 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x110>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:76
      l1_ptrs->wr_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc01740:	013037b3          	snez	a5, s3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:75
      l1_ptrs->stride_wrap = next_stride_wrap;
ffc01744:	05348ba3          	sb	s3, 87(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:76
      l1_ptrs->wr_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc01748:	00e79793          	slli	a5, a5, 0xe
ffc0174c:	02f49623          	sh	a5, 44(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:77
      l1_ptrs->rd_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc01750:	00f49623          	sh	a5, 12(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:78
      while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc01754:	00300593          	li	a1, 3
ffc01758:	00090513          	mv	a0, s2
ffc0175c:	d9cff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc01760:	fe050ae3          	beqz	a0, ffc01754 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0xb4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:79
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_buf_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 4,
ffc01764:	00a40693          	addi	a3, s0, 10
ffc01768:	0086b733          	sltu	a4, a3, s0
ffc0176c:	00000893          	li	a7, 0
ffc01770:	000a0813          	mv	a6, s4
ffc01774:	00400793          	li	a5, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:83
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_buf_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
ffc01778:	01570733          	add	a4, a4, s5
ffc0177c:	02a48613          	addi	a2, s1, 42
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:94
}
ffc01780:	01812403          	lw	s0, 24(sp)
ffc01784:	01c12083          	lw	ra, 28(sp)
ffc01788:	01412483          	lw	s1, 20(sp)
ffc0178c:	00c12983          	lw	s3, 12(sp)
ffc01790:	00812a03          	lw	s4, 8(sp)
ffc01794:	00412a83          	lw	s5, 4(sp)
ffc01798:	00012b03          	lw	s6, 0(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:91
    ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc0179c:	00090513          	mv	a0, s2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:94
}
ffc017a0:	01012903          	lw	s2, 16(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:91
    ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc017a4:	00300593          	li	a1, 3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:94
}
ffc017a8:	03010113          	addi	sp, sp, 48
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:91
    ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc017ac:	b1dff06f          	j	ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:82
      while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc017b0:	00300593          	li	a1, 3
ffc017b4:	00090513          	mv	a0, s2
ffc017b8:	d40ff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc017bc:	fe050ae3          	beqz	a0, ffc017b0 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x110>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:83
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_buf_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
ffc017c0:	00a40693          	addi	a3, s0, 10
ffc017c4:	0086b733          	sltu	a4, a3, s0
ffc017c8:	00000893          	li	a7, 0
ffc017cc:	000a0813          	mv	a6, s4
ffc017d0:	00200793          	li	a5, 2
ffc017d4:	fa5ff06f          	j	ffc01778 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0xd8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:88
    l1_ptrs->wr_stride = curr_stride_wrap + write_stride + 1;
ffc017d8:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:87
    l1_ptrs->stride_wrap = next_stride_wrap;
ffc017dc:	05348ba3          	sb	s3, 87(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:88
    l1_ptrs->wr_stride = curr_stride_wrap + write_stride + 1;
ffc017e0:	00c78633          	add	a2, a5, a2
ffc017e4:	02c49623          	sh	a2, 44(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:89
    l1_ptrs->rd_stride = curr_stride_wrap + write_stride + 1;
ffc017e8:	00c49623          	sh	a2, 12(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:90
    while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc017ec:	00300593          	li	a1, 3
ffc017f0:	00090513          	mv	a0, s2
ffc017f4:	d04ff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc017f8:	fe050ae3          	beqz	a0, ffc017ec <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x14c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:91
    ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc017fc:	00c40693          	addi	a3, s0, 12
ffc01800:	0086b733          	sltu	a4, a3, s0
ffc01804:	00000893          	li	a7, 0
ffc01808:	000a0813          	mv	a6, s4
ffc0180c:	00200793          	li	a5, 2
ffc01810:	01570733          	add	a4, a4, s5
ffc01814:	02c48613          	addi	a2, s1, 44
ffc01818:	f69ff06f          	j	ffc01780 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0xe0>

ffc0181c <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]>:
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:198
#ifdef RISC_B0_HW
  stream_dram_write_init(dram_stream, dram_mem::address_map::DRAM_EACH_BANK_TILE_HEADER_BUFFER);
#endif
}

void risc_dram_write (uint32_t dram_writes_with_cmd_buf, uint32_t dram_stream, uint32_t noc, uint32_t src_addr, uint64_t dest_addr, uint32_t len_bytes, uint32_t len_tiles, uint32_t vc, uint32_t stream_msg_info_buf_addr, uint32_t transaction_id)
ffc0181c:	fc010113          	addi	sp, sp, -64
ffc01820:	02812c23          	sw	s0, 56(sp)
ffc01824:	02912a23          	sw	s1, 52(sp)
ffc01828:	03212823          	sw	s2, 48(sp)
ffc0182c:	03312623          	sw	s3, 44(sp)
ffc01830:	03412423          	sw	s4, 40(sp)
ffc01834:	03512223          	sw	s5, 36(sp)
ffc01838:	03612023          	sw	s6, 32(sp)
ffc0183c:	01712e23          	sw	s7, 28(sp)
ffc01840:	02112e23          	sw	ra, 60(sp)
ffc01844:	04012b83          	lw	s7, 64(sp)
ffc01848:	00060493          	mv	s1, a2
ffc0184c:	00068913          	mv	s2, a3
ffc01850:	00070a93          	mv	s5, a4
ffc01854:	00078b13          	mv	s6, a5
ffc01858:	00080413          	mv	s0, a6
ffc0185c:	00088a13          	mv	s4, a7
ffc01860:	00058993          	mv	s3, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:206
  bool do_dram_writes_with_cmd_buf = dram_writes_with_cmd_buf;
#else
  bool do_dram_writes_with_cmd_buf = true;
#endif

  if (do_dram_writes_with_cmd_buf) {
ffc01864:	0c050863          	beqz	a0, ffc01934 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x118>
ffc01868:	01068933          	add	s2, a3, a6
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:368

void __attribute__((section("code_l1"))) ncrisc_noc_fast_read_any_len_l1(uint32_t noc, uint32_t cmd_buf, uint64_t src_addr, uint32_t dest_addr, uint32_t len_bytes, uint32_t transaction_id);
#endif

inline void ncrisc_noc_fast_write_any_len(uint32_t noc, uint32_t cmd_buf, uint32_t src_addr, uint64_t dest_addr, uint32_t len_bytes, uint32_t vc, bool mcast, bool linked, uint32_t num_dests, uint32_t transaction_id) {
  while (len_bytes > NOC_MAX_BURST_SIZE) {
ffc0186c:	000029b7          	lui	s3, 0x2
ffc01870:	40890633          	sub	a2, s2, s0
ffc01874:	0689f063          	bgeu	s3, s0, ffc018d4 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0xb8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:369
    while (!ncrisc_noc_fast_write_ok(noc, cmd_buf));
ffc01878:	00300593          	li	a1, 3
ffc0187c:	00048513          	mv	a0, s1
ffc01880:	00c12623          	sw	a2, 12(sp)
ffc01884:	c74ff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc01888:	00c12603          	lw	a2, 12(sp)
ffc0188c:	fe0506e3          	beqz	a0, ffc01878 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x5c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:370
    ncrisc_noc_fast_write(noc, cmd_buf, src_addr, dest_addr, NOC_MAX_BURST_SIZE, vc, mcast, linked, num_dests, transaction_id);
ffc01890:	000a8693          	mv	a3, s5
ffc01894:	000b0713          	mv	a4, s6
ffc01898:	00048513          	mv	a0, s1
ffc0189c:	00000893          	li	a7, 0
ffc018a0:	000a0813          	mv	a6, s4
ffc018a4:	000027b7          	lui	a5, 0x2
ffc018a8:	00300593          	li	a1, 3
ffc018ac:	a1dff0ef          	jal	ra, ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:372
    src_addr += NOC_MAX_BURST_SIZE;
    dest_addr += NOC_MAX_BURST_SIZE;
ffc018b0:	013a87b3          	add	a5, s5, s3
ffc018b4:	0157b733          	sltu	a4, a5, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:374
    len_bytes -= NOC_MAX_BURST_SIZE;
    if (!ncrisc_noc_fast_write_ok(noc, cmd_buf)) {
ffc018b8:	00300593          	li	a1, 3
ffc018bc:	00048513          	mv	a0, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:372
    dest_addr += NOC_MAX_BURST_SIZE;
ffc018c0:	00078a93          	mv	s5, a5
ffc018c4:	01670b33          	add	s6, a4, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:373
    len_bytes -= NOC_MAX_BURST_SIZE;
ffc018c8:	41340433          	sub	s0, s0, s3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:374
    if (!ncrisc_noc_fast_write_ok(noc, cmd_buf)) {
ffc018cc:	c2cff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc018d0:	fa1ff06f          	j	ffc01870 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x54>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:379
      cmd_buf++;
      if (cmd_buf >= NCRISC_SMALL_TXN_CMD_BUF) cmd_buf = NCRISC_WR_CMD_BUF;
    }
  }
  while (!ncrisc_noc_fast_write_ok(noc, cmd_buf));
ffc018d4:	00300593          	li	a1, 3
ffc018d8:	00048513          	mv	a0, s1
ffc018dc:	00c12623          	sw	a2, 12(sp)
ffc018e0:	c18ff0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc018e4:	00c12603          	lw	a2, 12(sp)
ffc018e8:	fe0506e3          	beqz	a0, ffc018d4 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0xb8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
  ncrisc_noc_fast_write(noc, cmd_buf, src_addr, dest_addr, len_bytes, vc, mcast, linked, num_dests, transaction_id);
ffc018ec:	00040793          	mv	a5, s0
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:212
    ncrisc_noc_fast_write_any_len(noc, NCRISC_WR_CMD_BUF, src_addr, dest_addr, len_bytes, vc, false, false, 1, transaction_id);
  } else {
    while (!stream_dram_write_ok(dram_stream));
    stream_dram_write(dram_stream, noc, src_addr, dest_addr, len_bytes, len_tiles, vc, stream_msg_info_buf_addr);
  }
}
ffc018f0:	03812403          	lw	s0, 56(sp)
ffc018f4:	03c12083          	lw	ra, 60(sp)
ffc018f8:	03012903          	lw	s2, 48(sp)
ffc018fc:	02c12983          	lw	s3, 44(sp)
ffc01900:	01c12b83          	lw	s7, 28(sp)
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
ffc01904:	000a0813          	mv	a6, s4
ffc01908:	000a8693          	mv	a3, s5
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:212
ffc0190c:	02812a03          	lw	s4, 40(sp)
ffc01910:	02412a83          	lw	s5, 36(sp)
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
ffc01914:	000b0713          	mv	a4, s6
ffc01918:	00048513          	mv	a0, s1
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:212
ffc0191c:	02012b03          	lw	s6, 32(sp)
ffc01920:	03412483          	lw	s1, 52(sp)
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
ffc01924:	00000893          	li	a7, 0
ffc01928:	00300593          	li	a1, 3
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:212
ffc0192c:	04010113          	addi	sp, sp, 64
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
ffc01930:	999ff06f          	j	ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:209
    while (!stream_dram_write_ok(dram_stream));
ffc01934:	00098513          	mv	a0, s3
ffc01938:	e60ff0ef          	jal	ra, ffc00f98 <stream_dram_write_ok(unsigned long)>
ffc0193c:	fe050ce3          	beqz	a0, ffc01934 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x118>
stream_dram_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:460
  if (len_bytes > 0) {
ffc01940:	0a040863          	beqz	s0, ffc019f0 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x1d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:463
    NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, 1 << CURR_PHASE_NUM_MSGS);
ffc01944:	001005b7          	lui	a1, 0x100
ffc01948:	b4058593          	addi	a1, a1, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
ffc0194c:	00b985b3          	add	a1, s3, a1
ffc01950:	00c59593          	slli	a1, a1, 0xc
ffc01954:	08058793          	addi	a5, a1, 128
ffc01958:	00001737          	lui	a4, 0x1
ffc0195c:	00e7a823          	sw	a4, 16(a5) # 2010 <__trisc1_size+0x10>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:465
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX, dest_addr >> NOC_ADDR_LOCAL_BITS);
ffc01960:	004b5793          	srli	a5, s6, 0x4
ffc01964:	00f5a423          	sw	a5, 8(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:466
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_BUF_START_HI_REG_INDEX, (dest_buf_addr/MEM_WORD_WIDTH) >> MEM_WORD_ADDR_WIDTH);
ffc01968:	015ad713          	srli	a4, s5, 0x15
ffc0196c:	38058693          	addi	a3, a1, 896
ffc01970:	04e6a423          	sw	a4, 72(a3)
ffc01974:	004ad793          	srli	a5, s5, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:467
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_BUF_START_REG_INDEX, dest_buf_addr/MEM_WORD_WIDTH);
ffc01978:	00f5a623          	sw	a5, 12(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc0197c:	00100713          	li	a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:468
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX, len_bytes/MEM_WORD_WIDTH);
ffc01980:	00445413          	srli	s0, s0, 0x4
ffc01984:	0085a823          	sw	s0, 16(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc01988:	409707b3          	sub	a5, a4, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:470
    NOC_STREAM_WRITE_REG(stream_id, STREAM_BUF_START_REG_INDEX, src_addr/MEM_WORD_WIDTH);
ffc0198c:	00495913          	srli	s2, s2, 0x4
ffc01990:	0125ac23          	sw	s2, 24(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc01994:	00279793          	slli	a5, a5, 0x2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:478
                            (1 << DEST_DATA_BUF_NO_FLOW_CTRL) | (vc << UNICAST_VC_REG) | (3 << REG_UPDATE_VC_REG);
ffc01998:	012a1893          	slli	a7, s4, 0x12
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:471
    NOC_STREAM_WRITE_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX, len_bytes/MEM_WORD_WIDTH);
ffc0199c:	0085ae23          	sw	s0, 28(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:478
                            (1 << DEST_DATA_BUF_NO_FLOW_CTRL) | (vc << UNICAST_VC_REG) | (3 << REG_UPDATE_VC_REG);
ffc019a0:	0117e8b3          	or	a7, a5, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc019a4:	00149493          	slli	s1, s1, 0x1
ffc019a8:	0060b7b7          	lui	a5, 0x60b
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:472
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX, tile_header_buf_addr_word);
ffc019ac:	0375a023          	sw	s7, 32(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:478
                            (1 << DEST_DATA_BUF_NO_FLOW_CTRL) | (vc << UNICAST_VC_REG) | (3 << REG_UPDATE_VC_REG);
ffc019b0:	0098e4b3          	or	s1, a7, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc019b4:	51078793          	addi	a5, a5, 1296 # 60b510 <substitutes.cpp.cd30c172+0x5ecbfa>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:473
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, tile_header_buf_addr_word);
ffc019b8:	0775a423          	sw	s7, 104(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc019bc:	00f4e4b3          	or	s1, s1, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:479
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, misc_cfg_reg);
ffc019c0:	0295a423          	sw	s1, 40(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:481
    NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_ADVANCE_REG_INDEX, 1);
ffc019c4:	06e5a623          	sw	a4, 108(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:486
    } while (src_ready_state != 4); // SRC_READY_WAIT_ALL_DESTS
ffc019c8:	00400713          	li	a4, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:485
      src_ready_state = (NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+8) >> 4) & 0x7;
ffc019cc:	3a05a783          	lw	a5, 928(a1)
ffc019d0:	0047d793          	srli	a5, a5, 0x4
ffc019d4:	0077f793          	andi	a5, a5, 7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:486
    } while (src_ready_state != 4); // SRC_READY_WAIT_ALL_DESTS
ffc019d8:	fee79ae3          	bne	a5, a4, ffc019cc <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x1b0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:488
    NOC_STREAM_WRITE_REG(stream_id, STREAM_DEST_PHASE_READY_UPDATE_REG_INDEX, 1<<PHASE_READY_TWO_WAY_RESP);
ffc019dc:	080007b7          	lui	a5, 0x8000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:490
    NOC_STREAM_WRITE_REG(stream_id, STREAM_SOURCE_ENDPOINT_NEW_MSG_INFO_REG_INDEX, ((src_addr/MEM_WORD_WIDTH) << SOURCE_ENDPOINT_NEW_MSG_ADDR) | ((len_bytes/MEM_WORD_WIDTH) << SOURCE_ENDPOINT_NEW_MSG_SIZE));
ffc019e0:	01141413          	slli	s0, s0, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:488
    NOC_STREAM_WRITE_REG(stream_id, STREAM_DEST_PHASE_READY_UPDATE_REG_INDEX, 1<<PHASE_READY_TWO_WAY_RESP);
ffc019e4:	08f5a023          	sw	a5, 128(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:490
    NOC_STREAM_WRITE_REG(stream_id, STREAM_SOURCE_ENDPOINT_NEW_MSG_INFO_REG_INDEX, ((src_addr/MEM_WORD_WIDTH) << SOURCE_ENDPOINT_NEW_MSG_ADDR) | ((len_bytes/MEM_WORD_WIDTH) << SOURCE_ENDPOINT_NEW_MSG_SIZE));
ffc019e8:	01246433          	or	s0, s0, s2
ffc019ec:	0685aa23          	sw	s0, 116(a1)
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:212
}
ffc019f0:	03c12083          	lw	ra, 60(sp)
ffc019f4:	03812403          	lw	s0, 56(sp)
ffc019f8:	03412483          	lw	s1, 52(sp)
ffc019fc:	03012903          	lw	s2, 48(sp)
ffc01a00:	02c12983          	lw	s3, 44(sp)
ffc01a04:	02812a03          	lw	s4, 40(sp)
ffc01a08:	02412a83          	lw	s5, 36(sp)
ffc01a0c:	02012b03          	lw	s6, 32(sp)
ffc01a10:	01c12b83          	lw	s7, 28(sp)
ffc01a14:	04010113          	addi	sp, sp, 64
ffc01a18:	00008067          	ret

ffc01a1c <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:411

void dram_output_stream_issue_scatter_write_indicies(uint32_t output_noc, uint32_t output_vc, uint32_t dram_data_buf_wr_offset_byte, uint32_t data_send_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_tiles,
ffc01a1c:	fa010113          	addi	sp, sp, -96
ffc01a20:	04812c23          	sw	s0, 88(sp)
ffc01a24:	00078413          	mv	s0, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:429
    risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_src_addr, dram_dst_addr_w_offset, dram_io_scatter_chunk_size_bytes, dram_io_scatter_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);

    stream_src_addr += dram_io_scatter_chunk_size_bytes;

    // c_dim_loop_num_rows is always power of 2 so rather than doing a mod, we can just check if the lower bits are 0
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc01a28:	07c12783          	lw	a5, 124(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:411
void dram_output_stream_issue_scatter_write_indicies(uint32_t output_noc, uint32_t output_vc, uint32_t dram_data_buf_wr_offset_byte, uint32_t data_send_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_tiles,
ffc01a2c:	04912a23          	sw	s1, 84(sp)
ffc01a30:	05212823          	sw	s2, 80(sp)
ffc01a34:	03712e23          	sw	s7, 60(sp)
ffc01a38:	03b12623          	sw	s11, 44(sp)
ffc01a3c:	06012483          	lw	s1, 96(sp)
ffc01a40:	06812b83          	lw	s7, 104(sp)
ffc01a44:	06c12e83          	lw	t4, 108(sp)
ffc01a48:	07412d83          	lw	s11, 116(sp)
ffc01a4c:	08012903          	lw	s2, 128(sp)
ffc01a50:	05312623          	sw	s3, 76(sp)
ffc01a54:	05412423          	sw	s4, 72(sp)
ffc01a58:	05512223          	sw	s5, 68(sp)
ffc01a5c:	05612023          	sw	s6, 64(sp)
ffc01a60:	03812c23          	sw	s8, 56(sp)
ffc01a64:	03912a23          	sw	s9, 52(sp)
ffc01a68:	03a12823          	sw	s10, 48(sp)
ffc01a6c:	00068c93          	mv	s9, a3
ffc01a70:	04112e23          	sw	ra, 92(sp)
ffc01a74:	00050b13          	mv	s6, a0
ffc01a78:	00058c13          	mv	s8, a1
ffc01a7c:	00070a13          	mv	s4, a4
ffc01a80:	00080693          	mv	a3, a6
ffc01a84:	00088d13          	mv	s10, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:415
  uint32_t addr_with_offset = dram_data_buf_wr_offset_byte + DRAM_BUF_DATA_OFFSET;
ffc01a88:	02060a93          	addi	s5, a2, 32
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:416
  for (uint32_t scatter_tile = 0; scatter_tile < data_send_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc01a8c:	00000993          	li	s3, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:429
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc01a90:	fff78f13          	addi	t5, a5, -1 # 7ffffff <substitutes.cpp.cd30c172+0x7fe16e9>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:416
  for (uint32_t scatter_tile = 0; scatter_tile < data_send_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc01a94:	0f99f263          	bgeu	s3, s9, ffc01b78 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x15c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:420
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
ffc01a98:	0004a783          	lw	a5, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:421
    scatter_idx++;
ffc01a9c:	07012603          	lw	a2, 112(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:420
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
ffc01aa0:	00279713          	slli	a4, a5, 0x2
ffc01aa4:	00ed0733          	add	a4, s10, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:421
    scatter_idx++;
ffc01aa8:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:420
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
ffc01aac:	00072703          	lw	a4, 0(a4) # 1000 <__firmware_stack_size+0xc30>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:421
    scatter_idx++;
ffc01ab0:	00f4a023          	sw	a5, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
ffc01ab4:	00000793          	li	a5, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc01ab8:	00070e63          	beqz	a4, ffc01ad4 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0xb8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
ffc01abc:	00177593          	andi	a1, a4, 1
ffc01ac0:	00058463          	beqz	a1, ffc01ac8 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0xac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc01ac4:	00c787b3          	add	a5, a5, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc01ac8:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc01acc:	00161613          	slli	a2, a2, 0x1
ffc01ad0:	fe9ff06f          	j	ffc01ab8 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x9c>
dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:423
    dram_dst_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes);
ffc01ad4:	00092303          	lw	t1, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:424
    risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_src_addr, dram_dst_addr_w_offset, dram_io_scatter_chunk_size_bytes, dram_io_scatter_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);
ffc01ad8:	08c12583          	lw	a1, 140(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:423
    dram_dst_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes);
ffc01adc:	006a8333          	add	t1, s5, t1
ffc01ae0:	00f30333          	add	t1, t1, a5
ffc01ae4:	01730733          	add	a4, t1, s7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:424
    risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_src_addr, dram_dst_addr_w_offset, dram_io_scatter_chunk_size_bytes, dram_io_scatter_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);
ffc01ae8:	08412783          	lw	a5, 132(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:423
    dram_dst_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes);
ffc01aec:	00673333          	sltu	t1, a4, t1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:424
    risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_src_addr, dram_dst_addr_w_offset, dram_io_scatter_chunk_size_bytes, dram_io_scatter_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);
ffc01af0:	08812503          	lw	a0, 136(sp)
ffc01af4:	00f12023          	sw	a5, 0(sp)
ffc01af8:	000c0893          	mv	a7, s8
ffc01afc:	01d307b3          	add	a5, t1, t4
ffc01b00:	00040813          	mv	a6, s0
ffc01b04:	000b0613          	mv	a2, s6
ffc01b08:	01e12e23          	sw	t5, 28(sp)
ffc01b0c:	01d12c23          	sw	t4, 24(sp)
ffc01b10:	00d12a23          	sw	a3, 20(sp)
ffc01b14:	d09ff0ef          	jal	ra, ffc0181c <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:429
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc01b18:	0004a783          	lw	a5, 0(s1)
ffc01b1c:	01c12f03          	lw	t5, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:426
    stream_src_addr += dram_io_scatter_chunk_size_bytes;
ffc01b20:	01412683          	lw	a3, 20(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:429
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc01b24:	00ff77b3          	and	a5, t5, a5
ffc01b28:	01812e83          	lw	t4, 24(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:426
    stream_src_addr += dram_io_scatter_chunk_size_bytes;
ffc01b2c:	008686b3          	add	a3, a3, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:429
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc01b30:	02079063          	bnez	a5, ffc01b50 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x134>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:430
      c_dim_count++;
ffc01b34:	000da783          	lw	a5, 0(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:431
      if (c_dim_count >= c_dim_size) {
ffc01b38:	07812703          	lw	a4, 120(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:430
      c_dim_count++;
ffc01b3c:	00178793          	addi	a5, a5, 1
ffc01b40:	00fda023          	sw	a5, 0(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:431
      if (c_dim_count >= c_dim_size) {
ffc01b44:	00e7ea63          	bltu	a5, a4, ffc01b58 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x13c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:432
        col_offset_bytes = 0;
ffc01b48:	00092023          	sw	zero, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:433
        c_dim_count = 0;
ffc01b4c:	000da023          	sw	zero, 0(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:416
  for (uint32_t scatter_tile = 0; scatter_tile < data_send_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc01b50:	014989b3          	add	s3, s3, s4
ffc01b54:	f41ff06f          	j	ffc01a94 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x78>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:435
      } else {
        col_offset_bytes += dram_io_scatter_chunk_size_bytes;
ffc01b58:	00092783          	lw	a5, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:436
        scatter_idx -= c_dim_loop_num_rows;
ffc01b5c:	07c12703          	lw	a4, 124(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:435
        col_offset_bytes += dram_io_scatter_chunk_size_bytes;
ffc01b60:	008787b3          	add	a5, a5, s0
ffc01b64:	00f92023          	sw	a5, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:436
        scatter_idx -= c_dim_loop_num_rows;
ffc01b68:	0004a783          	lw	a5, 0(s1)
ffc01b6c:	40e787b3          	sub	a5, a5, a4
ffc01b70:	00f4a023          	sw	a5, 0(s1)
ffc01b74:	fddff06f          	j	ffc01b50 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x134>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:440
      }
    }
  }
}
ffc01b78:	05c12083          	lw	ra, 92(sp)
ffc01b7c:	05812403          	lw	s0, 88(sp)
ffc01b80:	05412483          	lw	s1, 84(sp)
ffc01b84:	05012903          	lw	s2, 80(sp)
ffc01b88:	04c12983          	lw	s3, 76(sp)
ffc01b8c:	04812a03          	lw	s4, 72(sp)
ffc01b90:	04412a83          	lw	s5, 68(sp)
ffc01b94:	04012b03          	lw	s6, 64(sp)
ffc01b98:	03c12b83          	lw	s7, 60(sp)
ffc01b9c:	03812c03          	lw	s8, 56(sp)
ffc01ba0:	03412c83          	lw	s9, 52(sp)
ffc01ba4:	03012d03          	lw	s10, 48(sp)
ffc01ba8:	02c12d83          	lw	s11, 44(sp)
ffc01bac:	06010113          	addi	sp, sp, 96
ffc01bb0:	00008067          	ret

ffc01bb4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]>:
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1776
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_INIT, risc::PROLOGUE_END_OFFSET);
#endif
}


void risc_dram_stream_handler_loop(
ffc01bb4:	ee010113          	addi	sp, sp, -288
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1793
#endif
) {

#ifdef PERF_DUMP
  uint32_t perf_spill_check_cnt = 1;
  risc::record_timestamp_at_offset(risc::perf_event::STREAM_HANDLER_LOOP, risc::STREAM_HANDLER_START_OFFSET);
ffc01bb8:	00700593          	li	a1, 7
ffc01bbc:	02000537          	lui	a0, 0x2000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1776
void risc_dram_stream_handler_loop(
ffc01bc0:	0f712e23          	sw	s7, 252(sp)
ffc01bc4:	10112e23          	sw	ra, 284(sp)
ffc01bc8:	10812c23          	sw	s0, 280(sp)
ffc01bcc:	10912a23          	sw	s1, 276(sp)
ffc01bd0:	11212823          	sw	s2, 272(sp)
ffc01bd4:	11312623          	sw	s3, 268(sp)
ffc01bd8:	11412423          	sw	s4, 264(sp)
ffc01bdc:	11512223          	sw	s5, 260(sp)
ffc01be0:	11612023          	sw	s6, 256(sp)
ffc01be4:	0f812c23          	sw	s8, 248(sp)
ffc01be8:	0f912a23          	sw	s9, 244(sp)
ffc01bec:	0fa12823          	sw	s10, 240(sp)
ffc01bf0:	0fb12623          	sw	s11, 236(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1793
  risc::record_timestamp_at_offset(risc::perf_event::STREAM_HANDLER_LOOP, risc::STREAM_HANDLER_START_OFFSET);
ffc01bf4:	b5cff0ef          	jal	ra, ffc00f50 <risc::record_timestamp_at_offset(unsigned long, unsigned long)>
ffc01bf8:	ffb01737          	lui	a4, 0xffb01
ffc01bfc:	47070713          	addi	a4, a4, 1136 # ffb01470 <TENSIX_MAILBOX_BASE+0xffc41470>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1795
#endif
  uint32_t dram_ptr_update_cnt = 1; // I.e. dont check immediately since we checked in prologue
ffc01c00:	00100793          	li	a5, 1
ffc01c04:	02e12c23          	sw	a4, 56(sp)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
ffc01c08:	00100737          	lui	a4, 0x100
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1795
ffc01c0c:	02f12823          	sw	a5, 48(sp)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
ffc01c10:	b4070b93          	addi	s7, a4, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
risc_streams_kernels_done():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:97
  if (!RISC_EPOCH_INFO_PTR->all_streams_and_kernels_done)
ffc01c14:	00023737          	lui	a4, 0x23
ffc01c18:	08070713          	addi	a4, a4, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
ffc01c1c:	00e74703          	lbu	a4, 14(a4)
ffc01c20:	c7018a13          	addi	s4, gp, -912 # ffb00470 <num_active_streams>
ffc01c24:	06070863          	beqz	a4, ffc01c94 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:104
      i < num_dram_input_streams;
ffc01c28:	03812703          	lw	a4, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:103
  for (uint32_t i = 0;
ffc01c2c:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:104
      i < num_dram_input_streams;
ffc01c30:	b4872603          	lw	a2, -1208(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:101
  volatile dram_input_stream_state_t* curr_dram_input_stream_state = dram_input_stream_state;
ffc01c34:	5a8a0713          	addi	a4, s4, 1448
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:104
      i < num_dram_input_streams;
ffc01c38:	02d60063          	beq	a2, a3, ffc01c58 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:106
    if (curr_dram_input_stream_state->epoch_q_slots_remaining)
ffc01c3c:	01872583          	lw	a1, 24(a4)
ffc01c40:	04059263          	bnez	a1, ffc01c84 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:103
  for (uint32_t i = 0;
ffc01c44:	00168693          	addi	a3, a3, 1
ffc01c48:	05470713          	addi	a4, a4, 84
ffc01c4c:	fedff06f          	j	ffc01c38 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x84>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1814

    RISC_POST_STATUS(0x11111111);

#ifdef PERF_DUMP
    bool check_dram_spill = (perf_spill_check_cnt == 0);
    perf_spill_check_cnt = (perf_spill_check_cnt + 1) & risc::PERF_SPILL_CHECK_MASK;
ffc01c50:	0a012783          	lw	a5, 160(sp)
ffc01c54:	fc1ff06f          	j	ffc01c14 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x60>
risc_streams_kernels_done():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:100
  uint8_t done = 1;
ffc01c58:	00100613          	li	a2, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:113
      i < num_dram_output_streams;
ffc01c5c:	03812703          	lw	a4, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:112
  for (uint32_t i = 0;
ffc01c60:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:113
      i < num_dram_output_streams;
ffc01c64:	b4c72583          	lw	a1, -1204(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:102
  volatile dram_output_stream_state_t* curr_dram_output_stream_state = dram_output_stream_state;
ffc01c68:	84870713          	addi	a4, a4, -1976
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:113
      i < num_dram_output_streams;
ffc01c6c:	02d58063          	beq	a1, a3, ffc01c8c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:115
    if (curr_dram_output_stream_state->epoch_q_slots_remaining)
ffc01c70:	01872503          	lw	a0, 24(a4)
ffc01c74:	02051063          	bnez	a0, ffc01c94 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:112
  for (uint32_t i = 0;
ffc01c78:	00168693          	addi	a3, a3, 1
ffc01c7c:	06070713          	addi	a4, a4, 96
ffc01c80:	fedff06f          	j	ffc01c6c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:108
      done = 0;
ffc01c84:	00000613          	li	a2, 0
ffc01c88:	fd5ff06f          	j	ffc01c5c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa8>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1800
  while (!risc_streams_kernels_done()) {
ffc01c8c:	00060463          	beqz	a2, ffc01c94 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe0>
ffc01c90:	2d10106f          	j	ffc03760 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1bac>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
  uint16_t flags;
} active_stream_info_t;

inline __attribute__((always_inline)) void RISC_POST_STATUS(uint32_t status) {
  volatile uint32_t* ptr = (volatile uint32_t*)(NOC_CFG(ROUTER_CFG_2));
  ptr[0] = status;
ffc01c94:	11111737          	lui	a4, 0x11111
ffc01c98:	11170713          	addi	a4, a4, 273 # 11111111 <substitutes.cpp.cd30c172+0x110f27fb>
ffc01c9c:	ffb206b7          	lui	a3, 0xffb20
ffc01ca0:	10e6a623          	sw	a4, 268(a3) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1814
    perf_spill_check_cnt = (perf_spill_check_cnt + 1) & risc::PERF_SPILL_CHECK_MASK;
ffc01ca4:	00178713          	addi	a4, a5, 1
ffc01ca8:	00f77713          	andi	a4, a4, 15
ffc01cac:	0ae12023          	sw	a4, 160(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1815
    if (check_dram_spill) {
ffc01cb0:	00079a63          	bnez	a5, ffc01cc4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x110>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1816
      call_with_cpu_flush((void *)risc::check_dram_spill_requests_once, 0);
ffc01cb4:	00009537          	lui	a0, 0x9
ffc01cb8:	00000593          	li	a1, 0
ffc01cbc:	71850513          	addi	a0, a0, 1816 # 9718 <risc::check_dram_spill_requests_once()>
ffc01cc0:	030020ef          	jal	ra, ffc03cf0 <call_with_cpu_flush>
check_whether_poll_immediately(unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:894
  uint32_t poll_freq = RISC_EPOCH_RUNTIME_CONFIG_PTR->dram_header_polling_freq;
ffc01cc4:	000237b7          	lui	a5, 0x23
ffc01cc8:	0047a783          	lw	a5, 4(a5) # 23004 <substitutes.cpp.cd30c172+0x46ee>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:895
  if (poll_freq && (dram_ptr_update_cnt & DRAM_PTR_UPDATE_MASK) < poll_freq) {
ffc01ccc:	03012703          	lw	a4, 48(sp)
ffc01cd0:	03f77713          	andi	a4, a4, 63
ffc01cd4:	00f77c63          	bgeu	a4, a5, ffc01cec <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x138>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:896
    dram_ptr_update_cnt = (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK) | (poll_freq & DRAM_PTR_UPDATE_MASK);
ffc01cd8:	03012703          	lw	a4, 48(sp)
ffc01cdc:	03f7f793          	andi	a5, a5, 63
ffc01ce0:	fc077713          	andi	a4, a4, -64
ffc01ce4:	00e7e7b3          	or	a5, a5, a4
ffc01ce8:	02f12823          	sw	a5, 48(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1833
    );
#endif

    check_whether_poll_immediately(dram_ptr_update_cnt);

    bool dram_ptr_update = ((dram_ptr_update_cnt & DRAM_PTR_UPDATE_MASK) == 0);
ffc01cec:	03012783          	lw	a5, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1834
    dram_ptr_update_cnt = (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK) | ((dram_ptr_update_cnt & DRAM_PTR_UPDATE_MASK) + 1) ;
ffc01cf0:	03012703          	lw	a4, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1833
    bool dram_ptr_update = ((dram_ptr_update_cnt & DRAM_PTR_UPDATE_MASK) == 0);
ffc01cf4:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1834
    dram_ptr_update_cnt = (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK) | ((dram_ptr_update_cnt & DRAM_PTR_UPDATE_MASK) + 1) ;
ffc01cf8:	fc077693          	andi	a3, a4, -64
ffc01cfc:	00178713          	addi	a4, a5, 1
ffc01d00:	00e6e733          	or	a4, a3, a4
ffc01d04:	02e12823          	sw	a4, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1836

    if (dram_ptr_update) {
ffc01d08:	02079263          	bnez	a5, ffc01d2c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x178>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc01d0c:	ffb207b7          	lui	a5, 0xffb20
ffc01d10:	c0000737          	lui	a4, 0xc0000
ffc01d14:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1845
  #if !defined(RISC_B0_HW) && (defined(PERF_DUMP) || defined(INTERMED_DUMP) || defined(DRAM_DECOUPLE) || defined(PERF_DUMP_CONCURRENT))
      call_with_cpu_flush_args4((void *)poll_dram_ptrs,
                                (void *) &num_active_dram_queues, (void *) dram_q_state, (void *) &check_ptrs_flushed, (void *) &all_ptrs_flushed
      );
  #else
      poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
ffc01d18:	0dc10593          	addi	a1, sp, 220
ffc01d1c:	0d810513          	addi	a0, sp, 216
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1838
      bool check_ptrs_flushed = false;
ffc01d20:	0c010c23          	sb	zero, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1845
      poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
ffc01d24:	00409097          	auipc	ra, 0x409
ffc01d28:	200080e7          	jalr	512(ra) # af24 <TENSIX_MAILBOX_BASE+0x14af24>
ffc01d2c:	5e0a0a13          	addi	s4, s4, 1504
risc_streams_kernels_done():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:102
  volatile dram_output_stream_state_t* curr_dram_output_stream_state = dram_output_stream_state;
ffc01d30:	04012a23          	sw	zero, 84(sp)
ffc01d34:	fc8a0793          	addi	a5, s4, -56
ffc01d38:	04f12023          	sw	a5, 64(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1851
  #endif
    }

    dram_input_stream_state_t* curr_dram_input_stream_state = dram_input_stream_state;
    for (uint32_t i = 0;
         i < num_dram_input_streams;
ffc01d3c:	03812783          	lw	a5, 56(sp)
ffc01d40:	05412703          	lw	a4, 84(sp)
ffc01d44:	b487a783          	lw	a5, -1208(a5)
ffc01d48:	1ef77ee3          	bgeu	a4, a5, ffc02744 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb90>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1857
         i++, curr_dram_input_stream_state++) {

      dram_q_state_t tt_l1_ptr * next_dram_q_issue_temp = curr_dram_input_stream_state->next_dram_q_issue;
      dram_q_state_t tt_l1_ptr * next_dram_q_issue = (dram_q_state_t tt_l1_ptr *)next_dram_q_issue_temp;
      uint32_t stream_id = curr_dram_input_stream_state->stream_id;
      uint32_t moves_raw_data = curr_dram_input_stream_state->moves_raw_data;
ffc01d4c:	fd8a4783          	lbu	a5, -40(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1856
      uint32_t stream_id = curr_dram_input_stream_state->stream_id;
ffc01d50:	fc8a4503          	lbu	a0, -56(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1857
      uint32_t moves_raw_data = curr_dram_input_stream_state->moves_raw_data;
ffc01d54:	02f12e23          	sw	a5, 60(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1861
      uint32_t epoch_q_slots_remaining = curr_dram_input_stream_state->epoch_q_slots_remaining;
      uint32_t phase_active;
      uint32_t curr_phase_tiles_remaining_to_issue;
      read_phase_active(stream_id, curr_dram_input_stream_state, phase_active, curr_phase_tiles_remaining_to_issue);
ffc01d58:	04012583          	lw	a1, 64(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1858
      uint32_t epoch_q_slots_remaining = curr_dram_input_stream_state->epoch_q_slots_remaining;
ffc01d5c:	fe0a2783          	lw	a5, -32(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1854
      dram_q_state_t tt_l1_ptr * next_dram_q_issue_temp = curr_dram_input_stream_state->next_dram_q_issue;
ffc01d60:	010a2c83          	lw	s9, 16(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1861
      read_phase_active(stream_id, curr_dram_input_stream_state, phase_active, curr_phase_tiles_remaining_to_issue);
ffc01d64:	0cc10693          	addi	a3, sp, 204
ffc01d68:	0c810613          	addi	a2, sp, 200
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1858
      uint32_t epoch_q_slots_remaining = curr_dram_input_stream_state->epoch_q_slots_remaining;
ffc01d6c:	0cf12223          	sw	a5, 196(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1856
      uint32_t stream_id = curr_dram_input_stream_state->stream_id;
ffc01d70:	0ca12023          	sw	a0, 192(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1861
      read_phase_active(stream_id, curr_dram_input_stream_state, phase_active, curr_phase_tiles_remaining_to_issue);
ffc01d74:	ff1fe0ef          	jal	ra, ffc00d64 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1862
      bool is_dram_streaming_read = next_dram_q_issue->l1_dram_incoming_ptr_index && (next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
ffc01d78:	005cc783          	lbu	a5, 5(s9)
ffc01d7c:	04078263          	beqz	a5, ffc01dc0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x20c>
ffc01d80:	004cc783          	lbu	a5, 4(s9)
ffc01d84:	0087f793          	andi	a5, a5, 8
ffc01d88:	02078c63          	beqz	a5, ffc01dc0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x20c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2054
            curr_dram_input_stream_state->stream_flushed_ptr_byte = stream_flushed_ptr_byte;
          }
        }
      } else { //is_dram_streaming_read
#if defined(ERISC) || defined(RISC_B0_HW)
        process_dram_streaming_read_l1(0, stream_id, phase_active, curr_phase_tiles_remaining_to_issue, curr_dram_input_stream_state, next_dram_q_issue, epoch_q_slots_remaining);
ffc01d8c:	04012683          	lw	a3, 64(sp)
ffc01d90:	0c812583          	lw	a1, 200(sp)
ffc01d94:	0c410793          	addi	a5, sp, 196
ffc01d98:	000c8713          	mv	a4, s9
ffc01d9c:	0cc10613          	addi	a2, sp, 204
ffc01da0:	0c010513          	addi	a0, sp, 192
ffc01da4:	00409097          	auipc	ra, 0x409
ffc01da8:	3f0080e7          	jalr	1008(ra) # b194 <TENSIX_MAILBOX_BASE+0x14b194>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1850
    for (uint32_t i = 0;
ffc01dac:	05412783          	lw	a5, 84(sp)
ffc01db0:	054a0a13          	addi	s4, s4, 84
ffc01db4:	00178793          	addi	a5, a5, 1
ffc01db8:	04f12a23          	sw	a5, 84(sp)
ffc01dbc:	f79ff06f          	j	ffc01d34 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x180>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1865
        uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
ffc01dc0:	fcca5783          	lhu	a5, -52(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1867
        bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
ffc01dc4:	00100713          	li	a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1865
        uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
ffc01dc8:	04f12623          	sw	a5, 76(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1867
        bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
ffc01dcc:	fcba4783          	lbu	a5, -53(s4)
ffc01dd0:	02e12a23          	sw	a4, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1866
        bool q_ptr_update_pending = curr_dram_input_stream_state->q_ptr_update_pending;
ffc01dd4:	fcaa4b03          	lbu	s6, -54(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1867
        bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
ffc01dd8:	02079263          	bnez	a5, ffc01dfc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x248>
stream_is_dram_read_opt_enabled(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:189
  return !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE);
ffc01ddc:	0c012783          	lw	a5, 192(sp)
ffc01de0:	017787b3          	add	a5, a5, s7
ffc01de4:	00c79793          	slli	a5, a5, 0xc
ffc01de8:	0287a783          	lw	a5, 40(a5)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1867
ffc01dec:	00c7d793          	srli	a5, a5, 0xc
ffc01df0:	0017c793          	xori	a5, a5, 1
ffc01df4:	0017f793          	andi	a5, a5, 1
ffc01df8:	02f12a23          	sw	a5, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1868
        curr_dram_input_stream_state->dram_read_opt_enabled = is_dram_read_opt_enabled;
ffc01dfc:	03412783          	lw	a5, 52(sp)
ffc01e00:	fcfa05a3          	sb	a5, -53(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1870
        if (moves_raw_data) {
ffc01e04:	03c12783          	lw	a5, 60(sp)
ffc01e08:	08078663          	beqz	a5, ffc01e94 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2e0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1871
          if (phase_active && !curr_phase_tiles_remaining_to_issue && !prev_in_flight_data_rec_chunks) {
ffc01e0c:	0c812783          	lw	a5, 200(sp)
ffc01e10:	08078263          	beqz	a5, ffc01e94 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2e0>
ffc01e14:	0cc12783          	lw	a5, 204(sp)
ffc01e18:	06079e63          	bnez	a5, ffc01e94 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2e0>
ffc01e1c:	04c12783          	lw	a5, 76(sp)
ffc01e20:	06079a63          	bnez	a5, ffc01e94 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2e0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1872
            uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc01e24:	0c012503          	lw	a0, 192(sp)
ffc01e28:	e45fe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
ffc01e2c:	e05fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc01e30:	01750533          	add	a0, a0, s7
ffc01e34:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1872
ffc01e38:	01052403          	lw	s0, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1873
            uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
ffc01e3c:	0c012503          	lw	a0, 192(sp)
ffc01e40:	e2dfe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1872
            uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc01e44:	01041413          	slli	s0, s0, 0x10
ffc01e48:	01045413          	srli	s0, s0, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1873
            uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
ffc01e4c:	00050493          	mv	s1, a0
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
}

#if defined(PERF_DUMP) && (OVERLAY_DECOUPLE == 1)
inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_operand_tiles_acked_ptr(int operand) {
  if (is_input_operand_decoupled(operand)) {
ffc01e50:	e55fe0ef          	jal	ra, ffc00ca4 <is_input_operand_decoupled(int)>
ffc01e54:	18050863          	beqz	a0, ffc01fe4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x430>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc01e58:	00048513          	mv	a0, s1
ffc01e5c:	dd5fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc01e60:	01750533          	add	a0, a0, s7
ffc01e64:	00c51513          	slli	a0, a0, 0xc
ffc01e68:	01050513          	addi	a0, a0, 16
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1873
ffc01e6c:	00052783          	lw	a5, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1875
            if (tiles_available == 0) {
ffc01e70:	01079793          	slli	a5, a5, 0x10
ffc01e74:	0107d793          	srli	a5, a5, 0x10
ffc01e78:	00f41e63          	bne	s0, a5, ffc01e94 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2e0>
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
ffc01e7c:	0c012783          	lw	a5, 192(sp)
ffc01e80:	00100713          	li	a4, 1
ffc01e84:	017787b3          	add	a5, a5, s7
ffc01e88:	00c79793          	slli	a5, a5, 0xc
ffc01e8c:	06e7ae23          	sw	a4, 124(a5)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1877
              phase_active = false;
ffc01e90:	0c012423          	sw	zero, 200(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1882
        if (epoch_q_slots_remaining && (is_dram_read_opt_enabled || (phase_active && curr_phase_tiles_remaining_to_issue && !q_ptr_update_pending))) {
ffc01e94:	0c412783          	lw	a5, 196(sp)
ffc01e98:	00079463          	bnez	a5, ffc01ea0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2ec>
ffc01e9c:	3250106f          	j	ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
ffc01ea0:	03412783          	lw	a5, 52(sp)
ffc01ea4:	02079263          	bnez	a5, ffc01ec8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x314>
ffc01ea8:	0c812783          	lw	a5, 200(sp)
ffc01eac:	00079463          	bnez	a5, ffc01eb4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x300>
ffc01eb0:	2c90106f          	j	ffc03978 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dc4>
ffc01eb4:	0cc12783          	lw	a5, 204(sp)
ffc01eb8:	00079463          	bnez	a5, ffc01ec0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x30c>
ffc01ebc:	31d0106f          	j	ffc039d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e24>
ffc01ec0:	000b0463          	beqz	s6, ffc01ec8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x314>
ffc01ec4:	3150106f          	j	ffc039d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e24>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1886
          volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
ffc01ec8:	000ca483          	lw	s1, 0(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1884
          RISC_POST_STATUS(0xD1000000 | stream_id);
ffc01ecc:	0c012703          	lw	a4, 192(sp)
ffc01ed0:	d10007b7          	lui	a5, 0xd1000
ffc01ed4:	00e7e7b3          	or	a5, a5, a4
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc01ed8:	ffb206b7          	lui	a3, 0xffb20
ffc01edc:	10f6a623          	sw	a5, 268(a3) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1888
          bool can_do_read = can_do_another_read(curr_dram_input_stream_state->input_noc, data_rec_chunk_size_bytes, curr_dram_input_stream_state->prev_rd_data_word_recv);
ffc01ee0:	ffca2603          	lw	a2, -4(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1887
          uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
ffc01ee4:	0384a783          	lw	a5, 56(s1)
can_do_another_read(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:360

inline __attribute__((always_inline)) bool can_do_another_read(uint32_t input_noc, uint32_t data_rec_chunk_size_bytes, uint32_t prev_rd_data_word_recv) {
  if (prev_rd_data_word_recv == 0)
ffc01ee8:	02060a63          	beqz	a2, ffc01f1c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x368>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1888
          bool can_do_read = can_do_another_read(curr_dram_input_stream_state->input_noc, data_rec_chunk_size_bytes, curr_dram_input_stream_state->prev_rd_data_word_recv);
ffc01eec:	fc9a4703          	lbu	a4, -55(s4)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc01ef0:	20c68693          	addi	a3, a3, 524
ffc01ef4:	01071713          	slli	a4, a4, 0x10
ffc01ef8:	00d70733          	add	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc01efc:	00072703          	lw	a4, 0(a4) # c0000000 <TENSIX_MAILBOX_BASE+0xc0140000>
can_do_another_read(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:364
    return true;
  uint32_t cur_rd_data_word_recv = ncrisc_rd_data_word_recv(input_noc);
  uint32_t words_recv = cur_rd_data_word_recv - prev_rd_data_word_recv;
  uint32_t data_rec_chunk_size_words = data_rec_chunk_size_bytes/NOC_WORD_BYTES;
ffc01f00:	0057d793          	srli	a5, a5, 0x5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:365
  uint32_t data_rec_chunk_size_words_thresh = data_rec_chunk_size_words > READ_WORDS_THRESH ? data_rec_chunk_size_words - READ_WORDS_THRESH : 0;
ffc01f04:	2ee00693          	li	a3, 750
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:363
  uint32_t words_recv = cur_rd_data_word_recv - prev_rd_data_word_recv;
ffc01f08:	40c70733          	sub	a4, a4, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:365
  uint32_t data_rec_chunk_size_words_thresh = data_rec_chunk_size_words > READ_WORDS_THRESH ? data_rec_chunk_size_words - READ_WORDS_THRESH : 0;
ffc01f0c:	00d7e863          	bltu	a5, a3, ffc01f1c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x368>
ffc01f10:	d1278793          	addi	a5, a5, -750 # d0fffd12 <TENSIX_MAILBOX_BASE+0xd113fd12>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:366
  if (words_recv >= data_rec_chunk_size_words_thresh)
ffc01f14:	00f77463          	bgeu	a4, a5, ffc01f1c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x368>
ffc01f18:	2a90106f          	j	ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc01f1c:	ffb207b7          	lui	a5, 0xffb20
ffc01f20:	d1200737          	lui	a4, 0xd1200
ffc01f24:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:180
  if (moves_raw_data) {
ffc01f28:	03c12783          	lw	a5, 60(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1896
            get_buf_space_available_words(curr_dram_input_stream_state, next_dram_q_issue, stream_id, moves_raw_data, 
ffc01f2c:	0c012a83          	lw	s5, 192(sp)
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:180
  if (moves_raw_data) {
ffc01f30:	20078463          	beqz	a5, ffc02138 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x584>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:181
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
ffc01f34:	018a2783          	lw	a5, 24(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:184
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc01f38:	000a8513          	mv	a0, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:181
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
ffc01f3c:	0887a783          	lw	a5, 136(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:182
    uint32_t scatter_list_stream_id = dram_io_info->scatter_list_stream_id;
ffc01f40:	0087d983          	lhu	s3, 8(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:183
    uint32_t hw_tilize = dram_io_info->hw_tilize;
ffc01f44:	01b7c903          	lbu	s2, 27(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:184
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc01f48:	d25fe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc01f4c:	ce5fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc01f50:	01750533          	add	a0, a0, s7
ffc01f54:	00c51513          	slli	a0, a0, 0xc
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:184
ffc01f58:	01052403          	lw	s0, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:185
    uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
ffc01f5c:	000a8513          	mv	a0, s5
ffc01f60:	d0dfe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
ffc01f64:	00050a93          	mv	s5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:184
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc01f68:	01041413          	slli	s0, s0, 0x10
ffc01f6c:	01045413          	srli	s0, s0, 0x10
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
ffc01f70:	d35fe0ef          	jal	ra, ffc00ca4 <is_input_operand_decoupled(int)>
ffc01f74:	08050463          	beqz	a0, ffc01ffc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x448>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc01f78:	000a8513          	mv	a0, s5
ffc01f7c:	cb5fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc01f80:	01750533          	add	a0, a0, s7
ffc01f84:	00c51513          	slli	a0, a0, 0xc
ffc01f88:	01050513          	addi	a0, a0, 16
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:185
    uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
ffc01f8c:	00052783          	lw	a5, 0(a0)
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:55
  return a - b;
ffc01f90:	40f40433          	sub	s0, s0, a5
ffc01f94:	01041413          	slli	s0, s0, 0x10
ffc01f98:	01045413          	srli	s0, s0, 0x10
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:188
    if ((scatter_list_stream_id || hw_tilize) && tiles_available != 0) {
ffc01f9c:	00099463          	bnez	s3, ffc01fa4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x3f0>
ffc01fa0:	00090663          	beqz	s2, ffc01fac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x3f8>
ffc01fa4:	00040463          	beqz	s0, ffc01fac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x3f8>
ffc01fa8:	2190106f          	j	ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:194
    uint32_t stream_buf_size_tiles = curr_dram_input_stream_state->stream_info->buf_size_tiles;
ffc01fac:	018a2583          	lw	a1, 24(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:193
    uint32_t data_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
ffc01fb0:	03c4d783          	lhu	a5, 60(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:194
    uint32_t stream_buf_size_tiles = curr_dram_input_stream_state->stream_info->buf_size_tiles;
ffc01fb4:	0105a703          	lw	a4, 16(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
ffc01fb8:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:196
    uint32_t in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
ffc01fbc:	00078613          	mv	a2, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:195
    uint32_t stream_buf_free_tiles = stream_buf_size_tiles - tiles_available;
ffc01fc0:	40870433          	sub	s0, a4, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:196
    uint32_t in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
ffc01fc4:	fcca5703          	lhu	a4, -52(s4)
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc01fc8:	04070663          	beqz	a4, ffc02014 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x460>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
ffc01fcc:	00177513          	andi	a0, a4, 1
ffc01fd0:	00050463          	beqz	a0, ffc01fd8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x424>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc01fd4:	00c686b3          	add	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc01fd8:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc01fdc:	00161613          	slli	a2, a2, 0x1
ffc01fe0:	fe9ff06f          	j	ffc01fc8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x414>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
  } else {
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
ffc01fe4:	00048513          	mv	a0, s1
ffc01fe8:	c49fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc01fec:	01750533          	add	a0, a0, s7
ffc01ff0:	00c51513          	slli	a0, a0, 0xc
ffc01ff4:	00c50513          	addi	a0, a0, 12
ffc01ff8:	e75ff06f          	j	ffc01e6c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2b8>
ffc01ffc:	000a8513          	mv	a0, s5
ffc02000:	c31fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc02004:	01750533          	add	a0, a0, s7
ffc02008:	00c51513          	slli	a0, a0, 0xc
ffc0200c:	00c50513          	addi	a0, a0, 12
ffc02010:	f7dff06f          	j	ffc01f8c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x3d8>
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:199
    uint32_t stream_msg_info_buf_ptr = (curr_dram_input_stream_state->stream_info->msg_info_buf_start)*MEM_WORD_WIDTH;
ffc02014:	0205a703          	lw	a4, 32(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:198
    uint32_t stream_buf_tiles_free_thr = (data_chunk_size_tiles + in_flight_tiles);
ffc02018:	00d787b3          	add	a5, a5, a3
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1902
            if (stream_has_free_space) {
ffc0201c:	00f47463          	bgeu	s0, a5, ffc02024 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x470>
ffc02020:	1a10106f          	j	ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc02024:	ffb207b7          	lui	a5, 0xffb20
ffc02028:	d2000737          	lui	a4, 0xd2000
ffc0202c:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_dram_read_should_reset_pointers(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:235
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX);
ffc02030:	0c012783          	lw	a5, 192(sp)
ffc02034:	017787b3          	add	a5, a5, s7
ffc02038:	00c79793          	slli	a5, a5, 0xc
ffc0203c:	0047a703          	lw	a4, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:236
  uint32_t should_reset_pointers = rmw >> 16;
ffc02040:	01075693          	srli	a3, a4, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:237
  if (should_reset_pointers)
ffc02044:	00068a63          	beqz	a3, ffc02058 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x4a4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:238
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw & 0xffff));  // used as scratch reg for receiver endpoint streams
ffc02048:	01071713          	slli	a4, a4, 0x10
ffc0204c:	01075713          	srli	a4, a4, 0x10
ffc02050:	00e7a223          	sw	a4, 4(a5)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1914
                curr_dram_input_stream_state->stream_flushed_ptr_byte = 0;
ffc02054:	fc0a2a23          	sw	zero, -44(s4)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:447
  bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
ffc02058:	00100713          	li	a4, 1
ffc0205c:	fcba4783          	lbu	a5, -53(s4)
ffc02060:	04e12423          	sw	a4, 72(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1917
              dram_input_stream_scatter_read(stream_id, curr_phase_tiles_remaining_to_issue, stream_buf_bytes_free, curr_dram_input_stream_state, next_dram_q_issue, dram_ptr_update_cnt);
ffc02064:	0c012403          	lw	s0, 192(sp)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:447
  bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
ffc02068:	02079063          	bnez	a5, ffc02088 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x4d4>
stream_is_dram_read_opt_enabled(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:189
  return !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE);
ffc0206c:	017407b3          	add	a5, s0, s7
ffc02070:	00c79793          	slli	a5, a5, 0xc
ffc02074:	0287a783          	lw	a5, 40(a5)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:447
ffc02078:	00c7d793          	srli	a5, a5, 0xc
ffc0207c:	0017c793          	xori	a5, a5, 1
ffc02080:	0017f793          	andi	a5, a5, 1
ffc02084:	04f12423          	sw	a5, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:448
  volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
ffc02088:	000ca703          	lw	a4, 0(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:452
  uint32_t min_dram_io_entries = curr_dram_input_stream_state->min_dram_io_entries;
ffc0208c:	fcea5d03          	lhu	s10, -50(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:449
  uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
ffc02090:	03872783          	lw	a5, 56(a4) # d2000038 <TENSIX_MAILBOX_BASE+0xd2140038>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:450
  dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state = l1_ptrs->dram_io_scatter_state;
ffc02094:	05872c03          	lw	s8, 88(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:449
  uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
ffc02098:	04f12c23          	sw	a5, 88(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:454
  if (min_dram_io_entries == 0) {
ffc0209c:	120d1463          	bnez	s10, ffc021c4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x610>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:460
        uint32_t wrptr_val_issue = next_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
ffc020a0:	ffff8537          	lui	a0, 0xffff8
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1854
      dram_q_state_t tt_l1_ptr * next_dram_q_issue_temp = curr_dram_input_stream_state->next_dram_q_issue;
ffc020a4:	000c8593          	mv	a1, s9
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:455
    min_dram_io_entries = ~0;
ffc020a8:	fff00d13          	li	s10, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:460
        uint32_t wrptr_val_issue = next_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
ffc020ac:	fff50513          	addi	a0, a0, -1 # ffff7fff <TENSIX_MAILBOX_BASE+0x137fff>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:458
      if (!l1_ptrs->dram_padding) {
ffc020b0:	03e74683          	lbu	a3, 62(a4)
ffc020b4:	00100793          	li	a5, 1
ffc020b8:	00068463          	beqz	a3, ffc020c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x50c>
ffc020bc:	0e50106f          	j	ffc039a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:460
        uint32_t wrptr_val_issue = next_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
ffc020c0:	00a5d683          	lhu	a3, 10(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:459
        uint32_t rdptr_val_issue = next_dram_q_issue->dram_ptr_issued_q_slots;
ffc020c4:	0065d803          	lhu	a6, 6(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:461
        uint32_t dram_buf_size_q_slots = next_dram_q_issue->dram_buf_size_q_slots;
ffc020c8:	00c5d603          	lhu	a2, 12(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:460
        uint32_t wrptr_val_issue = next_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
ffc020cc:	00a6f6b3          	and	a3, a3, a0
dram_io_entries(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:93
  if (wr_ptr >= rd_ptr)
ffc020d0:	0d06e263          	bltu	a3, a6, ffc02194 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5e0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:94
    return wr_ptr - rd_ptr;
ffc020d4:	41068633          	sub	a2, a3, a6
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:463
        uint16_t rd_epoch_id_tag = l1_ptrs->rd_epoch_id_tag;
ffc020d8:	00a75883          	lhu	a7, 10(a4)
ffc020dc:	01a67463          	bgeu	a2, s10, ffc020e4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x530>
ffc020e0:	00060d13          	mv	s10, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:468
        bool dram_q_slot_available = ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 || !dram_io_local_empty(rdptr_val_issue, l1_ptrs->rd_dram_rdptr, wrptr_val_issue)) &&
ffc020e4:	0045c603          	lbu	a2, 4(a1)
ffc020e8:	00167613          	andi	a2, a2, 1
ffc020ec:	02061663          	bnez	a2, ffc02118 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x564>
ffc020f0:	00075703          	lhu	a4, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:470
        all_dram_q_slot_available = all_dram_q_slot_available && dram_q_slot_available;
ffc020f4:	00000793          	li	a5, 0
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:75
  if (rd_ptr == wr_ptr)
ffc020f8:	00e69463          	bne	a3, a4, ffc02100 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x54c>
ffc020fc:	0a50106f          	j	ffc039a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:78
  uint32_t case1 = rd_ptr < wr_ptr && (local_rd_ptr < rd_ptr || local_rd_ptr >= wr_ptr);
ffc02100:	00d76463          	bltu	a4, a3, ffc02108 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x554>
ffc02104:	0810106f          	j	ffc03984 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dd0>
ffc02108:	00e87463          	bgeu	a6, a4, ffc02110 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x55c>
ffc0210c:	0950106f          	j	ffc039a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:81
  return case1 || case2;
ffc02110:	00d86463          	bltu	a6, a3, ffc02118 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x564>
ffc02114:	08d0106f          	j	ffc039a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dec>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:470
ffc02118:	00100793          	li	a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:468
        bool dram_q_slot_available = ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 || !dram_io_local_empty(rdptr_val_issue, l1_ptrs->rd_dram_rdptr, wrptr_val_issue)) &&
ffc0211c:	00089463          	bnez	a7, ffc02124 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x570>
ffc02120:	0810106f          	j	ffc039a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:469
            (rd_epoch_id_tag == DRAM_QUEUE_NO_EPOCH_CHECK || rd_epoch_id_tag == curr_dram_input_stream_state->stream_info->producer_epoch_id);
ffc02124:	018a2783          	lw	a5, 24(s4)
ffc02128:	0027d783          	lhu	a5, 2(a5)
ffc0212c:	40f887b3          	sub	a5, a7, a5
ffc02130:	0017b793          	seqz	a5, a5
ffc02134:	06d0106f          	j	ffc039a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dec>
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:204
    uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
ffc02138:	0384a703          	lw	a4, 56(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:206
    uint32_t stream_buf_bytes_free_thr = (data_rec_chunk_size_bytes + in_flight_bytes);
ffc0213c:	fdca2783          	lw	a5, -36(s4)
stream_get_buf_space_available_words(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:181
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
ffc02140:	017a8ab3          	add	s5, s5, s7
ffc02144:	00ca9a93          	slli	s5, s5, 0xc
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:208
    stream_has_free_space = (stream_buf_bytes_free >= stream_buf_bytes_free_thr);
ffc02148:	000a0693          	mv	a3, s4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:212
      if (fork_stream_id == NULL_STREAM) {
ffc0214c:	0ff00613          	li	a2, 255
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:206
    uint32_t stream_buf_bytes_free_thr = (data_rec_chunk_size_bytes + in_flight_bytes);
ffc02150:	00f70733          	add	a4, a4, a5
stream_get_buf_space_available_words(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:181
ffc02154:	070aa783          	lw	a5, 112(s5)
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:207
    stream_buf_bytes_free = (stream_get_buf_space_available_words(stream_id) * MEM_WORD_WIDTH);
ffc02158:	00479793          	slli	a5, a5, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:208
    stream_has_free_space = (stream_buf_bytes_free >= stream_buf_bytes_free_thr);
ffc0215c:	00e7b7b3          	sltu	a5, a5, a4
ffc02160:	0017c793          	xori	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:210
    while (stream_has_free_space) {
ffc02164:	00079463          	bnez	a5, ffc0216c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5b8>
ffc02168:	0590106f          	j	ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:211
      uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
ffc0216c:	0006c783          	lbu	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:212
      if (fork_stream_id == NULL_STREAM) {
ffc02170:	00168693          	addi	a3, a3, 1
ffc02174:	eac788e3          	beq	a5, a2, ffc02024 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x470>
stream_get_buf_space_available_words(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:181
ffc02178:	017787b3          	add	a5, a5, s7
ffc0217c:	00c79793          	slli	a5, a5, 0xc
ffc02180:	0707a783          	lw	a5, 112(a5)
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:216
      uint32_t fork_stream_buf_bytes_free = (stream_get_buf_space_available_words(fork_stream_id) * MEM_WORD_WIDTH);
ffc02184:	00479793          	slli	a5, a5, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:217
      stream_has_free_space &= (fork_stream_buf_bytes_free >= stream_buf_bytes_free_thr);
ffc02188:	00e7b7b3          	sltu	a5, a5, a4
ffc0218c:	0017c793          	xori	a5, a5, 1
ffc02190:	fd5ff06f          	j	ffc02164 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5b0>
dram_io_entries(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:96
    return 2*buf_size_q_slots - rd_ptr + wr_ptr;
ffc02194:	00161613          	slli	a2, a2, 0x1
ffc02198:	00d60633          	add	a2, a2, a3
ffc0219c:	41060633          	sub	a2, a2, a6
ffc021a0:	f39ff06f          	j	ffc020d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x524>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:482
  if (min_dram_io_entries <= DRAM_MIN_ENTIRES_POLL && (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK))
ffc021a4:	000d1c63          	bnez	s10, ffc021bc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x608>
ffc021a8:	03012683          	lw	a3, 48(sp)
ffc021ac:	fc06fd13          	andi	s10, a3, -64
ffc021b0:	000d0663          	beqz	s10, ffc021bc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x608>
ffc021b4:	02012823          	sw	zero, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:483
    dram_ptr_update_cnt = 0;
ffc021b8:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:485
  if (all_dram_q_slot_available) {
ffc021bc:	00079463          	bnez	a5, ffc021c4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x610>
ffc021c0:	0010106f          	j	ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:445
  uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
ffc021c4:	fcca5783          	lhu	a5, -52(s4)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc021c8:	d30006b7          	lui	a3, 0xd3000
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:445
ffc021cc:	04f12223          	sw	a5, 68(sp)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
ffc021d0:	01740433          	add	s0, s0, s7
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc021d4:	ffb207b7          	lui	a5, 0xffb20
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:446
  uint32_t in_flight_bytes = curr_dram_input_stream_state->in_flight_bytes;
ffc021d8:	fdca2903          	lw	s2, -36(s4)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1917
              dram_input_stream_scatter_read(stream_id, curr_phase_tiles_remaining_to_issue, stream_buf_bytes_free, curr_dram_input_stream_state, next_dram_q_issue, dram_ptr_update_cnt);
ffc021dc:	0cc12483          	lw	s1, 204(sp)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
ffc021e0:	00c41413          	slli	s0, s0, 0xc
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc021e4:	10d7a623          	sw	a3, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
ffc021e8:	01c42683          	lw	a3, 28(s0)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
ffc021ec:	fd4a2783          	lw	a5, -44(s4)
ffc021f0:	00f907b3          	add	a5, s2, a5
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:494
    uint32_t stream_buf_size_bytes = stream_get_data_buf_size(stream_id) * MEM_WORD_WIDTH;
ffc021f4:	00469693          	slli	a3, a3, 0x4
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
ffc021f8:	00d7e463          	bltu	a5, a3, ffc02200 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x64c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
ffc021fc:	40d787b3          	sub	a5, a5, a3
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:498
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
ffc02200:	018a2683          	lw	a3, 24(s4)
ffc02204:	0886ad83          	lw	s11, 136(a3) # d3000088 <TENSIX_MAILBOX_BASE+0xd3140088>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30

inline __attribute__((always_inline)) uint64_t tt_l1_load(volatile tt_uint64_t * tt_l1_ptr p)
{
    tt_uint64_t v;

    v.hi = p->hi;
ffc02208:	04872383          	lw	t2, 72(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc0220c:	04c72083          	lw	ra, 76(a4)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:500
    uint32_t data_rec_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
ffc02210:	03c75983          	lhu	s3, 60(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:501
    uint32_t q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
ffc02214:	05072683          	lw	a3, 80(a4)
ffc02218:	06d12023          	sw	a3, 96(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:502
    uint32_t dram_data_buf_size_bytes = l1_ptrs->dram_buf_size_bytes;
ffc0221c:	04072683          	lw	a3, 64(a4)
ffc02220:	04d12823          	sw	a3, 80(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:510
    uint32_t rd_ptr_autoinc = (next_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
ffc02224:	004cc683          	lbu	a3, 4(s9)
ffc02228:	0016f693          	andi	a3, a3, 1
ffc0222c:	1e068663          	beqz	a3, ffc02418 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x864>
ffc02230:	00275a83          	lhu	s5, 2(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:513
    bool has_scatter_offsets = get_scatter_offsets(dram_io_scatter_state, scatter_offsets, dram_io_info->scatter_list_stream_id);
ffc02234:	008dd703          	lhu	a4, 8(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:512
    volatile tt_uint64_t tt_l1_ptr * scatter_offsets = dram_io_scatter_state->scatter_offsets;
ffc02238:	01cc2803          	lw	a6, 28(s8)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:373
  else
    return false;
}

inline __attribute__((always_inline)) bool get_scatter_offsets(dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state, volatile tt_uint64_t tt_l1_ptr * &scatter_offsets, uint32_t scatter_list_stream_id) {
  if (scatter_list_stream_id) {
ffc0223c:	02070863          	beqz	a4, ffc0226c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x6b8>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc02240:	01770733          	add	a4, a4, s7
ffc02244:	00c71713          	slli	a4, a4, 0xc
ffc02248:	08c72603          	lw	a2, 140(a4)
stream_tiles_outstanding(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:316
  return NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
ffc0224c:	04872583          	lw	a1, 72(a4)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:445
  uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
ffc02250:	04412683          	lw	a3, 68(sp)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:376
    uint32_t phase_active = stream_phase_is_active(scatter_list_stream_id);
    int32_t tiles_available = stream_tiles_outstanding(scatter_list_stream_id);
    if (!phase_active || !tiles_available)
ffc02254:	00467613          	andi	a2, a2, 4
ffc02258:	24060463          	beqz	a2, ffc024a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8ec>
ffc0225c:	24058263          	beqz	a1, ffc024a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8ec>
stream_phase_next_recved_tile_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:146
  return NOC_STREAM_READ_REG(stream_id, STREAM_NEXT_RECEIVED_MSG_ADDR_REG_INDEX);
ffc02260:	04c72803          	lw	a6, 76(a4)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:378
      return false;
    scatter_offsets = ((volatile tt_uint64_t tt_l1_ptr *)(stream_phase_next_recved_tile_addr(scatter_list_stream_id)*MEM_WORD_WIDTH + DRAM_SCATTER_LIST_START_OFFSET));
ffc02264:	00180813          	addi	a6, a6, 1
ffc02268:	00481813          	slli	a6, a6, 0x4
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:531
      dram_ptr_update_cnt = dram_ptr_update_cnt | (DRAM_PTR_UPDATE_MASK + 1);
ffc0226c:	03012603          	lw	a2, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:509
    uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
ffc02270:	004c2683          	lw	a3, 4(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:531
      dram_ptr_update_cnt = dram_ptr_update_cnt | (DRAM_PTR_UPDATE_MASK + 1);
ffc02274:	04066613          	ori	a2, a2, 64
ffc02278:	02c12823          	sw	a2, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:533
      uint32_t stream_dest_addr = curr_dram_input_stream_state->stream_buf_addr_byte + stream_wr_ptr_byte;
ffc0227c:	fd0a2603          	lw	a2, -48(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:508
    uint32_t dram_io_scatter_chunk_size_bytes = dram_io_scatter_state->scatter_chunk_size_bytes;
ffc02280:	008c2703          	lw	a4, 8(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:533
      uint32_t stream_dest_addr = curr_dram_input_stream_state->stream_buf_addr_byte + stream_wr_ptr_byte;
ffc02284:	00c787b3          	add	a5, a5, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:534
      uint32_t scatter_idx = next_dram_q_issue->scatter_offsets_index;
ffc02288:	01cca603          	lw	a2, 28(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:522
    uint32_t dram_embeddings_row_shift = dram_io_info->dram_embeddings_row_shift;
ffc0228c:	010daf83          	lw	t6, 16(s11)
dram_input_stream_issue_scatter_read_init(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:85
inline __attribute__((always_inline)) bool header_reads_flushed(uint32_t noc, uint32_t transaction_id, volatile uint32_t tt_l1_ptr * l1_ptr_addr) {
  return (ncrisc_noc_reads_flushed(noc, transaction_id) || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))));
}

inline __attribute__((always_inline)) void dram_input_stream_issue_scatter_read_init(uint32_t data_rec_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_bytes, uint32_t stream_dest_addr, uint32_t& transaction_id) {
  if (transaction_id == NCRISC_RD_END_TRID) {
ffc02290:	00d00593          	li	a1, 13
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:86
    transaction_id = NCRISC_RD_START_TRID;
ffc02294:	00400893          	li	a7, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:509
    uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
ffc02298:	06d12223          	sw	a3, 100(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:523
    uint32_t dram_io_scatter_chunk_size_tiles = dram_io_scatter_state->scatter_chunk_size_tiles;
ffc0229c:	010c2683          	lw	a3, 16(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:534
      uint32_t scatter_idx = next_dram_q_issue->scatter_offsets_index;
ffc022a0:	0cc12823          	sw	a2, 208(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:536
        uint32_t transaction_id = curr_dram_input_stream_state->transaction_id_issued;
ffc022a4:	ff8a4603          	lbu	a2, -8(s4)
dram_input_stream_issue_scatter_read_init(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:85
  if (transaction_id == NCRISC_RD_END_TRID) {
ffc022a8:	00b60463          	beq	a2, a1, ffc022b0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x6fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:88
  } else {
    transaction_id += 1;
ffc022ac:	00160893          	addi	a7, a2, 1
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:539
        curr_dram_input_stream_state->prev_rd_data_word_recv = ncrisc_rd_data_word_recv(curr_dram_input_stream_state->input_noc);
ffc022b0:	fc9a4503          	lbu	a0, -55(s4)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc022b4:	ffb205b7          	lui	a1, 0xffb20
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:538
        curr_dram_input_stream_state->transaction_id_issued = transaction_id;
ffc022b8:	ff1a0c23          	sb	a7, -8(s4)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
ffc022bc:	20c58593          	addi	a1, a1, 524 # ffb2020c <TENSIX_MAILBOX_BASE+0xffc6020c>
ffc022c0:	01051613          	slli	a2, a0, 0x10
ffc022c4:	00b60633          	add	a2, a2, a1
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:540
        if (dram_io_info->scatter_list_stream_id || dram_io_info->hw_tilize) {
ffc022c8:	008dd583          	lhu	a1, 8(s11)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc022cc:	00062603          	lw	a2, 0(a2)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:539
        curr_dram_input_stream_state->prev_rd_data_word_recv = ncrisc_rd_data_word_recv(curr_dram_input_stream_state->input_noc);
ffc022d0:	feca2e23          	sw	a2, -4(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:552
          uint32_t scatter_loop_index = curr_dram_input_stream_state->scatter_loop_index;
ffc022d4:	ff0a2603          	lw	a2, -16(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:540
        if (dram_io_info->scatter_list_stream_id || dram_io_info->hw_tilize) {
ffc022d8:	00059663          	bnez	a1, ffc022e4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x730>
ffc022dc:	01bdc583          	lbu	a1, 27(s11)
ffc022e0:	14058063          	beqz	a1, ffc02420 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x86c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:541
          uint32_t c_dim_count = curr_dram_input_stream_state->c_dim_count;
ffc022e4:	feaa5583          	lhu	a1, -22(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:544
          uint32_t scatter_loop_index = curr_dram_input_stream_state->scatter_loop_index;
ffc022e8:	0cc12e23          	sw	a2, 220(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:541
          uint32_t c_dim_count = curr_dram_input_stream_state->c_dim_count;
ffc022ec:	0cb12a23          	sw	a1, 212(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:543
          uint32_t col_offset_bytes = curr_dram_input_stream_state->col_offset_bytes;
ffc022f0:	feca2583          	lw	a1, -20(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:542
          uint32_t c_dim_size = curr_dram_input_stream_state->c_dim_size;
ffc022f4:	fe8a5283          	lhu	t0, -24(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:543
          uint32_t col_offset_bytes = curr_dram_input_stream_state->col_offset_bytes;
ffc022f8:	0cb12c23          	sw	a1, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:545
          dram_input_stream_issue_scatter_read_indicies(dram_io_info->hw_tilize, curr_dram_input_stream_state->input_noc, next_dram_q_issue->dram_ptr_issued_byte, data_rec_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
ffc022fc:	01bdcf03          	lbu	t5, 27(s11)
ffc02300:	018ca603          	lw	a2, 24(s9)
ffc02304:	00000593          	li	a1, 0
ffc02308:	01e03eb3          	snez	t4, t5
ffc0230c:	000f0463          	beqz	t5, ffc02314 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x760>
ffc02310:	00cda583          	lw	a1, 12(s11)
ffc02314:	03112423          	sw	a7, 40(sp)
ffc02318:	0d810893          	addi	a7, sp, 216
ffc0231c:	03112223          	sw	a7, 36(sp)
ffc02320:	00add883          	lhu	a7, 10(s11)
ffc02324:	00b12a23          	sw	a1, 20(sp)
ffc02328:	0dc10593          	addi	a1, sp, 220
ffc0232c:	00b12223          	sw	a1, 4(sp)
ffc02330:	0d010593          	addi	a1, sp, 208
ffc02334:	00b12023          	sw	a1, 0(sp)
ffc02338:	00512e23          	sw	t0, 28(sp)
ffc0233c:	00050593          	mv	a1, a0
ffc02340:	01f12823          	sw	t6, 16(sp)
ffc02344:	00712423          	sw	t2, 8(sp)
ffc02348:	00112623          	sw	ra, 12(sp)
ffc0234c:	000e8513          	mv	a0, t4
ffc02350:	03112023          	sw	a7, 32(sp)
ffc02354:	0d410893          	addi	a7, sp, 212
ffc02358:	01112c23          	sw	a7, 24(sp)
ffc0235c:	00080893          	mv	a7, a6
ffc02360:	00078813          	mv	a6, a5
ffc02364:	00070793          	mv	a5, a4
ffc02368:	00068713          	mv	a4, a3
ffc0236c:	00098693          	mv	a3, s3
ffc02370:	fd9fe0ef          	jal	ra, ffc01348 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:548
          curr_dram_input_stream_state->scatter_loop_index = scatter_loop_index;
ffc02374:	0dc12783          	lw	a5, 220(sp)
ffc02378:	fefa2823          	sw	a5, -16(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:549
          curr_dram_input_stream_state->c_dim_count = c_dim_count;
ffc0237c:	0d412783          	lw	a5, 212(sp)
ffc02380:	fefa1523          	sh	a5, -22(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:550
          curr_dram_input_stream_state->col_offset_bytes = col_offset_bytes;
ffc02384:	0d812783          	lw	a5, 216(sp)
ffc02388:	fefa2623          	sw	a5, -20(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:564
      uint32_t dram_num_partial_q_slot_issued_tiles = next_dram_q_issue->dram_num_partial_q_slot_issued_tiles;
ffc0238c:	010ca803          	lw	a6, 16(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:568
      clear_scatter_offsets(curr_dram_input_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
ffc02390:	008dd783          	lhu	a5, 8(s11)
ffc02394:	06412683          	lw	a3, 100(sp)
ffc02398:	0d010713          	addi	a4, sp, 208
ffc0239c:	000d8613          	mv	a2, s11
ffc023a0:	000c8593          	mv	a1, s9
ffc023a4:	fe4a0513          	addi	a0, s4, -28
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:565
      dram_num_partial_q_slot_issued_tiles += data_rec_chunk_size_tiles;
ffc023a8:	01098833          	add	a6, s3, a6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:566
      next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = dram_num_partial_q_slot_issued_tiles;
ffc023ac:	010ca823          	sw	a6, 16(s9)
ffc023b0:	07012423          	sw	a6, 104(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:568
      clear_scatter_offsets(curr_dram_input_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
ffc023b4:	cedfe0ef          	jal	ra, ffc010a0 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:571
      in_flight_data_rec_chunks++;
ffc023b8:	04412783          	lw	a5, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:573
      if (!is_dram_read_opt_enabled) {
ffc023bc:	06812803          	lw	a6, 104(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:571
      in_flight_data_rec_chunks++;
ffc023c0:	00178693          	addi	a3, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:572
      in_flight_bytes += data_rec_chunk_size_bytes;
ffc023c4:	05812783          	lw	a5, 88(sp)
ffc023c8:	00f90933          	add	s2, s2, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:573
      if (!is_dram_read_opt_enabled) {
ffc023cc:	04812783          	lw	a5, 72(sp)
ffc023d0:	00079463          	bnez	a5, ffc023d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x824>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:574
        curr_phase_tiles_remaining_to_issue -= data_rec_chunk_size_tiles;
ffc023d4:	413484b3          	sub	s1, s1, s3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:578
      if (full_q_slot_recv) {
ffc023d8:	06012783          	lw	a5, 96(sp)
ffc023dc:	0d079263          	bne	a5, a6, ffc024a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8ec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:580
        uint32_t rdptr_val_issue = next_dram_q_issue->dram_ptr_issued_q_slots;
ffc023e0:	006cd783          	lhu	a5, 6(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:586
        uint32_t dram_data_buf_fetch_rdptr_byte = next_dram_q_issue->dram_ptr_issued_byte;
ffc023e4:	018ca703          	lw	a4, 24(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:579
        uint32_t q_slot_size_bytes = dram_io_scatter_state->q_slot_size_bytes;
ffc023e8:	00cc2503          	lw	a0, 12(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:582
        min_dram_io_entries--;
ffc023ec:	fffd0d13          	addi	s10, s10, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:584
        next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = 0;
ffc023f0:	000ca823          	sw	zero, 16(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:586
        uint32_t dram_data_buf_fetch_rdptr_byte = next_dram_q_issue->dram_ptr_issued_byte;
ffc023f4:	000a8613          	mv	a2, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
ffc023f8:	00000593          	li	a1, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc023fc:	06060663          	beqz	a2, ffc02468 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8b4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
ffc02400:	00167813          	andi	a6, a2, 1
ffc02404:	00080463          	beqz	a6, ffc0240c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x858>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc02408:	00a585b3          	add	a1, a1, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc0240c:	00165613          	srli	a2, a2, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc02410:	00151513          	slli	a0, a0, 0x1
ffc02414:	fe9ff06f          	j	ffc023fc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x848>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:510
    uint32_t rd_ptr_autoinc = (next_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
ffc02418:	01075a83          	lhu	s5, 16(a4)
ffc0241c:	e19ff06f          	j	ffc02234 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x680>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:554
          dram_input_stream_issue_scatter_read(curr_dram_input_stream_state->input_noc, next_dram_q_issue->dram_ptr_issued_byte, data_rec_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
ffc02420:	018ca583          	lw	a1, 24(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:552
          uint32_t scatter_loop_index = curr_dram_input_stream_state->scatter_loop_index;
ffc02424:	0cc12c23          	sw	a2, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:553
          uint32_t scatter_loop_inc = curr_dram_input_stream_state->scatter_loop_inc;
ffc02428:	ff4a2603          	lw	a2, -12(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:554
          dram_input_stream_issue_scatter_read(curr_dram_input_stream_state->input_noc, next_dram_q_issue->dram_ptr_issued_byte, data_rec_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
ffc0242c:	01112423          	sw	a7, 8(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:553
          uint32_t scatter_loop_inc = curr_dram_input_stream_state->scatter_loop_inc;
ffc02430:	0cc12e23          	sw	a2, 220(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:554
          dram_input_stream_issue_scatter_read(curr_dram_input_stream_state->input_noc, next_dram_q_issue->dram_ptr_issued_byte, data_rec_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
ffc02434:	0dc10613          	addi	a2, sp, 220
ffc02438:	00c12223          	sw	a2, 4(sp)
ffc0243c:	0d810613          	addi	a2, sp, 216
ffc02440:	00c12023          	sw	a2, 0(sp)
ffc02444:	0d010893          	addi	a7, sp, 208
ffc02448:	00098613          	mv	a2, s3
ffc0244c:	00407097          	auipc	ra, 0x407
ffc02450:	cb8080e7          	jalr	-840(ra) # 9104 <TENSIX_MAILBOX_BASE+0x149104>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:556
          curr_dram_input_stream_state->scatter_loop_index = scatter_loop_index;
ffc02454:	0d812783          	lw	a5, 216(sp)
ffc02458:	fefa2823          	sw	a5, -16(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:557
          curr_dram_input_stream_state->scatter_loop_inc = scatter_loop_inc;
ffc0245c:	0dc12783          	lw	a5, 220(sp)
ffc02460:	fefa2a23          	sw	a5, -12(s4)
ffc02464:	f29ff06f          	j	ffc0238c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x7d8>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
ffc02468:	05012603          	lw	a2, 80(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
ffc0246c:	00b70733          	add	a4, a4, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
ffc02470:	00c76463          	bltu	a4, a2, ffc02478 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8c4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
ffc02474:	40c70733          	sub	a4, a4, a2
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
ffc02478:	01578ab3          	add	s5, a5, s5
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:589
        rdptr_val_issue = dram_io_incr_ptr(rdptr_val_issue, rd_ptr_autoinc, next_dram_q_issue->dram_buf_size_q_slots);
ffc0247c:	00ccd783          	lhu	a5, 12(s9)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:54
  uint32_t double_buf_size_q_slots = 2*buf_size_q_slots;
ffc02480:	00179793          	slli	a5, a5, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
ffc02484:	00fae463          	bltu	s5, a5, ffc0248c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8d8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
ffc02488:	40fa8ab3          	sub	s5, s5, a5
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1854
      dram_q_state_t tt_l1_ptr * next_dram_q_issue_temp = curr_dram_input_stream_state->next_dram_q_issue;
ffc0248c:	000c8793          	mv	a5, s9
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:592
          next_dram_q_issue->dram_ptr_issued_byte = dram_data_buf_fetch_rdptr_byte;
ffc02490:	00e7ac23          	sw	a4, 24(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:593
          next_dram_q_issue->dram_ptr_issued_q_slots = rdptr_val_issue;
ffc02494:	01579323          	sh	s5, 6(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:594
          next_dram_q_issue = (dram_q_state_t tt_l1_ptr *)next_dram_q_issue->next;
ffc02498:	0207a783          	lw	a5, 32(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:595
          if (next_dram_q_issue == first_dram_q_issue) {
ffc0249c:	fefc9ae3          	bne	s9, a5, ffc02490 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8dc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:605
    if (!is_dram_read_opt_enabled) {
ffc024a0:	04812783          	lw	a5, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:602
    curr_dram_input_stream_state->min_dram_io_entries = min_dram_io_entries;
ffc024a4:	fdaa1723          	sh	s10, -50(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:603
    curr_dram_input_stream_state->in_flight_data_rec_chunks = in_flight_data_rec_chunks;
ffc024a8:	fcda1623          	sh	a3, -52(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:604
    curr_dram_input_stream_state->in_flight_bytes = in_flight_bytes;
ffc024ac:	fd2a2e23          	sw	s2, -36(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:605
    if (!is_dram_read_opt_enabled) {
ffc024b0:	00078463          	beqz	a5, ffc024b8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x904>
ffc024b4:	50c0106f          	j	ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
ffc024b8:	00442783          	lw	a5, 4(s0)
ffc024bc:	ffff0737          	lui	a4, 0xffff0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
ffc024c0:	000a0693          	mv	a3, s4
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:611
        if (fork_stream_id == NULL_STREAM) {
ffc024c4:	0ff00593          	li	a1, 255
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
ffc024c8:	00e7f7b3          	and	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
ffc024cc:	0097e7b3          	or	a5, a5, s1
ffc024d0:	00f42223          	sw	a5, 4(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
ffc024d4:	ffff0637          	lui	a2, 0xffff0
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:610
        uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
ffc024d8:	0006c783          	lbu	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:611
        if (fork_stream_id == NULL_STREAM) {
ffc024dc:	00168693          	addi	a3, a3, 1
ffc024e0:	00b79463          	bne	a5, a1, ffc024e8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x934>
ffc024e4:	4dc0106f          	j	ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
ffc024e8:	017787b3          	add	a5, a5, s7
ffc024ec:	00c79793          	slli	a5, a5, 0xc
ffc024f0:	0047a703          	lw	a4, 4(a5)
ffc024f4:	00c77733          	and	a4, a4, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
ffc024f8:	00976733          	or	a4, a4, s1
ffc024fc:	00e7a223          	sw	a4, 4(a5)
ffc02500:	fd9ff06f          	j	ffc024d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x924>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1958
                  uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc02504:	f68fe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc02508:	f28fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc0250c:	01750533          	add	a0, a0, s7
ffc02510:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1958
ffc02514:	01052c03          	lw	s8, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1959
                  uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
ffc02518:	0c012503          	lw	a0, 192(sp)
ffc0251c:	f50fe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1958
                  uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc02520:	010c1c13          	slli	s8, s8, 0x10
ffc02524:	010c5c13          	srli	s8, s8, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1959
                  uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
ffc02528:	00050d13          	mv	s10, a0
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
ffc0252c:	f78fe0ef          	jal	ra, ffc00ca4 <is_input_operand_decoupled(int)>
ffc02530:	02050863          	beqz	a0, ffc02560 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9ac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc02534:	000d0513          	mv	a0, s10
ffc02538:	ef8fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc0253c:	01750533          	add	a0, a0, s7
ffc02540:	00c51513          	slli	a0, a0, 0xc
ffc02544:	01050513          	addi	a0, a0, 16
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1959
ffc02548:	00052783          	lw	a5, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1962
                if (tiles_available == 0) {
ffc0254c:	01079793          	slli	a5, a5, 0x10
ffc02550:	0107d793          	srli	a5, a5, 0x10
ffc02554:	00fc0463          	beq	s8, a5, ffc0255c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9a8>
ffc02558:	5680106f          	j	ffc03ac0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f0c>
ffc0255c:	54c0106f          	j	ffc03aa8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1ef4>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
ffc02560:	000d0513          	mv	a0, s10
ffc02564:	eccfe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc02568:	01750533          	add	a0, a0, s7
ffc0256c:	00c51513          	slli	a0, a0, 0xc
ffc02570:	00c50513          	addi	a0, a0, 12
ffc02574:	fd5ff06f          	j	ffc02548 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x994>
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:637
  uint32_t rd_ptr_autoinc = (next_dram_q_in_flight->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
ffc02578:	010c5703          	lhu	a4, 16(s8)
ffc0257c:	5f00106f          	j	ffc03b6c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1fb8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:678
      next_dram_q_in_flight = (dram_q_state_t tt_l1_ptr *)next_dram_q_in_flight->next;
ffc02580:	0204a483          	lw	s1, 32(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:679
      l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;
ffc02584:	0004ac03          	lw	s8, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:680
      if (next_dram_q_in_flight == first_dram_q_in_flight) {
ffc02588:	00940463          	beq	s0, s1, ffc02590 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9dc>
ffc0258c:	6280106f          	j	ffc03bb4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:686
  if (has_multi_readers || rd_grd_ptr_autoinc) {
ffc02590:	000c9663          	bnez	s9, ffc0259c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9e8>
ffc02594:	000d9463          	bnez	s11, ffc0259c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9e8>
ffc02598:	2d80106f          	j	ffc03870 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1cbc>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1934
          dram_q_state_t tt_l1_ptr * next_dram_q_in_flight = curr_dram_input_stream_state->next_dram_q_in_flight;
ffc0259c:	00048b13          	mv	s6, s1
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:689
      if (!l1_ptrs->dram_padding) {
ffc025a0:	03ec4783          	lbu	a5, 62(s8)
ffc025a4:	00078463          	beqz	a5, ffc025ac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9f8>
ffc025a8:	2b80106f          	j	ffc03860 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1cac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:690
        uint32_t rd_grd_ptr_autoinc = l1_ptrs->rd_grd_ptr_autoinc;
ffc025ac:	002c5703          	lhu	a4, 2(s8)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc025b0:	048c2c83          	lw	s9, 72(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc025b4:	04cc2783          	lw	a5, 76(s8)
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:693
        uint32_t curr_stride_wrap = 0;
ffc025b8:	0c012c23          	sw	zero, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:694
        uint32_t next_stride_wrap = 0;
ffc025bc:	0c012e23          	sw	zero, 220(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:695
        uint32_t total_readers_minus_one = l1_ptrs->total_readers - 1;
ffc025c0:	055c4d03          	lbu	s10, 85(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:696
        bool has_multi_readers = total_readers_minus_one > 0 && rd_grd_ptr_autoinc;
ffc025c4:	00000d93          	li	s11, 0
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
ffc025c8:	06f12423          	sw	a5, 104(sp)
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:695
        uint32_t total_readers_minus_one = l1_ptrs->total_readers - 1;
ffc025cc:	fffd0d13          	addi	s10, s10, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:696
        bool has_multi_readers = total_readers_minus_one > 0 && rd_grd_ptr_autoinc;
ffc025d0:	000d0463          	beqz	s10, ffc025d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa24>
ffc025d4:	00e03db3          	snez	s11, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:698
        stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
ffc025d8:	0dc10693          	addi	a3, sp, 220
ffc025dc:	0d810613          	addi	a2, sp, 216
ffc025e0:	0d410593          	addi	a1, sp, 212
ffc025e4:	000c0513          	mv	a0, s8
ffc025e8:	06e12a23          	sw	a4, 116(sp)
ffc025ec:	f30fe0ef          	jal	ra, ffc00d1c <stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:700
        if ((next_dram_q_in_flight->dram_q_state_flags & DRAM_Q_RAM) == 0) {
ffc025f0:	004b4783          	lbu	a5, 4(s6)
ffc025f4:	0017f793          	andi	a5, a5, 1
ffc025f8:	00078463          	beqz	a5, ffc02600 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa4c>
ffc025fc:	2540106f          	j	ffc03850 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:701
          if (!has_multi_readers || l1_ptrs->reader_index == total_readers_minus_one) {
ffc02600:	07412703          	lw	a4, 116(sp)
ffc02604:	000d9463          	bnez	s11, ffc0260c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa58>
ffc02608:	2f40106f          	j	ffc038fc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1d48>
ffc0260c:	054c4783          	lbu	a5, 84(s8)
ffc02610:	00fd1463          	bne	s10, a5, ffc02618 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa64>
ffc02614:	1e80106f          	j	ffc037fc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c48>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:720
          uint32_t reader_index = l1_ptrs->reader_index;
ffc02618:	054c4703          	lbu	a4, 84(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:722
            l1_ptrs->stride_wrap = next_stride_wrap;
ffc0261c:	0dc12783          	lw	a5, 220(sp)
ffc02620:	0ff7f693          	zext.b	a3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:721
          if (reader_index == total_readers_minus_one) {
ffc02624:	04ed1c63          	bne	s10, a4, ffc0267c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xac8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:723
            l1_ptrs->wr_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc02628:	00f037b3          	snez	a5, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:722
            l1_ptrs->stride_wrap = next_stride_wrap;
ffc0262c:	04dc0ba3          	sb	a3, 87(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:723
            l1_ptrs->wr_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc02630:	00e79793          	slli	a5, a5, 0xe
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:727
            l1_ptrs->wr_stride = curr_stride_wrap + reader_index + 1;
ffc02634:	02fc1623          	sh	a5, 44(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:728
            l1_ptrs->rd_stride = curr_stride_wrap + reader_index + 1;
ffc02638:	00fc1623          	sh	a5, 12(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:731
          while (!ncrisc_noc_fast_write_ok(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc0263c:	00300593          	li	a1, 3
ffc02640:	00090513          	mv	a0, s2
ffc02644:	eb4fe0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc02648:	fe050ae3          	beqz	a0, ffc0263c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa88>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:732
          ncrisc_noc_fast_write(input_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc0264c:	06812603          	lw	a2, 104(sp)
ffc02650:	00cc8693          	addi	a3, s9, 12
ffc02654:	0196b733          	sltu	a4, a3, s9
ffc02658:	00c70733          	add	a4, a4, a2
ffc0265c:	00000893          	li	a7, 0
ffc02660:	00100813          	li	a6, 1
ffc02664:	00200793          	li	a5, 2
ffc02668:	02cc0613          	addi	a2, s8, 44
ffc0266c:	00300593          	li	a1, 3
ffc02670:	00090513          	mv	a0, s2
ffc02674:	c55fe0ef          	jal	ra, ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
ffc02678:	1e00106f          	j	ffc03858 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1ca4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:726
            l1_ptrs->stride_wrap = next_stride_wrap;
ffc0267c:	04dc0ba3          	sb	a3, 87(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:727
            l1_ptrs->wr_stride = curr_stride_wrap + reader_index + 1;
ffc02680:	0d812783          	lw	a5, 216(sp)
ffc02684:	00178793          	addi	a5, a5, 1
ffc02688:	00e787b3          	add	a5, a5, a4
ffc0268c:	fa9ff06f          	j	ffc02634 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa80>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2000
                next_dram_q_in_flight->flushed_partial_q_slot_tiles = flushed_partial_q_slot_tiles;
ffc02690:	00942a23          	sw	s1, 20(s0)
ffc02694:	1f00106f          	j	ffc03884 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1cd0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2018
              if (!curr_dram_input_stream_state->q_ptr_update_pending)
ffc02698:	fcaa4783          	lbu	a5, -54(s4)
ffc0269c:	0a079063          	bnez	a5, ffc0273c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb88>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2019
                push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
ffc026a0:	04412703          	lw	a4, 68(sp)
ffc026a4:	04812683          	lw	a3, 72(sp)
ffc026a8:	07012603          	lw	a2, 112(sp)
ffc026ac:	0c012583          	lw	a1, 192(sp)
ffc026b0:	04012503          	lw	a0, 64(sp)
ffc026b4:	f74fe0ef          	jal	ra, ffc00e28 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2023
              prev_in_flight_data_rec_chunks--;
ffc026b8:	04c12783          	lw	a5, 76(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2025
              curr_dram_input_stream_state->in_flight_bytes -= prev_data_rec_chunk_size_bytes;
ffc026bc:	04412703          	lw	a4, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2023
              prev_in_flight_data_rec_chunks--;
ffc026c0:	fff78793          	addi	a5, a5, -1
ffc026c4:	04f12623          	sw	a5, 76(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2024
              in_flight_data_rec_chunks--;
ffc026c8:	05812783          	lw	a5, 88(sp)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
ffc026cc:	00ea8ab3          	add	s5, s5, a4
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2024
ffc026d0:	fff78793          	addi	a5, a5, -1
ffc026d4:	04f12c23          	sw	a5, 88(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2025
              curr_dram_input_stream_state->in_flight_bytes -= prev_data_rec_chunk_size_bytes;
ffc026d8:	fdca2783          	lw	a5, -36(s4)
ffc026dc:	40e787b3          	sub	a5, a5, a4
ffc026e0:	fcfa2e23          	sw	a5, -36(s4)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
ffc026e4:	06012783          	lw	a5, 96(sp)
ffc026e8:	00fae463          	bltu	s5, a5, ffc026f0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb3c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
ffc026ec:	40fa8ab3          	sub	s5, s5, a5
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2033
              if (is_dram_read_opt_enabled) {
ffc026f0:	03412783          	lw	a5, 52(sp)
ffc026f4:	00078863          	beqz	a5, ffc02704 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb50>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2034
                if (!curr_phase_tiles_remaining_to_issue) {
ffc026f8:	0cc12783          	lw	a5, 204(sp)
ffc026fc:	00079463          	bnez	a5, ffc02704 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb50>
ffc02700:	5280106f          	j	ffc03c28 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2074>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2039
              if (!prev_in_flight_data_rec_chunks) {
ffc02704:	04c12783          	lw	a5, 76(sp)
ffc02708:	00079463          	bnez	a5, ffc02710 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb5c>
ffc0270c:	51c0106f          	j	ffc03c28 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2074>
dram_input_stream_check_next_chunk_flushed(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:94
  }
}

inline __attribute__((always_inline)) bool dram_input_stream_check_next_chunk_flushed(uint32_t input_noc, uint32_t chunk_pending_start_addr, uint32_t chunk_size_bytes, uint32_t scatter_chunk_size_bytes, uint32_t& transaction_id) {
  uint32_t transaction_id_temp = transaction_id;
  if (transaction_id_temp == NCRISC_RD_END_TRID) {
ffc02710:	00d00793          	li	a5, 13
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:95
    transaction_id_temp = NCRISC_RD_START_TRID;
ffc02714:	00400b13          	li	s6, 4
dram_input_stream_check_next_chunk_flushed(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:94
  if (transaction_id_temp == NCRISC_RD_END_TRID) {
ffc02718:	00f98463          	beq	s3, a5, ffc02720 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb6c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:97
  } else {
    transaction_id_temp += 1;
ffc0271c:	00198b13          	addi	s6, s3, 1 # 2001 <__trisc1_size+0x1>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:99
  }
  bool reads_flushed = ncrisc_noc_reads_flushed(input_noc, transaction_id_temp);
ffc02720:	000b0593          	mv	a1, s6
ffc02724:	00090513          	mv	a0, s2
ffc02728:	dacfe0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:100
  if (reads_flushed) {
ffc0272c:	00051463          	bnez	a0, ffc02734 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb80>
ffc02730:	4f80106f          	j	ffc03c28 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2074>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:101
    transaction_id = transaction_id_temp;
ffc02734:	000b0993          	mv	s3, s6
ffc02738:	3f80106f          	j	ffc03b30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2021
                curr_dram_input_stream_state->q_ptr_update_pending = false;
ffc0273c:	fc0a0523          	sb	zero, -54(s4)
ffc02740:	f79ff06f          	j	ffc026b8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb04>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:405
}

void process_dram_write(
  uint32_t &num_dram_output_streams, dram_output_stream_state_t *dram_output_stream_state, uint32_t &dram_ptr_update_cnt, uint32_t &total_tiles_to_clear
) {
  dram_output_stream_state_t* curr_dram_output_stream_state = dram_output_stream_state;
ffc02744:	03812783          	lw	a5, 56(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2063
        );
#endif
      }
    }

    uint32_t total_tiles_to_clear = 0;
ffc02748:	04012823          	sw	zero, 80(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:405
ffc0274c:	84878c93          	addi	s9, a5, -1976
ffc02750:	4b818793          	addi	a5, gp, 1208 # ffb00cb8 <dram_output_stream_state>
ffc02754:	08f12c23          	sw	a5, 152(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:454
        dram_stream = 0;
      if (!dram_stream)
        continue;
    }

    uint32_t write_stride = curr_dram_output_stream_state->write_stride & ~DRAM_STRIDE_UPDATE_WAIT;
ffc02758:	ffff87b7          	lui	a5, 0xffff8
ffc0275c:	fff78793          	addi	a5, a5, -1 # ffff7fff <TENSIX_MAILBOX_BASE+0x137fff>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:406
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state++) {
ffc02760:	06012023          	sw	zero, 96(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:454
    uint32_t write_stride = curr_dram_output_stream_state->write_stride & ~DRAM_STRIDE_UPDATE_WAIT;
ffc02764:	06f12e23          	sw	a5, 124(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:406
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state++) {
ffc02768:	03812783          	lw	a5, 56(sp)
ffc0276c:	06012703          	lw	a4, 96(sp)
ffc02770:	b4c7a783          	lw	a5, -1204(a5)
ffc02774:	1cf76863          	bltu	a4, a5, ffc02944 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd90>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
ffc02778:	000017b7          	lui	a5, 0x1
ffc0277c:	fff78793          	addi	a5, a5, -1 # fff <__firmware_stack_size+0xc2f>
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
ffc02780:	00010c37          	lui	s8, 0x10
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
ffc02784:	02f12a23          	sw	a5, 52(sp)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
ffc02788:	fffc0c13          	addi	s8, s8, -1 # ffff <dram_stream_intf.cc.5f8411f1+0x1bec>
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:893
  }

}

void process_dram_write_clear(uint32_t &num_dram_output_streams, dram_output_stream_state_t *dram_output_stream_state, uint32_t& total_tiles_to_clear) {
  while (total_tiles_to_clear) {
ffc0278c:	05012783          	lw	a5, 80(sp)
ffc02790:	cc078063          	beqz	a5, ffc01c50 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:895
      
    RISC_POST_STATUS(0x20000000 | total_tiles_to_clear);
ffc02794:	05012703          	lw	a4, 80(sp)
ffc02798:	200007b7          	lui	a5, 0x20000
ffc0279c:	00f767b3          	or	a5, a4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:897

    dram_output_stream_state_t* curr_dram_output_stream_state_clear = dram_output_stream_state;
ffc027a0:	09812d83          	lw	s11, 152(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc027a4:	ffb20737          	lui	a4, 0xffb20
ffc027a8:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:898
    for (uint32_t i = 0;
ffc027ac:	00000b13          	li	s6, 0
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
ffc027b0:	00100c93          	li	s9, 1
stream_set_curr_phase_num_msgs(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:201
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX) & ~0xFFFFFF;
ffc027b4:	ff000d37          	lui	s10, 0xff000
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:899
         i < num_dram_output_streams;
ffc027b8:	03812783          	lw	a5, 56(sp)
ffc027bc:	b4c7a783          	lw	a5, -1204(a5) # 1ffffb4c <substitutes.cpp.cd30c172+0x1ffe1236>
ffc027c0:	fcfb76e3          	bgeu	s6, a5, ffc0278c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbd8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:902
         i++, curr_dram_output_stream_state_clear++) {

      uint32_t tiles_to_clear = curr_dram_output_stream_state_clear->tiles_to_clear;
ffc027c4:	006dda03          	lhu	s4, 6(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:905
      RISC_POST_DEBUG(0x21000000 | i);
      RISC_POST_DEBUG(0x22000000 | tiles_to_clear);
      if (!tiles_to_clear) {
ffc027c8:	160a0863          	beqz	s4, ffc02938 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd84>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:912
      }
      
      // Reg read, flushed by immediate subsequent use
      uint32_t moves_raw_data = curr_dram_output_stream_state_clear->moves_raw_data;
      uint32_t stream_id = curr_dram_output_stream_state_clear->stream_id;
      uint32_t dram_output_no_push = curr_dram_output_stream_state_clear->stream_info->dram_io_info->dram_output_no_push;
ffc027cc:	05cda783          	lw	a5, 92(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:911
      uint32_t stream_id = curr_dram_output_stream_state_clear->stream_id;
ffc027d0:	000dca83          	lbu	s5, 0(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:912
      uint32_t dram_output_no_push = curr_dram_output_stream_state_clear->stream_info->dram_io_info->dram_output_no_push;
ffc027d4:	0887a783          	lw	a5, 136(a5)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc027d8:	017a84b3          	add	s1, s5, s7
ffc027dc:	00c49493          	slli	s1, s1, 0xc
ffc027e0:	08c4a983          	lw	s3, 140(s1)
ffc027e4:	002dc903          	lbu	s2, 2(s11)
ffc027e8:	0029d993          	srli	s3, s3, 0x2
ffc027ec:	0019f993          	andi	s3, s3, 1
ffc027f0:	0067c783          	lbu	a5, 6(a5)
ffc027f4:	00f96933          	or	s2, s2, a5
ffc027f8:	0ff97913          	zext.b	s2, s2
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:915
      uint32_t phase_active = stream_phase_is_active(stream_id); 
      uint16_t tiles_available;   
      if (moves_raw_data || dram_output_no_push) {
ffc027fc:	00091463          	bnez	s2, ffc02804 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc50>
ffc02800:	7e50006f          	j	ffc037e4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c30>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:916
        uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc02804:	000a8513          	mv	a0, s5
ffc02808:	c64fe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc0280c:	c24fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc02810:	01750533          	add	a0, a0, s7
ffc02814:	00c51513          	slli	a0, a0, 0xc
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:916
ffc02818:	01052403          	lw	s0, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:917
        uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
ffc0281c:	000a8513          	mv	a0, s5
ffc02820:	c4cfe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
ffc02824:	02a12e23          	sw	a0, 60(sp)
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
ffc02828:	c7cfe0ef          	jal	ra, ffc00ca4 <is_input_operand_decoupled(int)>
ffc0282c:	03c12783          	lw	a5, 60(sp)
ffc02830:	6e0508e3          	beqz	a0, ffc03720 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b6c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc02834:	00078513          	mv	a0, a5
ffc02838:	bf8fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc0283c:	01750533          	add	a0, a0, s7
ffc02840:	00c51513          	slli	a0, a0, 0xc
ffc02844:	01050513          	addi	a0, a0, 16
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:917
ffc02848:	00052783          	lw	a5, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:926
        tiles_available = tiles_to_clear;
#else
        tiles_available = stream_tiles_outstanding(stream_id);   
#endif
      }     
      if (!phase_active || !tiles_available) {
ffc0284c:	0e098663          	beqz	s3, ffc02938 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd84>
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:55
  return a - b;
ffc02850:	40f40433          	sub	s0, s0, a5
ffc02854:	01041413          	slli	s0, s0, 0x10
ffc02858:	01045413          	srli	s0, s0, 0x10
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:926
ffc0285c:	0c040e63          	beqz	s0, ffc02938 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd84>
stream_receiver_endpoint_tile_clearing_finished(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:335
      return (NOC_STREAM_READ_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX) == 0);
ffc02860:	0244a783          	lw	a5, 36(s1)
ffc02864:	02448713          	addi	a4, s1, 36
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:931
        continue;
      }
      
#ifdef RISC_B0_HW
      while(!stream_receiver_endpoint_tile_clearing_finished(stream_id));
ffc02868:	fe079ce3          	bnez	a5, ffc02860 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xcac>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
ffc0286c:	0904a783          	lw	a5, 144(s1)
ffc02870:	03412683          	lw	a3, 52(sp)
ffc02874:	00c7d793          	srli	a5, a5, 0xc
ffc02878:	00d7f7b3          	and	a5, a5, a3
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:935
#endif

      uint32_t num_msgs_left_in_phase = stream_get_curr_phase_num_msgs(stream_id);
      if (num_msgs_left_in_phase < tiles_available)
ffc0287c:	0087f663          	bgeu	a5, s0, ffc02888 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xcd4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:936
        tiles_available = num_msgs_left_in_phase;
ffc02880:	01079413          	slli	s0, a5, 0x10
ffc02884:	01045413          	srli	s0, s0, 0x10
ffc02888:	000a0793          	mv	a5, s4
ffc0288c:	01447463          	bgeu	s0, s4, ffc02894 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xce0>
ffc02890:	00040793          	mv	a5, s0
ffc02894:	01079413          	slli	s0, a5, 0x10
ffc02898:	01045413          	srli	s0, s0, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:939
      if (tiles_to_clear < tiles_available)
        tiles_available = tiles_to_clear;
      if (!tiles_available) {
ffc0289c:	08040e63          	beqz	s0, ffc02938 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd84>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:944
        continue;
      }

      tiles_to_clear -= tiles_available;
      total_tiles_to_clear -= tiles_available;
ffc028a0:	05012783          	lw	a5, 80(sp)
ffc028a4:	408787b3          	sub	a5, a5, s0
ffc028a8:	04f12823          	sw	a5, 80(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:945
      if (moves_raw_data || dram_output_no_push) {
ffc028ac:	6a0902e3          	beqz	s2, ffc03750 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:947

        volatile uint32_t tt_reg_ptr * tiles_acked_ptr = get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
ffc028b0:	000a8513          	mv	a0, s5
ffc028b4:	bb8fe0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
ffc028b8:	00050913          	mv	s2, a0
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
ffc028bc:	be8fe0ef          	jal	ra, ffc00ca4 <is_input_operand_decoupled(int)>
ffc028c0:	66050ce3          	beqz	a0, ffc03738 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b84>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc028c4:	00090513          	mv	a0, s2
ffc028c8:	b68fe0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc028cc:	01750533          	add	a0, a0, s7
ffc028d0:	00c51513          	slli	a0, a0, 0xc
ffc028d4:	01050513          	addi	a0, a0, 16
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:948
        uint16_t operand_tiles_acked = (uint16_t)tiles_acked_ptr[0];
ffc028d8:	00052783          	lw	a5, 0(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
ffc028dc:	00f407b3          	add	a5, s0, a5
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:950
        uint16_t new_epoch_tiles_acked = op_pack_tiles_ptr_add(operand_tiles_acked, tiles_available);
        tiles_acked_ptr[0] = new_epoch_tiles_acked;
ffc028e0:	01079793          	slli	a5, a5, 0x10
ffc028e4:	0107d793          	srli	a5, a5, 0x10
ffc028e8:	00f52023          	sw	a5, 0(a0)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
ffc028ec:	0084a783          	lw	a5, 8(s1)
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:109
}

inline __attribute__((always_inline)) uint32_t get_total_in_flight_tiles(dram_output_stream_state_t* curr_dram_output_stream_state) {
#ifdef RISC_B0_HW
  uint32_t total_in_flight_tiles = 0;
  if (curr_dram_output_stream_state->moves_raw_data) {
ffc028f0:	002dc683          	lbu	a3, 2(s11)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:159
ffc028f4:	0187f733          	and	a4, a5, s8
ffc028f8:	008dd783          	lhu	a5, 8(s11)
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:109
ffc028fc:	00069663          	bnez	a3, ffc02908 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd54>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:112
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
  } else {
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles + curr_dram_output_stream_state->in_flight_tiles_2;
ffc02900:	03edd683          	lhu	a3, 62(s11)
ffc02904:	00d787b3          	add	a5, a5, a3
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:953
        uint32_t curr_phase_tiles_remaining = stream_rec_endpoint_get_phase_tiles_count(stream_id);
        uint32_t total_in_flight_tiles = get_total_in_flight_tiles(curr_dram_output_stream_state_clear);
        if (!curr_phase_tiles_remaining && !total_in_flight_tiles) {
ffc02908:	00f767b3          	or	a5, a4, a5
ffc0290c:	02079263          	bnez	a5, ffc02930 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:954
          uint32_t flags = curr_dram_output_stream_state_clear->stream_info->flags;
ffc02910:	05cda783          	lw	a5, 92(s11)
ffc02914:	03c7a783          	lw	a5, 60(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:955
          if ((flags & STREAM_BRISC_PACK) != 0)
ffc02918:	4007f793          	andi	a5, a5, 1024
ffc0291c:	00078863          	beqz	a5, ffc0292c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd78>
stream_set_curr_phase_num_msgs(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:201
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX) & ~0xFFFFFF;
ffc02920:	0904a783          	lw	a5, 144(s1)
ffc02924:	01a7f7b3          	and	a5, a5, s10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:202
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, (rmw | (val << CURR_PHASE_NUM_MSGS)));
ffc02928:	08f4a823          	sw	a5, 144(s1)
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
ffc0292c:	0794ae23          	sw	s9, 124(s1)
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:966
        stream_receiver_endpoint_tiles_clear_b0(stream_id, tiles_available);
#else
        stream_receiver_endpoint_tiles_clear(stream_id, tiles_available);
#endif
      }
      curr_dram_output_stream_state_clear->tiles_to_clear = tiles_to_clear;  
ffc02930:	408a0433          	sub	s0, s4, s0
ffc02934:	008d9323          	sh	s0, 6(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:898
    for (uint32_t i = 0;
ffc02938:	001b0b13          	addi	s6, s6, 1
ffc0293c:	060d8d93          	addi	s11, s11, 96
ffc02940:	e79ff06f          	j	ffc027b8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc04>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:409
    uint32_t epoch_q_slots_remaining = curr_dram_output_stream_state->epoch_q_slots_remaining;
ffc02944:	018cac03          	lw	s8, 24(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:411
    if (!epoch_q_slots_remaining) {
ffc02948:	0e0c0463          	beqz	s8, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:408
    uint32_t stream_id = curr_dram_output_stream_state->stream_id;
ffc0294c:	000cc783          	lbu	a5, 0(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:426
    dram_q_state_t tt_l1_ptr * next_dram_q_issue = curr_dram_output_stream_state->next_dram_q_issue;
ffc02950:	058ca903          	lw	s2, 88(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:408
    uint32_t stream_id = curr_dram_output_stream_state->stream_id;
ffc02954:	06f12223          	sw	a5, 100(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc02958:	f0000737          	lui	a4, 0xf0000
ffc0295c:	ffb207b7          	lui	a5, 0xffb20
ffc02960:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:427
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
ffc02964:	00092783          	lw	a5, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:428
    uint16_t data_send_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
ffc02968:	03c7da03          	lhu	s4, 60(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:427
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
ffc0296c:	04f12023          	sw	a5, 64(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:429
    uint32_t data_send_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
ffc02970:	0387a783          	lw	a5, 56(a5)
ffc02974:	04f12a23          	sw	a5, 84(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:430
    uint32_t dram_writes_with_cmd_buf = curr_dram_output_stream_state->stream_info->dram_io_info->dram_writes_with_cmd_buf;
ffc02978:	05cca783          	lw	a5, 92(s9)
ffc0297c:	0887a703          	lw	a4, 136(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:431
    uint32_t dram_output_no_push = curr_dram_output_stream_state->stream_info->dram_io_info->dram_output_no_push;
ffc02980:	0887a783          	lw	a5, 136(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:430
    uint32_t dram_writes_with_cmd_buf = curr_dram_output_stream_state->stream_info->dram_io_info->dram_writes_with_cmd_buf;
ffc02984:	01a74703          	lbu	a4, 26(a4) # f000001a <TENSIX_MAILBOX_BASE+0xf014001a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:431
    uint32_t dram_output_no_push = curr_dram_output_stream_state->stream_info->dram_io_info->dram_output_no_push;
ffc02988:	0067c783          	lbu	a5, 6(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:430
    uint32_t dram_writes_with_cmd_buf = curr_dram_output_stream_state->stream_info->dram_io_info->dram_writes_with_cmd_buf;
ffc0298c:	02e12a23          	sw	a4, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:431
    uint32_t dram_output_no_push = curr_dram_output_stream_state->stream_info->dram_io_info->dram_output_no_push;
ffc02990:	08f12023          	sw	a5, 128(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:434
    if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
ffc02994:	00071663          	bnez	a4, ffc029a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xdec>
ffc02998:	002cc783          	lbu	a5, 2(s9)
ffc0299c:	0a078463          	beqz	a5, ffc02a44 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe90>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
ffc029a0:	ffb207b7          	lui	a5, 0xffb20
ffc029a4:	2807a783          	lw	a5, 640(a5) # ffb20280 <TENSIX_MAILBOX_BASE+0xffc60280>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:437
        previous_writes_sent = previous_writes_sent && ncrisc_noc_nonposted_writes_sent(n, NCRISC_WR_DEF_TRID);
ffc029a8:	08079463          	bnez	a5, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
ffc029ac:	ffb307b7          	lui	a5, 0xffb30
ffc029b0:	2807a783          	lw	a5, 640(a5) # ffb30280 <TENSIX_MAILBOX_BASE+0xffc70280>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:437
ffc029b4:	06079e63          	bnez	a5, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:432
    uint32_t dram_stream = DRAM_STREAM_1;
ffc029b8:	00800d93          	li	s11, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:454
    uint32_t write_stride = curr_dram_output_stream_state->write_stride & ~DRAM_STRIDE_UPDATE_WAIT;
ffc029bc:	01ccd783          	lhu	a5, 28(s9)
ffc029c0:	07c12703          	lw	a4, 124(sp)
ffc029c4:	00e7f733          	and	a4, a5, a4
ffc029c8:	02e12e23          	sw	a4, 60(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:455
    bool is_strided_write = curr_dram_output_stream_state->total_write_strides > 1;
ffc029cc:	01ecd703          	lhu	a4, 30(s9)
ffc029d0:	04e12223          	sw	a4, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:456
    if (is_strided_write && (curr_dram_output_stream_state->write_stride & DRAM_STRIDE_UPDATE_WAIT)) {
ffc029d4:	04412683          	lw	a3, 68(sp)
ffc029d8:	00100713          	li	a4, 1
ffc029dc:	16d77263          	bgeu	a4, a3, ffc02b40 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf8c>
ffc029e0:	01079793          	slli	a5, a5, 0x10
ffc029e4:	4107d793          	srai	a5, a5, 0x10
ffc029e8:	1407dc63          	bgez	a5, ffc02b40 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf8c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc029ec:	ffb207b7          	lui	a5, 0xffb20
ffc029f0:	f0300737          	lui	a4, 0xf0300
ffc029f4:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:461
      if (!dram_writes_with_cmd_buf && !curr_dram_output_stream_state->moves_raw_data) {
ffc029f8:	03412783          	lw	a5, 52(sp)
ffc029fc:	06078463          	beqz	a5, ffc02a64 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xeb0>
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
ffc02a00:	06412783          	lw	a5, 100(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:474
      dram_q_state_t tt_l1_ptr * next_dram_q_issue = curr_dram_output_stream_state->next_dram_q_issue;
ffc02a04:	058ca983          	lw	s3, 88(s9)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
ffc02a08:	01778433          	add	s0, a5, s7
ffc02a0c:	00c41413          	slli	s0, s0, 0xc
ffc02a10:	02842483          	lw	s1, 40(s0)
header_reads_flushed(unsigned long, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:81
  return (ncrisc_noc_reads_flushed(noc, transaction_id) || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))));
ffc02a14:	00300593          	li	a1, 3
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:475
      volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
ffc02a18:	0009aa83          	lw	s5, 0(s3)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
ffc02a1c:	0014d493          	srli	s1, s1, 0x1
ffc02a20:	0014f493          	andi	s1, s1, 1
header_reads_flushed(unsigned long, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:81
ffc02a24:	00048513          	mv	a0, s1
ffc02a28:	aacfe0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc02a2c:	06051863          	bnez	a0, ffc02a9c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xee8>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:406
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state++) {
ffc02a30:	06012783          	lw	a5, 96(sp)
ffc02a34:	060c8c93          	addi	s9, s9, 96
ffc02a38:	00178793          	addi	a5, a5, 1
ffc02a3c:	06f12023          	sw	a5, 96(sp)
ffc02a40:	d29ff06f          	j	ffc02768 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbb4>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
ffc02a44:	00800513          	li	a0, 8
ffc02a48:	d50fe0ef          	jal	ra, ffc00f98 <stream_dram_write_ok(unsigned long)>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:442
      if (risc_dram_writes_sent(dram_writes_with_cmd_buf, DRAM_STREAM_1))
ffc02a4c:	f60516e3          	bnez	a0, ffc029b8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe04>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
ffc02a50:	00900513          	li	a0, 9
ffc02a54:	d44fe0ef          	jal	ra, ffc00f98 <stream_dram_write_ok(unsigned long)>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:445
      else if (risc_dram_writes_sent(dram_writes_with_cmd_buf, DRAM_STREAM_2))
ffc02a58:	fc050ce3          	beqz	a0, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:446
        dram_stream = DRAM_STREAM_2;
ffc02a5c:	00900d93          	li	s11, 9
ffc02a60:	f5dff06f          	j	ffc029bc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe08>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:461
      if (!dram_writes_with_cmd_buf && !curr_dram_output_stream_state->moves_raw_data) {
ffc02a64:	002cc783          	lbu	a5, 2(s9)
ffc02a68:	f8079ce3          	bnez	a5, ffc02a00 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe4c>
quick_q_t::peek(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:93
      ret_val = entry_0;
ffc02a6c:	034ca503          	lw	a0, 52(s9)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:460
      bool can_do_stride_update = true;
ffc02a70:	00100413          	li	s0, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:463
        if (sending_dram_stream_1 && !risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream_1))
ffc02a74:	00050663          	beqz	a0, ffc02a80 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xecc>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
ffc02a78:	d20fe0ef          	jal	ra, ffc00f98 <stream_dram_write_ok(unsigned long)>
ffc02a7c:	00050413          	mv	s0, a0
quick_q_t::peek(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:91
      ret_val = entry_1;
ffc02a80:	038ca503          	lw	a0, 56(s9)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:467
        if (sending_dram_stream_2 && !risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream_2))
ffc02a84:	00051663          	bnez	a0, ffc02a90 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xedc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:470
      if (!can_do_stride_update) {
ffc02a88:	f6041ce3          	bnez	s0, ffc02a00 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe4c>
ffc02a8c:	fa5ff06f          	j	ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
ffc02a90:	d08fe0ef          	jal	ra, ffc00f98 <stream_dram_write_ok(unsigned long)>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:467
        if (sending_dram_stream_2 && !risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream_2))
ffc02a94:	fe051ae3          	bnez	a0, ffc02a88 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xed4>
ffc02a98:	f99ff06f          	j	ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:486
      if (!stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap)) {
ffc02a9c:	0dc10693          	addi	a3, sp, 220
ffc02aa0:	0d810613          	addi	a2, sp, 216
ffc02aa4:	0d410593          	addi	a1, sp, 212
ffc02aa8:	000a8513          	mv	a0, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:484
      uint32_t curr_stride_wrap = 0;
ffc02aac:	0c012c23          	sw	zero, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:485
      uint32_t next_stride_wrap = 0;
ffc02ab0:	0c012e23          	sw	zero, 220(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:486
      if (!stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap)) {
ffc02ab4:	a68fe0ef          	jal	ra, ffc00d1c <stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)>
ffc02ab8:	00051c63          	bnez	a0, ffc02ad0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf1c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:508
        if (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK)
ffc02abc:	03012783          	lw	a5, 48(sp)
ffc02ac0:	fc07f793          	andi	a5, a5, -64
ffc02ac4:	f60786e3          	beqz	a5, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:488
          dram_ptr_update_cnt = 0;
ffc02ac8:	02012823          	sw	zero, 48(sp)
ffc02acc:	f65ff06f          	j	ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:492
      if (write_stride == rd_stride) {
ffc02ad0:	0d412783          	lw	a5, 212(sp)
ffc02ad4:	03c12703          	lw	a4, 60(sp)
ffc02ad8:	fef712e3          	bne	a4, a5, ffc02abc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf08>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:494
        if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
ffc02adc:	0049c503          	lbu	a0, 4(s3)
ffc02ae0:	00857793          	andi	a5, a0, 8
ffc02ae4:	42078e63          	beqz	a5, ffc02f20 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x136c>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc02ae8:	030aa883          	lw	a7, 48(s5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc02aec:	034aa783          	lw	a5, 52(s5)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:501
        update_dram_write_ptrs(is_ram, is_strided_write, write_stride, curr_dram_output_stream_state->total_write_strides, next_dram_q_issue->dram_ptr_issued_q_slots, output_noc, output_vc,
ffc02af0:	0069d703          	lhu	a4, 6(s3)
ffc02af4:	0dc12683          	lw	a3, 220(sp)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
ffc02af8:	02842803          	lw	a6, 40(s0)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:501
ffc02afc:	00d12623          	sw	a3, 12(sp)
ffc02b00:	0d812683          	lw	a3, 216(sp)
ffc02b04:	00f12023          	sw	a5, 0(sp)
ffc02b08:	00d12423          	sw	a3, 8(sp)
ffc02b0c:	01512223          	sw	s5, 4(sp)
ffc02b10:	01ecd683          	lhu	a3, 30(s9)
ffc02b14:	03c12603          	lw	a2, 60(sp)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
ffc02b18:	01285813          	srli	a6, a6, 0x12
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:501
ffc02b1c:	00048793          	mv	a5, s1
ffc02b20:	00787813          	andi	a6, a6, 7
ffc02b24:	00100593          	li	a1, 1
ffc02b28:	00157513          	andi	a0, a0, 1
ffc02b2c:	b75fe0ef          	jal	ra, ffc016a0 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:504
        next_dram_q_issue = next_dram_q_issue->next;
ffc02b30:	0209a783          	lw	a5, 32(s3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:505
        curr_dram_output_stream_state->next_dram_q_issue = next_dram_q_issue;
ffc02b34:	04fcac23          	sw	a5, 88(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:506
        curr_dram_output_stream_state->write_stride = write_stride;
ffc02b38:	03c12783          	lw	a5, 60(sp)
ffc02b3c:	00fc9e23          	sh	a5, 28(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:514
    RISC_POST_STATUS(0xF1000000 | stream_id);
ffc02b40:	06412703          	lw	a4, 100(sp)
ffc02b44:	f10007b7          	lui	a5, 0xf1000
ffc02b48:	00f767b3          	or	a5, a4, a5
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc02b4c:	ffb20737          	lui	a4, 0xffb20
ffc02b50:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc02b54:	06412783          	lw	a5, 100(sp)
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:110
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
ffc02b58:	008cd683          	lhu	a3, 8(s9)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
ffc02b5c:	01778433          	add	s0, a5, s7
ffc02b60:	00c41413          	slli	s0, s0, 0xc
ffc02b64:	08c42b03          	lw	s6, 140(s0)
ffc02b68:	002b5b13          	srli	s6, s6, 0x2
ffc02b6c:	001b7793          	andi	a5, s6, 1
ffc02b70:	06f12623          	sw	a5, 108(sp)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
ffc02b74:	00842783          	lw	a5, 8(s0)
ffc02b78:	01079793          	slli	a5, a5, 0x10
ffc02b7c:	0107d793          	srli	a5, a5, 0x10
ffc02b80:	04f12623          	sw	a5, 76(sp)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
ffc02b84:	02842783          	lw	a5, 40(s0)
ffc02b88:	0017d793          	srli	a5, a5, 0x1
ffc02b8c:	0017f793          	andi	a5, a5, 1
ffc02b90:	04f12423          	sw	a5, 72(sp)
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:109
  if (curr_dram_output_stream_state->moves_raw_data) {
ffc02b94:	002cc783          	lbu	a5, 2(s9)
ffc02b98:	38078a63          	beqz	a5, ffc02f2c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1378>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:110
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
ffc02b9c:	06d12423          	sw	a3, 104(sp)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
ffc02ba0:	04812783          	lw	a5, 72(sp)
ffc02ba4:	ffb21737          	lui	a4, 0xffb21
ffc02ba8:	01079793          	slli	a5, a5, 0x10
ffc02bac:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:529
      in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots;
ffc02bb0:	001cc603          	lbu	a2, 1(s9)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
ffc02bb4:	00e787b3          	add	a5, a5, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:531
      curr_dram_output_stream_state->in_flight_q_slots = 0;
ffc02bb8:	000c80a3          	sb	zero, 1(s9)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
ffc02bbc:	0007a783          	lw	a5, 0(a5) # f1000000 <TENSIX_MAILBOX_BASE+0xf1140000>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:530
      curr_dram_output_stream_state->in_flight_tiles = 0;
ffc02bc0:	000c9423          	sh	zero, 8(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:523
    bool stream_sending_q_full = false;
ffc02bc4:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:533
      past_sending_threshold = true;
ffc02bc8:	00100493          	li	s1, 1
ncrisc_noc_fast_write_bufs_ok(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:199
  return (NOC_CMD_BUF_READ_REG(noc, NCRISC_WR_CMD_BUF, NOC_CMD_CTRL) == NOC_CTRL_STATUS_READY);
ffc02bcc:	0017b793          	seqz	a5, a5
ffc02bd0:	002cc703          	lbu	a4, 2(s9)
ffc02bd4:	08012503          	lw	a0, 128(sp)
ffc02bd8:	00e56733          	or	a4, a0, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:560
    if (curr_dram_output_stream_state->moves_raw_data || dram_output_no_push) {
ffc02bdc:	04070463          	beqz	a4, ffc02c24 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1070>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:561
      if (phase_active && !curr_phase_tiles_remaining && !total_in_flight_tiles) {
ffc02be0:	06c12503          	lw	a0, 108(sp)
ffc02be4:	04050063          	beqz	a0, ffc02c24 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1070>
ffc02be8:	04c12503          	lw	a0, 76(sp)
ffc02bec:	06812803          	lw	a6, 104(sp)
ffc02bf0:	01056d33          	or	s10, a0, a6
ffc02bf4:	020d1863          	bnez	s10, ffc02c24 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1070>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:562
        uint32_t flags = curr_dram_output_stream_state->stream_info->flags;
ffc02bf8:	05cca503          	lw	a0, 92(s9)
ffc02bfc:	03c52503          	lw	a0, 60(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:563
        if ((flags & STREAM_BRISC_PACK) != 0)
ffc02c00:	40057513          	andi	a0, a0, 1024
ffc02c04:	00050a63          	beqz	a0, ffc02c18 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1064>
stream_set_curr_phase_num_msgs(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:201
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX) & ~0xFFFFFF;
ffc02c08:	09042503          	lw	a0, 144(s0)
ffc02c0c:	ff000837          	lui	a6, 0xff000
ffc02c10:	01057533          	and	a0, a0, a6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:202
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, (rmw | (val << CURR_PHASE_NUM_MSGS)));
ffc02c14:	08a42823          	sw	a0, 144(s0)
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
ffc02c18:	00100513          	li	a0, 1
ffc02c1c:	06a42e23          	sw	a0, 124(s0)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:566
        phase_active = false;
ffc02c20:	06012623          	sw	zero, 108(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:570
    if (in_flight_tiles) {
ffc02c24:	00068e63          	beqz	a3, ffc02c40 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x108c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:571
      epoch_q_slots_remaining -= in_flight_q_slots;
ffc02c28:	40cc0c33          	sub	s8, s8, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:573
      total_tiles_to_clear += in_flight_tiles;
ffc02c2c:	05012603          	lw	a2, 80(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:572
      curr_dram_output_stream_state->tiles_to_clear = in_flight_tiles;
ffc02c30:	00dc9323          	sh	a3, 6(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:573
      total_tiles_to_clear += in_flight_tiles;
ffc02c34:	00d606b3          	add	a3, a2, a3
ffc02c38:	04d12823          	sw	a3, 80(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:574
      curr_dram_output_stream_state->epoch_q_slots_remaining = epoch_q_slots_remaining;
ffc02c3c:	018cac23          	sw	s8, 24(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:577
    if (dram_stream == DRAM_STREAM_1) {
ffc02c40:	00800693          	li	a3, 8
ffc02c44:	58dd9863          	bne	s11, a3, ffc031d4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1620>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:578
      in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots;
ffc02c48:	001cc683          	lbu	a3, 1(s9)
ffc02c4c:	04d12c23          	sw	a3, 88(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:579
      in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
ffc02c50:	008cd683          	lhu	a3, 8(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:582
      in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles_2;
ffc02c54:	06d12423          	sw	a3, 104(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:590
    if (!epoch_q_slots_remaining || !phase_active || !curr_phase_tiles_remaining || !cmd_buf_free || stream_sending_q_full || !past_sending_threshold) {
ffc02c58:	dc0c0ce3          	beqz	s8, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
ffc02c5c:	06c12683          	lw	a3, 108(sp)
ffc02c60:	dc0688e3          	beqz	a3, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
ffc02c64:	04c12683          	lw	a3, 76(sp)
ffc02c68:	dc0684e3          	beqz	a3, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
ffc02c6c:	dc0782e3          	beqz	a5, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
ffc02c70:	dc0590e3          	bnez	a1, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
ffc02c74:	da048ee3          	beqz	s1, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc02c78:	ffb207b7          	lui	a5, 0xffb20
ffc02c7c:	f20006b7          	lui	a3, 0xf2000
ffc02c80:	10d7a623          	sw	a3, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:601
    uint16_t curr_phase_tiles_sent = curr_dram_output_stream_state->curr_phase_tiles_sent;
ffc02c84:	00acd983          	lhu	s3, 10(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:604
    if (curr_dram_output_stream_state->moves_raw_data || dram_output_no_push) {
ffc02c88:	54070e63          	beqz	a4, ffc031e4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1630>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:606
      curr_phase_tiles_received = *get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc02c8c:	06412503          	lw	a0, 100(sp)
ffc02c90:	fddfd0ef          	jal	ra, ffc00c6c <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc02c94:	f9dfd0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc02c98:	01750533          	add	a0, a0, s7
ffc02c9c:	00c51513          	slli	a0, a0, 0xc
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:606
ffc02ca0:	01052783          	lw	a5, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:611
      curr_phase_tiles_received = stream_phase_tiles_received(stream_id, stream_msg_info_buf_addr_word);
ffc02ca4:	01079793          	slli	a5, a5, 0x10
ffc02ca8:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:612
      tiles_avail_to_send = curr_phase_tiles_received - curr_phase_tiles_sent;
ffc02cac:	41378733          	sub	a4, a5, s3
ffc02cb0:	01071713          	slli	a4, a4, 0x10
ffc02cb4:	01075713          	srli	a4, a4, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:624
    if (next_data_chunk_available) {
ffc02cb8:	d7476ce3          	bltu	a4, s4, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc02cbc:	ffb20737          	lui	a4, 0xffb20
ffc02cc0:	f30006b7          	lui	a3, 0xf3000
ffc02cc4:	10d72623          	sw	a3, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:630
      bool dram_q_space_available =  dram_decoupled ? true : (temp_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ||
ffc02cc8:	00494583          	lbu	a1, 4(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:629
      uint32_t dram_rdptr_q_slots = temp_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
ffc02ccc:	00a95703          	lhu	a4, 10(s2)
ffc02cd0:	07c12683          	lw	a3, 124(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:631
                                    !dram_io_full(dram_rdptr_q_slots, temp_dram_q_issue->dram_ptr_issued_q_slots, temp_dram_q_issue->dram_buf_size_q_slots);
ffc02cd4:	00c95603          	lhu	a2, 12(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:630
      bool dram_q_space_available =  dram_decoupled ? true : (temp_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ||
ffc02cd8:	0015f593          	andi	a1, a1, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:629
      uint32_t dram_rdptr_q_slots = temp_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
ffc02cdc:	00d77733          	and	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:631
                                    !dram_io_full(dram_rdptr_q_slots, temp_dram_q_issue->dram_ptr_issued_q_slots, temp_dram_q_issue->dram_buf_size_q_slots);
ffc02ce0:	00695683          	lhu	a3, 6(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:630
      bool dram_q_space_available =  dram_decoupled ? true : (temp_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ||
ffc02ce4:	00059e63          	bnez	a1, ffc02d00 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x114c>
dram_io_full(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:85
  uint32_t wr_ptr_reduced_by_q_slots = wr_ptr - buf_size_q_slots;
ffc02ce8:	40c685b3          	sub	a1, a3, a2
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:630
ffc02cec:	00000493          	li	s1, 0
dram_io_full(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:89
  return case1 || case2;
ffc02cf0:	00b70863          	beq	a4, a1, ffc02d00 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x114c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:86
  uint32_t rd_ptr_reduced_by_q_slots = rd_ptr - buf_size_q_slots;
ffc02cf4:	40c704b3          	sub	s1, a4, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:89
  return case1 || case2;
ffc02cf8:	40d484b3          	sub	s1, s1, a3
ffc02cfc:	009034b3          	snez	s1, s1
dram_io_entries(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:93
  if (wr_ptr >= rd_ptr)
ffc02d00:	4ee6ec63          	bltu	a3, a4, ffc031f8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1644>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:96
    return 2*buf_size_q_slots - rd_ptr + wr_ptr;
ffc02d04:	40e68733          	sub	a4, a3, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:638
      if (this_dram_io_entries >= (temp_dram_q_issue->dram_buf_size_q_slots-DRAM_MIN_ENTIRES_POLL) && (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK))
ffc02d08:	00c76a63          	bltu	a4, a2, ffc02d1c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1168>
ffc02d0c:	03012703          	lw	a4, 48(sp)
ffc02d10:	fc077713          	andi	a4, a4, -64
ffc02d14:	00070463          	beqz	a4, ffc02d1c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1168>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:639
        dram_ptr_update_cnt = 0;
ffc02d18:	02012823          	sw	zero, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:641
      if (dram_q_space_available) {
ffc02d1c:	d0048ae3          	beqz	s1, ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:655
        dram_ptr_update_cnt = dram_ptr_update_cnt | (DRAM_PTR_UPDATE_MASK + 1);
ffc02d20:	03012703          	lw	a4, 48(sp)
ffc02d24:	04076713          	ori	a4, a4, 64
ffc02d28:	02e12823          	sw	a4, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:657
        uint32_t wr_ptr_autoinc = l1_ptrs->rd_gwr_ptr_autoinc;
ffc02d2c:	04012703          	lw	a4, 64(sp)
ffc02d30:	00675703          	lhu	a4, 6(a4)
ffc02d34:	06e12823          	sw	a4, 112(sp)
stream_dram_write_should_reset_pointers(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:227
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX);
ffc02d38:	00842703          	lw	a4, 8(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:228
  uint32_t should_reset_pointers = rmw >> 16;
ffc02d3c:	01075693          	srli	a3, a4, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:229
  if (should_reset_pointers)
ffc02d40:	2a068ae3          	beqz	a3, ffc037f4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c40>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:230
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX, (rmw & 0xffff));  // used as scratch reg for receiver endpoint streams
ffc02d44:	01071713          	slli	a4, a4, 0x10
ffc02d48:	01075713          	srli	a4, a4, 0x10
ffc02d4c:	00e42423          	sw	a4, 8(s0)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:658
        uint32_t stream_rd_ptr_byte = stream_dram_write_should_reset_pointers(stream_id) ? 0 : curr_dram_output_stream_state->stream_rd_ptr_byte;
ffc02d50:	00000713          	li	a4, 0
ffc02d54:	0ce12823          	sw	a4, 208(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:667
        dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state = l1_ptrs->dram_io_scatter_state;
ffc02d58:	04012703          	lw	a4, 64(sp)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
ffc02d5c:	02842d03          	lw	s10, 40(s0)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:667
ffc02d60:	05872a83          	lw	s5, 88(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:668
        epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_output_stream_state->stream_info->dram_io_info;
ffc02d64:	05cca703          	lw	a4, 92(s9)
ffc02d68:	08872b03          	lw	s6, 136(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:671
        if (dram_io_scatter_state != ((dram_io_scatter_state_t*)0)) {
ffc02d6c:	040a8063          	beqz	s5, ffc02dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x11f8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:672
          scatter_offsets = dram_io_scatter_state->scatter_offsets;
ffc02d70:	01caa703          	lw	a4, 28(s5)
ffc02d74:	04e12e23          	sw	a4, 92(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:673
          has_scatter_offsets = get_scatter_offsets(dram_io_scatter_state, scatter_offsets, dram_io_info->scatter_list_stream_id);
ffc02d78:	008b5703          	lhu	a4, 8(s6)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:373
  if (scatter_list_stream_id) {
ffc02d7c:	02070863          	beqz	a4, ffc02dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x11f8>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc02d80:	01770733          	add	a4, a4, s7
ffc02d84:	00c71713          	slli	a4, a4, 0xc
ffc02d88:	08c72683          	lw	a3, 140(a4)
stream_tiles_outstanding(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:316
  return NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
ffc02d8c:	04872603          	lw	a2, 72(a4)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:376
    if (!phase_active || !tiles_available)
ffc02d90:	0046f693          	andi	a3, a3, 4
ffc02d94:	74068863          	beqz	a3, ffc034e4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1930>
ffc02d98:	74060663          	beqz	a2, ffc034e4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1930>
stream_phase_next_recved_tile_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:146
  return NOC_STREAM_READ_REG(stream_id, STREAM_NEXT_RECEIVED_MSG_ADDR_REG_INDEX);
ffc02d9c:	04c72703          	lw	a4, 76(a4)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:378
    scatter_offsets = ((volatile tt_uint64_t tt_l1_ptr *)(stream_phase_next_recved_tile_addr(scatter_list_stream_id)*MEM_WORD_WIDTH + DRAM_SCATTER_LIST_START_OFFSET));
ffc02da0:	00170713          	addi	a4, a4, 1
ffc02da4:	00471713          	slli	a4, a4, 0x4
ffc02da8:	04e12e23          	sw	a4, 92(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:455
    bool is_strided_write = curr_dram_output_stream_state->total_write_strides > 1;
ffc02dac:	04412703          	lw	a4, 68(sp)
ffc02db0:	00273713          	sltiu	a4, a4, 2
ffc02db4:	00174713          	xori	a4, a4, 1
ffc02db8:	0ae12223          	sw	a4, 164(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:657
        uint32_t wr_ptr_autoinc = l1_ptrs->rd_gwr_ptr_autoinc;
ffc02dbc:	07012703          	lw	a4, 112(sp)
ffc02dc0:	06e12a23          	sw	a4, 116(sp)
ffc02dc4:	00071663          	bnez	a4, ffc02dd0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x121c>
ffc02dc8:	00100713          	li	a4, 1
ffc02dcc:	06e12a23          	sw	a4, 116(sp)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
ffc02dd0:	012d5d13          	srli	s10, s10, 0x12
ffc02dd4:	007d7713          	andi	a4, s10, 7
ffc02dd8:	06e12223          	sw	a4, 100(sp)
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
inline uint32_t stream_dram_writes_read_scratch(uint32_t stream_id, uint32_t scratch_reg_index) {
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
}

inline void stream_dram_writes_write_scratch(uint32_t stream_id, uint32_t scratch_reg_index, uint32_t val) {
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index, val);
ffc02ddc:	017d8733          	add	a4, s11, s7
ffc02de0:	00c71713          	slli	a4, a4, 0xc
ffc02de4:	3e870693          	addi	a3, a4, 1000
ffc02de8:	06d12c23          	sw	a3, 120(sp)
ffc02dec:	3ec70693          	addi	a3, a4, 1004
ffc02df0:	08d12423          	sw	a3, 136(sp)
ffc02df4:	3f070693          	addi	a3, a4, 1008
ffc02df8:	08d12623          	sw	a3, 140(sp)
ffc02dfc:	3f470693          	addi	a3, a4, 1012
ffc02e00:	3e470713          	addi	a4, a4, 996
ffc02e04:	0ae12423          	sw	a4, 168(sp)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
ffc02e08:	04812703          	lw	a4, 72(sp)
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
ffc02e0c:	08d12823          	sw	a3, 144(sp)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
ffc02e10:	01071693          	slli	a3, a4, 0x10
ffc02e14:	ffb21737          	lui	a4, 0xffb21
ffc02e18:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
ffc02e1c:	00e68733          	add	a4, a3, a4
ffc02e20:	0ae12623          	sw	a4, 172(sp)
ffc02e24:	013a0733          	add	a4, s4, s3
ffc02e28:	40e787b3          	sub	a5, a5, a4
ffc02e2c:	01079793          	slli	a5, a5, 0x10
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:790
              curr_dram_output_stream_state->write_stride = write_stride | DRAM_STRIDE_UPDATE_WAIT;
ffc02e30:	03c12703          	lw	a4, 60(sp)
ffc02e34:	0107d793          	srli	a5, a5, 0x10
ffc02e38:	06f12623          	sw	a5, 108(sp)
ffc02e3c:	ffff87b7          	lui	a5, 0xffff8
ffc02e40:	00f767b3          	or	a5, a4, a5
ffc02e44:	0af12823          	sw	a5, 176(sp)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:393
      stream_dram_writes_write_scratch(dram_stream, PTR_UPDATE_REG_DRAM_OUTPUT_STREAM_STATE, curr_dram_output_stream_state_idx | PTR_UPDATE_TYPE_DRAM_OUTPUT_STREAM_STATE);
ffc02e48:	06012783          	lw	a5, 96(sp)
ffc02e4c:	00800737          	lui	a4, 0x800
ffc02e50:	00e7e7b3          	or	a5, a5, a4
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:44
  volatile uint32_t tt_reg_ptr * ptr = (volatile uint32_t tt_reg_ptr *)offset;
ffc02e54:	00090d13          	mv	s10, s2
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:393
ffc02e58:	08f12e23          	sw	a5, 156(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:684
          uint32_t dram_buf_size_bytes = l1_ptrs->dram_buf_size_bytes;
ffc02e5c:	04012783          	lw	a5, 64(sp)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
ffc02e60:	04012703          	lw	a4, 64(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:684
ffc02e64:	0407ae83          	lw	t4, 64(a5) # ffff8040 <TENSIX_MAILBOX_BASE+0x138040>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc02e68:	0487a783          	lw	a5, 72(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc02e6c:	04c72583          	lw	a1, 76(a4) # 80004c <substitutes.cpp.cd30c172+0x7e1736>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:688
          if (curr_dram_output_stream_state->moves_raw_data) {
ffc02e70:	002cc703          	lbu	a4, 2(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:686
          bool full_q_slot_sent = false;
ffc02e74:	0c010623          	sb	zero, 204(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:688
          if (curr_dram_output_stream_state->moves_raw_data) {
ffc02e78:	38070663          	beqz	a4, ffc03204 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1650>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:689
            process_dram_write_moves_raw_data_l1(curr_dram_output_stream_state, next_dram_q_issue, stream_id,
ffc02e7c:	0cc10713          	addi	a4, sp, 204
ffc02e80:	00e12223          	sw	a4, 4(sp)
ffc02e84:	06412683          	lw	a3, 100(sp)
ffc02e88:	05412703          	lw	a4, 84(sp)
ffc02e8c:	01d12023          	sw	t4, 0(sp)
ffc02e90:	00058813          	mv	a6, a1
ffc02e94:	0d010893          	addi	a7, sp, 208
ffc02e98:	000a0613          	mv	a2, s4
ffc02e9c:	000d0593          	mv	a1, s10
ffc02ea0:	000c8513          	mv	a0, s9
ffc02ea4:	09d12223          	sw	t4, 132(sp)
ffc02ea8:	00409097          	auipc	ra, 0x409
ffc02eac:	6f0080e7          	jalr	1776(ra) # c598 <TENSIX_MAILBOX_BASE+0x14c598>
ffc02eb0:	08412e83          	lw	t4, 132(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:752
          if (full_q_slot_sent) {
ffc02eb4:	0cc14c03          	lbu	s8, 204(sp)
ffc02eb8:	780c0663          	beqz	s8, ffc03644 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1a90>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:757
            if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
ffc02ebc:	004d4783          	lbu	a5, 4(s10) # ff000004 <TENSIX_MAILBOX_BASE+0xff140004>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:753
            volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
ffc02ec0:	000d2803          	lw	a6, 0(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:757
            if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
ffc02ec4:	08f12223          	sw	a5, 132(sp)
ffc02ec8:	0087f793          	andi	a5, a5, 8
ffc02ecc:	50078863          	beqz	a5, ffc033dc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1828>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc02ed0:	03082883          	lw	a7, 48(a6) # ff000030 <TENSIX_MAILBOX_BASE+0xff140030>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc02ed4:	03482783          	lw	a5, 52(a6)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:764
            if (wr_ptr_autoinc > 1) {
ffc02ed8:	07012703          	lw	a4, 112(sp)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:32
    return v.v;
ffc02edc:	08f12a23          	sw	a5, 148(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:764
ffc02ee0:	00100793          	li	a5, 1
ffc02ee4:	50e7fa63          	bgeu	a5, a4, ffc033f8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1844>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:765
              uint32_t q_slot_size_bytes = curr_dram_output_stream_state->stream_info->dram_io_info->dram_q_slot_size_bytes;
ffc02ee8:	05cca783          	lw	a5, 92(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:766
              next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, mulsi3(wr_ptr_autoinc-1,q_slot_size_bytes), dram_buf_size_bytes);
ffc02eec:	07412703          	lw	a4, 116(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:765
              uint32_t q_slot_size_bytes = curr_dram_output_stream_state->stream_info->dram_io_info->dram_q_slot_size_bytes;
ffc02ef0:	0887a783          	lw	a5, 136(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:766
              next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, mulsi3(wr_ptr_autoinc-1,q_slot_size_bytes), dram_buf_size_bytes);
ffc02ef4:	fff70713          	addi	a4, a4, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
ffc02ef8:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:765
              uint32_t q_slot_size_bytes = curr_dram_output_stream_state->stream_info->dram_io_info->dram_q_slot_size_bytes;
ffc02efc:	0007a603          	lw	a2, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:766
              next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, mulsi3(wr_ptr_autoinc-1,q_slot_size_bytes), dram_buf_size_bytes);
ffc02f00:	018d2783          	lw	a5, 24(s10)
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc02f04:	4e070263          	beqz	a4, ffc033e8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1834>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
ffc02f08:	00177593          	andi	a1, a4, 1
ffc02f0c:	00058463          	beqz	a1, ffc02f14 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1360>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc02f10:	00c686b3          	add	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc02f14:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc02f18:	00161613          	slli	a2, a2, 0x1
ffc02f1c:	fe9ff06f          	j	ffc02f04 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1350>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc02f20:	048aa883          	lw	a7, 72(s5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc02f24:	04caa783          	lw	a5, 76(s5)
ffc02f28:	bc9ff06f          	j	ffc02af0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf3c>
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:112
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles + curr_dram_output_stream_state->in_flight_tiles_2;
ffc02f2c:	03ecdd03          	lhu	s10, 62(s9)
ffc02f30:	00dd07b3          	add	a5, s10, a3
ffc02f34:	06f12423          	sw	a5, 104(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:527
    if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
ffc02f38:	03412783          	lw	a5, 52(sp)
ffc02f3c:	c60792e3          	bnez	a5, ffc02ba0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xfec>
quick_q_t::peek(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:93
      ret_val = entry_0;
ffc02f40:	034ca783          	lw	a5, 52(s9)
ffc02f44:	04f12c23          	sw	a5, 88(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:536
      if (sending_dram_stream && risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream)) {
ffc02f48:	06079463          	bnez	a5, ffc02fb0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x13fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:525
    uint32_t in_flight_q_slots = 0;
ffc02f4c:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:524
    uint32_t in_flight_tiles = 0;
ffc02f50:	00000693          	li	a3, 0
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:503
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
ffc02f54:	017d87b3          	add	a5, s11, s7
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
ffc02f58:	ffb12737          	lui	a4, 0xffb12
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:503
ffc02f5c:	00c79793          	slli	a5, a5, 0xc
ffc02f60:	3f47a783          	lw	a5, 1012(a5)
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
ffc02f64:	1f072483          	lw	s1, 496(a4) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
ffc02f68:	ffb00737          	lui	a4, 0xffb00
ffc02f6c:	00972023          	sw	s1, 0(a4) # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:554
      uint32_t cycles_since_last_write = reg_read_barrier(RISCV_DEBUG_REG_WALL_CLOCK_L) - dram_output_stream_state[0].dram_stream_write_start_time;
ffc02f70:	03812703          	lw	a4, 56(sp)
quick_q_t::full():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:114
    return entry_1;
ffc02f74:	038ca583          	lw	a1, 56(s9)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:554
ffc02f78:	88872703          	lw	a4, -1912(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:552
      cmd_buf_free = !has_pending_dram_write_ptrs(dram_stream);
ffc02f7c:	0177d793          	srli	a5, a5, 0x17
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:554
      uint32_t cycles_since_last_write = reg_read_barrier(RISCV_DEBUG_REG_WALL_CLOCK_L) - dram_output_stream_state[0].dram_stream_write_start_time;
ffc02f80:	40e484b3          	sub	s1, s1, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:555
      uint32_t min_cycles_for_trans = data_send_chunk_size_bytes / NOC_WORD_BYTES;
ffc02f84:	05412703          	lw	a4, 84(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:552
      cmd_buf_free = !has_pending_dram_write_ptrs(dram_stream);
ffc02f88:	0017c793          	xori	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:555
      uint32_t min_cycles_for_trans = data_send_chunk_size_bytes / NOC_WORD_BYTES;
ffc02f8c:	00575713          	srli	a4, a4, 0x5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:556
      uint32_t cycles_thresh = min_cycles_for_trans > CYCLES_SINCE_LAST_STREAM_DRAM_WRITE_THRESH ? min_cycles_for_trans - CYCLES_SINCE_LAST_STREAM_DRAM_WRITE_THRESH : 0;
ffc02f90:	28a00513          	li	a0, 650
quick_q_t::full():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:114
ffc02f94:	00b035b3          	snez	a1, a1
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:552
      cmd_buf_free = !has_pending_dram_write_ptrs(dram_stream);
ffc02f98:	0017f793          	andi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:556
      uint32_t cycles_thresh = min_cycles_for_trans > CYCLES_SINCE_LAST_STREAM_DRAM_WRITE_THRESH ? min_cycles_for_trans - CYCLES_SINCE_LAST_STREAM_DRAM_WRITE_THRESH : 0;
ffc02f9c:	00a77463          	bgeu	a4, a0, ffc02fa4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x13f0>
ffc02fa0:	28a00713          	li	a4, 650
ffc02fa4:	d7670713          	addi	a4, a4, -650
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:557
      past_sending_threshold = cycles_since_last_write > cycles_thresh;
ffc02fa8:	009734b3          	sltu	s1, a4, s1
ffc02fac:	c25ff06f          	j	ffc02bd0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x101c>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
ffc02fb0:	05812503          	lw	a0, 88(sp)
ffc02fb4:	fe5fd0ef          	jal	ra, ffc00f98 <stream_dram_write_ok(unsigned long)>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:536
      if (sending_dram_stream && risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream)) {
ffc02fb8:	f8050ae3          	beqz	a0, ffc02f4c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1398>
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:503
ffc02fbc:	05812783          	lw	a5, 88(sp)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:296
  if ((dram_output_stream_state_idx & PTR_UPDATE_TYPE_DRAM_OUTPUT_STREAM_STATE) != 0) {
ffc02fc0:	00800737          	lui	a4, 0x800
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:503
ffc02fc4:	017784b3          	add	s1, a5, s7
ffc02fc8:	00c49493          	slli	s1, s1, 0xc
ffc02fcc:	3f44a783          	lw	a5, 1012(s1)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:296
ffc02fd0:	00e7f733          	and	a4, a5, a4
ffc02fd4:	12070c63          	beqz	a4, ffc0310c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1558>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:297
    dram_output_stream_state_t* curr_dram_output_stream_state = &(dram_output_stream_state_base[dram_output_stream_state_idx & ~PTR_UPDATE_TYPE_DRAM_OUTPUT_STREAM_STATE]);
ffc02fd8:	ff800737          	lui	a4, 0xff800
ffc02fdc:	fff70713          	addi	a4, a4, -1 # ff7fffff <TENSIX_MAILBOX_BASE+0xff93ffff>
ffc02fe0:	00e7f7b3          	and	a5, a5, a4
ffc02fe4:	06000713          	li	a4, 96
ffc02fe8:	02e787b3          	mul	a5, a5, a4
ffc02fec:	09812703          	lw	a4, 152(sp)
ffc02ff0:	00f707b3          	add	a5, a4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:298
    dram_q_state_t tt_l1_ptr * next_dram_q_issue = curr_dram_output_stream_state->next_dram_q_issue;
ffc02ff4:	0587a703          	lw	a4, 88(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:300
    uint32_t stream_id = curr_dram_output_stream_state->stream_id;
ffc02ff8:	0007c783          	lbu	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:299
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
ffc02ffc:	00072b03          	lw	s6, 0(a4)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
ffc03000:	017787b3          	add	a5, a5, s7
ffc03004:	00c79793          	slli	a5, a5, 0xc
ffc03008:	0287a983          	lw	s3, 40(a5)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
ffc0300c:	0287a803          	lw	a6, 40(a5)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:304
    if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
ffc03010:	00474783          	lbu	a5, 4(a4)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
ffc03014:	0019d993          	srli	s3, s3, 0x1
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
ffc03018:	01285813          	srli	a6, a6, 0x12
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
ffc0301c:	0019f993          	andi	s3, s3, 1
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
ffc03020:	00787813          	andi	a6, a6, 7
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:304
ffc03024:	0087f713          	andi	a4, a5, 8
ffc03028:	10070863          	beqz	a4, ffc03138 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1584>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc0302c:	030b2e03          	lw	t3, 48(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc03030:	034b2a83          	lw	s5, 52(s6)
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:503
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
ffc03034:	3e44a703          	lw	a4, 996(s1)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:32
    return v.v;
ffc03038:	000e0d13          	mv	s10, t3
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:312
    if (dram_wrptr_q_slots) {
ffc0303c:	04070a63          	beqz	a4, ffc03090 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x14dc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:314
      l1_ptrs->wr_dram_wrptr = dram_wrptr_q_slots;
ffc03040:	02eb1223          	sh	a4, 36(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:315
      if (!is_ram) {
ffc03044:	0017f793          	andi	a5, a5, 1
ffc03048:	04079263          	bnez	a5, ffc0308c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x14d8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:316
        while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc0304c:	00300593          	li	a1, 3
ffc03050:	00098513          	mv	a0, s3
ffc03054:	07012823          	sw	a6, 112(sp)
ffc03058:	ca1fd0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc0305c:	07012803          	lw	a6, 112(sp)
ffc03060:	fe0506e3          	beqz	a0, ffc0304c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1498>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:317
        ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_dram_wrptr)), dram_ptr_addr+DRAM_BUF_WRPTR_OFFSET, 2,
ffc03064:	004d0693          	addi	a3, s10, 4
ffc03068:	01a6b733          	sltu	a4, a3, s10
ffc0306c:	00000893          	li	a7, 0
ffc03070:	00200793          	li	a5, 2
ffc03074:	01570733          	add	a4, a4, s5
ffc03078:	024b0613          	addi	a2, s6, 36
ffc0307c:	00300593          	li	a1, 3
ffc03080:	00098513          	mv	a0, s3
ffc03084:	a44fe0ef          	jal	ra, ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
ffc03088:	07012803          	lw	a6, 112(sp)
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index, val);
ffc0308c:	3e04a223          	sw	zero, 996(s1)
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:503
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
ffc03090:	3e84a703          	lw	a4, 1000(s1)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:324
    if (update_type == PTR_UPDATE_TYPE_EPOCH_W_STRIDE || update_type == PTR_UPDATE_TYPE_EPOCH) {
ffc03094:	ffc007b7          	lui	a5, 0xffc00
ffc03098:	00f706b3          	add	a3, a4, a5
ffc0309c:	fff78793          	addi	a5, a5, -1 # ffbfffff <TENSIX_MAILBOX_BASE+0xffd3ffff>
ffc030a0:	00f6f7b3          	and	a5, a3, a5
ffc030a4:	0c079663          	bnez	a5, ffc03170 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x15bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:332
        l1_ptrs->wr_epoch_id_tag = DRAM_QUEUE_NO_EPOCH_CHECK;
ffc030a8:	020b1523          	sh	zero, 42(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:334
      if (update_type == PTR_UPDATE_TYPE_EPOCH_W_STRIDE) {
ffc030ac:	008007b7          	lui	a5, 0x800
ffc030b0:	08f71a63          	bne	a4, a5, ffc03144 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1590>
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:503
ffc030b4:	3ec4a703          	lw	a4, 1004(s1)
ffc030b8:	3f04a783          	lw	a5, 1008(s1)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:337
        l1_ptrs->stride_wrap = stride_wrap;
ffc030bc:	04eb0ba3          	sb	a4, 87(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:338
        l1_ptrs->wr_stride = stride;
ffc030c0:	02fb1623          	sh	a5, 44(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:339
        l1_ptrs->rd_stride = stride;
ffc030c4:	00fb1623          	sh	a5, 12(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:340
        while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc030c8:	00300593          	li	a1, 3
ffc030cc:	00098513          	mv	a0, s3
ffc030d0:	07012823          	sw	a6, 112(sp)
ffc030d4:	c25fd0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc030d8:	07012803          	lw	a6, 112(sp)
ffc030dc:	fe0506e3          	beqz	a0, ffc030c8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1514>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:341
        ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_ptr_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 4,
ffc030e0:	00ad0693          	addi	a3, s10, 10
ffc030e4:	01a6b733          	sltu	a4, a3, s10
ffc030e8:	00000893          	li	a7, 0
ffc030ec:	00400793          	li	a5, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:345
        ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_ptr_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
ffc030f0:	01570733          	add	a4, a4, s5
ffc030f4:	02ab0613          	addi	a2, s6, 42
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:357
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_ptr_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc030f8:	00300593          	li	a1, 3
ffc030fc:	00098513          	mv	a0, s3
ffc03100:	9c8fe0ef          	jal	ra, ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index, val);
ffc03104:	3e04a423          	sw	zero, 1000(s1)
ffc03108:	3e04aa23          	sw	zero, 1012(s1)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:538
        if (sending_dram_stream == DRAM_STREAM_1) {
ffc0310c:	05812703          	lw	a4, 88(sp)
ffc03110:	00800793          	li	a5, 8
ffc03114:	0af71663          	bne	a4, a5, ffc031c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x160c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:539
          in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
ffc03118:	008cd683          	lhu	a3, 8(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:540
          in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots;
ffc0311c:	001cc603          	lbu	a2, 1(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:541
          curr_dram_output_stream_state->in_flight_tiles = 0;
ffc03120:	000c9423          	sh	zero, 8(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:542
          curr_dram_output_stream_state->in_flight_q_slots = 0;
ffc03124:	000c80a3          	sb	zero, 1(s9)
quick_q_t::pop():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:109
    entry_0 = entry_1;
ffc03128:	038ca783          	lw	a5, 56(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:110
    entry_1 = 0;
ffc0312c:	020cac23          	sw	zero, 56(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:109
    entry_0 = entry_1;
ffc03130:	02fcaa23          	sw	a5, 52(s9)
ffc03134:	e21ff06f          	j	ffc02f54 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x13a0>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc03138:	048b2e03          	lw	t3, 72(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc0313c:	04cb2a83          	lw	s5, 76(s6)
ffc03140:	ef5ff06f          	j	ffc03034 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1480>
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:344
        while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc03144:	00300593          	li	a1, 3
ffc03148:	00098513          	mv	a0, s3
ffc0314c:	07012823          	sw	a6, 112(sp)
ffc03150:	ba9fd0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc03154:	07012803          	lw	a6, 112(sp)
ffc03158:	fe0506e3          	beqz	a0, ffc03144 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1590>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:345
        ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_ptr_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
ffc0315c:	00ad0693          	addi	a3, s10, 10
ffc03160:	01a6b733          	sltu	a4, a3, s10
ffc03164:	00000893          	li	a7, 0
ffc03168:	00200793          	li	a5, 2
ffc0316c:	f85ff06f          	j	ffc030f0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x153c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:350
    } else if (update_type == PTR_UPDATE_TYPE_STRIDE) {
ffc03170:	002007b7          	lui	a5, 0x200
ffc03174:	f8f71ae3          	bne	a4, a5, ffc03108 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1554>
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:503
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
ffc03178:	3ec4a703          	lw	a4, 1004(s1)
ffc0317c:	3f04a783          	lw	a5, 1008(s1)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:353
      l1_ptrs->stride_wrap = stride_wrap;
ffc03180:	04eb0ba3          	sb	a4, 87(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:354
      l1_ptrs->wr_stride = stride;
ffc03184:	02fb1623          	sh	a5, 44(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:355
      l1_ptrs->rd_stride = stride;
ffc03188:	00fb1623          	sh	a5, 12(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:356
      while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc0318c:	00300593          	li	a1, 3
ffc03190:	00098513          	mv	a0, s3
ffc03194:	07012823          	sw	a6, 112(sp)
ffc03198:	b61fd0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc0319c:	07012803          	lw	a6, 112(sp)
ffc031a0:	fe0506e3          	beqz	a0, ffc0318c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x15d8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:357
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_ptr_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc031a4:	00cd0693          	addi	a3, s10, 12
ffc031a8:	01a6b733          	sltu	a4, a3, s10
ffc031ac:	00000893          	li	a7, 0
ffc031b0:	00200793          	li	a5, 2
ffc031b4:	01570733          	add	a4, a4, s5
ffc031b8:	02cb0613          	addi	a2, s6, 44
ffc031bc:	f3dff06f          	j	ffc030f8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1544>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:544
          in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles_2;
ffc031c0:	03ecd683          	lhu	a3, 62(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:545
          in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots_2;
ffc031c4:	03ccc603          	lbu	a2, 60(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:546
          curr_dram_output_stream_state->in_flight_tiles_2 = 0;
ffc031c8:	020c9f23          	sh	zero, 62(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:547
          curr_dram_output_stream_state->in_flight_q_slots_2 = 0;
ffc031cc:	020c8e23          	sb	zero, 60(s9)
ffc031d0:	f59ff06f          	j	ffc03128 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1574>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:581
      in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots_2;
ffc031d4:	03ccc683          	lbu	a3, 60(s9)
ffc031d8:	04d12c23          	sw	a3, 88(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:582
      in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles_2;
ffc031dc:	03ecd683          	lhu	a3, 62(s9)
ffc031e0:	a75ff06f          	j	ffc02c54 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10a0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:610
      uint32_t stream_msg_info_buf_addr_word = curr_dram_output_stream_state->stream_info->msg_info_buf_start;
ffc031e4:	05cca783          	lw	a5, 92(s9)
ffc031e8:	0207a703          	lw	a4, 32(a5) # 200020 <substitutes.cpp.cd30c172+0x1e170a>
stream_phase_tiles_received(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:154
  return NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX) - msg_info_buf_start_addr;
ffc031ec:	06842783          	lw	a5, 104(s0)
ffc031f0:	40e787b3          	sub	a5, a5, a4
ffc031f4:	ab1ff06f          	j	ffc02ca4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10f0>
dram_io_entries(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:96
    return 2*buf_size_q_slots - rd_ptr + wr_ptr;
ffc031f8:	00161593          	slli	a1, a2, 0x1
ffc031fc:	00d586b3          	add	a3, a1, a3
ffc03200:	b05ff06f          	j	ffc02d04 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1150>
stream_get_data_buf_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:126
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_START_REG_INDEX);
ffc03204:	01842683          	lw	a3, 24(s0)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:693
            uint32_t stream_rd_addr = (stream_get_data_buf_addr(stream_id) * MEM_WORD_WIDTH) + stream_rd_ptr_byte;
ffc03208:	0d012703          	lw	a4, 208(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:706
              dram_output_stream_issue_scatter_write_indicies(output_noc, output_vc, next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
ffc0320c:	018d2603          	lw	a2, 24(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:693
            uint32_t stream_rd_addr = (stream_get_data_buf_addr(stream_id) * MEM_WORD_WIDTH) + stream_rd_ptr_byte;
ffc03210:	00469693          	slli	a3, a3, 0x4
ffc03214:	00e686b3          	add	a3, a3, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:694
            uint32_t stream_msg_info_buf_addr = curr_dram_output_stream_state->stream_info->msg_info_buf_start;
ffc03218:	05cca703          	lw	a4, 92(s9)
ffc0321c:	02072503          	lw	a0, 32(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:696
            if (dram_io_scatter_state != ((dram_io_scatter_state_t*)0)) {
ffc03220:	100a8463          	beqz	s5, ffc03328 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1774>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:701
              uint32_t scatter_idx = next_dram_q_issue->scatter_offsets_index;
ffc03224:	01cd2883          	lw	a7, 28(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:698
              uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
ffc03228:	004aa303          	lw	t1, 4(s5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:697
              uint32_t dram_io_scatter_chunk_size_bytes = dram_io_scatter_state->scatter_chunk_size_bytes;
ffc0322c:	008aaf03          	lw	t5, 8(s5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:699
              uint32_t dram_embeddings_row_shift = dram_io_info->dram_embeddings_row_shift;
ffc03230:	010b2803          	lw	a6, 16(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:700
              uint32_t dram_io_scatter_chunk_size_tiles = dram_io_scatter_state->scatter_chunk_size_tiles;
ffc03234:	010aa703          	lw	a4, 16(s5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:705
              uint32_t col_offset_bytes = curr_dram_output_stream_state->col_offset_bytes;
ffc03238:	04ccaf83          	lw	t6, 76(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:706
              dram_output_stream_issue_scatter_write_indicies(output_noc, output_vc, next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
ffc0323c:	0d410c13          	addi	s8, sp, 212
ffc03240:	09d12a23          	sw	t4, 148(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:705
              uint32_t col_offset_bytes = curr_dram_output_stream_state->col_offset_bytes;
ffc03244:	0df12e23          	sw	t6, 220(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:701
              uint32_t scatter_idx = next_dram_q_issue->scatter_offsets_index;
ffc03248:	0d112a23          	sw	a7, 212(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:703
              uint32_t c_dim_count = curr_dram_output_stream_state->c_dim_count;
ffc0324c:	046cd883          	lhu	a7, 70(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:698
              uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
ffc03250:	08612223          	sw	t1, 132(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:706
              dram_output_stream_issue_scatter_write_indicies(output_noc, output_vc, next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
ffc03254:	03412303          	lw	t1, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:703
              uint32_t c_dim_count = curr_dram_output_stream_state->c_dim_count;
ffc03258:	0d112c23          	sw	a7, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:704
              uint32_t c_dim_size = curr_dram_output_stream_state->c_dim_size;
ffc0325c:	044cd883          	lhu	a7, 68(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:706
              dram_output_stream_issue_scatter_write_indicies(output_noc, output_vc, next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
ffc03260:	02a12223          	sw	a0, 36(sp)
ffc03264:	0dc10513          	addi	a0, sp, 220
ffc03268:	02612423          	sw	t1, 40(sp)
ffc0326c:	03b12623          	sw	s11, 44(sp)
ffc03270:	02a12023          	sw	a0, 32(sp)
ffc03274:	00ab5503          	lhu	a0, 10(s6)
ffc03278:	01112c23          	sw	a7, 24(sp)
ffc0327c:	00b12623          	sw	a1, 12(sp)
ffc03280:	05c12883          	lw	a7, 92(sp)
ffc03284:	06412583          	lw	a1, 100(sp)
ffc03288:	01012823          	sw	a6, 16(sp)
ffc0328c:	00f12423          	sw	a5, 8(sp)
ffc03290:	00068813          	mv	a6, a3
ffc03294:	000f0793          	mv	a5, t5
ffc03298:	000a0693          	mv	a3, s4
ffc0329c:	01812023          	sw	s8, 0(sp)
ffc032a0:	00a12e23          	sw	a0, 28(sp)
ffc032a4:	0d810513          	addi	a0, sp, 216
ffc032a8:	00a12a23          	sw	a0, 20(sp)
ffc032ac:	04812503          	lw	a0, 72(sp)
ffc032b0:	f6cfe0ef          	jal	ra, ffc01a1c <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:710
              curr_dram_output_stream_state->c_dim_count = c_dim_count;
ffc032b4:	0d812783          	lw	a5, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:713
              clear_scatter_offsets(curr_dram_output_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
ffc032b8:	08412303          	lw	t1, 132(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:710
              curr_dram_output_stream_state->c_dim_count = c_dim_count;
ffc032bc:	04fc9323          	sh	a5, 70(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:711
              curr_dram_output_stream_state->col_offset_bytes = col_offset_bytes;
ffc032c0:	0dc12783          	lw	a5, 220(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:713
              clear_scatter_offsets(curr_dram_output_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
ffc032c4:	000c0713          	mv	a4, s8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:711
              curr_dram_output_stream_state->col_offset_bytes = col_offset_bytes;
ffc032c8:	04fca623          	sw	a5, 76(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:713
              clear_scatter_offsets(curr_dram_output_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
ffc032cc:	008b5783          	lhu	a5, 8(s6)
ffc032d0:	00030693          	mv	a3, t1
ffc032d4:	000b0613          	mv	a2, s6
ffc032d8:	000d0593          	mv	a1, s10
ffc032dc:	048c8513          	addi	a0, s9, 72
ffc032e0:	dc1fd0ef          	jal	ra, ffc010a0 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]>
ffc032e4:	09412e83          	lw	t4, 148(sp)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
ffc032e8:	0d012783          	lw	a5, 208(sp)
ffc032ec:	05412683          	lw	a3, 84(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:737
            stream_rd_ptr_byte = buf_ptr_inc_wrap(stream_rd_ptr_byte, data_send_chunk_size_bytes, curr_dram_output_stream_state->stream_buf_size_bytes);
ffc032f0:	010ca703          	lw	a4, 16(s9)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
ffc032f4:	00f687b3          	add	a5, a3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
ffc032f8:	00e7e463          	bltu	a5, a4, ffc03300 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x174c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
ffc032fc:	40e787b3          	sub	a5, a5, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:737
ffc03300:	0cf12823          	sw	a5, 208(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:739
            if (!dram_writes_with_cmd_buf)
ffc03304:	03412783          	lw	a5, 52(sp)
ffc03308:	08079a63          	bnez	a5, ffc0339c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x17e8>
quick_q_t::push(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:98
    if (entry_1) {
ffc0330c:	038ca783          	lw	a5, 56(s9)
ffc03310:	08078063          	beqz	a5, ffc03390 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x17dc>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc03314:	dead07b7          	lui	a5, 0xdead0
ffc03318:	ffb20737          	lui	a4, 0xffb20
ffc0331c:	20078793          	addi	a5, a5, 512 # dead0200 <TENSIX_MAILBOX_BASE+0xdec10200>
ffc03320:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
ffc03324:	0000006f          	j	ffc03324 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1770>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:716
              if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) == 0) {
ffc03328:	004d4703          	lbu	a4, 4(s10)
ffc0332c:	00877713          	andi	a4, a4, 8
ffc03330:	00071463          	bnez	a4, ffc03338 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1784>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:717
                offset += DRAM_BUF_DATA_OFFSET;
ffc03334:	02060613          	addi	a2, a2, 32 # ffff0020 <TENSIX_MAILBOX_BASE+0x130020>
ffc03338:	09d12223          	sw	t4, 132(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc0333c:	ffb20737          	lui	a4, 0xffb20
ffc03340:	f4110837          	lui	a6, 0xf4110
ffc03344:	11072623          	sw	a6, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:719
              uint64_t dram_dest_addr = dram_buf_addr + offset;
ffc03348:	00f60733          	add	a4, a2, a5
ffc0334c:	00c737b3          	sltu	a5, a4, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:723
                risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_rd_addr, dram_dest_addr, data_send_chunk_size_bytes, data_send_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);
ffc03350:	00a12023          	sw	a0, 0(sp)
ffc03354:	06412883          	lw	a7, 100(sp)
ffc03358:	05412803          	lw	a6, 84(sp)
ffc0335c:	04812603          	lw	a2, 72(sp)
ffc03360:	03412503          	lw	a0, 52(sp)
ffc03364:	00b787b3          	add	a5, a5, a1
ffc03368:	000d8593          	mv	a1, s11
ffc0336c:	cb0fe0ef          	jal	ra, ffc0181c <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]>
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
ffc03370:	ffb127b7          	lui	a5, 0xffb12
ffc03374:	1f07a783          	lw	a5, 496(a5) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
ffc03378:	ffb00737          	lui	a4, 0xffb00
ffc0337c:	00f72023          	sw	a5, 0(a4) # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:724
                dram_output_stream_state[0].dram_stream_write_start_time = reg_read_barrier(RISCV_DEBUG_REG_WALL_CLOCK_L);
ffc03380:	03812703          	lw	a4, 56(sp)
ffc03384:	08412e83          	lw	t4, 132(sp)
ffc03388:	88f72423          	sw	a5, -1912(a4)
ffc0338c:	f5dff06f          	j	ffc032e8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1734>
quick_q_t::push(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:101
    } else if (entry_0) {
ffc03390:	034ca783          	lw	a5, 52(s9)
ffc03394:	04078063          	beqz	a5, ffc033d4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1820>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:102
      entry_1 = val;
ffc03398:	03bcac23          	sw	s11, 56(s9)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:742
            uint32_t dram_num_partial_q_slot_issued_tiles = next_dram_q_issue->dram_num_partial_q_slot_issued_tiles;
ffc0339c:	010d2783          	lw	a5, 16(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:743
            dram_num_partial_q_slot_issued_tiles += data_send_chunk_size_tiles;
ffc033a0:	00fa0733          	add	a4, s4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:744
            next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = dram_num_partial_q_slot_issued_tiles;
ffc033a4:	00ed2823          	sw	a4, 16(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:745
            full_q_slot_sent = (dram_num_partial_q_slot_issued_tiles == curr_dram_output_stream_state->q_slot_size_tiles);
ffc033a8:	054ca783          	lw	a5, 84(s9)
ffc033ac:	40e787b3          	sub	a5, a5, a4
ffc033b0:	0017b793          	seqz	a5, a5
ffc033b4:	0cf10623          	sb	a5, 204(sp)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
ffc033b8:	018d2783          	lw	a5, 24(s10)
ffc033bc:	05412703          	lw	a4, 84(sp)
ffc033c0:	00f707b3          	add	a5, a4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
ffc033c4:	01d7e463          	bltu	a5, t4, ffc033cc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1818>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
ffc033c8:	41d787b3          	sub	a5, a5, t4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:747
            next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_bytes, dram_buf_size_bytes);
ffc033cc:	00fd2c23          	sw	a5, 24(s10)
ffc033d0:	ae5ff06f          	j	ffc02eb4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1300>
quick_q_t::push(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:104
      entry_0 = val;
ffc033d4:	03bcaa23          	sw	s11, 52(s9)
ffc033d8:	fc5ff06f          	j	ffc0339c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x17e8>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc033dc:	04882883          	lw	a7, 72(a6) # f4110048 <TENSIX_MAILBOX_BASE+0xf4250048>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc033e0:	04c82783          	lw	a5, 76(a6)
ffc033e4:	af5ff06f          	j	ffc02ed8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1324>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
ffc033e8:	00d787b3          	add	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
ffc033ec:	01d7e463          	bltu	a5, t4, ffc033f4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1840>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
ffc033f0:	41d787b3          	sub	a5, a5, t4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:766
              next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, mulsi3(wr_ptr_autoinc-1,q_slot_size_bytes), dram_buf_size_bytes);
ffc033f4:	00fd2c23          	sw	a5, 24(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:769
            in_flight_q_slots++;
ffc033f8:	05812783          	lw	a5, 88(sp)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
ffc033fc:	07412703          	lw	a4, 116(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:769
ffc03400:	00178793          	addi	a5, a5, 1
ffc03404:	04f12c23          	sw	a5, 88(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:771
            next_dram_q_issue->dram_ptr_issued_q_slots = dram_io_incr_ptr(temp_dram_q_issue->dram_ptr_issued_q_slots, wr_ptr_autoinc, temp_dram_q_issue->dram_buf_size_q_slots);
ffc03408:	00695783          	lhu	a5, 6(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:770
            next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = 0;
ffc0340c:	000d2823          	sw	zero, 16(s10)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:53
ffc03410:	00e787b3          	add	a5, a5, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:771
            next_dram_q_issue->dram_ptr_issued_q_slots = dram_io_incr_ptr(temp_dram_q_issue->dram_ptr_issued_q_slots, wr_ptr_autoinc, temp_dram_q_issue->dram_buf_size_q_slots);
ffc03414:	00c95703          	lhu	a4, 12(s2)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:54
  uint32_t double_buf_size_q_slots = 2*buf_size_q_slots;
ffc03418:	00171713          	slli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
ffc0341c:	00e7e463          	bltu	a5, a4, ffc03424 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1870>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
ffc03420:	40e787b3          	sub	a5, a5, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:771
ffc03424:	00fd1323          	sh	a5, 6(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:776
            bool stride_iter_matches_expr = is_strided_write && stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
ffc03428:	04412703          	lw	a4, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:774
            uint32_t curr_stride_wrap = 0;
ffc0342c:	0c012c23          	sw	zero, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:775
            uint32_t next_stride_wrap = 0;
ffc03430:	0c012e23          	sw	zero, 220(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:776
            bool stride_iter_matches_expr = is_strided_write && stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
ffc03434:	00100793          	li	a5, 1
ffc03438:	0ce7ec63          	bltu	a5, a4, ffc03510 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x195c>
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:372
  if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
ffc0343c:	03412583          	lw	a1, 52(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:786
              set_pending_dram_write_ptrs(dram_stream, dram_writes_with_cmd_buf, is_ram, is_strided_write, write_stride, curr_dram_output_stream_state->total_write_strides, temp_dram_q_issue->dram_ptr_issued_q_slots, output_noc, output_vc,
ffc03440:	00695703          	lhu	a4, 6(s2)
ffc03444:	01ecd683          	lhu	a3, 30(s9)
ffc03448:	0d812783          	lw	a5, 216(sp)
ffc0344c:	0dc12603          	lw	a2, 220(sp)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:372
  if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
ffc03450:	14058863          	beqz	a1, ffc035a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x19ec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:373
    update_dram_write_ptrs(is_ram, is_strided_write, write_stride, total_write_strides, dram_wrptr_q_slots, output_noc, output_vc,
ffc03454:	00f12423          	sw	a5, 8(sp)
ffc03458:	09412783          	lw	a5, 148(sp)
ffc0345c:	08412503          	lw	a0, 132(sp)
ffc03460:	00c12623          	sw	a2, 12(sp)
ffc03464:	01012223          	sw	a6, 4(sp)
ffc03468:	00f12023          	sw	a5, 0(sp)
ffc0346c:	06412803          	lw	a6, 100(sp)
ffc03470:	04812783          	lw	a5, 72(sp)
ffc03474:	03c12603          	lw	a2, 60(sp)
ffc03478:	0a412583          	lw	a1, 164(sp)
ffc0347c:	00157513          	andi	a0, a0, 1
ffc03480:	a20fe0ef          	jal	ra, ffc016a0 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:796
              next_dram_q_issue = next_dram_q_issue->next;
ffc03484:	020d2d03          	lw	s10, 32(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:801
          in_flight_tiles += data_send_chunk_size_tiles;
ffc03488:	06812783          	lw	a5, 104(sp)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
ffc0348c:	014989b3          	add	s3, s3, s4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:801
ffc03490:	014787b3          	add	a5, a5, s4
ffc03494:	06f12423          	sw	a5, 104(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:802
          curr_phase_tiles_remaining -= data_send_chunk_size_tiles;
ffc03498:	04c12783          	lw	a5, 76(sp)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
ffc0349c:	01099993          	slli	s3, s3, 0x10
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:802
ffc034a0:	414787b3          	sub	a5, a5, s4
ffc034a4:	04f12623          	sw	a5, 76(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:809
          if (dram_stream == DRAM_STREAM_1) {
ffc034a8:	00800613          	li	a2, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:803
          if (curr_dram_output_stream_state->moves_raw_data || dram_output_no_push) {
ffc034ac:	002cc783          	lbu	a5, 2(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:810
            curr_dram_output_stream_state->in_flight_q_slots = in_flight_q_slots;
ffc034b0:	05814683          	lbu	a3, 88(sp)
ffc034b4:	06815703          	lhu	a4, 104(sp)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
ffc034b8:	0109d993          	srli	s3, s3, 0x10
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:809
          if (dram_stream == DRAM_STREAM_1) {
ffc034bc:	18cd9863          	bne	s11, a2, ffc0364c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1a98>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:810
            curr_dram_output_stream_state->in_flight_q_slots = in_flight_q_slots;
ffc034c0:	00dc80a3          	sb	a3, 1(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:811
            curr_dram_output_stream_state->in_flight_tiles = in_flight_tiles;
ffc034c4:	00ec9423          	sh	a4, 8(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:822
          if (!curr_phase_tiles_remaining) {
ffc034c8:	04c12703          	lw	a4, 76(sp)
ffc034cc:	18071663          	bnez	a4, ffc03658 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1aa4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:823
            if (!curr_dram_output_stream_state->moves_raw_data && !dram_output_no_push)
ffc034d0:	08012703          	lw	a4, 128(sp)
ffc034d4:	00f767b3          	or	a5, a4, a5
ffc034d8:	00079463          	bnez	a5, ffc034e0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x192c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:824
              curr_phase_tiles_sent = 0;
ffc034dc:	00000993          	li	s3, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:825
            break;
ffc034e0:	000d0913          	mv	s2, s10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:874
        curr_dram_output_stream_state->stream_rd_ptr_byte = stream_rd_ptr_byte; 
ffc034e4:	0d012783          	lw	a5, 208(sp)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:164
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & ~0xffff;
ffc034e8:	ffff0737          	lui	a4, 0xffff0
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:874
ffc034ec:	00fca623          	sw	a5, 12(s9)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:164
ffc034f0:	00842783          	lw	a5, 8(s0)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:875
        curr_dram_output_stream_state->next_dram_q_issue = next_dram_q_issue;
ffc034f4:	052cac23          	sw	s2, 88(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:876
        curr_dram_output_stream_state->curr_phase_tiles_sent = curr_phase_tiles_sent;              
ffc034f8:	013c9523          	sh	s3, 10(s9)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:164
ffc034fc:	00e7f7b3          	and	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:165
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX, (rmw | val));  // used as scratch reg for receiver endpoint streams
ffc03500:	04c12703          	lw	a4, 76(sp)
ffc03504:	00e7e7b3          	or	a5, a5, a4
ffc03508:	00f42423          	sw	a5, 8(s0)
ffc0350c:	d24ff06f          	j	ffc02a30 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe7c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:776
            bool stride_iter_matches_expr = is_strided_write && stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
ffc03510:	00080513          	mv	a0, a6
ffc03514:	0dc10693          	addi	a3, sp, 220
ffc03518:	0d810613          	addi	a2, sp, 216
ffc0351c:	0d410593          	addi	a1, sp, 212
ffc03520:	0b112c23          	sw	a7, 184(sp)
ffc03524:	0b012a23          	sw	a6, 180(sp)
ffc03528:	ff4fd0ef          	jal	ra, ffc00d1c <stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:779
            bool do_ptr_update = !is_strided_write || 
ffc0352c:	03412703          	lw	a4, 52(sp)
ffc03530:	0b412803          	lw	a6, 180(sp)
ffc03534:	0b812883          	lw	a7, 184(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:776
            bool stride_iter_matches_expr = is_strided_write && stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
ffc03538:	00050793          	mv	a5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:779
            bool do_ptr_update = !is_strided_write || 
ffc0353c:	00071663          	bnez	a4, ffc03548 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1994>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:780
                                                      ((dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) &&
ffc03540:	002cc703          	lbu	a4, 2(s9)
ffc03544:	02070e63          	beqz	a4, ffc03580 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x19cc>
header_reads_flushed(unsigned long, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:81
  return (ncrisc_noc_reads_flushed(noc, transaction_id) || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))));
ffc03548:	04812503          	lw	a0, 72(sp)
ffc0354c:	00300593          	li	a1, 3
ffc03550:	0b112e23          	sw	a7, 188(sp)
ffc03554:	0af12c23          	sw	a5, 184(sp)
ffc03558:	0b012a23          	sw	a6, 180(sp)
ffc0355c:	f78fd0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc03560:	02050063          	beqz	a0, ffc03580 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x19cc>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:781
                                                       (header_reads_flushed(output_noc, NCRISC_HEADER_RD_TRID, l1_ptr_addr) && stride_iter_matches_expr && write_stride == rd_stride));
ffc03564:	0b812783          	lw	a5, 184(sp)
ffc03568:	00078c63          	beqz	a5, ffc03580 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x19cc>
ffc0356c:	0d412783          	lw	a5, 212(sp)
ffc03570:	03c12703          	lw	a4, 60(sp)
ffc03574:	0b412803          	lw	a6, 180(sp)
ffc03578:	0bc12883          	lw	a7, 188(sp)
ffc0357c:	ecf700e3          	beq	a4, a5, ffc0343c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1888>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:790
              curr_dram_output_stream_state->write_stride = write_stride | DRAM_STRIDE_UPDATE_WAIT;
ffc03580:	0b012783          	lw	a5, 176(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:789
              update_dram_q = false;
ffc03584:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:790
              curr_dram_output_stream_state->write_stride = write_stride | DRAM_STRIDE_UPDATE_WAIT;
ffc03588:	00fc9e23          	sh	a5, 28(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:791
              if (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK)
ffc0358c:	03012783          	lw	a5, 48(sp)
ffc03590:	fc07f793          	andi	a5, a5, -64
ffc03594:	ee078ae3          	beqz	a5, ffc03488 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x18d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:792
                dram_ptr_update_cnt = 0;
ffc03598:	02012823          	sw	zero, 48(sp)
ffc0359c:	eedff06f          	j	ffc03488 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x18d4>
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:372
  if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
ffc035a0:	002cc583          	lbu	a1, 2(s9)
ffc035a4:	ea0598e3          	bnez	a1, ffc03454 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x18a0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:376
    if (!is_strided_write || write_stride == total_write_strides-1) {
ffc035a8:	04412503          	lw	a0, 68(sp)
ffc035ac:	00100593          	li	a1, 1
ffc035b0:	00a5f863          	bgeu	a1, a0, ffc035c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1a0c>
ffc035b4:	03c12583          	lw	a1, 60(sp)
ffc035b8:	fff68693          	addi	a3, a3, -1 # f2ffffff <TENSIX_MAILBOX_BASE+0xf313ffff>
ffc035bc:	06d59063          	bne	a1, a3, ffc0361c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1a68>
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index, val);
ffc035c0:	0a812783          	lw	a5, 168(sp)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:377
      stream_dram_writes_write_scratch(dram_stream, PTR_UPDATE_REG_WR_PTR_UPDATE, PTR_UPDATE_TYPE_WR_PTR_UPDATE | dram_wrptr_q_slots);
ffc035c4:	008006b7          	lui	a3, 0x800
ffc035c8:	00d76733          	or	a4, a4, a3
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
ffc035cc:	00e7a023          	sw	a4, 0(a5)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:379
      if (is_strided_write) {
ffc035d0:	04412703          	lw	a4, 68(sp)
ffc035d4:	00100793          	li	a5, 1
ffc035d8:	02e7fa63          	bgeu	a5, a4, ffc0360c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1a58>
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
ffc035dc:	07812783          	lw	a5, 120(sp)
ffc035e0:	00d7a023          	sw	a3, 0(a5)
ffc035e4:	08812783          	lw	a5, 136(sp)
ffc035e8:	00c7a023          	sw	a2, 0(a5)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:382
        stream_dram_writes_write_scratch(dram_stream, PTR_UPDATE_REG_STRIDE, next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0);
ffc035ec:	00060463          	beqz	a2, ffc035f4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1a40>
ffc035f0:	00004637          	lui	a2, 0x4
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
ffc035f4:	08c12783          	lw	a5, 140(sp)
ffc035f8:	00c7a023          	sw	a2, 0(a5)
ffc035fc:	09012783          	lw	a5, 144(sp)
ffc03600:	09c12703          	lw	a4, 156(sp)
ffc03604:	00e7a023          	sw	a4, 0(a5)
ffc03608:	e7dff06f          	j	ffc03484 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x18d0>
ffc0360c:	07812703          	lw	a4, 120(sp)
ffc03610:	004007b7          	lui	a5, 0x400
ffc03614:	00f72023          	sw	a5, 0(a4) # ffff0000 <TENSIX_MAILBOX_BASE+0x130000>
ffc03618:	fe5ff06f          	j	ffc035fc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1a48>
ffc0361c:	07812683          	lw	a3, 120(sp)
ffc03620:	00200737          	lui	a4, 0x200
ffc03624:	00e6a023          	sw	a4, 0(a3) # 800000 <substitutes.cpp.cd30c172+0x7e16ea>
ffc03628:	08812703          	lw	a4, 136(sp)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:391
      stream_dram_writes_write_scratch(dram_stream, PTR_UPDATE_REG_STRIDE, curr_stride_wrap + write_stride + 1);
ffc0362c:	00178793          	addi	a5, a5, 1 # 400001 <substitutes.cpp.cd30c172+0x3e16eb>
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
ffc03630:	00c72023          	sw	a2, 0(a4) # 200000 <substitutes.cpp.cd30c172+0x1e16ea>
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:391
ffc03634:	03c12703          	lw	a4, 60(sp)
ffc03638:	00e787b3          	add	a5, a5, a4
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:507
ffc0363c:	08c12703          	lw	a4, 140(sp)
ffc03640:	fd5ff06f          	j	ffc03614 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1a60>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:751
          bool update_dram_q = true;
ffc03644:	00048c13          	mv	s8, s1
ffc03648:	e41ff06f          	j	ffc03488 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x18d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:813
            curr_dram_output_stream_state->in_flight_q_slots_2 = in_flight_q_slots;
ffc0364c:	02dc8e23          	sb	a3, 60(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:814
            curr_dram_output_stream_state->in_flight_tiles_2 = in_flight_tiles;
ffc03650:	02ec9f23          	sh	a4, 62(s9)
ffc03654:	e75ff06f          	j	ffc034c8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1914>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:828
          if (is_strided_write && !update_dram_q)
ffc03658:	04412683          	lw	a3, 68(sp)
ffc0365c:	00100713          	li	a4, 1
ffc03660:	00d77463          	bgeu	a4, a3, ffc03668 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1ab4>
ffc03664:	e60c0ee3          	beqz	s8, ffc034e0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x192c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:831
          if (!curr_dram_output_stream_state->moves_raw_data && !dram_writes_with_cmd_buf) {
ffc03668:	03412703          	lw	a4, 52(sp)
ffc0366c:	00f767b3          	or	a5, a4, a5
ffc03670:	e60788e3          	beqz	a5, ffc034e0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x192c>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
ffc03674:	0ac12783          	lw	a5, 172(sp)
ffc03678:	0007a783          	lw	a5, 0(a5)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:835
          if (!ncrisc_noc_fast_write_bufs_ok(output_noc)) {
ffc0367c:	e60792e3          	bnez	a5, ffc034e0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x192c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:846
          if (!next_data_chunk_available) {
ffc03680:	06c12783          	lw	a5, 108(sp)
ffc03684:	e547eee3          	bltu	a5, s4, ffc034e0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x192c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:851
          dram_q_space_available = dram_decoupled ? true : (temp_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ||
ffc03688:	004d4783          	lbu	a5, 4(s10)
ffc0368c:	0017f793          	andi	a5, a5, 1
ffc03690:	02079463          	bnez	a5, ffc036b8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b04>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:850
          dram_rdptr_q_slots = temp_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
ffc03694:	00ad5783          	lhu	a5, 10(s10)
ffc03698:	07c12703          	lw	a4, 124(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:852
                                   !dram_io_full(dram_rdptr_q_slots, temp_dram_q_issue->dram_ptr_issued_q_slots, temp_dram_q_issue->dram_buf_size_q_slots);
ffc0369c:	00cd5683          	lhu	a3, 12(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:850
          dram_rdptr_q_slots = temp_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
ffc036a0:	00e7f7b3          	and	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:852
                                   !dram_io_full(dram_rdptr_q_slots, temp_dram_q_issue->dram_ptr_issued_q_slots, temp_dram_q_issue->dram_buf_size_q_slots);
ffc036a4:	006d5703          	lhu	a4, 6(s10)
dram_io_full(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:85
  uint32_t wr_ptr_reduced_by_q_slots = wr_ptr - buf_size_q_slots;
ffc036a8:	40d70633          	sub	a2, a4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:89
  return case1 || case2;
ffc036ac:	e2c78ae3          	beq	a5, a2, ffc034e0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x192c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:86
  uint32_t rd_ptr_reduced_by_q_slots = rd_ptr - buf_size_q_slots;
ffc036b0:	40d787b3          	sub	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:89
  return case1 || case2;
ffc036b4:	e2f706e3          	beq	a4, a5, ffc034e0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x192c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:870
            has_scatter_offsets = true;
ffc036b8:	00048713          	mv	a4, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:867
          if (dram_io_scatter_state != ((dram_io_scatter_state_t*)0)) {
ffc036bc:	040a8063          	beqz	s5, ffc036fc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b48>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:868
            has_scatter_offsets = get_scatter_offsets(dram_io_scatter_state, scatter_offsets, dram_io_info->scatter_list_stream_id);
ffc036c0:	008b5783          	lhu	a5, 8(s6)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:373
  if (scatter_list_stream_id) {
ffc036c4:	04078a63          	beqz	a5, ffc03718 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b64>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc036c8:	017787b3          	add	a5, a5, s7
ffc036cc:	00c79793          	slli	a5, a5, 0xc
ffc036d0:	08c7a683          	lw	a3, 140(a5)
stream_tiles_outstanding(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:316
  return NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
ffc036d4:	0487a603          	lw	a2, 72(a5)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:377
      return false;
ffc036d8:	00000713          	li	a4, 0
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:376
    if (!phase_active || !tiles_available)
ffc036dc:	0046f693          	andi	a3, a3, 4
ffc036e0:	00068e63          	beqz	a3, ffc036fc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b48>
ffc036e4:	00060c63          	beqz	a2, ffc036fc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b48>
stream_phase_next_recved_tile_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:146
  return NOC_STREAM_READ_REG(stream_id, STREAM_NEXT_RECEIVED_MSG_ADDR_REG_INDEX);
ffc036e8:	04c7a783          	lw	a5, 76(a5)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:378
    scatter_offsets = ((volatile tt_uint64_t tt_l1_ptr *)(stream_phase_next_recved_tile_addr(scatter_list_stream_id)*MEM_WORD_WIDTH + DRAM_SCATTER_LIST_START_OFFSET));
ffc036ec:	00178793          	addi	a5, a5, 1
ffc036f0:	00479793          	slli	a5, a5, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:381
    return true;
  } else {
    scatter_offsets = dram_io_scatter_state->scatter_offsets;
ffc036f4:	04f12e23          	sw	a5, 92(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:382
    return true;
ffc036f8:	00048713          	mv	a4, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:678
        while (has_scatter_offsets) {
ffc036fc:	06c12783          	lw	a5, 108(sp)
ffc03700:	414787b3          	sub	a5, a5, s4
ffc03704:	01079793          	slli	a5, a5, 0x10
ffc03708:	0107d793          	srli	a5, a5, 0x10
ffc0370c:	06f12623          	sw	a5, 108(sp)
ffc03710:	f4071663          	bnez	a4, ffc02e5c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x12a8>
ffc03714:	dcdff06f          	j	ffc034e0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x192c>
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:381
    scatter_offsets = dram_io_scatter_state->scatter_offsets;
ffc03718:	01caa783          	lw	a5, 28(s5)
ffc0371c:	fd9ff06f          	j	ffc036f4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1b40>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
ffc03720:	00078513          	mv	a0, a5
ffc03724:	d0cfd0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc03728:	01750533          	add	a0, a0, s7
ffc0372c:	00c51513          	slli	a0, a0, 0xc
ffc03730:	00c50513          	addi	a0, a0, 12
ffc03734:	914ff06f          	j	ffc02848 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc94>
ffc03738:	00090513          	mv	a0, s2
ffc0373c:	cf4fd0ef          	jal	ra, ffc00c30 <get_operand_stream_id(int)>
ffc03740:	01750533          	add	a0, a0, s7
ffc03744:	00c51513          	slli	a0, a0, 0xc
ffc03748:	00c50513          	addi	a0, a0, 12
ffc0374c:	98cff06f          	j	ffc028d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd24>
stream_receiver_endpoint_tiles_clear_b0(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:340
    clr_val *= 2;
ffc03750:	00141793          	slli	a5, s0, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:341
    clr_val = (~clr_val) + 1;
ffc03754:	40f007b3          	neg	a5, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:342
    NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, clr_val);
ffc03758:	00f72023          	sw	a5, 0(a4)
ffc0375c:	9d4ff06f          	j	ffc02930 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd7c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc03760:	222237b7          	lui	a5, 0x22223
ffc03764:	33378793          	addi	a5, a5, 819 # 22223333 <substitutes.cpp.cd30c172+0x22204a1d>
ffc03768:	ffb20737          	lui	a4, 0xffb20
ffc0376c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2077
#if !defined(RISC_B0_HW) && (defined(PERF_DUMP) || defined(INTERMED_DUMP) || defined(DRAM_DECOUPLE) || defined(PERF_DUMP_CONCURRENT))
  call_with_cpu_flush_args4((void *)poll_dram_ptrs,
                            (void *) &num_active_dram_queues, (void *) dram_q_state, (void *) &check_ptrs_flushed, (void *) &all_ptrs_flushed
  );
#else
  poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
ffc03770:	0dc10593          	addi	a1, sp, 220
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2070
  bool check_ptrs_flushed = true;
ffc03774:	00100793          	li	a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2077
  poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
ffc03778:	0d810513          	addi	a0, sp, 216
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2070
  bool check_ptrs_flushed = true;
ffc0377c:	0cf10c23          	sb	a5, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2077
  poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
ffc03780:	00407097          	auipc	ra, 0x407
ffc03784:	7a4080e7          	jalr	1956(ra) # af24 <TENSIX_MAILBOX_BASE+0x14af24>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2080
#endif
  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    while (!ncrisc_noc_reads_flushed(n, NCRISC_HEADER_RD_TRID));
ffc03788:	00300593          	li	a1, 3
ffc0378c:	00000513          	li	a0, 0
ffc03790:	d44fd0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc03794:	fe050ae3          	beqz	a0, ffc03788 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1bd4>
ffc03798:	00300593          	li	a1, 3
ffc0379c:	00100513          	li	a0, 1
ffc037a0:	d34fd0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc037a4:	fe050ae3          	beqz	a0, ffc03798 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1be4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2088
#if !defined(RISC_B0_HW) && (defined(PERF_DUMP) || defined(INTERMED_DUMP) || defined(DRAM_DECOUPLE) || defined(PERF_DUMP_CONCURRENT))
    call_with_cpu_flush_args4((void *)poll_dram_ptrs,
                              (void *) &num_active_dram_queues, (void *) dram_q_state, (void *) &check_ptrs_flushed, (void *) &all_ptrs_flushed
    );
#else
    poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
ffc037a8:	0dc10593          	addi	a1, sp, 220
ffc037ac:	0d810513          	addi	a0, sp, 216
ffc037b0:	00407097          	auipc	ra, 0x407
ffc037b4:	774080e7          	jalr	1908(ra) # af24 <TENSIX_MAILBOX_BASE+0x14af24>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2090
#endif
    if (all_ptrs_flushed)
ffc037b8:	0dc14783          	lbu	a5, 220(sp)
ffc037bc:	48079663          	bnez	a5, ffc03c48 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2094>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2093
      break;
    for (uint32_t n = 0; n < NUM_NOCS; n++) {
      while (!ncrisc_noc_reads_flushed(n, NCRISC_HEADER_RD_TRID));
ffc037c0:	00300593          	li	a1, 3
ffc037c4:	00000513          	li	a0, 0
ffc037c8:	d0cfd0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc037cc:	fe050ae3          	beqz	a0, ffc037c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c0c>
ffc037d0:	00300593          	li	a1, 3
ffc037d4:	00100513          	li	a0, 1
ffc037d8:	cfcfd0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc037dc:	fe050ae3          	beqz	a0, ffc037d0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c1c>
ffc037e0:	fc9ff06f          	j	ffc037a8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1bf4>
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:926
      if (!phase_active || !tiles_available) {
ffc037e4:	000a0413          	mv	s0, s4
ffc037e8:	00098463          	beqz	s3, ffc037f0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c3c>
ffc037ec:	874ff06f          	j	ffc02860 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xcac>
ffc037f0:	948ff06f          	j	ffc02938 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd84>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:658
        uint32_t stream_rd_ptr_byte = stream_dram_write_should_reset_pointers(stream_id) ? 0 : curr_dram_output_stream_state->stream_rd_ptr_byte;
ffc037f4:	00cca703          	lw	a4, 12(s9)
ffc037f8:	d5cff06f          	j	ffc02d54 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x11a0>
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:702
            if (rd_grd_ptr_autoinc) {
ffc037fc:	00071463          	bnez	a4, ffc03804 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c50>
ffc03800:	e19fe06f          	j	ffc02618 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa64>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:703
              l1_ptrs->wr_dram_rdptr = dram_io_incr_ptr(l1_ptrs->wr_dram_rdptr, rd_grd_ptr_autoinc, dram_buf_size_q_slots);
ffc03804:	020c5783          	lhu	a5, 32(s8)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
ffc03808:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
ffc0380c:	05012703          	lw	a4, 80(sp)
ffc03810:	00e7e463          	bltu	a5, a4, ffc03818 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c64>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
ffc03814:	40e787b3          	sub	a5, a5, a4
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:703
ffc03818:	02fc1023          	sh	a5, 32(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:705
              while (!ncrisc_noc_fast_write_ok(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc0381c:	00300593          	li	a1, 3
ffc03820:	00090513          	mv	a0, s2
ffc03824:	cd4fd0ef          	jal	ra, ffc00cf8 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc03828:	fe050ae3          	beqz	a0, ffc0381c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c68>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:706
              ncrisc_noc_fast_write(input_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_dram_rdptr)), dram_buf_addr+DRAM_BUF_RDPTR_OFFSET, 2,
ffc0382c:	06812703          	lw	a4, 104(sp)
ffc03830:	00000893          	li	a7, 0
ffc03834:	00100813          	li	a6, 1
ffc03838:	00200793          	li	a5, 2
ffc0383c:	000c8693          	mv	a3, s9
ffc03840:	020c0613          	addi	a2, s8, 32
ffc03844:	00300593          	li	a1, 3
ffc03848:	00090513          	mv	a0, s2
ffc0384c:	a7dfd0ef          	jal	ra, ffc012c8 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:719
        if (has_multi_readers) {
ffc03850:	000d8463          	beqz	s11, ffc03858 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1ca4>
ffc03854:	dc5fe06f          	j	ffc02618 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa64>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:736
        next_dram_q_in_flight->dram_ptr_flushed_q_slots = rdptr_flushed_val;  
ffc03858:	06412783          	lw	a5, 100(sp)
ffc0385c:	00fb1423          	sh	a5, 8(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:739
      next_dram_q_in_flight = (dram_q_state_t tt_l1_ptr *)next_dram_q_in_flight->next;
ffc03860:	020b2b03          	lw	s6, 32(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:740
      l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;  
ffc03864:	000b2c03          	lw	s8, 0(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:741
      if (next_dram_q_in_flight == first_dram_q_in_flight) {
ffc03868:	01648463          	beq	s1, s6, ffc03870 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1cbc>
ffc0386c:	d35fe06f          	j	ffc025a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9ec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:749
  epoch_q_slots_remaining--;
ffc03870:	0c412783          	lw	a5, 196(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:748
  next_dram_q_in_flight->flushed_partial_q_slot_tiles = 0;
ffc03874:	0004aa23          	sw	zero, 20(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:749
  epoch_q_slots_remaining--;
ffc03878:	fff78793          	addi	a5, a5, -1
ffc0387c:	0cf12223          	sw	a5, 196(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:747
  flushed_partial_q_slot_tiles = 0;
ffc03880:	00000493          	li	s1, 0
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2003
              if (is_dram_read_opt_enabled) {
ffc03884:	03412783          	lw	a5, 52(sp)
ffc03888:	00079463          	bnez	a5, ffc03890 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1cdc>
ffc0388c:	e0dfe06f          	j	ffc02698 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xae4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2004
                curr_phase_tiles_remaining_to_issue -= prev_data_rec_chunk_size_tiles;
ffc03890:	0cc12703          	lw	a4, 204(sp)
ffc03894:	04812783          	lw	a5, 72(sp)
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
ffc03898:	ffff0637          	lui	a2, 0xffff0
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2004
ffc0389c:	40f706b3          	sub	a3, a4, a5
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
ffc038a0:	0c012783          	lw	a5, 192(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2004
ffc038a4:	0cd12623          	sw	a3, 204(sp)
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
ffc038a8:	017787b3          	add	a5, a5, s7
ffc038ac:	00c79793          	slli	a5, a5, 0xc
ffc038b0:	0047a703          	lw	a4, 4(a5)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2010
                  if (fork_stream_id == NULL_STREAM) {
ffc038b4:	0ff00513          	li	a0, 255
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
ffc038b8:	ffff05b7          	lui	a1, 0xffff0
ffc038bc:	00c77733          	and	a4, a4, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
ffc038c0:	00d76733          	or	a4, a4, a3
ffc038c4:	00e7a223          	sw	a4, 4(a5)
ffc038c8:	000a0693          	mv	a3, s4
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2009
                  uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
ffc038cc:	0006c783          	lbu	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2010
                  if (fork_stream_id == NULL_STREAM) {
ffc038d0:	00168693          	addi	a3, a3, 1
ffc038d4:	00a79463          	bne	a5, a0, ffc038dc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1d28>
ffc038d8:	dc1fe06f          	j	ffc02698 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xae4>
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
ffc038dc:	017787b3          	add	a5, a5, s7
ffc038e0:	00c79793          	slli	a5, a5, 0xc
ffc038e4:	0047a703          	lw	a4, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
ffc038e8:	0cc12603          	lw	a2, 204(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
ffc038ec:	00b77733          	and	a4, a4, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
ffc038f0:	00c76733          	or	a4, a4, a2
ffc038f4:	00e7a223          	sw	a4, 4(a5)
ffc038f8:	fd5ff06f          	j	ffc038cc <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1d18>
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:702
            if (rd_grd_ptr_autoinc) {
ffc038fc:	f4070ee3          	beqz	a4, ffc03858 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1ca4>
ffc03900:	f05ff06f          	j	ffc03804 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1c50>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:667
        if (has_multi_readers && (!stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap) || reader_index != rd_stride)) {
ffc03904:	0dc10693          	addi	a3, sp, 220
ffc03908:	0d810613          	addi	a2, sp, 216
ffc0390c:	0d410593          	addi	a1, sp, 212
ffc03910:	000c0513          	mv	a0, s8
ffc03914:	c08fd0ef          	jal	ra, ffc00d1c <stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)>
ffc03918:	00050a63          	beqz	a0, ffc0392c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1d78>
ffc0391c:	0d412703          	lw	a4, 212(sp)
ffc03920:	06812783          	lw	a5, 104(sp)
ffc03924:	00e79463          	bne	a5, a4, ffc0392c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1d78>
ffc03928:	c59fe06f          	j	ffc02580 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9cc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:668
          if (!curr_dram_input_stream_state->q_ptr_update_pending) {
ffc0392c:	fcaa4783          	lbu	a5, -54(s4)
ffc03930:	02079463          	bnez	a5, ffc03958 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1da4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:669
            push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
ffc03934:	03c12783          	lw	a5, 60(sp)
ffc03938:	04412703          	lw	a4, 68(sp)
ffc0393c:	04812683          	lw	a3, 72(sp)
ffc03940:	04012503          	lw	a0, 64(sp)
ffc03944:	00f03633          	snez	a2, a5
ffc03948:	000b0593          	mv	a1, s6
ffc0394c:	cdcfd0ef          	jal	ra, ffc00e28 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:670
            curr_dram_input_stream_state->q_ptr_update_pending = true;
ffc03950:	00100793          	li	a5, 1
ffc03954:	fcfa0523          	sb	a5, -54(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:672
          if (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK)
ffc03958:	03012783          	lw	a5, 48(sp)
ffc0395c:	fc07f793          	andi	a5, a5, -64
ffc03960:	2c078463          	beqz	a5, ffc03c28 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2074>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:673
            dram_ptr_update_cnt = 0;
ffc03964:	02012823          	sw	zero, 48(sp)
ffc03968:	2c00006f          	j	ffc03c28 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2074>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1950
          bool next_data_rec_chunk_flushed = dram_decoupled ? true : dram_input_stream_check_next_chunk_flushed(input_noc, data_rec_chunk_pending_start_addr, data_rec_chunk_size_bytes, scatter_chunk_size_bytes, transaction_id);
ffc0396c:	03412483          	lw	s1, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1952
          if (is_dram_read_opt_enabled) {
ffc03970:	0c049e63          	bnez	s1, ffc03a4c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e98>
ffc03974:	1700006f          	j	ffc03ae4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f30>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1930
        if ((is_dram_read_opt_enabled || q_ptr_update_pending || phase_active) && (prev_in_flight_data_rec_chunks > 0)) {
ffc03978:	000b1463          	bnez	s6, ffc03980 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dcc>
ffc0397c:	c30fe06f          	j	ffc01dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f8>
ffc03980:	0580006f          	j	ffc039d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e24>
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
ffc03984:	00e6e463          	bltu	a3, a4, ffc0398c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dd8>
ffc03988:	f90fe06f          	j	ffc02118 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x564>
ffc0398c:	00d87463          	bgeu	a6, a3, ffc03994 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1de0>
ffc03990:	f88fe06f          	j	ffc02118 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x564>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:470
        all_dram_q_slot_available = all_dram_q_slot_available && dram_q_slot_available;
ffc03994:	00000793          	li	a5, 0
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:79
ffc03998:	00e86463          	bltu	a6, a4, ffc039a0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dec>
ffc0399c:	f7cfe06f          	j	ffc02118 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x564>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:473
      next_dram_q_issue = (dram_q_state_t tt_l1_ptr *)next_dram_q_issue->next;
ffc039a0:	0205a583          	lw	a1, 32(a1) # ffff0020 <TENSIX_MAILBOX_BASE+0x130020>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:474
      l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
ffc039a4:	0005a703          	lw	a4, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:475
      if (next_dram_q_issue == first_dram_q_issue || !all_dram_q_slot_available) {
ffc039a8:	00bc9463          	bne	s9, a1, ffc039b0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dfc>
ffc039ac:	ff8fe06f          	j	ffc021a4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5f0>
ffc039b0:	00078463          	beqz	a5, ffc039b8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e04>
ffc039b4:	efcfe06f          	j	ffc020b0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x4fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:482
  if (min_dram_io_entries <= DRAM_MIN_ENTIRES_POLL && (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK))
ffc039b8:	000d1463          	bnez	s10, ffc039c0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e0c>
ffc039bc:	fecfe06f          	j	ffc021a8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5f4>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1930
        if ((is_dram_read_opt_enabled || q_ptr_update_pending || phase_active) && (prev_in_flight_data_rec_chunks > 0)) {
ffc039c0:	03412783          	lw	a5, 52(sp)
ffc039c4:	00079a63          	bnez	a5, ffc039d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e24>
ffc039c8:	000b1863          	bnez	s6, ffc039d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e24>
ffc039cc:	0c812783          	lw	a5, 200(sp)
ffc039d0:	00079463          	bnez	a5, ffc039d8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e24>
ffc039d4:	bd8fe06f          	j	ffc01dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f8>
ffc039d8:	04c12783          	lw	a5, 76(sp)
ffc039dc:	00079463          	bnez	a5, ffc039e4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e30>
ffc039e0:	bccfe06f          	j	ffc01dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1934
          dram_q_state_t tt_l1_ptr * next_dram_q_in_flight = curr_dram_input_stream_state->next_dram_q_in_flight;
ffc039e4:	014a2403          	lw	s0, 20(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1932
          RISC_POST_STATUS(0xE0000000 | stream_id);
ffc039e8:	0c012703          	lw	a4, 192(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1935
          volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;
ffc039ec:	00042c83          	lw	s9, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1932
          RISC_POST_STATUS(0xE0000000 | stream_id);
ffc039f0:	e00007b7          	lui	a5, 0xe0000
ffc039f4:	00e7e7b3          	or	a5, a5, a4
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc039f8:	ffb20737          	lui	a4, 0xffb20
ffc039fc:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1949
          uint32_t transaction_id = curr_dram_input_stream_state->transaction_id_flushed;
ffc03a00:	ff9a4c03          	lbu	s8, -7(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1937
          uint32_t input_noc = curr_dram_input_stream_state->input_noc;
ffc03a04:	fc9a4903          	lbu	s2, -55(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1939
          uint32_t stream_flushed_ptr_byte = curr_dram_input_stream_state->stream_flushed_ptr_byte;
ffc03a08:	fd4a2a83          	lw	s5, -44(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:95
    transaction_id_temp = NCRISC_RD_START_TRID;
ffc03a0c:	00400993          	li	s3, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1936
          dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state = l1_ptrs->dram_io_scatter_state;
ffc03a10:	058ca783          	lw	a5, 88(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1940
          uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
ffc03a14:	038ca783          	lw	a5, 56(s9)
ffc03a18:	04f12223          	sw	a5, 68(sp)
dram_input_stream_check_next_chunk_flushed(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:94
  if (transaction_id_temp == NCRISC_RD_END_TRID) {
ffc03a1c:	00d00793          	li	a5, 13
ffc03a20:	00fc0463          	beq	s8, a5, ffc03a28 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e74>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:97
    transaction_id_temp += 1;
ffc03a24:	001c0993          	addi	s3, s8, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:99
  bool reads_flushed = ncrisc_noc_reads_flushed(input_noc, transaction_id_temp);
ffc03a28:	00098593          	mv	a1, s3
ffc03a2c:	00090513          	mv	a0, s2
ffc03a30:	aa4fd0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc03a34:	00050493          	mv	s1, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:100
  if (reads_flushed) {
ffc03a38:	f2051ae3          	bnez	a0, ffc0396c <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1db8>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1952
          if (is_dram_read_opt_enabled) {
ffc03a3c:	03412783          	lw	a5, 52(sp)
ffc03a40:	00079463          	bnez	a5, ffc03a48 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1e94>
ffc03a44:	b68fe06f          	j	ffc01dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1949
          uint32_t transaction_id = curr_dram_input_stream_state->transaction_id_flushed;
ffc03a48:	000c0993          	mv	s3, s8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1953
            read_phase_active(stream_id, curr_dram_input_stream_state, phase_active, curr_phase_tiles_remaining_to_issue);
ffc03a4c:	04012583          	lw	a1, 64(sp)
ffc03a50:	0c012503          	lw	a0, 192(sp)
ffc03a54:	0cc10693          	addi	a3, sp, 204
ffc03a58:	0c810613          	addi	a2, sp, 200
ffc03a5c:	b08fd0ef          	jal	ra, ffc00d64 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1954
            if (moves_raw_data) {
ffc03a60:	03c12783          	lw	a5, 60(sp)
ffc03a64:	04078e63          	beqz	a5, ffc03ac0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f0c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1955
              if (phase_active && !curr_phase_tiles_remaining_to_issue) {
ffc03a68:	0c812783          	lw	a5, 200(sp)
ffc03a6c:	04078a63          	beqz	a5, ffc03ac0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f0c>
ffc03a70:	0cc12783          	lw	a5, 204(sp)
ffc03a74:	04079663          	bnez	a5, ffc03ac0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f0c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1957
                if (stream_next_phase_src_change(stream_id)) {
ffc03a78:	0c012503          	lw	a0, 192(sp)
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:193
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE) || !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, PHASE_AUTO_CONFIG);
ffc03a7c:	000016b7          	lui	a3, 0x1
ffc03a80:	017507b3          	add	a5, a0, s7
ffc03a84:	00c79793          	slli	a5, a5, 0xc
ffc03a88:	0287a703          	lw	a4, 40(a5) # e0000028 <TENSIX_MAILBOX_BASE+0xe0140028>
ffc03a8c:	00d77733          	and	a4, a4, a3
ffc03a90:	00070463          	beqz	a4, ffc03a98 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1ee4>
ffc03a94:	a71fe06f          	j	ffc02504 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x950>
ffc03a98:	0287a783          	lw	a5, 40(a5)
ffc03a9c:	2007f793          	andi	a5, a5, 512
ffc03aa0:	00079463          	bnez	a5, ffc03aa8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1ef4>
ffc03aa4:	a61fe06f          	j	ffc02504 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x950>
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
ffc03aa8:	0c012783          	lw	a5, 192(sp)
ffc03aac:	00100713          	li	a4, 1
ffc03ab0:	017787b3          	add	a5, a5, s7
ffc03ab4:	00c79793          	slli	a5, a5, 0xc
ffc03ab8:	06e7ae23          	sw	a4, 124(a5)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1964
                  phase_active = false;
ffc03abc:	0c012423          	sw	zero, 200(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1976
          if (next_data_rec_chunk_flushed && (!is_dram_read_opt_enabled || ((q_ptr_update_pending || phase_active) && curr_phase_tiles_remaining_to_issue))) {
ffc03ac0:	00049463          	bnez	s1, ffc03ac8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f14>
ffc03ac4:	ae8fe06f          	j	ffc01dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f8>
ffc03ac8:	000b1863          	bnez	s6, ffc03ad8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f24>
ffc03acc:	0c812783          	lw	a5, 200(sp)
ffc03ad0:	00079463          	bnez	a5, ffc03ad8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f24>
ffc03ad4:	ad8fe06f          	j	ffc01dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f8>
ffc03ad8:	0cc12783          	lw	a5, 204(sp)
ffc03adc:	00079463          	bnez	a5, ffc03ae4 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f30>
ffc03ae0:	accfe06f          	j	ffc01dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f8>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
ffc03ae4:	ffb207b7          	lui	a5, 0xffb20
ffc03ae8:	e1000737          	lui	a4, 0xe1000
ffc03aec:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1980
            uint32_t in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
ffc03af0:	fcca5783          	lhu	a5, -52(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1983
            uint32_t flushed_partial_q_slot_tiles = next_dram_q_in_flight->flushed_partial_q_slot_tiles;
ffc03af4:	01442483          	lw	s1, 20(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1980
            uint32_t in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
ffc03af8:	04f12c23          	sw	a5, 88(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1981
            uint32_t data_rec_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
ffc03afc:	03ccd783          	lhu	a5, 60(s9)
ffc03b00:	04f12423          	sw	a5, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1982
            uint32_t q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
ffc03b04:	050ca783          	lw	a5, 80(s9)
ffc03b08:	06f12623          	sw	a5, 108(sp)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
ffc03b0c:	0c012783          	lw	a5, 192(sp)
ffc03b10:	017787b3          	add	a5, a5, s7
ffc03b14:	00c79793          	slli	a5, a5, 0xc
ffc03b18:	01c7a783          	lw	a5, 28(a5)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1984
            uint32_t stream_buf_size_bytes = stream_get_data_buf_size(stream_id) * MEM_WORD_WIDTH;
ffc03b1c:	00479793          	slli	a5, a5, 0x4
ffc03b20:	06f12023          	sw	a5, 96(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2019
                push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
ffc03b24:	03c12783          	lw	a5, 60(sp)
ffc03b28:	00f037b3          	snez	a5, a5
ffc03b2c:	06f12823          	sw	a5, 112(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1988
              flushed_partial_q_slot_tiles += data_rec_chunk_size_tiles;
ffc03b30:	04812783          	lw	a5, 72(sp)
ffc03b34:	00f484b3          	add	s1, s1, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1994
              if (full_q_slot_flushed) {
ffc03b38:	06c12783          	lw	a5, 108(sp)
ffc03b3c:	00978463          	beq	a5, s1, ffc03b44 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f90>
ffc03b40:	b51fe06f          	j	ffc02690 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xadc>
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:633
  volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;
ffc03b44:	00042c03          	lw	s8, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:637
  uint32_t rd_ptr_autoinc = (next_dram_q_in_flight->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
ffc03b48:	00444703          	lbu	a4, 4(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:634
  uint32_t dram_buf_size_q_slots = next_dram_q_in_flight->dram_buf_size_q_slots;
ffc03b4c:	00c45683          	lhu	a3, 12(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:635
  uint32_t rdptr_flushed_val = next_dram_q_in_flight->dram_ptr_flushed_q_slots;  
ffc03b50:	00845783          	lhu	a5, 8(s0)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1995
                bool update_pass = dram_input_stream_scatter_queue_update(stream_id, epoch_q_slots_remaining, moves_raw_data, input_noc, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes, 
ffc03b54:	0c012b03          	lw	s6, 192(sp)
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:636
  uint32_t rd_grd_ptr_autoinc = l1_ptrs->rd_grd_ptr_autoinc;
ffc03b58:	002c5d83          	lhu	s11, 2(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:637
  uint32_t rd_ptr_autoinc = (next_dram_q_in_flight->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
ffc03b5c:	00177713          	andi	a4, a4, 1
ffc03b60:	00071463          	bnez	a4, ffc03b68 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1fb4>
ffc03b64:	a15fe06f          	j	ffc02578 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9c4>
ffc03b68:	002c5703          	lhu	a4, 2(s8)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
ffc03b6c:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:54
  uint32_t double_buf_size_q_slots = 2*buf_size_q_slots;
ffc03b70:	00169713          	slli	a4, a3, 0x1
ffc03b74:	04e12823          	sw	a4, 80(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
ffc03b78:	00e7e463          	bltu	a5, a4, ffc03b80 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1fcc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
ffc03b7c:	40e787b3          	sub	a5, a5, a4
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:639
  next_dram_q_in_flight->dram_ptr_flushed_q_slots = rdptr_flushed_val;  
ffc03b80:	01079793          	slli	a5, a5, 0x10
ffc03b84:	0107d793          	srli	a5, a5, 0x10
ffc03b88:	00f41423          	sh	a5, 8(s0)
ffc03b8c:	06f12223          	sw	a5, 100(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:642
  bool has_multi_readers = curr_dram_input_stream_state->stream_info->dram_io_info->has_multi_readers && rd_grd_ptr_autoinc;
ffc03b90:	018a2783          	lw	a5, 24(s4)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1934
          dram_q_state_t tt_l1_ptr * next_dram_q_in_flight = curr_dram_input_stream_state->next_dram_q_in_flight;
ffc03b94:	00040493          	mv	s1, s0
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:642
  bool has_multi_readers = curr_dram_input_stream_state->stream_info->dram_io_info->has_multi_readers && rd_grd_ptr_autoinc;
ffc03b98:	0887a783          	lw	a5, 136(a5)
ffc03b9c:	0077c783          	lbu	a5, 7(a5)
ffc03ba0:	00079463          	bnez	a5, ffc03ba8 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1ff4>
ffc03ba4:	9f1fe06f          	j	ffc02594 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9e0>
ffc03ba8:	cc0d84e3          	beqz	s11, ffc03870 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1cbc>
ffc03bac:	00100c93          	li	s9, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:649
        has_multi_readers = total_readers > 1 && rd_grd_ptr_autoinc;
ffc03bb0:	00100d13          	li	s10, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:647
      if (!l1_ptrs->dram_padding) {
ffc03bb4:	03ec4703          	lbu	a4, 62(s8)
ffc03bb8:	00070463          	beqz	a4, ffc03bc0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x200c>
ffc03bbc:	9c5fe06f          	j	ffc02580 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9cc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:648
        total_readers = l1_ptrs->total_readers;
ffc03bc0:	055c4703          	lbu	a4, 85(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:649
        has_multi_readers = total_readers > 1 && rd_grd_ptr_autoinc;
ffc03bc4:	00000c93          	li	s9, 0
ffc03bc8:	00ed7463          	bgeu	s10, a4, ffc03bd0 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x201c>
ffc03bcc:	01b03cb3          	snez	s9, s11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:650
        rd_grd_ptr_autoinc = l1_ptrs->rd_grd_ptr_autoinc;
ffc03bd0:	002c5d83          	lhu	s11, 2(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:651
        uint32_t reader_index = l1_ptrs->reader_index;
ffc03bd4:	054c4783          	lbu	a5, 84(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:653
        uint32_t curr_stride_wrap = 0;
ffc03bd8:	0c012c23          	sw	zero, 216(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:654
        uint32_t next_stride_wrap = 0;
ffc03bdc:	0c012e23          	sw	zero, 220(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:651
        uint32_t reader_index = l1_ptrs->reader_index;
ffc03be0:	06f12423          	sw	a5, 104(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:656
        if (has_multi_readers) {
ffc03be4:	000c9463          	bnez	s9, ffc03bec <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2038>
ffc03be8:	999fe06f          	j	ffc02580 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9cc>
header_reads_flushed(unsigned long, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:81
  return (ncrisc_noc_reads_flushed(noc, transaction_id) || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))));
ffc03bec:	00300593          	li	a1, 3
ffc03bf0:	00090513          	mv	a0, s2
ffc03bf4:	8e0fd0ef          	jal	ra, ffc00cd4 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc03bf8:	d00516e3          	bnez	a0, ffc03904 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1d50>
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:659
            if (!curr_dram_input_stream_state->q_ptr_update_pending) {
ffc03bfc:	fcaa4783          	lbu	a5, -54(s4)
ffc03c00:	02079463          	bnez	a5, ffc03c28 <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2074>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:660
              push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
ffc03c04:	03c12783          	lw	a5, 60(sp)
ffc03c08:	04412703          	lw	a4, 68(sp)
ffc03c0c:	04812683          	lw	a3, 72(sp)
ffc03c10:	04012503          	lw	a0, 64(sp)
ffc03c14:	00f03633          	snez	a2, a5
ffc03c18:	000b0593          	mv	a1, s6
ffc03c1c:	a0cfd0ef          	jal	ra, ffc00e28 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:661
              curr_dram_input_stream_state->q_ptr_update_pending = true;
ffc03c20:	00100793          	li	a5, 1
ffc03c24:	fcfa0523          	sb	a5, -54(s4)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2047
            curr_dram_input_stream_state->epoch_q_slots_remaining = epoch_q_slots_remaining;
ffc03c28:	0c412783          	lw	a5, 196(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2045
            curr_dram_input_stream_state->transaction_id_flushed = transaction_id;
ffc03c2c:	ff3a0ca3          	sb	s3, -7(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2047
            curr_dram_input_stream_state->epoch_q_slots_remaining = epoch_q_slots_remaining;
ffc03c30:	fefa2023          	sw	a5, -32(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2048
            curr_dram_input_stream_state->in_flight_data_rec_chunks = in_flight_data_rec_chunks;
ffc03c34:	05812783          	lw	a5, 88(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2046
            curr_dram_input_stream_state->next_dram_q_in_flight = next_dram_q_in_flight;
ffc03c38:	008a2a23          	sw	s0, 20(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2048
            curr_dram_input_stream_state->in_flight_data_rec_chunks = in_flight_data_rec_chunks;
ffc03c3c:	fcfa1623          	sh	a5, -52(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2049
            curr_dram_input_stream_state->stream_flushed_ptr_byte = stream_flushed_ptr_byte;
ffc03c40:	fd5a2a23          	sw	s5, -44(s4)
ffc03c44:	968fe06f          	j	ffc01dac <risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2097
    }
  }

}
ffc03c48:	11c12083          	lw	ra, 284(sp)
ffc03c4c:	11812403          	lw	s0, 280(sp)
ffc03c50:	11412483          	lw	s1, 276(sp)
ffc03c54:	11012903          	lw	s2, 272(sp)
ffc03c58:	10c12983          	lw	s3, 268(sp)
ffc03c5c:	10812a03          	lw	s4, 264(sp)
ffc03c60:	10412a83          	lw	s5, 260(sp)
ffc03c64:	10012b03          	lw	s6, 256(sp)
ffc03c68:	0fc12b83          	lw	s7, 252(sp)
ffc03c6c:	0f812c03          	lw	s8, 248(sp)
ffc03c70:	0f412c83          	lw	s9, 244(sp)
ffc03c74:	0f012d03          	lw	s10, 240(sp)
ffc03c78:	0ec12d83          	lw	s11, 236(sp)
ffc03c7c:	12010113          	addi	sp, sp, 288
ffc03c80:	00008067          	ret

ffc03c84 <exit>:
exit():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:13 (discriminator 1)
    return 0;
}

extern "C" void exit(int ec)
{
    while (1) { asm volatile ("" ::: "memory"); }
ffc03c84:	0000006f          	j	ffc03c84 <exit>
ffc03c88:	00000013          	nop
ffc03c8c:	00000013          	nop

ffc03c90 <wzerorange>:
wzerorange():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:20 (discriminator 2)

extern "C" void wzerorange(uint32_t *start, uint32_t *end) __attribute__((aligned(16)));

extern "C" void wzerorange(uint32_t *start, uint32_t *end)
{
    for (; start != end; start++)
ffc03c90:	00b50863          	beq	a0, a1, ffc03ca0 <wzerorange+0x10>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:22 (discriminator 1)
    {
        *start = 0;
ffc03c94:	00052023          	sw	zero, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:20 (discriminator 1)
    for (; start != end; start++)
ffc03c98:	00450513          	addi	a0, a0, 4
ffc03c9c:	ff5ff06f          	j	ffc03c90 <wzerorange>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:24
    }
}
ffc03ca0:	00008067          	ret
	...

ffc03cb0 <call_with_cpu_flush_args>:
call_with_cpu_flush_args():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:19
.extern RtosScheduler

.align 4
.func
call_with_cpu_flush_args:
	j call_with_cpu_flush
ffc03cb0:	0400006f          	j	ffc03cf0 <call_with_cpu_flush>
ffc03cb4:	00000013          	nop
ffc03cb8:	00000013          	nop
ffc03cbc:	00000013          	nop

ffc03cc0 <call_with_cpu_flush_args2>:
call_with_cpu_flush_args2():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:26
.endfunc

.align 4
.func
call_with_cpu_flush_args2:
	j call_with_cpu_flush
ffc03cc0:	0300006f          	j	ffc03cf0 <call_with_cpu_flush>
ffc03cc4:	00000013          	nop
ffc03cc8:	00000013          	nop
ffc03ccc:	00000013          	nop

ffc03cd0 <call_with_cpu_flush_args3>:
call_with_cpu_flush_args3():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:33
.endfunc

.align 4
.func
call_with_cpu_flush_args3:
	j call_with_cpu_flush
ffc03cd0:	0200006f          	j	ffc03cf0 <call_with_cpu_flush>
ffc03cd4:	00000013          	nop
ffc03cd8:	00000013          	nop
ffc03cdc:	00000013          	nop

ffc03ce0 <call_with_cpu_flush_args4>:
call_with_cpu_flush_args4():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:40
.endfunc

.align 4
.func
call_with_cpu_flush_args4:
	j call_with_cpu_flush
ffc03ce0:	0100006f          	j	ffc03cf0 <call_with_cpu_flush>
ffc03ce4:	00000013          	nop
ffc03ce8:	00000013          	nop
ffc03cec:	00000013          	nop

ffc03cf0 <call_with_cpu_flush>:
call_with_cpu_flush():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:48

.align 4
.func
call_with_cpu_flush:
	/* Save Context of Running Task */
	addi sp, sp, -CONTEXT_SIZE
ffc03cf0:	f9010113          	addi	sp, sp, -112
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:49
	sw x1, 0 * 4( sp )
ffc03cf4:	00112023          	sw	ra, 0(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:50
	sw x5, 1 * 4( sp )
ffc03cf8:	00512223          	sw	t0, 4(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:51
	sw x6, 2 * 4( sp )
ffc03cfc:	00612423          	sw	t1, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:52
	sw x7, 3 * 4( sp )
ffc03d00:	00712623          	sw	t2, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:53
	sw x8, 4 * 4( sp )
ffc03d04:	00812823          	sw	s0, 16(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:54
	sw x9, 5 * 4( sp )
ffc03d08:	00912a23          	sw	s1, 20(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:55
	sw x10, 6 * 4( sp )
ffc03d0c:	00a12c23          	sw	a0, 24(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:56
	sw x11, 7 * 4( sp )
ffc03d10:	00b12e23          	sw	a1, 28(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:57
	sw x12, 8 * 4( sp )
ffc03d14:	02c12023          	sw	a2, 32(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:58
	sw x13, 9 * 4( sp )
ffc03d18:	02d12223          	sw	a3, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:59
	sw x14, 10 * 4( sp )
ffc03d1c:	02e12423          	sw	a4, 40(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:60
	sw x15, 11 * 4( sp )
ffc03d20:	02f12623          	sw	a5, 44(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:61
	sw x16, 12 * 4( sp )
ffc03d24:	03012823          	sw	a6, 48(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:62
	sw x17, 13 * 4( sp )
ffc03d28:	03112a23          	sw	a7, 52(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:63
	sw x18, 14 * 4( sp )
ffc03d2c:	03212c23          	sw	s2, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:64
	sw x19, 15 * 4( sp )
ffc03d30:	03312e23          	sw	s3, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:65
	sw x20, 16 * 4( sp )
ffc03d34:	05412023          	sw	s4, 64(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:66
	sw x21, 17 * 4( sp )
ffc03d38:	05512223          	sw	s5, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:67
	sw x22, 18 * 4( sp )
ffc03d3c:	05612423          	sw	s6, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:68
	sw x23, 19 * 4( sp )
ffc03d40:	05712623          	sw	s7, 76(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:69
	sw x24, 20 * 4( sp )
ffc03d44:	05812823          	sw	s8, 80(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:70
	sw x25, 21 * 4( sp )
ffc03d48:	05912a23          	sw	s9, 84(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:71
	sw x26, 22 * 4( sp )
ffc03d4c:	05a12c23          	sw	s10, 88(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:72
	sw x27, 23 * 4( sp )
ffc03d50:	05b12e23          	sw	s11, 92(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:73
	sw x28, 24 * 4( sp )
ffc03d54:	07c12023          	sw	t3, 96(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:74
	sw x29, 25 * 4( sp )
ffc03d58:	07d12223          	sw	t4, 100(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:75
	sw x30, 26 * 4( sp )
ffc03d5c:	07e12423          	sw	t5, 104(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:76
	sw x31, 27 * 4( sp )
ffc03d60:	07f12623          	sw	t6, 108(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:78

	lw  t0, pContext			/* Load pointer to context. */
ffc03d64:	7c01a283          	lw	t0, 1984(gp) # ffb00fc0 <pContext>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:79
	sw  sp, 0( t0 )				/* save context stack pointer */
ffc03d68:	0022a023          	sw	sp, 0(t0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:80
	li  t0, BRISC_MAILBOX
ffc03d6c:	000052b7          	lui	t0, 0x5
ffc03d70:	02028293          	addi	t0, t0, 32 # 5020 <__trisc2_size+0x20>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:81
	la  t1, context_restore
ffc03d74:	00409317          	auipc	t1, 0x409
ffc03d78:	adc30313          	addi	t1, t1, -1316 # c850 <TENSIX_MAILBOX_BASE+0x14c850>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:82
	sw  t1, 4(t0)
ffc03d7c:	0062a223          	sw	t1, 4(t0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:83
	li   t1, 0x1
ffc03d80:	00100313          	li	t1, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:84
	sw  t1, 0(t0)
ffc03d84:	0062a023          	sw	t1, 0(t0)

ffc03d88 <halt>:
halt():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/contextASM.S:91
	/*Signal to BRISC to reset NCRISC*/
	/*Set the reset vector for ncrisc to restore_context*/
	/*Save stack pointer to pCpuSP*/
	/*Program flow will end here as ncrisc will go into reset*/
halt:
	j halt
ffc03d88:	0000006f          	j	ffc03d88 <halt>
ffc03d8c:	00000000          	0x0

ffc03d90 <memset>:
memset():
ffc03d90:	00f00313          	li	t1, 15
ffc03d94:	00050713          	mv	a4, a0
ffc03d98:	02c37e63          	bgeu	t1, a2, ffc03dd4 <memset+0x44>
ffc03d9c:	00f77793          	andi	a5, a4, 15
ffc03da0:	0a079063          	bnez	a5, ffc03e40 <memset+0xb0>
ffc03da4:	08059263          	bnez	a1, ffc03e28 <memset+0x98>
ffc03da8:	ff067693          	andi	a3, a2, -16
ffc03dac:	00f67613          	andi	a2, a2, 15
ffc03db0:	00e686b3          	add	a3, a3, a4
ffc03db4:	00b72023          	sw	a1, 0(a4) # e1000000 <TENSIX_MAILBOX_BASE+0xe1140000>
ffc03db8:	00b72223          	sw	a1, 4(a4)
ffc03dbc:	00b72423          	sw	a1, 8(a4)
ffc03dc0:	00b72623          	sw	a1, 12(a4)
ffc03dc4:	01070713          	addi	a4, a4, 16
ffc03dc8:	fed766e3          	bltu	a4, a3, ffc03db4 <memset+0x24>
ffc03dcc:	00061463          	bnez	a2, ffc03dd4 <memset+0x44>
ffc03dd0:	00008067          	ret
ffc03dd4:	40c306b3          	sub	a3, t1, a2
ffc03dd8:	00269693          	slli	a3, a3, 0x2
ffc03ddc:	00000297          	auipc	t0, 0x0
ffc03de0:	005686b3          	add	a3, a3, t0
ffc03de4:	00c68067          	jr	12(a3) # 100c <__firmware_stack_size+0xc3c>
ffc03de8:	00b70723          	sb	a1, 14(a4)
ffc03dec:	00b706a3          	sb	a1, 13(a4)
ffc03df0:	00b70623          	sb	a1, 12(a4)
ffc03df4:	00b705a3          	sb	a1, 11(a4)
ffc03df8:	00b70523          	sb	a1, 10(a4)
ffc03dfc:	00b704a3          	sb	a1, 9(a4)
ffc03e00:	00b70423          	sb	a1, 8(a4)
ffc03e04:	00b703a3          	sb	a1, 7(a4)
ffc03e08:	00b70323          	sb	a1, 6(a4)
ffc03e0c:	00b702a3          	sb	a1, 5(a4)
ffc03e10:	00b70223          	sb	a1, 4(a4)
ffc03e14:	00b701a3          	sb	a1, 3(a4)
ffc03e18:	00b70123          	sb	a1, 2(a4)
ffc03e1c:	00b700a3          	sb	a1, 1(a4)
ffc03e20:	00b70023          	sb	a1, 0(a4)
ffc03e24:	00008067          	ret
ffc03e28:	0ff5f593          	zext.b	a1, a1
ffc03e2c:	00859693          	slli	a3, a1, 0x8
ffc03e30:	00d5e5b3          	or	a1, a1, a3
ffc03e34:	01059693          	slli	a3, a1, 0x10
ffc03e38:	00d5e5b3          	or	a1, a1, a3
ffc03e3c:	f6dff06f          	j	ffc03da8 <memset+0x18>
ffc03e40:	00279693          	slli	a3, a5, 0x2
ffc03e44:	00000297          	auipc	t0, 0x0
ffc03e48:	005686b3          	add	a3, a3, t0
ffc03e4c:	00008293          	mv	t0, ra
ffc03e50:	fa0680e7          	jalr	-96(a3)
ffc03e54:	00028093          	mv	ra, t0
ffc03e58:	ff078793          	addi	a5, a5, -16
ffc03e5c:	40f70733          	sub	a4, a4, a5
ffc03e60:	00f60633          	add	a2, a2, a5
ffc03e64:	f6c378e3          	bgeu	t1, a2, ffc03dd4 <memset+0x44>
ffc03e68:	f3dff06f          	j	ffc03da4 <memset+0x14>

Disassembly of section code_l1:

00009000 <init_ncrisc_streams(void*, unsigned long)>:
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/risc.h:16
    9000:	ffb207b7          	lui	a5, 0xffb20
init_ncrisc_streams(void*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:151
  num_active_streams = EPOCH_INFO_PTR->num_active_streams;
    9004:	00023637          	lui	a2, 0x23
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/risc.h:16
    9008:	10a7a623          	sw	a0, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
init_ncrisc_streams(void*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:151
    900c:	08060613          	addi	a2, a2, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
    9010:	00862583          	lw	a1, 8(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:155
  for (uint32_t i = 0;
    9014:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:151
  num_active_streams = EPOCH_INFO_PTR->num_active_streams;
    9018:	c6b1a823          	sw	a1, -912(gp) # ffb00470 <num_active_streams>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:153
  active_stream_info_t tt_l1_ptr * curr_active_stream_info = active_stream_info;
    901c:	000057b7          	lui	a5, 0x5
    9020:	20078793          	addi	a5, a5, 512 # 5200 <active_stream_info>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:156
       i < num_active_streams;
    9024:	02d58863          	beq	a1, a3, 9054 <init_ncrisc_streams(void*, unsigned long)+0x54>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:159
    epoch_stream_info_t tt_l1_ptr * l1_stream_info = EPOCH_INFO_PTR->active_streams[i];
    9028:	04468713          	addi	a4, a3, 68
    902c:	00271713          	slli	a4, a4, 0x2
    9030:	00e60733          	add	a4, a2, a4
    9034:	00472703          	lw	a4, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:155
  for (uint32_t i = 0;
    9038:	00168693          	addi	a3, a3, 1
    903c:	00478793          	addi	a5, a5, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:161
    uint32_t flags = l1_stream_info->flags;
    9040:	03c72503          	lw	a0, 60(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:163
    curr_active_stream_info->stream_id = stream_id;
    9044:	00075703          	lhu	a4, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:164
    curr_active_stream_info->flags = flags;
    9048:	fea79f23          	sh	a0, -2(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:163
    curr_active_stream_info->stream_id = stream_id;
    904c:	fee78e23          	sb	a4, -4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:155
  for (uint32_t i = 0;
    9050:	fd5ff06f          	j	9024 <init_ncrisc_streams(void*, unsigned long)+0x24>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:166
}
    9054:	00008067          	ret

00009058 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)>:
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    9058:	001007b7          	lui	a5, 0x100
    905c:	b4078793          	addi	a5, a5, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
    9060:	00f585b3          	add	a1, a1, a5
    9064:	00c59593          	slli	a1, a1, 0xc
    9068:	08c5a683          	lw	a3, 140(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    906c:	3a45a783          	lw	a5, 932(a1)
get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:225
bool get_stream_push_flushed_l1(dram_input_stream_state_t* curr_dram_input_stream_state, uint32_t stream_id, uint32_t data_rec_chunk_size_bytes) {
    9070:	00050713          	mv	a4, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    9074:	00000513          	li	a0, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    9078:	0016f693          	andi	a3, a3, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    907c:	00068663          	beqz	a3, 9088 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)+0x30>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    9080:	0117d513          	srli	a0, a5, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    9084:	00153513          	seqz	a0, a0
stream_get_buf_space_available_words(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:181
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
    9088:	0705a683          	lw	a3, 112(a1)
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    908c:	00100837          	lui	a6, 0x100
    9090:	03870593          	addi	a1, a4, 56
get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:231
    if (fork_stream_id == NULL_STREAM) {
    9094:	0ff00e13          	li	t3, 255
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:227
  uint32_t stream_buf_bytes_free = (stream_get_buf_space_available_words(stream_id) * MEM_WORD_WIDTH);
    9098:	00469693          	slli	a3, a3, 0x4
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
    909c:	b4080813          	addi	a6, a6, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:230
    uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    90a0:	0005c783          	lbu	a5, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:231
    if (fork_stream_id == NULL_STREAM) {
    90a4:	05c78263          	beq	a5, t3, 90e8 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)+0x90>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
    90a8:	010787b3          	add	a5, a5, a6
    90ac:	00c79793          	slli	a5, a5, 0xc
get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:235
    all_idle = all_idle && stream_phase_advance_wait(fork_stream_id);
    90b0:	02050063          	beqz	a0, 90d0 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)+0x78>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
    90b4:	08c7a303          	lw	t1, 140(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    90b8:	3a47a883          	lw	a7, 932(a5)
get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:235
    90bc:	00000513          	li	a0, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    90c0:	00137313          	andi	t1, t1, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    90c4:	00030663          	beqz	t1, 90d0 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)+0x78>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    90c8:	0118d513          	srli	a0, a7, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    90cc:	00153513          	seqz	a0, a0
stream_get_buf_space_available_words(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:181 (discriminator 6)
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
    90d0:	0707a783          	lw	a5, 112(a5)
get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:236 (discriminator 6)
    uint32_t fork_stream_buf_bytes_free = (stream_get_buf_space_available_words(fork_stream_id) * MEM_WORD_WIDTH);
    90d4:	00479793          	slli	a5, a5, 0x4
    90d8:	00d7f463          	bgeu	a5, a3, 90e0 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)+0x88>
    90dc:	00078693          	mv	a3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:229 (discriminator 6)
  while (true) {
    90e0:	00158593          	addi	a1, a1, 1
    90e4:	fbdff06f          	j	90a0 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)+0x48>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:242
  uint32_t prev_stream_buf_bytes_free = curr_dram_input_stream_state->stream_flushed_ptr_byte;
    90e8:	00c72783          	lw	a5, 12(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:243
  prev_stream_buf_bytes_free += data_rec_chunk_size_bytes;
    90ec:	00c78633          	add	a2, a5, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:245
  if (stream_buf_bytes_free >= prev_stream_buf_bytes_free || all_idle) {
    90f0:	00c6f463          	bgeu	a3, a2, 90f8 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)+0xa0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:245 (discriminator 1)
    90f4:	00050663          	beqz	a0, 9100 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)+0xa8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:246
    curr_dram_input_stream_state->stream_flushed_ptr_byte = prev_stream_buf_bytes_free;
    90f8:	00c72623          	sw	a2, 12(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:247
    return true;
    90fc:	00100513          	li	a0, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:251
}
    9100:	00008067          	ret

00009104 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)>:
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:323
                                                                      ) {
    9104:	fd010113          	addi	sp, sp, -48
    9108:	03812383          	lw	t2, 56(sp)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    910c:	3fec8e37          	lui	t3, 0x3fec8
    9110:	090e0e13          	addi	t3, t3, 144 # 3fec8090 <substitutes.cpp.cd30c172+0x3fea977a>
    9114:	01c38e33          	add	t3, t2, t3
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    9118:	00001337          	lui	t1, 0x1
    911c:	ffb21fb7          	lui	t6, 0xffb21
    9120:	01051e93          	slli	t4, a0, 0x10
    9124:	c0030313          	addi	t1, t1, -1024 # c00 <__firmware_stack_size+0x830>
    9128:	c28f8f93          	addi	t6, t6, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    912c:	002e1e13          	slli	t3, t3, 0x2
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9130:	ffb002b7          	lui	t0, 0xffb00
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    9134:	006e8333          	add	t1, t4, t1
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:323
    9138:	02812623          	sw	s0, 44(sp)
    913c:	03212223          	sw	s2, 36(sp)
    9140:	03312023          	sw	s3, 32(sp)
    9144:	01412e23          	sw	s4, 28(sp)
    9148:	01512c23          	sw	s5, 24(sp)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
    914c:	01fe8fb3          	add	t6, t4, t6
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    9150:	01de0e33          	add	t3, t3, t4
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:329
    dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    9154:	c00009b7          	lui	s3, 0xc0000
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:111
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
    9158:	ffb20eb7          	lui	t4, 0xffb20
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    915c:	00251513          	slli	a0, a0, 0x2
    9160:	01428293          	addi	t0, t0, 20 # ffb00014 <TENSIX_MAILBOX_BASE+0xffc40014>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:113
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    9164:	00002a37          	lui	s4, 0x2
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:282
    num_iter = num_iter & ~DRAM_IO_IS_SCATTER_LOOP;
    9168:	80000ab7          	lui	s5, 0x80000
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:323
                                                                      ) {
    916c:	03012903          	lw	s2, 48(sp)
    9170:	03412403          	lw	s0, 52(sp)
    9174:	02912423          	sw	s1, 40(sp)
    9178:	01712823          	sw	s7, 16(sp)
    917c:	01812623          	sw	s8, 12(sp)
    9180:	01912423          	sw	s9, 8(sp)
    9184:	01612a23          	sw	s6, 20(sp)
    9188:	01a12223          	sw	s10, 4(sp)
    918c:	01b12023          	sw	s11, 0(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:324
  uint32_t addr_with_offset = dram_data_buf_fetch_rdptr_byte + DRAM_BUF_DATA_OFFSET;
    9190:	02058593          	addi	a1, a1, 32
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:116
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9194:	00a39393          	slli	t2, t2, 0xa
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:325
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
    9198:	00000493          	li	s1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:329
    dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    919c:	fff98993          	addi	s3, s3, -1 # bfffffff <TENSIX_MAILBOX_BASE+0xc013ffff>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:328
    bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    91a0:	40000bb7          	lui	s7, 0x40000
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:103
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
    91a4:	08000c13          	li	s8, 128
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:111
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
    91a8:	01d30333          	add	t1, t1, t4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    91ac:	00a282b3          	add	t0, t0, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:113
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    91b0:	090a0a13          	addi	s4, s4, 144 # 2090 <__trisc1_size+0x90>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:118
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
    91b4:	00100c93          	li	s9, 1
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:282
    num_iter = num_iter & ~DRAM_IO_IS_SCATTER_LOOP;
    91b8:	fffaca93          	not	s5, s5
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:325 (discriminator 1)
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
    91bc:	0ec4f063          	bgeu	s1, a2, 929c <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x198>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:327
    uint64_t dram_src_addr_w_offset = tt_l1_load(&scatter_offsets[scatter_idx]);
    91c0:	0008ad03          	lw	s10, 0(a7)
    91c4:	003d1513          	slli	a0, s10, 0x3
    91c8:	00a80f33          	add	t5, a6, a0
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    91cc:	000f2e83          	lw	t4, 0(t5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    91d0:	004f2f03          	lw	t5, 4(t5)
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:329
    dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    91d4:	013f7b33          	and	s6, t5, s3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:328
    bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    91d8:	01ebff33          	and	t5, s7, t5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:330
    if (!is_padding_set)
    91dc:	000f1e63          	bnez	t5, 91f8 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0xf4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:331
      dram_src_addr_w_offset += (addr_with_offset + scatter_loop_inc);
    91e0:	00042f03          	lw	t5, 0(s0)
    91e4:	01e58f33          	add	t5, a1, t5
    91e8:	01ee8f33          	add	t5, t4, t5
    91ec:	01df3db3          	sltu	s11, t5, t4
    91f0:	016d8b33          	add	s6, s11, s6
    91f4:	000f0e93          	mv	t4, t5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:332 (discriminator 2)
    scatter_idx++;
    91f8:	001d0d13          	addi	s10, s10, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:333 (discriminator 2)
    volatile dram_scatter_loop_t tt_l1_ptr * dram_scatter_loop = (volatile dram_scatter_loop_t tt_l1_ptr *)&scatter_offsets[scatter_idx];
    91fc:	00850513          	addi	a0, a0, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:332 (discriminator 2)
    scatter_idx++;
    9200:	01a8a023          	sw	s10, 0(a7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:333 (discriminator 2)
    volatile dram_scatter_loop_t tt_l1_ptr * dram_scatter_loop = (volatile dram_scatter_loop_t tt_l1_ptr *)&scatter_offsets[scatter_idx];
    9204:	00a80533          	add	a0, a6, a0
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    9208:	000faf03          	lw	t5, 0(t6)
ncrisc_noc_fast_read_any_len_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:334
  while (NOC_CMD_BUF_READ_REG(noc, cmd_buf, NOC_CMD_CTRL) != NOC_CTRL_STATUS_READY);   //while (!ncrisc_noc_fast_read_ok(noc, cmd_buf));
    920c:	fe0f1ee3          	bnez	t5, 9208 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x104>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
    9210:	000e2f03          	lw	t5, 0(t3)
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:103
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
    9214:	ffec6ee3          	bltu	s8, t5, 9210 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x10c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:105
  if (len_bytes > 0) {
    9218:	02070463          	beqz	a4, 9240 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x13c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    921c:	0002af03          	lw	t5, 0(t0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:111
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
    9220:	00f32623          	sw	a5, 12(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9224:	01e32823          	sw	t5, 16(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:113
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    9228:	01432e23          	sw	s4, 28(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:114
    ptr[NOC_TARG_ADDR_LO >> 2] = (uint32_t)src_addr;
    922c:	01d32023          	sw	t4, 0(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:115
    ptr[NOC_TARG_ADDR_MID >> 2] = src_addr >> 32;
    9230:	01632223          	sw	s6, 4(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:116
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9234:	00732c23          	sw	t2, 24(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:117
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
    9238:	02e32023          	sw	a4, 32(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:118
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
    923c:	03932423          	sw	s9, 40(t1)
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:279
  uint32_t num_iter = dram_scatter_loop->num_iter;
    9240:	00452f03          	lw	t5, 4(a0)
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:336
    stream_dest_addr += dram_io_scatter_chunk_size_bytes;
    9244:	00e787b3          	add	a5, a5, a4
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:281
  if (magic_number) {
    9248:	020f5c63          	bgez	t5, 9280 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x17c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:283
    if (scatter_loop_index < num_iter) {
    924c:	00092e83          	lw	t4, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:282
    num_iter = num_iter & ~DRAM_IO_IS_SCATTER_LOOP;
    9250:	015f7f33          	and	t5, t5, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:283
    if (scatter_loop_index < num_iter) {
    9254:	03eefa63          	bgeu	t4, t5, 9288 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x184>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:284
      uint32_t inc = dram_scatter_loop->inc;
    9258:	00852b03          	lw	s6, 8(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:285
      uint32_t num_index_back = dram_scatter_loop->num_index_back;
    925c:	00052f03          	lw	t5, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:286
      scatter_loop_index++;
    9260:	001e8e93          	addi	t4, t4, 1 # ffb20001 <TENSIX_MAILBOX_BASE+0xffc60001>
    9264:	01d92023          	sw	t4, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:287
      scatter_loop_inc += inc;
    9268:	00042e83          	lw	t4, 0(s0)
    926c:	016e8eb3          	add	t4, t4, s6
    9270:	01d42023          	sw	t4, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:288
      scatter_idx -= num_index_back;
    9274:	0008a503          	lw	a0, 0(a7)
    9278:	41e50533          	sub	a0, a0, t5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:292
      scatter_idx += DRAM_IO_IS_SCATTER_LOOP_SIZE;
    927c:	00a8a023          	sw	a0, 0(a7)
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:325
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
    9280:	00d484b3          	add	s1, s1, a3
    9284:	f39ff06f          	j	91bc <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0xb8>
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:290
      scatter_loop_index = 0;
    9288:	00092023          	sw	zero, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:291
      scatter_loop_inc = 0;
    928c:	00042023          	sw	zero, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:292
      scatter_idx += DRAM_IO_IS_SCATTER_LOOP_SIZE;
    9290:	0008a503          	lw	a0, 0(a7)
    9294:	00250513          	addi	a0, a0, 2
    9298:	fe5ff06f          	j	927c <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x178>
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:340
}
    929c:	02c12403          	lw	s0, 44(sp)
    92a0:	02812483          	lw	s1, 40(sp)
    92a4:	02412903          	lw	s2, 36(sp)
    92a8:	02012983          	lw	s3, 32(sp)
    92ac:	01c12a03          	lw	s4, 28(sp)
    92b0:	01812a83          	lw	s5, 24(sp)
    92b4:	01412b03          	lw	s6, 20(sp)
    92b8:	01012b83          	lw	s7, 16(sp)
    92bc:	00c12c03          	lw	s8, 12(sp)
    92c0:	00812c83          	lw	s9, 8(sp)
    92c4:	00412d03          	lw	s10, 4(sp)
    92c8:	00012d83          	lw	s11, 0(sp)
    92cc:	03010113          	addi	sp, sp, 48
    92d0:	00008067          	ret

000092d4 <risc::init_perf_dram_state_first_epoch()>:
risc::init_perf_dram_state_first_epoch():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:60
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    92d4:	85018713          	addi	a4, gp, -1968 # ffb00050 <risc::thread_dram_ptr>
    92d8:	000237b7          	lui	a5, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:66
    thread_l1_buf_sel[i] = 0;
    92dc:	ffb00837          	lui	a6, 0xffb00
    92e0:	2bc78e13          	addi	t3, a5, 700 # 232bc <substitutes.cpp.cd30c172+0x49a6>
    92e4:	02870513          	addi	a0, a4, 40
    92e8:	03470593          	addi	a1, a4, 52
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:60
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    92ec:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:62
    thread_req_max[i] = EPOCH_INFO_PTR->perf_req_max[i]; 
    92f0:	08078793          	addi	a5, a5, 128
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:66
    thread_l1_buf_sel[i] = 0;
    92f4:	00c80813          	addi	a6, a6, 12 # ffb0000c <TENSIX_MAILBOX_BASE+0xffc4000c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:60
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    92f8:	00500893          	li	a7, 5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:61 (discriminator 2)
    thread_dram_ptr[i] = tt_l1_load(&EPOCH_INFO_PTR->perf_dram_addr[i]);
    92fc:	00369613          	slli	a2, a3, 0x3
    9300:	01c60633          	add	a2, a2, t3
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30 (discriminator 2)
    v.hi = p->hi;
    9304:	00062303          	lw	t1, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31 (discriminator 2)
    v.lo = p->lo;
    9308:	00462603          	lw	a2, 4(a2)
risc::init_perf_dram_state_first_epoch():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:61 (discriminator 2)
    930c:	00672023          	sw	t1, 0(a4)
    9310:	00c72223          	sw	a2, 4(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:62 (discriminator 2)
    thread_req_max[i] = EPOCH_INFO_PTR->perf_req_max[i]; 
    9314:	13068613          	addi	a2, a3, 304
    9318:	00161613          	slli	a2, a2, 0x1
    931c:	00c78633          	add	a2, a5, a2
    9320:	00465603          	lhu	a2, 4(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:63 (discriminator 2)
    thread_dram_copy_ack[i] = 0;
    9324:	00059023          	sh	zero, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:60 (discriminator 2)
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    9328:	00870713          	addi	a4, a4, 8
    932c:	00250513          	addi	a0, a0, 2
    9330:	00258593          	addi	a1, a1, 2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:62 (discriminator 2)
    thread_req_max[i] = EPOCH_INFO_PTR->perf_req_max[i]; 
    9334:	fec51f23          	sh	a2, -2(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:66 (discriminator 2)
    thread_l1_buf_sel[i] = 0;
    9338:	01068633          	add	a2, a3, a6
    933c:	00060023          	sb	zero, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:60 (discriminator 2)
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    9340:	00168693          	addi	a3, a3, 1
    9344:	fb169ce3          	bne	a3, a7, 92fc <risc::init_perf_dram_state_first_epoch()+0x28>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:70
    EPOCH_INFO_PTR->perf_dram_copy_req[i] = 0;
    9348:	2007aa23          	sw	zero, 532(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:71
    EPOCH_INFO_PTR->perf_dram_copy_ack[i] = 0;
    934c:	2207a423          	sw	zero, 552(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:70
    EPOCH_INFO_PTR->perf_dram_copy_req[i] = 0;
    9350:	2007ac23          	sw	zero, 536(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:71
    EPOCH_INFO_PTR->perf_dram_copy_ack[i] = 0;
    9354:	2207a623          	sw	zero, 556(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:70
    EPOCH_INFO_PTR->perf_dram_copy_req[i] = 0;
    9358:	2007ae23          	sw	zero, 540(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:71
    EPOCH_INFO_PTR->perf_dram_copy_ack[i] = 0;
    935c:	2207a823          	sw	zero, 560(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:70
    EPOCH_INFO_PTR->perf_dram_copy_req[i] = 0;
    9360:	2207a023          	sw	zero, 544(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:71
    EPOCH_INFO_PTR->perf_dram_copy_ack[i] = 0;
    9364:	2207aa23          	sw	zero, 564(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:70
    EPOCH_INFO_PTR->perf_dram_copy_req[i] = 0;
    9368:	2207a223          	sw	zero, 548(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:71
    EPOCH_INFO_PTR->perf_dram_copy_ack[i] = 0;
    936c:	2207ac23          	sw	zero, 568(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:74
  perf_dram_initialized = 1;
    9370:	00100713          	li	a4, 1
    9374:	ffb007b7          	lui	a5, 0xffb00
    9378:	00e7a423          	sw	a4, 8(a5) # ffb00008 <TENSIX_MAILBOX_BASE+0xffc40008>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:75
}
    937c:	00008067          	ret

00009380 <risc::init_perf_dram_state()>:
risc::init_perf_dram_state():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:104
  if (epoch_perf_en == 0) {
    9380:	8901c783          	lbu	a5, -1904(gp) # ffb00090 <risc::epoch_perf_en>
    9384:	0c078063          	beqz	a5, 9444 <risc::init_perf_dram_state()+0xc4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:107
  if (perf_dram_initialized == 0) {
    9388:	ffb007b7          	lui	a5, 0xffb00
    938c:	0087a783          	lw	a5, 8(a5) # ffb00008 <TENSIX_MAILBOX_BASE+0xffc40008>
    9390:	00079463          	bnez	a5, 9398 <risc::init_perf_dram_state()+0x18>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:108
    init_perf_dram_state_first_epoch();
    9394:	f41ff06f          	j	92d4 <risc::init_perf_dram_state_first_epoch()>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:102
void init_perf_dram_state() {
    9398:	ff010113          	addi	sp, sp, -16
    939c:	00812423          	sw	s0, 8(sp)
risc::check_host_dram_buffer_drain_signal_and_initialize():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:78
  if (PERF_DRAM_BUFFER_RESET_MAILBOX_PTR[0] == 0xffffffff) {
    93a0:	00002437          	lui	s0, 0x2
    93a4:	31842703          	lw	a4, 792(s0) # 2318 <__trisc1_size+0x318>
risc::init_perf_dram_state():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:102
void init_perf_dram_state() {
    93a8:	00112623          	sw	ra, 12(sp)
risc::check_host_dram_buffer_drain_signal_and_initialize():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:78
  if (PERF_DRAM_BUFFER_RESET_MAILBOX_PTR[0] == 0xffffffff) {
    93ac:	fff00793          	li	a5, -1
    93b0:	00f71e63          	bne	a4, a5, 93cc <risc::init_perf_dram_state()+0x4c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:79
    init_perf_dram_state_first_epoch();
    93b4:	f21ff0ef          	jal	ra, 92d4 <risc::init_perf_dram_state_first_epoch()>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:80
    PERF_DRAM_BUFFER_RESET_MAILBOX_PTR[0] = 0;
    93b8:	30042c23          	sw	zero, 792(s0)
risc::init_perf_dram_state():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:123
}
    93bc:	00c12083          	lw	ra, 12(sp)
    93c0:	00812403          	lw	s0, 8(sp)
    93c4:	01010113          	addi	sp, sp, 16
    93c8:	00008067          	ret
    93cc:	85018613          	addi	a2, gp, -1968 # ffb00050 <risc::thread_dram_ptr>
    93d0:	000237b7          	lui	a5, 0x23
risc::check_host_dram_buffer_drain_signal_and_initialize():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:87
      thread_l1_buf_sel[i] = 0;
    93d4:	ffb00537          	lui	a0, 0xffb00
    93d8:	03460613          	addi	a2, a2, 52
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:82
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    93dc:	00000693          	li	a3, 0
    93e0:	85018713          	addi	a4, gp, -1968 # ffb00050 <risc::thread_dram_ptr>
    93e4:	08078793          	addi	a5, a5, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:87
      thread_l1_buf_sel[i] = 0;
    93e8:	00c50513          	addi	a0, a0, 12 # ffb0000c <TENSIX_MAILBOX_BASE+0xffc4000c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:82
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    93ec:	00500893          	li	a7, 5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:84
      EPOCH_INFO_PTR->perf_dram_copy_req[i] = thread_dram_copy_ack[i];
    93f0:	00065803          	lhu	a6, 0(a2)
    93f4:	00269593          	slli	a1, a3, 0x2
    93f8:	00f585b3          	add	a1, a1, a5
    93fc:	2105aa23          	sw	a6, 532(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:85
      EPOCH_INFO_PTR->perf_dram_copy_ack[i] = thread_dram_copy_ack[i];
    9400:	2305a423          	sw	a6, 552(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:87
      thread_l1_buf_sel[i] = 0;
    9404:	00a685b3          	add	a1, a3, a0
    9408:	00058023          	sb	zero, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:82
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    940c:	00168693          	addi	a3, a3, 1
    9410:	00260613          	addi	a2, a2, 2
    9414:	fd169ee3          	bne	a3, a7, 93f0 <risc::init_perf_dram_state()+0x70>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:94
    if (thread_dram_copy_ack[3] < thread_req_max[3]) {
    9418:	03a75603          	lhu	a2, 58(a4)
    941c:	02e75683          	lhu	a3, 46(a4)
    9420:	00d67c63          	bgeu	a2, a3, 9438 <risc::init_perf_dram_state()+0xb8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:95
      EPOCH_INFO_PTR->perf_dram_addr[3].v = thread_dram_ptr[3];
    9424:	01872683          	lw	a3, 24(a4)
    9428:	01c72703          	lw	a4, 28(a4)
    942c:	24d7aa23          	sw	a3, 596(a5)
    9430:	24e7ac23          	sw	a4, 600(a5)
    9434:	f89ff06f          	j	93bc <risc::init_perf_dram_state()+0x3c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:97
      EPOCH_INFO_PTR->perf_dram_addr[3].v = 0;
    9438:	2407aa23          	sw	zero, 596(a5)
    943c:	2407ac23          	sw	zero, 600(a5)
    9440:	f7dff06f          	j	93bc <risc::init_perf_dram_state()+0x3c>
    9444:	00008067          	ret

00009448 <risc::allocate_perf_buffer()>:
risc::allocate_perf_buffer():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:129
  perf_index = PERF_START_OFFSET; // The first 4B value is always initialized to 0xbaddf00d. Also account for 6 fixed epoch related events.
    9448:	89018793          	addi	a5, gp, -1904 # ffb00090 <risc::epoch_perf_en>
    944c:	01900713          	li	a4, 25
    9450:	00e7a223          	sw	a4, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:133
  perf_buf_base = perf_double_buf_base[0]; // Start dumping from lower half of L1 perf buffer.
    9454:	00006737          	lui	a4, 0x6
    9458:	04070613          	addi	a2, a4, 64 # 6040 <risc::epoch_perf_scratch+0xbe0>
    945c:	ffb006b7          	lui	a3, 0xffb00
    9460:	00c6a223          	sw	a2, 4(a3) # ffb00004 <TENSIX_MAILBOX_BASE+0xffc40004>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:148
    perf_buf_base[0] = PERF_DUMP_END_SIGNAL;
    9464:	beeff6b7          	lui	a3, 0xbeeff
    9468:	00d68693          	addi	a3, a3, 13 # beeff00d <TENSIX_MAILBOX_BASE+0xbf03f00d>
    946c:	04d72023          	sw	a3, 64(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:149
    perf_end = NCRISC_PERF_BUF_SIZE >> 2; // 4 bytes per event
    9470:	0a000693          	li	a3, 160
    9474:	00d7a423          	sw	a3, 8(a5)
reg_read_barrier_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:127
    uint32_t data = p_reg[0];
    9478:	ffb126b7          	lui	a3, 0xffb12
    947c:	1f06a583          	lw	a1, 496(a3) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:128
    local_mem_barrier = data;
    9480:	ffb00637          	lui	a2, 0xffb00
    9484:	00b62023          	sw	a1, 0(a2) # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:127
    uint32_t data = p_reg[0];
    9488:	1f86a683          	lw	a3, 504(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:128
    local_mem_barrier = data;
    948c:	00d62023          	sw	a3, 0(a2)
risc::record_perf_value_l1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:431
  RISC_POST_STATUS(0x1FFFF128);
}

void record_perf_value_l1(uint32_t event_id, uint32_t event_value) {
    // Record a single event, and a timestamp
    perf_buf_base[perf_index] = event_id;
    9490:	06000637          	lui	a2, 0x6000
    9494:	0ac72223          	sw	a2, 164(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:432
    perf_buf_base[perf_index + 1] = event_value;
    9498:	0ad72423          	sw	a3, 168(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:433
    perf_index += 2;
    949c:	01b00713          	li	a4, 27
risc::allocate_perf_buffer():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:160
  wall_clk_h = reg_read_barrier_l1(RISCV_DEBUG_REG_WALL_CLOCK_H);
    94a0:	00d7a623          	sw	a3, 12(a5)
risc::record_perf_value_l1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:433
    perf_index += 2;
    94a4:	00e7a223          	sw	a4, 4(a5)
risc::allocate_perf_buffer():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:163
}
    94a8:	00008067          	ret

000094ac <risc::record_timestamp_at_offset_l1(unsigned long, unsigned long)>:
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
    94ac:	ffb12737          	lui	a4, 0xffb12
    94b0:	1f072603          	lw	a2, 496(a4) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
    94b4:	ffb007b7          	lui	a5, 0xffb00
    94b8:	00c7a023          	sw	a2, 0(a5) # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
    94bc:	1f872683          	lw	a3, 504(a4)
risc::record_perf_value_at_offset(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:152
        perf_buf_base[offset] = event_id;
    94c0:	00259593          	slli	a1, a1, 0x2
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
    94c4:	00d7a023          	sw	a3, 0(a5)
risc::record_perf_value_at_offset(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:152
    94c8:	ffb007b7          	lui	a5, 0xffb00
    94cc:	0047a783          	lw	a5, 4(a5) # ffb00004 <TENSIX_MAILBOX_BASE+0xffc40004>
    94d0:	00b78733          	add	a4, a5, a1
    94d4:	00a72023          	sw	a0, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:153
        perf_buf_base[offset + 1] = event_value1;
    94d8:	00458713          	addi	a4, a1, 4
    94dc:	00e78733          	add	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:154
        perf_buf_base[offset + 2] = event_value2;
    94e0:	00858593          	addi	a1, a1, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:153
        perf_buf_base[offset + 1] = event_value1;
    94e4:	00c72023          	sw	a2, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.h:154
        perf_buf_base[offset + 2] = event_value2;
    94e8:	00b785b3          	add	a1, a5, a1
    94ec:	00d5a023          	sw	a3, 0(a1)
risc::record_timestamp_at_offset_l1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:243
}
    94f0:	00008067          	ret

000094f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>:
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    94f4:	3fec8337          	lui	t1, 0x3fec8
    94f8:	09030313          	addi	t1, t1, 144 # 3fec8090 <substitutes.cpp.cd30c172+0x3fea977a>
    94fc:	00688333          	add	t1, a7, t1
    9500:	01051e13          	slli	t3, a0, 0x10
    9504:	00231313          	slli	t1, t1, 0x2
    9508:	01c30333          	add	t1, t1, t3
ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:24
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
  }
}

void ncrisc_noc_fast_write_l1(uint32_t noc, uint32_t cmd_buf, uint32_t src_addr, uint64_t dest_addr, uint32_t len_bytes, uint32_t vc, bool mcast, bool linked, uint32_t num_dests, uint32_t transaction_id) {
  while (NOC_STATUS_READ_REG_L1(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
    950c:	08000e93          	li	t4, 128
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    9510:	00032f03          	lw	t5, 0(t1)
ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:24
    9514:	ffeeeee3          	bltu	t4, t5, 9510 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x1c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:26
  
  if (len_bytes > 0) {
    9518:	04078c63          	beqz	a5, 9570 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x7c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:36
      (linked ? NOC_CMD_VC_LINKED : 0x0) |
      (mcast ? (NOC_CMD_PATH_RESERVE | NOC_CMD_BRCST_PACKET) : 0x0) |
      NOC_CMD_RESP_MARKED;

    //word offset noc cmd interface
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
    951c:	00a59593          	slli	a1, a1, 0xa
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:30
      NOC_CMD_STATIC_VC(vc) |
    9520:	00d81813          	slli	a6, a6, 0xd
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:36
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
    9524:	01c585b3          	add	a1, a1, t3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:38
    volatile uint32_t* ptr = (volatile uint32_t*)offset;
    ptr[NOC_CTRL >> 2] = noc_cmd_field;
    9528:	ffb20337          	lui	t1, 0xffb20
    952c:	00658e33          	add	t3, a1, t1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:27
    uint32_t noc_cmd_field =
    9530:	09286813          	ori	a6, a6, 146
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:38
    ptr[NOC_CTRL >> 2] = noc_cmd_field;
    9534:	010e2e23          	sw	a6, 28(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:39
    ptr[NOC_TARG_ADDR_LO >> 2] = src_addr;
    9538:	00ce2023          	sw	a2, 0(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:40
    ptr[NOC_TARG_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    953c:	ffb00637          	lui	a2, 0xffb00
    9540:	00251813          	slli	a6, a0, 0x2
    9544:	01460513          	addi	a0, a2, 20 # ffb00014 <TENSIX_MAILBOX_BASE+0xffc40014>
    9548:	01050533          	add	a0, a0, a6
    954c:	00052603          	lw	a2, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:43
    ptr[NOC_RET_ADDR_LO >> 2] = (uint32_t)dest_addr;
    ptr[NOC_RET_ADDR_MID >> 2] = dest_addr >> 32;
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9550:	00a89893          	slli	a7, a7, 0xa
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:40
    ptr[NOC_TARG_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9554:	00ce2223          	sw	a2, 4(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:41
    ptr[NOC_RET_ADDR_LO >> 2] = (uint32_t)dest_addr;
    9558:	00de2623          	sw	a3, 12(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:42
    ptr[NOC_RET_ADDR_MID >> 2] = dest_addr >> 32;
    955c:	00ee2823          	sw	a4, 16(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:43
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9560:	011e2c23          	sw	a7, 24(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:44
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
    9564:	02fe2023          	sw	a5, 32(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:45
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
    9568:	00100793          	li	a5, 1
    956c:	02fe2423          	sw	a5, 40(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:47
  }
}
    9570:	00008067          	ret

00009574 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:260
void replicate_l1(uint32_t noc_id, uint32_t src_addr, uint64_t dest_addr, uint32_t chunk_size_bytes, uint32_t times_to_replicate, uint32_t transaction_id) {
    9574:	fd010113          	addi	sp, sp, -48
    9578:	01712623          	sw	s7, 12(sp)
    957c:	00078b93          	mv	s7, a5
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    9580:	ffb217b7          	lui	a5, 0xffb21
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:260
    9584:	01612823          	sw	s6, 16(sp)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    9588:	c2878793          	addi	a5, a5, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    958c:	01051b13          	slli	s6, a0, 0x10
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:260
    9590:	02812423          	sw	s0, 40(sp)
    9594:	02912223          	sw	s1, 36(sp)
    9598:	03212023          	sw	s2, 32(sp)
    959c:	01312e23          	sw	s3, 28(sp)
    95a0:	01412c23          	sw	s4, 24(sp)
    95a4:	01512a23          	sw	s5, 20(sp)
    95a8:	02112623          	sw	ra, 44(sp)
    95ac:	00050993          	mv	s3, a0
    95b0:	00058a93          	mv	s5, a1
    95b4:	00060413          	mv	s0, a2
    95b8:	00068493          	mv	s1, a3
    95bc:	00070913          	mv	s2, a4
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    95c0:	00fb0b33          	add	s6, s6, a5
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:267
  for (uint32_t j = 0; j < times_to_replicate; j++) {
    95c4:	00000a13          	li	s4, 0
    95c8:	057a0463          	beq	s4, s7, 9610 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x9c>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    95cc:	000b2783          	lw	a5, 0(s6)
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:268
    while (!ncrisc_noc_fast_write_ok_l1(noc_id, replicate_cmd_buf));
    95d0:	fe079ee3          	bnez	a5, 95cc <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x58>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:269
    ncrisc_noc_fast_write_l1(noc_id, replicate_cmd_buf,
    95d4:	00048713          	mv	a4, s1
    95d8:	00090793          	mv	a5, s2
    95dc:	00040693          	mv	a3, s0
    95e0:	00100893          	li	a7, 1
    95e4:	00000813          	li	a6, 0
    95e8:	000a8613          	mv	a2, s5
    95ec:	00300593          	li	a1, 3
    95f0:	00098513          	mv	a0, s3
    95f4:	f01ff0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:274
    dest_addr += chunk_size_bytes;
    95f8:	012407b3          	add	a5, s0, s2
    95fc:	0087b733          	sltu	a4, a5, s0
    9600:	009704b3          	add	s1, a4, s1
    9604:	00078413          	mv	s0, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:267
  for (uint32_t j = 0; j < times_to_replicate; j++) {
    9608:	001a0a13          	addi	s4, s4, 1
    960c:	fbdff06f          	j	95c8 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x54>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:276
}
    9610:	02c12083          	lw	ra, 44(sp)
    9614:	02812403          	lw	s0, 40(sp)
    9618:	02412483          	lw	s1, 36(sp)
    961c:	02012903          	lw	s2, 32(sp)
    9620:	01c12983          	lw	s3, 28(sp)
    9624:	01812a03          	lw	s4, 24(sp)
    9628:	01412a83          	lw	s5, 20(sp)
    962c:	01012b03          	lw	s6, 16(sp)
    9630:	00c12b83          	lw	s7, 12(sp)
    9634:	03010113          	addi	sp, sp, 48
    9638:	00008067          	ret

0000963c <ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>:
ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:68
  while (!ncrisc_noc_fast_read_ok_l1(noc, cmd_buf));
  ncrisc_noc_fast_read_l1(noc, cmd_buf, src_addr, dest_addr, len_bytes, transaction_id);
}
#endif

void ncrisc_noc_fast_write_any_len_l1(uint32_t noc, uint32_t cmd_buf, uint32_t src_addr, uint64_t dest_addr, uint32_t len_bytes, uint32_t vc, bool mcast, bool linked, uint32_t num_dests, uint32_t transaction_id) {
    963c:	fd010113          	addi	sp, sp, -48
    9640:	00078813          	mv	a6, a5
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    9644:	ffb217b7          	lui	a5, 0xffb21
ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:68
    9648:	01312e23          	sw	s3, 28(sp)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    964c:	c2878793          	addi	a5, a5, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    9650:	01051993          	slli	s3, a0, 0x10
ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:68
    9654:	02812423          	sw	s0, 40(sp)
    9658:	02912223          	sw	s1, 36(sp)
    965c:	03212023          	sw	s2, 32(sp)
    9660:	01412c23          	sw	s4, 24(sp)
    9664:	01512a23          	sw	s5, 20(sp)
    9668:	02112623          	sw	ra, 44(sp)
    966c:	00060493          	mv	s1, a2
    9670:	00068913          	mv	s2, a3
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    9674:	00f989b3          	add	s3, s3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:64
  volatile uint32_t* ptr = (volatile uint32_t*)offset;
    9678:	00070413          	mv	s0, a4
    967c:	00e58ab3          	add	s5, a1, a4
ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:69
  while (len_bytes > NOC_MAX_BURST_SIZE) {
    9680:	00002a37          	lui	s4, 0x2
    9684:	408a8633          	sub	a2, s5, s0
    9688:	048a7863          	bgeu	s4, s0, 96d8 <ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x9c>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    968c:	0009a783          	lw	a5, 0(s3)
ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:70
    while (!ncrisc_noc_fast_write_ok_l1(noc, cmd_buf));
    9690:	fe079ee3          	bnez	a5, 968c <ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x50>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:71
    ncrisc_noc_fast_write_l1(noc, cmd_buf, src_addr, dest_addr, NOC_MAX_BURST_SIZE, vc, mcast, linked, num_dests, transaction_id);
    9694:	00090713          	mv	a4, s2
    9698:	000027b7          	lui	a5, 0x2
    969c:	00048693          	mv	a3, s1
    96a0:	00000893          	li	a7, 0
    96a4:	00300593          	li	a1, 3
    96a8:	01012623          	sw	a6, 12(sp)
    96ac:	00a12423          	sw	a0, 8(sp)
    96b0:	e45ff0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:73
    src_addr += NOC_MAX_BURST_SIZE;
    dest_addr += NOC_MAX_BURST_SIZE;
    96b4:	014487b3          	add	a5, s1, s4
    96b8:	0097b733          	sltu	a4, a5, s1
    96bc:	00812503          	lw	a0, 8(sp)
    96c0:	00078493          	mv	s1, a5
    96c4:	00c12803          	lw	a6, 12(sp)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
    96c8:	0009a783          	lw	a5, 0(s3)
ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:73
    96cc:	01270933          	add	s2, a4, s2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:74
    len_bytes -= NOC_MAX_BURST_SIZE;
    96d0:	41440433          	sub	s0, s0, s4
    96d4:	fb1ff06f          	j	9684 <ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x48>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
    96d8:	0009a783          	lw	a5, 0(s3)
ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:80
    if (!ncrisc_noc_fast_write_ok_l1(noc, cmd_buf)) {
      cmd_buf++;
      if (cmd_buf >= NCRISC_SMALL_TXN_CMD_BUF) cmd_buf = NCRISC_WR_CMD_BUF;
    }
  }
  while (!ncrisc_noc_fast_write_ok_l1(noc, cmd_buf));
    96dc:	fe079ee3          	bnez	a5, 96d8 <ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:81
  ncrisc_noc_fast_write_l1(noc, cmd_buf, src_addr, dest_addr, len_bytes, vc, mcast, linked, num_dests, transaction_id);
    96e0:	00040793          	mv	a5, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:82
}
    96e4:	02812403          	lw	s0, 40(sp)
    96e8:	02c12083          	lw	ra, 44(sp)
    96ec:	01c12983          	lw	s3, 28(sp)
    96f0:	01812a03          	lw	s4, 24(sp)
    96f4:	01412a83          	lw	s5, 20(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:81
  ncrisc_noc_fast_write_l1(noc, cmd_buf, src_addr, dest_addr, len_bytes, vc, mcast, linked, num_dests, transaction_id);
    96f8:	00048693          	mv	a3, s1
    96fc:	00090713          	mv	a4, s2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:82
}
    9700:	02412483          	lw	s1, 36(sp)
    9704:	02012903          	lw	s2, 32(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:81
  ncrisc_noc_fast_write_l1(noc, cmd_buf, src_addr, dest_addr, len_bytes, vc, mcast, linked, num_dests, transaction_id);
    9708:	00000893          	li	a7, 0
    970c:	00300593          	li	a1, 3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:82
}
    9710:	03010113          	addi	sp, sp, 48
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:81
  ncrisc_noc_fast_write_l1(noc, cmd_buf, src_addr, dest_addr, len_bytes, vc, mcast, linked, num_dests, transaction_id);
    9714:	de1ff06f          	j	94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>

00009718 <risc::check_dram_spill_requests_once()>:
risc::check_dram_spill_requests_once():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:268
void check_dram_spill_requests_once() {
    9718:	fa010113          	addi	sp, sp, -96
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:269
  if (epoch_perf_en == 0) {
    971c:	8901c783          	lbu	a5, -1904(gp) # ffb00090 <risc::epoch_perf_en>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:268
void check_dram_spill_requests_once() {
    9720:	04912a23          	sw	s1, 84(sp)
    9724:	04112e23          	sw	ra, 92(sp)
    9728:	04812c23          	sw	s0, 88(sp)
    972c:	05212823          	sw	s2, 80(sp)
    9730:	05312623          	sw	s3, 76(sp)
    9734:	05412423          	sw	s4, 72(sp)
    9738:	05512223          	sw	s5, 68(sp)
    973c:	05612023          	sw	s6, 64(sp)
    9740:	03712e23          	sw	s7, 60(sp)
    9744:	03812c23          	sw	s8, 56(sp)
    9748:	03912a23          	sw	s9, 52(sp)
    974c:	03a12823          	sw	s10, 48(sp)
    9750:	03b12623          	sw	s11, 44(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:269
  if (epoch_perf_en == 0) {
    9754:	0a079063          	bnez	a5, 97f4 <risc::check_dram_spill_requests_once()+0xdc>
    9758:	ffb007b7          	lui	a5, 0xffb00
    975c:	000235b7          	lui	a1, 0x23
    9760:	88418493          	addi	s1, gp, -1916 # ffb00084 <risc::thread_dram_copy_ack>
    9764:	00c78793          	addi	a5, a5, 12 # ffb0000c <TENSIX_MAILBOX_BASE+0xffc4000c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:270
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    9768:	00000693          	li	a3, 0
    976c:	08058593          	addi	a1, a1, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:274
        thread_l1_buf_sel[i] = 1 - thread_l1_buf_sel[i]; //toggle thread_l1_buf_sel for next time.
    9770:	00100813          	li	a6, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:270
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    9774:	00500513          	li	a0, 5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:271
      uint32_t current_req = EPOCH_INFO_PTR->perf_dram_copy_req[i];
    9778:	00269613          	slli	a2, a3, 0x2
    977c:	00b60633          	add	a2, a2, a1
    9780:	21462883          	lw	a7, 532(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:272
      while(thread_dram_copy_ack[i] < current_req) {
    9784:	0004d703          	lhu	a4, 0(s1)
    9788:	01177e63          	bgeu	a4, a7, 97a4 <risc::check_dram_spill_requests_once()+0x8c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:273
        thread_dram_copy_ack[i]++;
    978c:	00170713          	addi	a4, a4, 1
    9790:	00e49023          	sh	a4, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:274
        thread_l1_buf_sel[i] = 1 - thread_l1_buf_sel[i]; //toggle thread_l1_buf_sel for next time.
    9794:	0007c703          	lbu	a4, 0(a5)
    9798:	40e80733          	sub	a4, a6, a4
    979c:	00e78023          	sb	a4, 0(a5)
    97a0:	fe5ff06f          	j	9784 <risc::check_dram_spill_requests_once()+0x6c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:276 (discriminator 2)
      EPOCH_INFO_PTR->perf_dram_copy_ack[i] = thread_dram_copy_ack[i];      
    97a4:	22e62423          	sw	a4, 552(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:270 (discriminator 2)
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    97a8:	00168693          	addi	a3, a3, 1
    97ac:	00248493          	addi	s1, s1, 2
    97b0:	00178793          	addi	a5, a5, 1
    97b4:	fca692e3          	bne	a3, a0, 9778 <risc::check_dram_spill_requests_once()+0x60>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:394
}
    97b8:	05c12083          	lw	ra, 92(sp)
    97bc:	05812403          	lw	s0, 88(sp)
    97c0:	05412483          	lw	s1, 84(sp)
    97c4:	05012903          	lw	s2, 80(sp)
    97c8:	04c12983          	lw	s3, 76(sp)
    97cc:	04812a03          	lw	s4, 72(sp)
    97d0:	04412a83          	lw	s5, 68(sp)
    97d4:	04012b03          	lw	s6, 64(sp)
    97d8:	03c12b83          	lw	s7, 60(sp)
    97dc:	03812c03          	lw	s8, 56(sp)
    97e0:	03412c83          	lw	s9, 52(sp)
    97e4:	03012d03          	lw	s10, 48(sp)
    97e8:	02c12d83          	lw	s11, 44(sp)
    97ec:	06010113          	addi	sp, sp, 96
    97f0:	00008067          	ret
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    97f4:	200007b7          	lui	a5, 0x20000
risc::check_dram_spill_requests_once():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360
        uint32_t l1_address = thread_l1_buf_sel[i] ? thread_l1_addr_h(i) : thread_l1_addr_l(i);
    97f8:	00002a37          	lui	s4, 0x2
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    97fc:	ffb20737          	lui	a4, 0xffb20
    9800:	ff778793          	addi	a5, a5, -9 # 1ffffff7 <substitutes.cpp.cd30c172+0x1ffe16e1>
    9804:	01810b13          	addi	s6, sp, 24
    9808:	85018993          	addi	s3, gp, -1968 # ffb00050 <risc::thread_dram_ptr>
risc::check_dram_spill_requests_once():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:284
    if (EPOCH_INFO_PTR->perf_dram_copy_req[i] != thread_dram_copy_ack[i]) {
    980c:	00023cb7          	lui	s9, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360
        uint32_t l1_address = thread_l1_buf_sel[i] ? thread_l1_addr_h(i) : thread_l1_addr_l(i);
    9810:	ffb00d37          	lui	s10, 0xffb00
    9814:	00003837          	lui	a6, 0x3
    9818:	88418c13          	addi	s8, gp, -1916 # ffb00084 <risc::thread_dram_copy_ack>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    981c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc::check_dram_spill_requests_once():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:282
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    9820:	02898b93          	addi	s7, s3, 40
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    9824:	88418493          	addi	s1, gp, -1916 # ffb00084 <risc::thread_dram_copy_ack>
risc::check_dram_spill_requests_once():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:282
    9828:	00000413          	li	s0, 0
    982c:	000b0d93          	mv	s11, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:284
    if (EPOCH_INFO_PTR->perf_dram_copy_req[i] != thread_dram_copy_ack[i]) {
    9830:	080c8c93          	addi	s9, s9, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360
        uint32_t l1_address = thread_l1_buf_sel[i] ? thread_l1_addr_h(i) : thread_l1_addr_l(i);
    9834:	00cd0d13          	addi	s10, s10, 12 # ffb0000c <TENSIX_MAILBOX_BASE+0xffc4000c>
    9838:	600a0893          	addi	a7, s4, 1536 # 2600 <__trisc1_size+0x600>
    983c:	5c0a0313          	addi	t1, s4, 1472
    9840:	88080e13          	addi	t3, a6, -1920 # 2880 <__trisc1_size+0x880>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:284
    if (EPOCH_INFO_PTR->perf_dram_copy_req[i] != thread_dram_copy_ack[i]) {
    9844:	08440793          	addi	a5, s0, 132
    9848:	00279793          	slli	a5, a5, 0x2
    984c:	00fc87b3          	add	a5, s9, a5
    9850:	0047a783          	lw	a5, 4(a5)
    9854:	0004da83          	lhu	s5, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:283
    thread_ack_change[i] = false;
    9858:	000b0023          	sb	zero, 0(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:284
    if (EPOCH_INFO_PTR->perf_dram_copy_req[i] != thread_dram_copy_ack[i]) {
    985c:	0f578263          	beq	a5, s5, 9940 <risc::check_dram_spill_requests_once()+0x228>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:359
      if (thread_dram_copy_ack[i] < thread_req_max[i]) {
    9860:	000bd783          	lhu	a5, 0(s7) # 40000000 <substitutes.cpp.cd30c172+0x3ffe16ea>
    9864:	0cfaf663          	bgeu	s5, a5, 9930 <risc::check_dram_spill_requests_once()+0x218>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360
        uint32_t l1_address = thread_l1_buf_sel[i] ? thread_l1_addr_h(i) : thread_l1_addr_l(i);
    9868:	01a407b3          	add	a5, s0, s10
    986c:	0007c783          	lbu	a5, 0(a5)
    9870:	02078a63          	beqz	a5, 98a4 <risc::check_dram_spill_requests_once()+0x18c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360 (discriminator 1)
    9874:	14040463          	beqz	s0, 99bc <risc::check_dram_spill_requests_once()+0x2a4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360 (discriminator 3)
    9878:	00100793          	li	a5, 1
    987c:	04f40c63          	beq	s0, a5, 98d4 <risc::check_dram_spill_requests_once()+0x1bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360 (discriminator 5)
    9880:	00200793          	li	a5, 2
    9884:	9c080593          	addi	a1, a6, -1600
    9888:	12f40c63          	beq	s0, a5, 99c0 <risc::check_dram_spill_requests_once()+0x2a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360 (discriminator 7)
    988c:	00300793          	li	a5, 3
    9890:	480a0593          	addi	a1, s4, 1152
    9894:	12f41663          	bne	s0, a5, 99c0 <risc::check_dram_spill_requests_once()+0x2a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360
    9898:	000065b7          	lui	a1, 0x6
    989c:	18058593          	addi	a1, a1, 384 # 6180 <risc::epoch_perf_scratch+0xd20>
    98a0:	1200006f          	j	99c0 <risc::check_dram_spill_requests_once()+0x2a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360 (discriminator 2)
    98a4:	12040263          	beqz	s0, 99c8 <risc::check_dram_spill_requests_once()+0x2b0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360 (discriminator 20)
    98a8:	00100793          	li	a5, 1
    98ac:	10f40463          	beq	s0, a5, 99b4 <risc::check_dram_spill_requests_once()+0x29c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360 (discriminator 22)
    98b0:	00200793          	li	a5, 2
    98b4:	000e0593          	mv	a1, t3
    98b8:	10f40463          	beq	s0, a5, 99c0 <risc::check_dram_spill_requests_once()+0x2a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360 (discriminator 24)
    98bc:	00300793          	li	a5, 3
    98c0:	340a0593          	addi	a1, s4, 832
    98c4:	0ef41e63          	bne	s0, a5, 99c0 <risc::check_dram_spill_requests_once()+0x2a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360
    98c8:	000065b7          	lui	a1, 0x6
    98cc:	04058593          	addi	a1, a1, 64 # 6040 <risc::epoch_perf_scratch+0xbe0>
    98d0:	0f00006f          	j	99c0 <risc::check_dram_spill_requests_once()+0x2a8>
    98d4:	5e0a0593          	addi	a1, s4, 1504
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:369
          const int32_t trisc_perf_buf_size = (i == 1) ? l1_mem::address_map::MATH_PERF_BUF_SIZE :
    98d8:	04000913          	li	s2, 64
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:372 (discriminator 4)
          ncrisc_noc_fast_write_any_len_l1(PERF_DUMP_NOC, NCRISC_WR_CMD_BUF, l1_address, thread_dram_ptr[i], trisc_perf_buf_size, PERF_DUMP_VC, false, false, 1, NCRISC_WR_DEF_TRID);
    98dc:	0009a603          	lw	a2, 0(s3)
    98e0:	0049a683          	lw	a3, 4(s3)
    98e4:	00000793          	li	a5, 0
    98e8:	00090713          	mv	a4, s2
    98ec:	00000513          	li	a0, 0
    98f0:	00c12623          	sw	a2, 12(sp)
    98f4:	00d12423          	sw	a3, 8(sp)
    98f8:	d45ff0ef          	jal	ra, 963c <ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:373 (discriminator 4)
          thread_dram_ptr[i] += trisc_perf_buf_size;
    98fc:	00c12603          	lw	a2, 12(sp)
    9900:	00812683          	lw	a3, 8(sp)
    9904:	00c90633          	add	a2, s2, a2
    9908:	000037b7          	lui	a5, 0x3
    990c:	01263933          	sltu	s2, a2, s2
    9910:	00d90933          	add	s2, s2, a3
    9914:	88078e13          	addi	t3, a5, -1920 # 2880 <__trisc1_size+0x880>
    9918:	000027b7          	lui	a5, 0x2
    991c:	00c9a023          	sw	a2, 0(s3)
    9920:	0129a223          	sw	s2, 4(s3)
    9924:	00003837          	lui	a6, 0x3
    9928:	5c078313          	addi	t1, a5, 1472 # 25c0 <__trisc1_size+0x5c0>
    992c:	60078893          	addi	a7, a5, 1536
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:379
        thread_dram_copy_ack[i] += 2;
    9930:	002a8a93          	addi	s5, s5, 2 # 80000002 <TENSIX_MAILBOX_BASE+0x80140002>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:381
      thread_ack_change[i] = true;
    9934:	00100793          	li	a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:379
        thread_dram_copy_ack[i] += 2;
    9938:	01549023          	sh	s5, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:381
      thread_ack_change[i] = true;
    993c:	00fb0023          	sb	a5, 0(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:282 (discriminator 2)
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    9940:	00140413          	addi	s0, s0, 1
    9944:	00500793          	li	a5, 5
    9948:	001b0b13          	addi	s6, s6, 1
    994c:	00248493          	addi	s1, s1, 2
    9950:	00898993          	addi	s3, s3, 8
    9954:	002b8b93          	addi	s7, s7, 2
    9958:	eef416e3          	bne	s0, a5, 9844 <risc::check_dram_spill_requests_once()+0x12c>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    995c:	ffb20737          	lui	a4, 0xffb20
    9960:	28072783          	lw	a5, 640(a4) # ffb20280 <TENSIX_MAILBOX_BASE+0xffc60280>
risc::check_dram_spill_requests_once():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:386
  while (!ncrisc_noc_nonposted_writes_sent_l1(PERF_DUMP_NOC, NCRISC_WR_DEF_TRID)){};
    9964:	fe079ee3          	bnez	a5, 9960 <risc::check_dram_spill_requests_once()+0x248>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:390
      EPOCH_INFO_PTR->perf_dram_copy_ack[i] = thread_dram_copy_ack[i];
    9968:	000236b7          	lui	a3, 0x23
    996c:	08068693          	addi	a3, a3, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:388
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    9970:	00500613          	li	a2, 5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:389
    if (thread_ack_change[i]) {
    9974:	00fd8733          	add	a4, s11, a5
    9978:	00074703          	lbu	a4, 0(a4)
    997c:	00070c63          	beqz	a4, 9994 <risc::check_dram_spill_requests_once()+0x27c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:390
      EPOCH_INFO_PTR->perf_dram_copy_ack[i] = thread_dram_copy_ack[i];
    9980:	08878713          	addi	a4, a5, 136
    9984:	000c5583          	lhu	a1, 0(s8)
    9988:	00271713          	slli	a4, a4, 0x2
    998c:	00e68733          	add	a4, a3, a4
    9990:	00b72423          	sw	a1, 8(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:388 (discriminator 2)
  for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    9994:	00178793          	addi	a5, a5, 1
    9998:	002c0c13          	addi	s8, s8, 2
    999c:	fcc79ce3          	bne	a5, a2, 9974 <risc::check_dram_spill_requests_once()+0x25c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    99a0:	200007b7          	lui	a5, 0x20000
    99a4:	ffb20737          	lui	a4, 0xffb20
    99a8:	ff878793          	addi	a5, a5, -8 # 1ffffff8 <substitutes.cpp.cd30c172+0x1ffe16e2>
    99ac:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
    99b0:	e09ff06f          	j	97b8 <risc::check_dram_spill_requests_once()+0xa0>
risc::check_dram_spill_requests_once():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360
        uint32_t l1_address = thread_l1_buf_sel[i] ? thread_l1_addr_h(i) : thread_l1_addr_l(i);
    99b4:	00030593          	mv	a1, t1
    99b8:	f21ff06f          	j	98d8 <risc::check_dram_spill_requests_once()+0x1c0>
    99bc:	740a0593          	addi	a1, s4, 1856
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:369
          const int32_t trisc_perf_buf_size = (i == 1) ? l1_mem::address_map::MATH_PERF_BUF_SIZE :
    99c0:	28000913          	li	s2, 640
    99c4:	f19ff06f          	j	98dc <risc::check_dram_spill_requests_once()+0x1c4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:360
        uint32_t l1_address = thread_l1_buf_sel[i] ? thread_l1_addr_h(i) : thread_l1_addr_l(i);
    99c8:	00088593          	mv	a1, a7
    99cc:	ff5ff06f          	j	99c0 <risc::check_dram_spill_requests_once()+0x2a8>

000099d0 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    99d0:	3fec88b7          	lui	a7, 0x3fec8
    99d4:	09088893          	addi	a7, a7, 144 # 3fec8090 <substitutes.cpp.cd30c172+0x3fea977a>
    99d8:	011788b3          	add	a7, a5, a7
    99dc:	01051813          	slli	a6, a0, 0x10
    99e0:	00289893          	slli	a7, a7, 0x2
    99e4:	010888b3          	add	a7, a7, a6
ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:4
  while (NOC_STATUS_READ_REG_L1(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
    99e8:	08000313          	li	t1, 128
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    99ec:	0008ae03          	lw	t3, 0(a7)
ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:4
    99f0:	ffc36ee3          	bltu	t1, t3, 99ec <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x1c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:6
  if (len_bytes > 0) {
    99f4:	04070e63          	beqz	a4, 9a50 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x80>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:9
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
    99f8:	000018b7          	lui	a7, 0x1
    99fc:	c0088893          	addi	a7, a7, -1024 # c00 <__firmware_stack_size+0x830>
    9a00:	01180833          	add	a6, a6, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:12
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
    9a04:	ffb208b7          	lui	a7, 0xffb20
    9a08:	01180333          	add	t1, a6, a7
    9a0c:	00d32623          	sw	a3, 12(t1) # ffb2000c <TENSIX_MAILBOX_BASE+0xffc6000c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:13
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9a10:	ffb006b7          	lui	a3, 0xffb00
    9a14:	01468693          	addi	a3, a3, 20 # ffb00014 <TENSIX_MAILBOX_BASE+0xffc40014>
    9a18:	00251513          	slli	a0, a0, 0x2
    9a1c:	00a68533          	add	a0, a3, a0
    9a20:	00052683          	lw	a3, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:17
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9a24:	00a79793          	slli	a5, a5, 0xa
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:13
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9a28:	00d32823          	sw	a3, 16(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:14
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    9a2c:	000026b7          	lui	a3, 0x2
    9a30:	09068693          	addi	a3, a3, 144 # 2090 <__trisc1_size+0x90>
    9a34:	00d32e23          	sw	a3, 28(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:15
    ptr[NOC_TARG_ADDR_LO >> 2] = (uint32_t)src_addr;
    9a38:	00b32023          	sw	a1, 0(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:16
    ptr[NOC_TARG_ADDR_MID >> 2] = src_addr >> 32;
    9a3c:	00c32223          	sw	a2, 4(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:17
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9a40:	00f32c23          	sw	a5, 24(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:18
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
    9a44:	02e32023          	sw	a4, 32(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:19
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
    9a48:	00100793          	li	a5, 1
    9a4c:	02f32423          	sw	a5, 40(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:21
}
    9a50:	00008067          	ret

00009a54 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    9a54:	ffb218b7          	lui	a7, 0xffb21
    9a58:	01051813          	slli	a6, a0, 0x10
    9a5c:	c2888893          	addi	a7, a7, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    9a60:	01180833          	add	a6, a6, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    9a64:	00082883          	lw	a7, 0(a6) # 3000 <__trisc1_size+0x1000>
ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:51
  while (!ncrisc_noc_fast_read_ok_l1(noc, cmd_buf));
    9a68:	fe089ee3          	bnez	a7, 9a64 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x10>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.cc:52
  ncrisc_noc_fast_read_l1(noc, cmd_buf, src_addr, dest_addr, len_bytes, transaction_id); 
    9a6c:	f65ff06f          	j	99d0 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>

00009a70 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)>:
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1061
) {
    9a70:	f6010113          	addi	sp, sp, -160
    9a74:	00f12023          	sw	a5, 0(sp)
    9a78:	0a812783          	lw	a5, 168(sp)
    9a7c:	08812c23          	sw	s0, 152(sp)
    9a80:	00f12623          	sw	a5, 12(sp)
    9a84:	0ac12783          	lw	a5, 172(sp)
    9a88:	08912a23          	sw	s1, 148(sp)
    9a8c:	09212823          	sw	s2, 144(sp)
    9a90:	09312623          	sw	s3, 140(sp)
    9a94:	09412423          	sw	s4, 136(sp)
    9a98:	09512223          	sw	s5, 132(sp)
    9a9c:	09612023          	sw	s6, 128(sp)
    9aa0:	07712e23          	sw	s7, 124(sp)
    9aa4:	07812c23          	sw	s8, 120(sp)
    9aa8:	07912a23          	sw	s9, 116(sp)
    9aac:	07a12823          	sw	s10, 112(sp)
    9ab0:	07b12623          	sw	s11, 108(sp)
    9ab4:	00f12a23          	sw	a5, 20(sp)
    9ab8:	08112e23          	sw	ra, 156(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    9abc:	ffb207b7          	lui	a5, 0xffb20
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1061
    9ac0:	00c12423          	sw	a2, 8(sp)
    9ac4:	01012823          	sw	a6, 16(sp)
    9ac8:	0a012903          	lw	s2, 160(sp)
    9acc:	0a412d03          	lw	s10, 164(sp)
    9ad0:	00058d93          	mv	s11, a1
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    9ad4:	10a7a623          	sw	a0, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1065
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_INIT, risc::PROLOGUE_START_OFFSET);
    9ad8:	01300593          	li	a1, 19
    9adc:	04000537          	lui	a0, 0x4000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1061
) {
    9ae0:	00068a93          	mv	s5, a3
    9ae4:	00070993          	mv	s3, a4
    9ae8:	00088493          	mv	s1, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1065
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_INIT, risc::PROLOGUE_START_OFFSET);
    9aec:	9c1ff0ef          	jal	ra, 94ac <risc::record_timestamp_at_offset_l1(unsigned long, unsigned long)>
tile_header_buffer_init():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:94
  const uint32_t NUM_TILE_HEADER_BUF_CHUNKS = MAX_TILES_PER_PHASE / TILE_HEADER_BUF_INIT_CHUNK_WORDS;
  uint32_t header_buf_init_noc = NUM_NOCS-1-loading_noc;
  volatile uint32_t * tt_l1_ptr l1_tile_size_words_ptr = &(RISC_EPOCH_INFO_PTR->tile_size_words[0]);
  volatile uint32_t * tt_l1_ptr l1_tile_size_header_buf_addr_ptr = &(RISC_EPOCH_INFO_PTR->tile_size_header_buf_addr[0]);
  // L1 reads flushed by immediate usage
  uint32_t num_tile_sizes = RISC_EPOCH_INFO_PTR->num_tile_sizes;
    9af0:	00023a37          	lui	s4, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:90
  uint32_t header_buf_init_noc = NUM_NOCS-1-loading_noc;
    9af4:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:94
  uint32_t num_tile_sizes = RISC_EPOCH_INFO_PTR->num_tile_sizes;
    9af8:	080a0793          	addi	a5, s4, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
    9afc:	0107ac83          	lw	s9, 16(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:90
  uint32_t header_buf_init_noc = NUM_NOCS-1-loading_noc;
    9b00:	00100413          	li	s0, 1
    9b04:	40a40433          	sub	s0, s0, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:106
    for (uint32_t j = 0; j < TILE_HEADER_BUF_INIT_CHUNK_WORDS; j++) {
      l1_header_buf_tile_size_ptr[0] = tile_size_words;
      l1_header_buf_tile_size_ptr += 4;
    }

    uint64_t tile_size_header_buf_curr_dest_addr = NOC_XY_ADDR(my_x[header_buf_init_noc], my_y[header_buf_init_noc], (tile_size_header_buf_addr + TILE_HEADER_BUF_INIT_CHUNK_BYTES));
    9b08:	84018b93          	addi	s7, gp, -1984 # ffb00040 <my_y>
    9b0c:	84418b13          	addi	s6, gp, -1980 # ffb00044 <my_x>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:95
  for (uint32_t i = 0; i < num_tile_sizes; i++) {
    9b10:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:91
  volatile uint32_t * tt_l1_ptr l1_tile_size_words_ptr = &(RISC_EPOCH_INFO_PTR->tile_size_words[0]);
    9b14:	094a0a13          	addi	s4, s4, 148
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:106
    uint64_t tile_size_header_buf_curr_dest_addr = NOC_XY_ADDR(my_x[header_buf_init_noc], my_y[header_buf_init_noc], (tile_size_header_buf_addr + TILE_HEADER_BUF_INIT_CHUNK_BYTES));
    9b18:	01740bb3          	add	s7, s0, s7
    9b1c:	01640b33          	add	s6, s0, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:95
  for (uint32_t i = 0; i < num_tile_sizes; i++) {
    9b20:	058c8863          	beq	s9, s8, 9b70 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x100>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:96
    uint32_t tile_size_words = *l1_tile_size_words_ptr;
    9b24:	000a2703          	lw	a4, 0(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:97
    uint32_t tile_size_header_buf_addr = *l1_tile_size_header_buf_addr_ptr;
    9b28:	020a2583          	lw	a1, 32(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:98
    l1_tile_size_words_ptr++;
    9b2c:	004a0a13          	addi	s4, s4, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:100
    volatile uint32_t* l1_header_buf_tile_size_ptr = (volatile uint32_t*)tile_size_header_buf_addr;
    9b30:	00058613          	mv	a2, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:101
    for (uint32_t j = 0; j < TILE_HEADER_BUF_INIT_CHUNK_WORDS; j++) {
    9b34:	40058793          	addi	a5, a1, 1024
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:102
      l1_header_buf_tile_size_ptr[0] = tile_size_words;
    9b38:	00e62023          	sw	a4, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:103
      l1_header_buf_tile_size_ptr += 4;
    9b3c:	01060613          	addi	a2, a2, 16
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:101
    for (uint32_t j = 0; j < TILE_HEADER_BUF_INIT_CHUNK_WORDS; j++) {
    9b40:	fef61ce3          	bne	a2, a5, 9b38 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:106
    uint64_t tile_size_header_buf_curr_dest_addr = NOC_XY_ADDR(my_x[header_buf_init_noc], my_y[header_buf_init_noc], (tile_size_header_buf_addr + TILE_HEADER_BUF_INIT_CHUNK_BYTES));
    9b44:	000bc503          	lbu	a0, 0(s7)
    9b48:	000b4683          	lbu	a3, 0(s6)
    9b4c:	00a51513          	slli	a0, a0, 0xa
    9b50:	00469693          	slli	a3, a3, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:107
    replicate_l1(header_buf_init_noc, tile_size_header_buf_addr, tile_size_header_buf_curr_dest_addr, TILE_HEADER_BUF_INIT_CHUNK_BYTES, NUM_TILE_HEADER_BUF_CHUNKS-1, NCRISC_WR_LOCAL_TRID);
    9b54:	00d566b3          	or	a3, a0, a3
    9b58:	01f00793          	li	a5, 31
    9b5c:	40000713          	li	a4, 1024
    9b60:	00040513          	mv	a0, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:95
  for (uint32_t i = 0; i < num_tile_sizes; i++) {
    9b64:	001c0c13          	addi	s8, s8, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:107
    replicate_l1(header_buf_init_noc, tile_size_header_buf_addr, tile_size_header_buf_curr_dest_addr, TILE_HEADER_BUF_INIT_CHUNK_BYTES, NUM_TILE_HEADER_BUF_CHUNKS-1, NCRISC_WR_LOCAL_TRID);
    9b68:	a0dff0ef          	jal	ra, 9574 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:95
  for (uint32_t i = 0; i < num_tile_sizes; i++) {
    9b6c:	fb5ff06f          	j	9b20 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb0>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    9b70:	ffb20537          	lui	a0, 0xffb20
    9b74:	01041413          	slli	s0, s0, 0x10
    9b78:	24450513          	addi	a0, a0, 580 # ffb20244 <TENSIX_MAILBOX_BASE+0xffc60244>
    9b7c:	00a40433          	add	s0, s0, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    9b80:	00042783          	lw	a5, 0(s0)
    9b84:	00f12223          	sw	a5, 4(sp)
tile_header_buffer_init():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:109
  }
  while (!ncrisc_noc_nonposted_writes_flushed_l1(header_buf_init_noc, NCRISC_WR_LOCAL_TRID));
    9b88:	fe079ce3          	bnez	a5, 9b80 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x110>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1076
  uint32_t num_kernel_inputs = RISC_EPOCH_INFO_PTR->num_inputs;
    9b8c:	000237b7          	lui	a5, 0x23
    9b90:	08078c93          	addi	s9, a5, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
    9b94:	0807a783          	lw	a5, 128(a5)
stream_dram_write_init(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:444
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_MSG_INFO_WR_PTR_HI_REG_INDEX, tile_header_buffer_addr >> 21); // todo remove this when noc0/noc1 NIU_CFG_0_TILE_HEADER_STORE_OFF is set for all dram cores
    9b98:	00300513          	li	a0, 3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:445
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_MSG_INFO_WR_PTR_REG_INDEX, tile_header_buffer_addr >> 4); // todo remove this when noc0/noc1 NIU_CFG_0_TILE_HEADER_STORE_OFF is set for all dram cores
    9b9c:	00070737          	lui	a4, 0x70
    9ba0:	80070713          	addi	a4, a4, -2048 # 6f800 <substitutes.cpp.cd30c172+0x50eea>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:447
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MCAST_DEST_NUM_REG_INDEX, 1);
    9ba4:	00100593          	li	a1, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:448
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX, (1 << 0) | (1 << 2));
    9ba8:	00500613          	li	a2, 5
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    9bac:	00003bb7          	lui	s7, 0x3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    9bb0:	00100437          	lui	s0, 0x100
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1129
    if ((flags & STREAM_MOVES_RAW_DATA) != 0 || ((flags & STREAM_DRAM_NO_PUSH) != 0)) {
    9bb4:	00001c37          	lui	s8, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1106
  for (uint32_t i = 0;
    9bb8:	00000b13          	li	s6, 0
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:26
    9bbc:	b4040413          	addi	s0, s0, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1129
    if ((flags & STREAM_MOVES_RAW_DATA) != 0 || ((flags & STREAM_DRAM_NO_PUSH) != 0)) {
    9bc0:	840c0c13          	addi	s8, s8, -1984 # 840 <__firmware_stack_size+0x470>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1076
  uint32_t num_kernel_inputs = RISC_EPOCH_INFO_PTR->num_inputs;
    9bc4:	00f12c23          	sw	a5, 24(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1077
  uint32_t num_kernel_outputs =RISC_EPOCH_INFO_PTR->num_outputs;
    9bc8:	004ca783          	lw	a5, 4(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1079
  num_dram_input_streams = 0;
    9bcc:	000da023          	sw	zero, 0(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1077
  uint32_t num_kernel_outputs =RISC_EPOCH_INFO_PTR->num_outputs;
    9bd0:	00f12e23          	sw	a5, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1080
  num_dram_output_streams = 0;
    9bd4:	00812783          	lw	a5, 8(sp)
    9bd8:	0007a023          	sw	zero, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1081
  num_active_dram_queues = 0;
    9bdc:	0009a023          	sw	zero, 0(s3)
stream_dram_write_init(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:443
  NOC_STREAM_WRITE_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX, 0);
    9be0:	ffb487b7          	lui	a5, 0xffb48
    9be4:	0207a623          	sw	zero, 44(a5) # ffb4802c <TENSIX_MAILBOX_BASE+0xffc8802c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:444
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_MSG_INFO_WR_PTR_HI_REG_INDEX, tile_header_buffer_addr >> 21); // todo remove this when noc0/noc1 NIU_CFG_0_TILE_HEADER_STORE_OFF is set for all dram cores
    9be8:	38078693          	addi	a3, a5, 896
    9bec:	04a6a623          	sw	a0, 76(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:445
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_MSG_INFO_WR_PTR_REG_INDEX, tile_header_buffer_addr >> 4); // todo remove this when noc0/noc1 NIU_CFG_0_TILE_HEADER_STORE_OFF is set for all dram cores
    9bf0:	02e7a223          	sw	a4, 36(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:446
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MCAST_DEST_REG_INDEX, 0);
    9bf4:	0207aa23          	sw	zero, 52(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:447
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MCAST_DEST_NUM_REG_INDEX, 1);
    9bf8:	02b7ac23          	sw	a1, 56(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:448
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX, (1 << 0) | (1 << 2));
    9bfc:	06c6a023          	sw	a2, 96(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:449
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_1_REG_INDEX, 0);
    9c00:	3e07a223          	sw	zero, 996(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:450
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_2_REG_INDEX, 0);
    9c04:	3e07a423          	sw	zero, 1000(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:451
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_3_REG_INDEX, 0);
    9c08:	3e07a623          	sw	zero, 1004(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:452
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_4_REG_INDEX, 0);
    9c0c:	3e07a823          	sw	zero, 1008(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:453
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_5_REG_INDEX, 0);
    9c10:	3e07aa23          	sw	zero, 1012(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:454
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_TRAFFIC_PRIORITY_REG_INDEX, 0);
    9c14:	0a07a823          	sw	zero, 176(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:455
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX, 0);
    9c18:	0a07a023          	sw	zero, 160(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:456
  NOC_STREAM_WRITE_REG(stream_id, STREAM_GATHER_REG_INDEX, 0);
    9c1c:	0207ae23          	sw	zero, 60(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:443
  NOC_STREAM_WRITE_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX, 0);
    9c20:	ffb497b7          	lui	a5, 0xffb49
    9c24:	0207a623          	sw	zero, 44(a5) # ffb4902c <TENSIX_MAILBOX_BASE+0xffc8902c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:444
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_MSG_INFO_WR_PTR_HI_REG_INDEX, tile_header_buffer_addr >> 21); // todo remove this when noc0/noc1 NIU_CFG_0_TILE_HEADER_STORE_OFF is set for all dram cores
    9c28:	38078693          	addi	a3, a5, 896
    9c2c:	04a6a623          	sw	a0, 76(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:445
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_MSG_INFO_WR_PTR_REG_INDEX, tile_header_buffer_addr >> 4); // todo remove this when noc0/noc1 NIU_CFG_0_TILE_HEADER_STORE_OFF is set for all dram cores
    9c30:	02e7a223          	sw	a4, 36(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:446
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MCAST_DEST_REG_INDEX, 0);
    9c34:	0207aa23          	sw	zero, 52(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:447
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MCAST_DEST_NUM_REG_INDEX, 1);
    9c38:	02b7ac23          	sw	a1, 56(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:448
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX, (1 << 0) | (1 << 2));
    9c3c:	06c6a023          	sw	a2, 96(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:449
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_1_REG_INDEX, 0);
    9c40:	3e07a223          	sw	zero, 996(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:450
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_2_REG_INDEX, 0);
    9c44:	3e07a423          	sw	zero, 1000(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:451
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_3_REG_INDEX, 0);
    9c48:	3e07a623          	sw	zero, 1004(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:452
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_4_REG_INDEX, 0);
    9c4c:	3e07a823          	sw	zero, 1008(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:453
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_5_REG_INDEX, 0);
    9c50:	3e07aa23          	sw	zero, 1012(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:454
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_TRAFFIC_PRIORITY_REG_INDEX, 0);
    9c54:	0a07a823          	sw	zero, 176(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:455
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX, 0);
    9c58:	0a07a023          	sw	zero, 160(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:456
  NOC_STREAM_WRITE_REG(stream_id, STREAM_GATHER_REG_INDEX, 0);
    9c5c:	0207ae23          	sw	zero, 60(a5)
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    9c60:	200b8793          	addi	a5, s7, 512 # 3200 <__trisc1_size+0x1200>
    9c64:	02f12023          	sw	a5, 32(sp)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1107
       i < num_active_streams;
    9c68:	000aa783          	lw	a5, 0(s5)
    9c6c:	0cfb7c63          	bgeu	s6, a5, 9d44 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1110
    volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    9c70:	044b0793          	addi	a5, s6, 68
    9c74:	00279793          	slli	a5, a5, 0x2
    9c78:	00fc87b3          	add	a5, s9, a5
    9c7c:	0047a783          	lw	a5, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1111
    uint32_t stream_id = l1_stream_info->stream_id;
    9c80:	0007d503          	lhu	a0, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1112
    uint32_t blob_start_addr = l1_stream_info->blob_start_addr;
    9c84:	0247a603          	lw	a2, 36(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1113
    uint32_t start_phase_num_cfg_regs = l1_stream_info->start_phase_num_cfg_regs;
    9c88:	01e7c703          	lbu	a4, 30(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1114
    uint32_t flags = l1_stream_info->flags;
    9c8c:	03c7aa03          	lw	s4, 60(a5)
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    9c90:	008507b3          	add	a5, a0, s0
    9c94:	00c79793          	slli	a5, a5, 0xc
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1119
    if ((flags & STREAM_BRISC_PACK) == 0 && !is_dram_prefetch_streaming) {
    9c98:	400a7693          	andi	a3, s4, 1024
    9c9c:	08069263          	bnez	a3, 9d20 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2b0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1117 (discriminator 1)
                                      ((flags & STREAM_INTERMEDIATE) == 0) && ((flags & STREAM_MOVES_RAW_DATA) == 0);
    9ca0:	076a7693          	andi	a3, s4, 118
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1119 (discriminator 1)
    if ((flags & STREAM_BRISC_PACK) == 0 && !is_dram_prefetch_streaming) {
    9ca4:	00400593          	li	a1, 4
    9ca8:	06b68c63          	beq	a3, a1, 9d20 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2b0>
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:26
    9cac:	0207a223          	sw	zero, 36(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:28
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr);
    9cb0:	02c7a823          	sw	a2, 48(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    9cb4:	01871713          	slli	a4, a4, 0x18
    9cb8:	08e7a823          	sw	a4, 144(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    9cbc:	02012703          	lw	a4, 32(sp)
    9cc0:	02e7a423          	sw	a4, 40(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1129
    if ((flags & STREAM_MOVES_RAW_DATA) != 0 || ((flags & STREAM_DRAM_NO_PUSH) != 0)) {
    9cc4:	018a7a33          	and	s4, s4, s8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1128
    uint32_t operand = stream_id_to_operand(stream_id);
    9cc8:	ffbf7097          	auipc	ra, 0xffbf7
    9ccc:	fa4080e7          	jalr	-92(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
    9cd0:	00050b93          	mv	s7, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1129
    if ((flags & STREAM_MOVES_RAW_DATA) != 0 || ((flags & STREAM_DRAM_NO_PUSH) != 0)) {
    9cd4:	040a0263          	beqz	s4, 9d18 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2a8>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    9cd8:	ffbf7097          	auipc	ra, 0xffbf7
    9cdc:	f58080e7          	jalr	-168(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    9ce0:	00850a33          	add	s4, a0, s0
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
    9ce4:	000b8513          	mv	a0, s7
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    9ce8:	00ca1a13          	slli	s4, s4, 0xc
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
    9cec:	ffbf7097          	auipc	ra, 0xffbf7
    9cf0:	fb8080e7          	jalr	-72(ra) # ffc00ca4 <TENSIX_MAILBOX_BASE+0xffd40ca4>
    9cf4:	02050a63          	beqz	a0, 9d28 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2b8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    9cf8:	000b8513          	mv	a0, s7
    9cfc:	ffbf7097          	auipc	ra, 0xffbf7
    9d00:	f34080e7          	jalr	-204(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    9d04:	00850533          	add	a0, a0, s0
    9d08:	00c51513          	slli	a0, a0, 0xc
    9d0c:	01050513          	addi	a0, a0, 16
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1132
      tiles_received_ptr[0] = 0;
    9d10:	000a2823          	sw	zero, 16(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1133
      tiles_acked_ptr[0] = 0;
    9d14:	00052023          	sw	zero, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1106
  for (uint32_t i = 0;
    9d18:	001b0b13          	addi	s6, s6, 1
    9d1c:	f4dff06f          	j	9c68 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1f8>
stream_set_auto_cfg_header(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:58
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, val);
    9d20:	0807a823          	sw	zero, 144(a5)
    9d24:	fa1ff06f          	j	9cc4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x254>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    9d28:	000b8513          	mv	a0, s7
    9d2c:	ffbf7097          	auipc	ra, 0xffbf7
    9d30:	f04080e7          	jalr	-252(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    9d34:	00850533          	add	a0, a0, s0
    9d38:	00c51513          	slli	a0, a0, 0xc
    9d3c:	00c50513          	addi	a0, a0, 12
    9d40:	fd1ff06f          	j	9d10 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2a0>
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:78
    uint32_t operand = stream_id_to_operand(RISC_EPOCH_INFO_PTR->inputs[i]->stream_id);
    9d44:	00023bb7          	lui	s7, 0x23
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    9d48:	00100a37          	lui	s4, 0x100
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:77
  for (uint32_t i = 0; i < num_kernel_inputs; i++) {
    9d4c:	00000b13          	li	s6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:78
    uint32_t operand = stream_id_to_operand(RISC_EPOCH_INFO_PTR->inputs[i]->stream_id);
    9d50:	080b8b93          	addi	s7, s7, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
    9d54:	b40a0a13          	addi	s4, s4, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:77
  for (uint32_t i = 0; i < num_kernel_inputs; i++) {
    9d58:	01812783          	lw	a5, 24(sp)
    9d5c:	09678463          	beq	a5, s6, 9de4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x374>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:78
    uint32_t operand = stream_id_to_operand(RISC_EPOCH_INFO_PTR->inputs[i]->stream_id);
    9d60:	014b0793          	addi	a5, s6, 20
    9d64:	00279793          	slli	a5, a5, 0x2
    9d68:	00fb87b3          	add	a5, s7, a5
    9d6c:	0047a783          	lw	a5, 4(a5)
    9d70:	0007d503          	lhu	a0, 0(a5)
    9d74:	ffbf7097          	auipc	ra, 0xffbf7
    9d78:	ef8080e7          	jalr	-264(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
    9d7c:	00050c13          	mv	s8, a0
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
    9d80:	ffbf7097          	auipc	ra, 0xffbf7
    9d84:	eb0080e7          	jalr	-336(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    9d88:	01450433          	add	s0, a0, s4
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
    9d8c:	000c0513          	mv	a0, s8
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    9d90:	00c41413          	slli	s0, s0, 0xc
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
    9d94:	ffbf7097          	auipc	ra, 0xffbf7
    9d98:	f10080e7          	jalr	-240(ra) # ffc00ca4 <TENSIX_MAILBOX_BASE+0xffd40ca4>
    9d9c:	02050663          	beqz	a0, 9dc8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x358>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    9da0:	000c0513          	mv	a0, s8
    9da4:	ffbf7097          	auipc	ra, 0xffbf7
    9da8:	e8c080e7          	jalr	-372(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    9dac:	01450533          	add	a0, a0, s4
    9db0:	00c51513          	slli	a0, a0, 0xc
    9db4:	01050513          	addi	a0, a0, 16
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:81
    tiles_received_ptr[0] = 0;
    9db8:	00042823          	sw	zero, 16(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:82
    tiles_acked_ptr[0] = 0;
    9dbc:	00052023          	sw	zero, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:77
  for (uint32_t i = 0; i < num_kernel_inputs; i++) {
    9dc0:	001b0b13          	addi	s6, s6, 1
    9dc4:	f95ff06f          	j	9d58 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2e8>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    9dc8:	000c0513          	mv	a0, s8
    9dcc:	ffbf7097          	auipc	ra, 0xffbf7
    9dd0:	e64080e7          	jalr	-412(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    9dd4:	01450533          	add	a0, a0, s4
    9dd8:	00c51513          	slli	a0, a0, 0xc
    9ddc:	00c50513          	addi	a0, a0, 12
    9de0:	fd9ff06f          	j	9db8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x348>
    9de4:	00023bb7          	lui	s7, 0x23
get_packer_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:168
inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_operand_phase_changed_ptr(int operand) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_TRAFFIC_PRIORITY_REG_INDEX));
}

inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_packer_tiles_received_ptr(int operand) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_SRC_PHASE_REG_INDEX));
    9de8:	00100437          	lui	s0, 0x100
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:84
  for (uint32_t i = 0; i < num_kernel_outputs; i++) {
    9dec:	00000b13          	li	s6, 0
    9df0:	080b8b93          	addi	s7, s7, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
get_packer_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:168
    9df4:	b4040413          	addi	s0, s0, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:84
    9df8:	01c12783          	lw	a5, 28(sp)
    9dfc:	07678063          	beq	a5, s6, 9e5c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x3ec>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:85
    if (!RISC_EPOCH_INFO_PTR->outputs[i]->legacy_pack) {
    9e00:	002b1793          	slli	a5, s6, 0x2
    9e04:	017787b3          	add	a5, a5, s7
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:85
    9e08:	0b47a703          	lw	a4, 180(a5)
    9e0c:	03874703          	lbu	a4, 56(a4)
    9e10:	04071263          	bnez	a4, 9e54 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x3e4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:86
      uint32_t operand = stream_id_to_operand(RISC_EPOCH_INFO_PTR->outputs[i]->stream_id);
    9e14:	0b47a783          	lw	a5, 180(a5)
    9e18:	0007d503          	lhu	a0, 0(a5)
    9e1c:	ffbf7097          	auipc	ra, 0xffbf7
    9e20:	e50080e7          	jalr	-432(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
    9e24:	00050c13          	mv	s8, a0
get_packer_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:168
    9e28:	ffbf7097          	auipc	ra, 0xffbf7
    9e2c:	e08080e7          	jalr	-504(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    9e30:	00850a33          	add	s4, a0, s0
get_packer_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:172
}

inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_packer_tiles_acked_ptr(int operand) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_SRC_REG_INDEX));
    9e34:	000c0513          	mv	a0, s8
    9e38:	ffbf7097          	auipc	ra, 0xffbf7
    9e3c:	df8080e7          	jalr	-520(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
get_packer_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:168
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_SRC_PHASE_REG_INDEX));
    9e40:	00ca1a13          	slli	s4, s4, 0xc
get_packer_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:172
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_SRC_REG_INDEX));
    9e44:	00850533          	add	a0, a0, s0
    9e48:	00c51513          	slli	a0, a0, 0xc
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:89
      tiles_received_ptr[0] = 0;
    9e4c:	000a2223          	sw	zero, 4(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:90
      tiles_acked_ptr[0] = 0;
    9e50:	00052023          	sw	zero, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/ncrisc/ncrisc.cc:84
  for (uint32_t i = 0; i < num_kernel_outputs; i++) {
    9e54:	001b0b13          	addi	s6, s6, 1
    9e58:	fa1ff06f          	j	9df8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x388>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    9e5c:	001007b7          	lui	a5, 0x100
    9e60:	b4078c93          	addi	s9, a5, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
stream_push_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:281
  uint32_t tiles_left_in_phase = rmw & 0xffff;
    9e64:	000107b7          	lui	a5, 0x10
    9e68:	fff78793          	addi	a5, a5, -1 # ffff <dram_stream_intf.cc.5f8411f1+0x1bec>
    9e6c:	02f12e23          	sw	a5, 60(sp)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1143
  dram_q_state_t tt_l1_ptr * curr_dram_q_state = dram_q_state;
    9e70:	01012a03          	lw	s4, 16(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1277
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    9e74:	000237b7          	lui	a5, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1147
  for (uint32_t i = 0;
    9e78:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1142
  dram_output_stream_state_t* curr_dram_output_stream_state_init = dram_output_stream_state;
    9e7c:	00090413          	mv	s0, s2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1146
  curr_active_stream_info = active_stream_info;
    9e80:	000d0b93          	mv	s7, s10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1277
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    9e84:	08078293          	addi	t0, a5, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1148
       i < num_active_streams;
    9e88:	000aa783          	lw	a5, 0(s5)
    9e8c:	50fc7263          	bgeu	s8, a5, a390 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x920>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1152
    uint32_t stream_id = curr_active_stream_info->stream_id;
    9e90:	000bc503          	lbu	a0, 0(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1153
    uint32_t flags = curr_active_stream_info->flags;
    9e94:	002bd783          	lhu	a5, 2(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1155
    RISC_POST_STATUS(0xA3000000 | stream_id);
    9e98:	a30006b7          	lui	a3, 0xa3000
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    9e9c:	ffb20737          	lui	a4, 0xffb20
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1155
    9ea0:	00d566b3          	or	a3, a0, a3
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    9ea4:	10d72623          	sw	a3, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1158
    if ((flags & STREAM_DRAM_INPUT) != 0) {
    9ea8:	0047f693          	andi	a3, a5, 4
    9eac:	20068e63          	beqz	a3, a0c8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x658>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1160
      if ((flags & STREAM_DRAM_IO) != 0 || (flags & STREAM_DRAM_STREAMING) != 0) {
    9eb0:	0227f693          	andi	a3, a5, 34
    9eb4:	20068463          	beqz	a3, a0bc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x64c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1162
        RISC_POST_STATUS(0xA4000000 | stream_id);
    9eb8:	a40006b7          	lui	a3, 0xa4000
    9ebc:	00d566b3          	or	a3, a0, a3
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    9ec0:	10d72623          	sw	a3, 268(a4)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    9ec4:	01950733          	add	a4, a0, s9
    9ec8:	00c71713          	slli	a4, a4, 0xc
    9ecc:	08c70613          	addi	a2, a4, 140
    9ed0:	00062683          	lw	a3, 0(a2)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1165
        while (!stream_phase_is_active(stream_id)); 
    9ed4:	0046f693          	andi	a3, a3, 4
    9ed8:	fe068ce3          	beqz	a3, 9ed0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x460>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1167
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    9edc:	044c0693          	addi	a3, s8, 68
    9ee0:	00269693          	slli	a3, a3, 0x2
    9ee4:	00d286b3          	add	a3, t0, a3
    9ee8:	0046a603          	lw	a2, 4(a3) # a4000004 <TENSIX_MAILBOX_BASE+0xa4140004>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1169
        uint32_t num_fork_streams = l1_stream_info->num_fork_streams;
    9eec:	03848813          	addi	a6, s1, 56
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1170
        for (uint32_t k = 0; k < EPOCH_MAX_OUTPUT_FORKS; k++) {
    9ef0:	00000593          	li	a1, 0
    9ef4:	01000893          	li	a7, 16
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1169
        uint32_t num_fork_streams = l1_stream_info->num_fork_streams;
    9ef8:	08c65303          	lhu	t1, 140(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1171
          fork_stream_ids_ptr[k] = RISC_EPOCH_INFO_PTR->active_streams[l1_stream_info->fork_idxs[k]]->stream_id;
    9efc:	00b606b3          	add	a3, a2, a1
    9f00:	0906c683          	lbu	a3, 144(a3)
    9f04:	04468693          	addi	a3, a3, 68
    9f08:	00269693          	slli	a3, a3, 0x2
    9f0c:	00d286b3          	add	a3, t0, a3
    9f10:	0046a683          	lw	a3, 4(a3)
    9f14:	0006d683          	lhu	a3, 0(a3)
    9f18:	00d80023          	sb	a3, 0(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1172
          if (k == num_fork_streams) {
    9f1c:	04b31863          	bne	t1, a1, 9f6c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x4fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1173
            fork_stream_ids_ptr[k] = NULL_STREAM;
    9f20:	fff00693          	li	a3, -1
    9f24:	00d80023          	sb	a3, 0(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1178
        epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    9f28:	08862683          	lw	a3, 136(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1180
        uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    9f2c:	08665e03          	lhu	t3, 134(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1181
        uint32_t c_dim_size = l1_stream_info->c_dim_size;
    9f30:	05c65f03          	lhu	t5, 92(a2)
stream_get_data_buf_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:126
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_START_REG_INDEX);
    9f34:	01872883          	lw	a7, 24(a4)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    9f38:	01c72f83          	lw	t6, 28(a4)
stream_get_input_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:98
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, INCOMING_DATA_NOC);
    9f3c:	02872703          	lw	a4, 40(a4)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1189
        while (transaction_id > NCRISC_RD_END_TRID)
    9f40:	00d00813          	li	a6, 13
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1184
        uint32_t stream_buf_addr_byte = stream_get_data_buf_addr(stream_id) * MEM_WORD_WIDTH;
    9f44:	00489893          	slli	a7, a7, 0x4
stream_get_input_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:98
    9f48:	00177713          	andi	a4, a4, 1
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1179
        volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    9f4c:	01c6a583          	lw	a1, 28(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1182
        uint32_t q_slot_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    9f50:	0006a303          	lw	t1, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1183
        uint32_t epoch_q_slots_remaining = l1_dram_io_info->epoch_q_slots_remaining;
    9f54:	0146ae83          	lw	t4, 20(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1188
        uint32_t transaction_id = NCRISC_RD_START_TRID + num_dram_input_streams;
    9f58:	000da683          	lw	a3, 0(s11)
    9f5c:	00468693          	addi	a3, a3, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1189
        while (transaction_id > NCRISC_RD_END_TRID)
    9f60:	00d87e63          	bgeu	a6, a3, 9f7c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x50c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1190
          transaction_id -= NCRISC_RD_END_TRID-NCRISC_RD_START_TRID+1;
    9f64:	ff668693          	addi	a3, a3, -10
    9f68:	ff9ff06f          	j	9f60 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x4f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1170 (discriminator 2)
        for (uint32_t k = 0; k < EPOCH_MAX_OUTPUT_FORKS; k++) {
    9f6c:	00158593          	addi	a1, a1, 1
    9f70:	00180813          	addi	a6, a6, 1
    9f74:	f91594e3          	bne	a1, a7, 9efc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x48c>
    9f78:	fb1ff06f          	j	9f28 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x4b8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1192
        curr_dram_input_stream_state_init->moves_raw_data = (flags & STREAM_MOVES_RAW_DATA) != 0 || (flags & STREAM_DRAM_NO_PUSH) != 0;
    9f7c:	00001837          	lui	a6, 0x1
    9f80:	84080813          	addi	a6, a6, -1984 # 840 <__firmware_stack_size+0x470>
    9f84:	0107f833          	and	a6, a5, a6
    9f88:	01003833          	snez	a6, a6
    9f8c:	01048823          	sb	a6, 16(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1193
        curr_dram_input_stream_state_init->stream_info = l1_stream_info;
    9f90:	04c4a823          	sw	a2, 80(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1195
        curr_dram_input_stream_state_init->in_flight_data_rec_chunks = 0;
    9f94:	0004a223          	sw	zero, 4(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1197
        if ((flags & STREAM_DRAM_STREAMING) != 0)
    9f98:	0207f613          	andi	a2, a5, 32
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1200
          curr_dram_input_stream_state_init->stream_flushed_ptr_byte = 0;
    9f9c:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1197
        if ((flags & STREAM_DRAM_STREAMING) != 0)
    9fa0:	00060463          	beqz	a2, 9fa8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x538>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1185
        uint32_t stream_buf_size_bytes = stream_get_data_buf_size(stream_id) * MEM_WORD_WIDTH;
    9fa4:	004f9813          	slli	a6, t6, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1205
        curr_dram_input_stream_state_init->io_q_empty = 1;
    9fa8:	00100613          	li	a2, 1
    9fac:	00c489a3          	sb	a2, 19(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1211
        curr_dram_input_stream_state_init->transaction_id_issued = transaction_id;
    9fb0:	02d48823          	sb	a3, 48(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1212
        curr_dram_input_stream_state_init->transaction_id_flushed = transaction_id;
    9fb4:	02d488a3          	sb	a3, 49(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    9fb8:	0097d613          	srli	a2, a5, 0x9
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1221
        curr_dram_input_stream_state_init->input_noc = input_noc;
    9fbc:	0ff77693          	zext.b	a3, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    9fc0:	0027d713          	srli	a4, a5, 0x2
    9fc4:	00877713          	andi	a4, a4, 8
    9fc8:	00167613          	andi	a2, a2, 1
    9fcc:	00e66633          	or	a2, a2, a4
    9fd0:	00169713          	slli	a4, a3, 0x1
    9fd4:	0104a623          	sw	a6, 12(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1215
        curr_dram_input_stream_state_init->c_dim_size = c_dim_size;
    9fd8:	03e49023          	sh	t5, 32(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1221
        curr_dram_input_stream_state_init->input_noc = input_noc;
    9fdc:	00d480a3          	sb	a3, 1(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1222
        curr_dram_input_stream_state_init->stream_buf_addr_byte = stream_buf_addr_byte;
    9fe0:	0114a423          	sw	a7, 8(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    9fe4:	00e66733          	or	a4, a2, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1201
        curr_dram_input_stream_state_init->in_flight_bytes = 0;
    9fe8:	0004aa23          	sw	zero, 20(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1202
        curr_dram_input_stream_state_init->scatter_loop_index = 0;
    9fec:	0204a423          	sw	zero, 40(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1203
        curr_dram_input_stream_state_init->scatter_loop_inc = 0;
    9ff0:	0204a623          	sw	zero, 44(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1204
        curr_dram_input_stream_state_init->active_stream_id = i;
    9ff4:	01848923          	sb	s8, 18(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1206
        curr_dram_input_stream_state_init->stream_buf_available = 0;
    9ff8:	000488a3          	sb	zero, 17(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1207
        curr_dram_input_stream_state_init->q_ptr_update_pending = false;
    9ffc:	00049123          	sh	zero, 2(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1209
        curr_dram_input_stream_state_init->scatter_list_input_index = 0;
    a000:	0004ae23          	sw	zero, 28(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1214
        curr_dram_input_stream_state_init->c_dim_count = 0;
    a004:	02049123          	sh	zero, 34(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1216
        curr_dram_input_stream_state_init->col_offset_bytes = 0;
    a008:	0204a223          	sw	zero, 36(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1218
        curr_dram_input_stream_state_init->epoch_q_slots_remaining = epoch_q_slots_remaining;
    a00c:	01d4ac23          	sw	t4, 24(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1220
        curr_dram_input_stream_state_init->stream_id = stream_id;
    a010:	00a48023          	sb	a0, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1223
        curr_dram_input_stream_state_init->prev_rd_data_word_recv = 0;
    a014:	0204aa23          	sw	zero, 52(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1225
        curr_dram_input_stream_state_init->next_dram_q_issue = curr_dram_q_state;
    a018:	0544a423          	sw	s4, 72(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1226
        curr_dram_input_stream_state_init->next_dram_q_in_flight = curr_dram_q_state;
    a01c:	0544a623          	sw	s4, 76(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1230
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a020:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1229
        dram_q_state_t tt_l1_ptr * prev_dram_q_state = curr_dram_q_state;
    a024:	000a0813          	mv	a6, s4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a028:	000a0693          	mv	a3, s4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1234
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a02c:	02700f13          	li	t5, 39
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1251
          curr_dram_q_state->l1_dram_incoming_ptr_index = 1;
    a030:	00100893          	li	a7, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1230 (discriminator 1)
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a034:	07c67863          	bgeu	a2, t3, a0a4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x634>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1231
          uint32_t dram_buf_size_q_slots = l1_dram_io_state->dram_buf_size_q_slots;
    a038:	0445a803          	lw	a6, 68(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1234
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a03c:	0009ae83          	lw	t4, 0(s3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1237
            next_dram_q_state = curr_dram_q_state + 1;
    a040:	02468793          	addi	a5, a3, 36
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1234
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a044:	01ee9463          	bne	t4, t5, a04c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x5dc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1235
            next_dram_q_state = (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr;
    a048:	2782a783          	lw	a5, 632(t0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1240 (discriminator 2)
          uint16_t reader_index = l1_dram_io_state->reader_index;
    a04c:	0545ce83          	lbu	t4, 84(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1242 (discriminator 2)
          curr_dram_q_state->dram_q_stream_id = stream_id;
    a050:	00a68723          	sb	a0, 14(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1250 (discriminator 2)
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a054:	00e68223          	sb	a4, 4(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1251 (discriminator 2)
          curr_dram_q_state->l1_dram_incoming_ptr_index = 1;
    a058:	011682a3          	sb	a7, 5(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1246 (discriminator 2)
          curr_dram_q_state->dram_ptr_issued_byte = q_slot_size_bytes; // temp, changed when loading dram pointers
    a05c:	0066ac23          	sw	t1, 24(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1247 (discriminator 2)
          curr_dram_q_state->dram_num_partial_q_slot_issued_tiles = 0; // temp, changed when loading dram pointers
    a060:	0006a823          	sw	zero, 16(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1248 (discriminator 2)
          curr_dram_q_state->flushed_partial_q_slot_tiles = 0;
    a064:	0006aa23          	sw	zero, 20(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1249 (discriminator 2)
          curr_dram_q_state->scatter_offsets_index = 0;
    a068:	0006ae23          	sw	zero, 28(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1252 (discriminator 2)
          curr_dram_q_state->dram_buf_size_q_slots = dram_buf_size_q_slots;
    a06c:	01069623          	sh	a6, 12(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1254 (discriminator 2)
          curr_dram_q_state->l1_dram_ptrs = (volatile uint32_t tt_l1_ptr *)l1_dram_io_state;
    a070:	00b6a023          	sw	a1, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1243 (discriminator 2)
          curr_dram_q_state->dram_ptr_issued_q_slots = 0; // temp, changed when loading dram pointers
    a074:	00069323          	sh	zero, 6(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1244 (discriminator 2)
          curr_dram_q_state->dram_ptr_flushed_q_slots = 0; // temp, changed when loading dram pointers
    a078:	0006a423          	sw	zero, 8(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1241 (discriminator 2)
          curr_dram_q_state->temp0 = reader_index;
    a07c:	01d687a3          	sb	t4, 15(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1261 (discriminator 2)
          num_active_dram_queues++;
    a080:	0009a803          	lw	a6, 0(s3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1253 (discriminator 2)
          curr_dram_q_state->next = next_dram_q_state;
    a084:	02f6a023          	sw	a5, 32(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1261 (discriminator 2)
          num_active_dram_queues++;
    a088:	00180813          	addi	a6, a6, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1260 (discriminator 2)
          l1_dram_io_state = l1_dram_io_state->next;
    a08c:	05c5a583          	lw	a1, 92(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1230 (discriminator 2)
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a090:	00160613          	addi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1261 (discriminator 2)
          num_active_dram_queues++;
    a094:	0109a023          	sw	a6, 0(s3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1230 (discriminator 2)
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a098:	00068813          	mv	a6, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1259 (discriminator 2)
          curr_dram_q_state = next_dram_q_state;
    a09c:	00078693          	mv	a3, a5
    a0a0:	f95ff06f          	j	a034 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x5c4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1264
        num_dram_input_streams++;
    a0a4:	000da783          	lw	a5, 0(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1263
        prev_dram_q_state->next = start_dram_q_state;
    a0a8:	03482023          	sw	s4, 32(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1264
        num_dram_input_streams++;
    a0ac:	00178793          	addi	a5, a5, 1
    a0b0:	00fda023          	sw	a5, 0(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1265
        curr_dram_input_stream_state_init++;
    a0b4:	05448493          	addi	s1, s1, 84
    a0b8:	00068a13          	mv	s4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1147
  for (uint32_t i = 0;
    a0bc:	001c0c13          	addi	s8, s8, 1
    a0c0:	004b8b93          	addi	s7, s7, 4
    a0c4:	dc5ff06f          	j	9e88 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x418>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1268
    else if ((flags & STREAM_DRAM_OUTPUT) != 0) {
    a0c8:	0087f693          	andi	a3, a5, 8
    a0cc:	22068263          	beqz	a3, a2f0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x880>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1270
      if ((flags & STREAM_DRAM_IO) != 0 || (flags & STREAM_DRAM_STREAMING) != 0) {
    a0d0:	0227f693          	andi	a3, a5, 34
    a0d4:	fe0684e3          	beqz	a3, a0bc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x64c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1275
        RISC_POST_STATUS(0xA6000000 | stream_id);
    a0d8:	a60006b7          	lui	a3, 0xa6000
    a0dc:	00d566b3          	or	a3, a0, a3
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    a0e0:	10d72623          	sw	a3, 268(a4)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1277
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    a0e4:	044c0713          	addi	a4, s8, 68
    a0e8:	00271713          	slli	a4, a4, 0x2
    a0ec:	00e28733          	add	a4, t0, a4
    a0f0:	00472603          	lw	a2, 4(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1278
        volatile epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    a0f4:	08060713          	addi	a4, a2, 128
    a0f8:	00872583          	lw	a1, 8(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1279
        volatile dram_io_state_t tt_l1_ptr* l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a0fc:	01c5a703          	lw	a4, 28(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1280
        uint32_t q_slot_size_tiles = l1_dram_io_state->dram_q_slot_size_tiles;
    a100:	05072e03          	lw	t3, 80(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1281
        uint32_t q_slot_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    a104:	0005a883          	lw	a7, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1282
        uint32_t epoch_q_slots_remaining = l1_dram_io_info->epoch_q_slots_remaining;
    a108:	0145a303          	lw	t1, 20(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1283
        uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    a10c:	08665683          	lhu	a3, 134(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1284
        uint32_t epoch_id = RISC_EPOCH_INFO_PTR->epoch_id;
    a110:	28c2af83          	lw	t6, 652(t0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1285
        uint16_t write_stride = l1_stream_info->stride;
    a114:	04065383          	lhu	t2, 64(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1286
        uint16_t total_write_strides = l1_stream_info->total_strides;
    a118:	04265803          	lhu	a6, 66(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1283
        uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    a11c:	00d12c23          	sw	a3, 24(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1287
        uint32_t stride_offset_size_bytes = l1_stream_info->stride_offset_size_bytes;
    a120:	04462683          	lw	a3, 68(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1288
        uint32_t skip_col_bytes = l1_stream_info->skip_col_bytes;
    a124:	04862e83          	lw	t4, 72(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1287
        uint32_t stride_offset_size_bytes = l1_stream_info->stride_offset_size_bytes;
    a128:	00d12e23          	sw	a3, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1288
        uint32_t skip_col_bytes = l1_stream_info->skip_col_bytes;
    a12c:	03d12023          	sw	t4, 32(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1289
        uint32_t skip_col_tile_row_bytes = l1_stream_info->skip_col_tile_row_bytes;
    a130:	04c62e83          	lw	t4, 76(a2)
    a134:	03d12223          	sw	t4, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1290
        uint32_t skip_col_row_bytes = l1_stream_info->skip_col_row_bytes;
    a138:	05062e83          	lw	t4, 80(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1291
        uint32_t skip_zcol_bytes = l1_stream_info->skip_zcol_bytes;
    a13c:	05462b03          	lw	s6, 84(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1290
        uint32_t skip_col_row_bytes = l1_stream_info->skip_col_row_bytes;
    a140:	03d12423          	sw	t4, 40(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1292
        uint32_t skip_col_zrow_bytes = l1_stream_info->skip_col_zrow_bytes;
    a144:	05862e83          	lw	t4, 88(a2)
    a148:	03d12623          	sw	t4, 44(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1293
        uint32_t c_dim_size = l1_stream_info->c_dim_size;
    a14c:	05c65e83          	lhu	t4, 92(a2)
    a150:	03d11c23          	sh	t4, 56(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1294
        uint32_t r_dim_size = l1_stream_info->r_dim_size;
    a154:	05e65e83          	lhu	t4, 94(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1295
        uint32_t zc_dim_size = l1_stream_info->zc_dim_size;
    a158:	06065f03          	lhu	t5, 96(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1294
        uint32_t r_dim_size = l1_stream_info->r_dim_size;
    a15c:	03d11d23          	sh	t4, 58(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1296
        uint32_t zr_dim_size = l1_stream_info->zr_dim_size;
    a160:	06265e83          	lhu	t4, 98(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1297
        uint32_t stream_buf_addr_byte = l1_stream_info->buf_base_addr;
    a164:	01862683          	lw	a3, 24(a2)
    a168:	02d12823          	sw	a3, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1298
        uint32_t stream_buf_size_bytes = l1_stream_info->buf_full_size_bytes;
    a16c:	01462683          	lw	a3, 20(a2)
    a170:	02d12a23          	sw	a3, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1303
        curr_dram_output_stream_state_init->stream_buf_addr_byte = stream_buf_addr_byte;
    a174:	03012683          	lw	a3, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1299
        uint32_t output_noc = l1_dram_io_info->output_noc;
    a178:	0055c583          	lbu	a1, 5(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1303
        curr_dram_output_stream_state_init->stream_buf_addr_byte = stream_buf_addr_byte;
    a17c:	00d42a23          	sw	a3, 20(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1304
        curr_dram_output_stream_state_init->stream_buf_size_bytes = stream_buf_size_bytes;
    a180:	03412683          	lw	a3, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1301
        curr_dram_output_stream_state_init->stream_info = l1_stream_info;
    a184:	04c42e23          	sw	a2, 92(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1304
        curr_dram_output_stream_state_init->stream_buf_size_bytes = stream_buf_size_bytes;
    a188:	00d42823          	sw	a3, 16(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1310
        curr_dram_output_stream_state_init->skip_col_bytes = skip_col_bytes;
    a18c:	02012683          	lw	a3, 32(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1305
        curr_dram_output_stream_state_init->moves_raw_data = (flags & STREAM_MOVES_RAW_DATA) != 0;
    a190:	0067d613          	srli	a2, a5, 0x6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1310
        curr_dram_output_stream_state_init->skip_col_bytes = skip_col_bytes;
    a194:	02d42023          	sw	a3, 32(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1311
        curr_dram_output_stream_state_init->skip_col_tile_row_bytes = skip_col_tile_row_bytes;
    a198:	02412683          	lw	a3, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1305
        curr_dram_output_stream_state_init->moves_raw_data = (flags & STREAM_MOVES_RAW_DATA) != 0;
    a19c:	00167613          	andi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1311
        curr_dram_output_stream_state_init->skip_col_tile_row_bytes = skip_col_tile_row_bytes;
    a1a0:	02d42223          	sw	a3, 36(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1312
        curr_dram_output_stream_state_init->skip_col_row_bytes = skip_col_row_bytes;
    a1a4:	02812683          	lw	a3, 40(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1305
        curr_dram_output_stream_state_init->moves_raw_data = (flags & STREAM_MOVES_RAW_DATA) != 0;
    a1a8:	00c40123          	sb	a2, 2(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1312
        curr_dram_output_stream_state_init->skip_col_row_bytes = skip_col_row_bytes;
    a1ac:	02d42423          	sw	a3, 40(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1314
        curr_dram_output_stream_state_init->skip_col_zrow_bytes = skip_col_zrow_bytes;
    a1b0:	02c12683          	lw	a3, 44(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1306
        curr_dram_output_stream_state_init->epoch_id = epoch_id & 0x7FFF;
    a1b4:	011f9613          	slli	a2, t6, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1314
        curr_dram_output_stream_state_init->skip_col_zrow_bytes = skip_col_zrow_bytes;
    a1b8:	02d42823          	sw	a3, 48(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1315
        curr_dram_output_stream_state_init->c_dim_size = c_dim_size;
    a1bc:	03815683          	lhu	a3, 56(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1306
        curr_dram_output_stream_state_init->epoch_id = epoch_id & 0x7FFF;
    a1c0:	01165613          	srli	a2, a2, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1315
        curr_dram_output_stream_state_init->c_dim_size = c_dim_size;
    a1c4:	04d41223          	sh	a3, 68(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1316
        curr_dram_output_stream_state_init->r_dim_size = r_dim_size;
    a1c8:	03a15683          	lhu	a3, 58(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1306
        curr_dram_output_stream_state_init->epoch_id = epoch_id & 0x7FFF;
    a1cc:	00c41223          	sh	a2, 4(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1316
        curr_dram_output_stream_state_init->r_dim_size = r_dim_size;
    a1d0:	04d41423          	sh	a3, 72(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1307
        curr_dram_output_stream_state_init->write_stride = write_stride;
    a1d4:	00741e23          	sh	t2, 28(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1308
        curr_dram_output_stream_state_init->total_write_strides = total_write_strides;
    a1d8:	01041f23          	sh	a6, 30(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1313
        curr_dram_output_stream_state_init->skip_zcol_bytes = skip_zcol_bytes;
    a1dc:	03642623          	sw	s6, 44(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1317
        curr_dram_output_stream_state_init->zc_dim_size = zc_dim_size;
    a1e0:	05e41623          	sh	t5, 76(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1318
        curr_dram_output_stream_state_init->zr_dim_size = zr_dim_size;
    a1e4:	05d41823          	sh	t4, 80(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1320
        curr_dram_output_stream_state_init->c_dim_count = 0;
    a1e8:	04041323          	sh	zero, 70(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1321
        curr_dram_output_stream_state_init->r_dim_count = 0;
    a1ec:	04041523          	sh	zero, 74(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1322
        curr_dram_output_stream_state_init->zc_dim_count = 0;
    a1f0:	04041723          	sh	zero, 78(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1323
        curr_dram_output_stream_state_init->zr_dim_count = 0;
    a1f4:	04041923          	sh	zero, 82(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1325
        curr_dram_output_stream_state_init->in_flight_q_slots = 0;
    a1f8:	000400a3          	sb	zero, 1(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1326
        curr_dram_output_stream_state_init->tiles_to_clear = 0;
    a1fc:	00041323          	sh	zero, 6(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1327
        curr_dram_output_stream_state_init->in_flight_tiles = 0;
    a200:	00042423          	sw	zero, 8(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1328
        curr_dram_output_stream_state_init->stream_rd_ptr_byte = 0;
    a204:	00042623          	sw	zero, 12(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1331
        curr_dram_output_stream_state_init->q_slot_size_tiles = q_slot_size_tiles;
    a208:	00100613          	li	a2, 1
    a20c:	05c42a23          	sw	t3, 84(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1332
        curr_dram_output_stream_state_init->epoch_q_slots_remaining = epoch_q_slots_remaining;
    a210:	00642c23          	sw	t1, 24(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1334
        curr_dram_output_stream_state_init->stream_id = stream_id;
    a214:	00a40023          	sb	a0, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1335
        curr_dram_output_stream_state_init->dram_q_available = 0;
    a218:	000401a3          	sb	zero, 3(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1337
        curr_dram_output_stream_state_init->next_dram_q_issue = curr_dram_q_state;
    a21c:	05442c23          	sw	s4, 88(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1341
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a220:	01c12683          	lw	a3, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1356
          curr_dram_q_state->dram_ptr_incoming_q_slots = (q_slot_size_bytes >> 16) & 0xffff; // temp, changed when loading dram pointers
    a224:	0108de13          	srli	t3, a7, 0x10
    a228:	01066463          	bltu	a2, a6, a230 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x7c0>
    a22c:	00088693          	mv	a3, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1359
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (output_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a230:	0097d613          	srli	a2, a5, 0x9
    a234:	0027d793          	srli	a5, a5, 0x2
    a238:	00167613          	andi	a2, a2, 1
    a23c:	0087f793          	andi	a5, a5, 8
    a240:	00f667b3          	or	a5, a2, a5
    a244:	00159593          	slli	a1, a1, 0x1
    a248:	00b7e5b3          	or	a1, a5, a1
    a24c:	0ff5f593          	zext.b	a1, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1341
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a250:	00000313          	li	t1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1340
        dram_q_state_t tt_l1_ptr * prev_dram_q_state = curr_dram_q_state;
    a254:	000a0e93          	mv	t4, s4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1359
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (output_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a258:	000a0793          	mv	a5, s4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1346
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a25c:	02700f13          	li	t5, 39
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1341 (discriminator 2)
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a260:	01812603          	lw	a2, 24(sp)
    a264:	06c37463          	bgeu	t1, a2, a2cc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x85c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1343
          uint32_t dram_buf_size_q_slots = l1_dram_io_state->dram_buf_size_q_slots;
    a268:	04472e83          	lw	t4, 68(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1346
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a26c:	0009ab03          	lw	s6, 0(s3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1349
            next_dram_q_state = curr_dram_q_state + 1;
    a270:	02478613          	addi	a2, a5, 36
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1346
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a274:	01eb1463          	bne	s6, t5, a27c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x80c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1347
            next_dram_q_state = (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr;
    a278:	2782a603          	lw	a2, 632(t0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1352
          curr_dram_q_state->temp0 = write_stride;
    a27c:	007787a3          	sb	t2, 15(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1353
          curr_dram_q_state->dram_q_stream_id = stream_id;
    a280:	00a78723          	sb	a0, 14(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1359
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (output_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a284:	00b78223          	sb	a1, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1360
          curr_dram_q_state->l1_dram_incoming_ptr_index = 0;
    a288:	000782a3          	sb	zero, 5(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1357
          curr_dram_q_state->dram_ptr_issued_byte = total_write_strides > 1 ? stride_offset_size_bytes : q_slot_size_bytes; // temp, changed when loading dram pointers
    a28c:	00d7ac23          	sw	a3, 24(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1358
          curr_dram_q_state->dram_num_partial_q_slot_issued_tiles = epoch_id; // temp, changed when loading dram pointers
    a290:	01f7a823          	sw	t6, 16(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1361
          curr_dram_q_state->dram_buf_size_q_slots = dram_buf_size_q_slots;
    a294:	01d79623          	sh	t4, 12(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1370
          num_active_dram_queues++;
    a298:	0009ae83          	lw	t4, 0(s3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1363
          curr_dram_q_state->l1_dram_ptrs = (volatile uint32_t tt_l1_ptr *)l1_dram_io_state;
    a29c:	00e7a023          	sw	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1354
          curr_dram_q_state->dram_ptr_issued_q_slots = q_slot_size_bytes & 0xffff; // temp, changed when loading dram pointers
    a2a0:	01179323          	sh	a7, 6(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1355
          curr_dram_q_state->dram_ptr_flushed_q_slots = total_write_strides; // temp, changed when loading dram pointers
    a2a4:	01079423          	sh	a6, 8(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1356
          curr_dram_q_state->dram_ptr_incoming_q_slots = (q_slot_size_bytes >> 16) & 0xffff; // temp, changed when loading dram pointers
    a2a8:	01c79523          	sh	t3, 10(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1362
          curr_dram_q_state->next = next_dram_q_state;
    a2ac:	02c7a023          	sw	a2, 32(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1370
          num_active_dram_queues++;
    a2b0:	001e8e93          	addi	t4, t4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1369
          l1_dram_io_state = l1_dram_io_state->next;
    a2b4:	05c72703          	lw	a4, 92(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1341
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a2b8:	00130313          	addi	t1, t1, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1370
          num_active_dram_queues++;
    a2bc:	01d9a023          	sw	t4, 0(s3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1341
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a2c0:	00078e93          	mv	t4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1368
          curr_dram_q_state = next_dram_q_state;
    a2c4:	00060793          	mv	a5, a2
    a2c8:	f99ff06f          	j	a260 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x7f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1373
        num_dram_output_streams++;
    a2cc:	00812703          	lw	a4, 8(sp)
    a2d0:	00812683          	lw	a3, 8(sp)
    a2d4:	00072703          	lw	a4, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1372
        prev_dram_q_state->next = start_dram_q_state;        
    a2d8:	034ea023          	sw	s4, 32(t4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1373
        num_dram_output_streams++;
    a2dc:	00170713          	addi	a4, a4, 1
    a2e0:	00e6a023          	sw	a4, 0(a3) # a6000000 <TENSIX_MAILBOX_BASE+0xa6140000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1374
        curr_dram_output_stream_state_init++;
    a2e4:	06040413          	addi	s0, s0, 96
    a2e8:	00078a13          	mv	s4, a5
    a2ec:	dd1ff06f          	j	a0bc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x64c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1378
    else if ((flags & STREAM_INPUT_PARK) != 0) {
    a2f0:	0017f713          	andi	a4, a5, 1
    a2f4:	dc0704e3          	beqz	a4, a0bc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x64c>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    a2f8:	01950733          	add	a4, a0, s9
    a2fc:	00c71713          	slli	a4, a4, 0xc
    a300:	08c70613          	addi	a2, a4, 140
    a304:	00062683          	lw	a3, 0(a2)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1381
      while (!stream_phase_is_active(stream_id));
    a308:	0046f693          	andi	a3, a3, 4
    a30c:	fe068ce3          	beqz	a3, a304 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x894>
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    a310:	01c72683          	lw	a3, 28(a4)
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    a314:	09072b03          	lw	s6, 144(a4)
    a318:	00001637          	lui	a2, 0x1
    a31c:	fff60613          	addi	a2, a2, -1 # fff <__firmware_stack_size+0xc2f>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1387
      if ((flags & STREAM_INTERMEDIATE) != 0 || (flags & STREAM_MOVES_RAW_DATA) != 0) {
    a320:	0507f793          	andi	a5, a5, 80
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
    a324:	00cb5b13          	srli	s6, s6, 0xc
    a328:	00cb7b33          	and	s6, s6, a2
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1387
    a32c:	02078a63          	beqz	a5, a360 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x8f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1388
        volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    a330:	ffbf7097          	auipc	ra, 0xffbf7
    a334:	93c080e7          	jalr	-1732(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    a338:	ffbf7097          	auipc	ra, 0xffbf7
    a33c:	8f8080e7          	jalr	-1800(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    a340:	01950533          	add	a0, a0, s9
    a344:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1389
        tiles_received_ptr[0] += stream_buf_size_tiles; // ok to be like this because its a park buffer and wont wrap
    a348:	01052783          	lw	a5, 16(a0)
    a34c:	01678b33          	add	s6, a5, s6
    a350:	000237b7          	lui	a5, 0x23
    a354:	01652823          	sw	s6, 16(a0)
    a358:	08078293          	addi	t0, a5, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
    a35c:	d61ff06f          	j	a0bc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x64c>
stream_push_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:280
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX);
    a360:	00472583          	lw	a1, 4(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:281
  uint32_t tiles_left_in_phase = rmw & 0xffff;
    a364:	03c12783          	lw	a5, 60(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:285
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    a368:	00c69693          	slli	a3, a3, 0xc
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:281
  uint32_t tiles_left_in_phase = rmw & 0xffff;
    a36c:	00f5f633          	and	a2, a1, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:282
  rmw = rmw & ~0xffff;
    a370:	ffff07b7          	lui	a5, 0xffff0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:283
  tiles_left_in_phase -= num_tiles;
    a374:	41660633          	sub	a2, a2, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:282
  rmw = rmw & ~0xffff;
    a378:	00f5f7b3          	and	a5, a1, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:284
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | tiles_left_in_phase)); // used as scratch reg for source endpoint streams
    a37c:	00c7e7b3          	or	a5, a5, a2
    a380:	00f72223          	sw	a5, 4(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:285
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    a384:	0166eb33          	or	s6, a3, s6
    a388:	07672c23          	sw	s6, 120(a4)
    a38c:	d31ff06f          	j	a0bc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x64c>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1397
  num_dram_prefetch_streams = 0;
    a390:	00012783          	lw	a5, 0(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1408
        dram_prefetch_epoch_stream_info[num_dram_prefetch_streams] = RISC_EPOCH_INFO_PTR->active_streams[i];
    a394:	000235b7          	lui	a1, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1397
  num_dram_prefetch_streams = 0;
    a398:	0007a023          	sw	zero, 0(a5) # ffff0000 <TENSIX_MAILBOX_BASE+0x130000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1401
    for (uint32_t i = 0;
    a39c:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1405
      if ((((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) && ((flags & STREAM_IS_FORK) == 0)) ||
    a3a0:	00400513          	li	a0, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1408
        dram_prefetch_epoch_stream_info[num_dram_prefetch_streams] = RISC_EPOCH_INFO_PTR->active_streams[i];
    a3a4:	08058593          	addi	a1, a1, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1405
      if ((((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) && ((flags & STREAM_IS_FORK) == 0)) ||
    a3a8:	00800813          	li	a6, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1402
        i < num_active_streams;
    a3ac:	000aa783          	lw	a5, 0(s5)
    a3b0:	06f6f863          	bgeu	a3, a5, a420 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x9b0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1404
      uint32_t flags = curr_active_stream_info->flags;
    a3b4:	002d5783          	lhu	a5, 2(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1405
      if ((((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) && ((flags & STREAM_IS_FORK) == 0)) ||
    a3b8:	1267f713          	andi	a4, a5, 294
    a3bc:	00a70663          	beq	a4, a0, a3c8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x958>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1405 (discriminator 1)
    a3c0:	02a7f793          	andi	a5, a5, 42
    a3c4:	05079863          	bne	a5, a6, a414 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x9a4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1407
        dram_prefetch_has_data[num_dram_prefetch_streams] = false;
    a3c8:	00012783          	lw	a5, 0(sp)
    a3cc:	06010713          	addi	a4, sp, 96
    a3d0:	0007a783          	lw	a5, 0(a5)
    a3d4:	00f70733          	add	a4, a4, a5
    a3d8:	fe070423          	sb	zero, -24(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1408
        dram_prefetch_epoch_stream_info[num_dram_prefetch_streams] = RISC_EPOCH_INFO_PTR->active_streams[i];
    a3dc:	04468713          	addi	a4, a3, 68
    a3e0:	00271713          	slli	a4, a4, 0x2
    a3e4:	00e58733          	add	a4, a1, a4
    a3e8:	00472883          	lw	a7, 4(a4)
    a3ec:	00c12703          	lw	a4, 12(sp)
    a3f0:	00279613          	slli	a2, a5, 0x2
    a3f4:	00c70733          	add	a4, a4, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1410
        num_dram_prefetch_streams++;
    a3f8:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1408
        dram_prefetch_epoch_stream_info[num_dram_prefetch_streams] = RISC_EPOCH_INFO_PTR->active_streams[i];
    a3fc:	01172023          	sw	a7, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1409
        dram_prefetch_active_stream_info[num_dram_prefetch_streams] = curr_active_stream_info;
    a400:	01412703          	lw	a4, 20(sp)
    a404:	00c70633          	add	a2, a4, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1410
        num_dram_prefetch_streams++;
    a408:	00012703          	lw	a4, 0(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1409
        dram_prefetch_active_stream_info[num_dram_prefetch_streams] = curr_active_stream_info;
    a40c:	01a62023          	sw	s10, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1410
        num_dram_prefetch_streams++;
    a410:	00f72023          	sw	a5, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1401
    for (uint32_t i = 0;
    a414:	00168693          	addi	a3, a3, 1
    a418:	004d0d13          	addi	s10, s10, 4
    a41c:	f91ff06f          	j	a3ac <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x93c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1440
              l1_ptrs->dram_streaming_tag = DRAM_STREAMING_SYNC_NUMBER;
    a420:	bad0fa37          	lui	s4, 0xbad0f
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    a424:	ffb214b7          	lui	s1, 0xffb21
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1417
    bool reads_flushed = true;
    a428:	00100413          	li	s0, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1440
              l1_ptrs->dram_streaming_tag = DRAM_STREAMING_SYNC_NUMBER;
    a42c:	00da0a13          	addi	s4, s4, 13 # bad0f00d <TENSIX_MAILBOX_BASE+0xbae4f00d>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    a430:	c2848493          	addi	s1, s1, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a434:	00100b13          	li	s6, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1421 (discriminator 6)
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    a438:	01012b83          	lw	s7, 16(sp)
    a43c:	00000c13          	li	s8, 0
    a440:	02700c93          	li	s9, 39
    a444:	00023d37          	lui	s10, 0x23
    a448:	0009a783          	lw	a5, 0(s3)
    a44c:	0cfc7663          	bgeu	s8, a5, a518 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xaa8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1423
        if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_PTRS_LOADED_FLAG) == 0) {
    a450:	004bc783          	lbu	a5, 4(s7)
    a454:	0107f713          	andi	a4, a5, 16
    a458:	04071663          	bnez	a4, a4a4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a45c:	005bc703          	lbu	a4, 5(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1427
          volatile uint32_t tt_l1_ptr * l1_ptr_addr = curr_dram_q_state->l1_dram_ptrs;
    a460:	000ba683          	lw	a3, 0(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a464:	04070863          	beqz	a4, a4b4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa44>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1430 (discriminator 1)
    a468:	0087f713          	andi	a4, a5, 8
    a46c:	04070463          	beqz	a4, a4b4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa44>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1431
          bool is_dram_padding = l1_ptrs->dram_padding;
    a470:	03e6c703          	lbu	a4, 62(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a474:	00100713          	li	a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1433
            uint32_t dram_ptr_issued_q_slots = l1_ptrs->rd_dram_rdptr;
    a478:	0006d603          	lhu	a2, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1434
            uint32_t dram_ptr_incoming_q_slots = l1_ptrs->rd_dram_wrptr;
    a47c:	0046d583          	lhu	a1, 4(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1435
            curr_dram_q_state->dram_ptr_issued_q_slots = dram_ptr_issued_q_slots;
    a480:	00cb9323          	sh	a2, 6(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1437
            curr_dram_q_state->dram_ptr_flushed_q_slots = dram_ptr_issued_q_slots;
    a484:	00cb9423          	sh	a2, 8(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1438
            l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
    a488:	0006d603          	lhu	a2, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1436
            curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
    a48c:	00bb9523          	sh	a1, 10(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1438
            l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
    a490:	02c69023          	sh	a2, 32(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1439
            if (is_dram_streaming_read)
    a494:	00070463          	beqz	a4, a49c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa2c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1440
              l1_ptrs->dram_streaming_tag = DRAM_STREAMING_SYNC_NUMBER;
    a498:	0146ae23          	sw	s4, 28(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1441
            curr_dram_q_state->dram_q_state_flags |= DRAM_Q_PTRS_LOADED_FLAG;
    a49c:	0107e793          	ori	a5, a5, 16
    a4a0:	00fb8223          	sb	a5, 4(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1421
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    a4a4:	079c1463          	bne	s8, s9, a50c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1421 (discriminator 2)
    a4a8:	2f8d2b83          	lw	s7, 760(s10) # 232f8 <substitutes.cpp.cd30c172+0x49e2>
    a4ac:	02800c13          	li	s8, 40
    a4b0:	f99ff06f          	j	a448 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x9d8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1431
          bool is_dram_padding = l1_ptrs->dram_padding;
    a4b4:	03e6c703          	lbu	a4, 62(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1432
          if (is_dram_streaming_read || is_dram_padding) {
    a4b8:	00070663          	beqz	a4, a4c4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa54>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a4bc:	00000713          	li	a4, 0
    a4c0:	fb9ff06f          	j	a478 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa08>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1442
          } else if (reads_flushed) {
    a4c4:	fe0400e3          	beqz	s0, a4a4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1443
            uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    a4c8:	0017d513          	srli	a0, a5, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1445
            if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    a4cc:	0087f793          	andi	a5, a5, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1443
            uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    a4d0:	00357513          	andi	a0, a0, 3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1445
            if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    a4d4:	02078663          	beqz	a5, a500 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa90>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    a4d8:	0306a583          	lw	a1, 48(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    a4dc:	0346a603          	lw	a2, 52(a3)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    a4e0:	01051793          	slli	a5, a0, 0x10
    a4e4:	009787b3          	add	a5, a5, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    a4e8:	0007a703          	lw	a4, 0(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1454
            while (!ncrisc_noc_fast_read_ok_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
    a4ec:	fe071ee3          	bnez	a4, a4e8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa78>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1455
            ncrisc_noc_fast_read_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_ptr_addr, (uint32_t)l1_ptr_addr, DRAM_HEADER_SIZE, NCRISC_HEADER_RD_TRID);
    a4f0:	00300793          	li	a5, 3
    a4f4:	02000713          	li	a4, 32
    a4f8:	cd8ff0ef          	jal	ra, 99d0 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
    a4fc:	fa9ff06f          	j	a4a4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa34>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    a500:	0486a583          	lw	a1, 72(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    a504:	04c6a603          	lw	a2, 76(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:32
    return v.v;
    a508:	fd9ff06f          	j	a4e0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa70>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1421 (discriminator 3)
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    a50c:	001c0c13          	addi	s8, s8, 1
    a510:	024b8b93          	addi	s7, s7, 36
    a514:	f35ff06f          	j	a448 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x9d8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1460
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a518:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1460 (discriminator 1)
    a51c:	00012783          	lw	a5, 0(sp)
    a520:	0007ae83          	lw	t4, 0(a5)
    a524:	0fdc6e63          	bltu	s8, t4, a620 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xbb0>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    a528:	ffb207b7          	lui	a5, 0xffb20
    a52c:	24c7a783          	lw	a5, 588(a5) # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1490
        reads_flushed = reads_flushed && ncrisc_noc_reads_flushed_l1(n, NCRISC_HEADER_RD_TRID);
    a530:	00000413          	li	s0, 0
    a534:	00079863          	bnez	a5, a544 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xad4>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
    a538:	ffb307b7          	lui	a5, 0xffb30
    a53c:	24c7a403          	lw	s0, 588(a5) # ffb3024c <TENSIX_MAILBOX_BASE+0xffc7024c>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1490
    a540:	00143413          	seqz	s0, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1489
      for (uint32_t n = 0; n < NUM_NOCS; n++) {
    a544:	04810713          	addi	a4, sp, 72
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1495
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a548:	00000313          	li	t1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1493
      all_dram_prefetch_have_data = true;
    a54c:	00100b93          	li	s7, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1495 (discriminator 1)
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a550:	166e8a63          	beq	t4, t1, a6c4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc54>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1496
        curr_active_stream_info = dram_prefetch_active_stream_info[i];
    a554:	01412683          	lw	a3, 20(sp)
    a558:	00231793          	slli	a5, t1, 0x2
    a55c:	00f686b3          	add	a3, a3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1498
        uint32_t flags = curr_active_stream_info->flags;
    a560:	0006a683          	lw	a3, 0(a3)
    a564:	0026d603          	lhu	a2, 2(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1499
        if ((flags & STREAM_DRAM_INPUT) != 0 || (flags & STREAM_DRAM_OUTPUT) != 0) {
    a568:	00c67693          	andi	a3, a2, 12
    a56c:	0a068463          	beqz	a3, a614 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xba4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1500
          if (!dram_prefetch_has_data[i]) {
    a570:	00074683          	lbu	a3, 0(a4)
    a574:	0a069063          	bnez	a3, a614 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xba4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1505
            epoch_stream_info_t tt_l1_ptr * l1_stream_info = dram_prefetch_epoch_stream_info[i];
    a578:	00c12683          	lw	a3, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1518
                   !dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, l1_dram_io_state->rd_dram_wrptr)) &&
    a57c:	00467393          	andi	t2, a2, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1505
            epoch_stream_info_t tt_l1_ptr * l1_stream_info = dram_prefetch_epoch_stream_info[i];
    a580:	00f687b3          	add	a5, a3, a5
    a584:	0007ae03          	lw	t3, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1522
              } else if ((flags & STREAM_DRAM_OUTPUT) != 0 &&
    a588:	00867c13          	andi	s8, a2, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1509
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a58c:	00000513          	li	a0, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1515
                  (is_dram_padding ||
    a590:	20067613          	andi	a2, a2, 512
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1508
            volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a594:	088e2783          	lw	a5, 136(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1507
            uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    a598:	086e5f03          	lhu	t5, 134(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1508
            volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a59c:	01c7a783          	lw	a5, 28(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1524
                if (q == num_dram_io_qs-1)
    a5a0:	ffff0293          	addi	t0, t5, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1509 (discriminator 1)
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a5a4:	07e57863          	bgeu	a0, t5, a614 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xba4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1511
              uint16_t rd_epoch_id_tag = l1_dram_io_state->rd_epoch_id_tag;
    a5a8:	00a7df83          	lhu	t6, 10(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1512
              bool is_dram_padding = l1_dram_io_state->dram_padding;
    a5ac:	03e7c683          	lbu	a3, 62(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1518
                   !dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, l1_dram_io_state->rd_dram_wrptr)) &&
    a5b0:	04038e63          	beqz	t2, a60c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1513
              if ((flags & STREAM_DRAM_INPUT) != 0 &&
    a5b4:	04040c63          	beqz	s0, a60c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1514 (discriminator 1)
                  (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST])))) &&
    a5b8:	0e069c63          	bnez	a3, a6b0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc40>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1515
                  (is_dram_padding ||
    a5bc:	04061263          	bnez	a2, a600 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb90>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1517
                   (l1_dram_io_state->rd_flags & DRAM_Q_HEADER_ZERO_FLAG) != 0 ||
    a5c0:	00e7d683          	lhu	a3, 14(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1516
                   ((flags & STREAM_DRAM_RAM) != 0) || 
    a5c4:	0016f693          	andi	a3, a3, 1
    a5c8:	02069c63          	bnez	a3, a600 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb90>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1518
                   !dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, l1_dram_io_state->rd_dram_wrptr)) &&
    a5cc:	0087d803          	lhu	a6, 8(a5)
    a5d0:	0007d583          	lhu	a1, 0(a5)
    a5d4:	0047d683          	lhu	a3, 4(a5)
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:75
  if (rd_ptr == wr_ptr)
    a5d8:	02d58a63          	beq	a1, a3, a60c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:78
  uint32_t case1 = rd_ptr < wr_ptr && (local_rd_ptr < rd_ptr || local_rd_ptr >= wr_ptr);
    a5dc:	62d5f663          	bgeu	a1, a3, ac08 <ncrisc.cc.80732e7e+0x1e>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:78
    a5e0:	00040893          	mv	a7, s0
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:78
    a5e4:	00b86663          	bltu	a6, a1, a5f0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb80>
    a5e8:	00d838b3          	sltu	a7, a6, a3
    a5ec:	0018c893          	xori	a7, a7, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
    a5f0:	00b6f663          	bgeu	a3, a1, a5fc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb8c>
    a5f4:	00d86463          	bltu	a6, a3, a5fc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb8c>
    a5f8:	00b86a63          	bltu	a6, a1, a60c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:81
  return case1 || case2;
    a5fc:	00089863          	bnez	a7, a60c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb9c>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1519
                  (is_dram_padding || rd_epoch_id_tag == DRAM_QUEUE_NO_EPOCH_CHECK || rd_epoch_id_tag == l1_stream_info->producer_epoch_id)) {
    a600:	0a0f8863          	beqz	t6, a6b0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc40>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1519 (discriminator 1)
    a604:	002e5683          	lhu	a3, 2(t3)
    a608:	0bf68463          	beq	a3, t6, a6b0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc40>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1522 (discriminator 1)
              } else if ((flags & STREAM_DRAM_OUTPUT) != 0 &&
    a60c:	0a0c1063          	bnez	s8, a6ac <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc3c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1527
                all_dram_prefetch_have_data = false;
    a610:	00000b93          	li	s7, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1495 (discriminator 2)
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a614:	00130313          	addi	t1, t1, 1
    a618:	00170713          	addi	a4, a4, 1
    a61c:	f35ff06f          	j	a550 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xae0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1463
        if (!dram_prefetch_has_data[i]) {
    a620:	04810793          	addi	a5, sp, 72
    a624:	018787b3          	add	a5, a5, s8
    a628:	0007c783          	lbu	a5, 0(a5)
    a62c:	06079c63          	bnez	a5, a6a4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1468
          if (reads_flushed) {
    a630:	06040a63          	beqz	s0, a6a4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1469
            epoch_stream_info_t tt_l1_ptr * l1_stream_info = dram_prefetch_epoch_stream_info[i];
    a634:	00c12703          	lw	a4, 12(sp)
    a638:	002c1793          	slli	a5, s8, 0x2
    a63c:	00f707b3          	add	a5, a4, a5
    a640:	0007a703          	lw	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1474
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a644:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1470
            epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    a648:	08872783          	lw	a5, 136(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1471
            uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    a64c:	08675803          	lhu	a6, 134(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1473
            uint32_t input_noc = l1_dram_io_info->input_noc;
    a650:	0047cd83          	lbu	s11, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1472
            volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a654:	01c7ab83          	lw	s7, 28(a5)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    a658:	010d9d13          	slli	s10, s11, 0x10
    a65c:	009d0d33          	add	s10, s10, s1
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1474 (discriminator 1)
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a660:	050cf263          	bgeu	s9, a6, a6a4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1475
              if (!l1_dram_io_state->dram_padding) {
    a664:	03ebc783          	lbu	a5, 62(s7)
    a668:	02079863          	bnez	a5, a698 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc28>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    a66c:	048ba583          	lw	a1, 72(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    a670:	04cba603          	lw	a2, 76(s7)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    a674:	000d2783          	lw	a5, 0(s10)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1479
                while (!ncrisc_noc_fast_read_ok_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
    a678:	fe079ee3          	bnez	a5, a674 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc04>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1480
                ncrisc_noc_fast_read_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr, (uint32_t)l1_ptr_addr, DRAM_HEADER_SIZE, NCRISC_HEADER_RD_TRID);
    a67c:	00300793          	li	a5, 3
    a680:	02000713          	li	a4, 32
    a684:	000b8693          	mv	a3, s7
    a688:	000d8513          	mv	a0, s11
    a68c:	01012c23          	sw	a6, 24(sp)
    a690:	b40ff0ef          	jal	ra, 99d0 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
    a694:	01812803          	lw	a6, 24(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1482 (discriminator 2)
              l1_dram_io_state = l1_dram_io_state->next;
    a698:	05cbab83          	lw	s7, 92(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1474 (discriminator 2)
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a69c:	001c8c93          	addi	s9, s9, 1
    a6a0:	fc1ff06f          	j	a660 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xbf0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1460
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a6a4:	001c0c13          	addi	s8, s8, 1
    a6a8:	e75ff06f          	j	a51c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xaac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1522 (discriminator 1)
              } else if ((flags & STREAM_DRAM_OUTPUT) != 0 &&
    a6ac:	f60402e3          	beqz	s0, a610 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xba0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1524 (discriminator 3)
                if (q == num_dram_io_qs-1)
    a6b0:	00a29463          	bne	t0, a0, a6b8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc48>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1525
                  dram_prefetch_has_data[i] = true;
    a6b4:	01670023          	sb	s6, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1530 (discriminator 2)
              l1_dram_io_state = l1_dram_io_state->next;
    a6b8:	05c7a783          	lw	a5, 92(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1509 (discriminator 2)
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a6bc:	00150513          	addi	a0, a0, 1
    a6c0:	ee5ff06f          	j	a5a4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1612
            ncrisc_noc_fast_write_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF, l1_mem::address_map::ZEROS_BASE, dram_ptr_addr+DRAM_BUF_STREAMING_TAG_OFFSET, 4,
    a6c4:	00002db7          	lui	s11, 0x2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1538
      curr_dram_q_state = dram_q_state;
    a6c8:	01012c03          	lw	s8, 16(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1539
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    a6cc:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1536
      all_dram_io_ptrs_loaded = true;
    a6d0:	00100d13          	li	s10, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1612
            ncrisc_noc_fast_write_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF, l1_mem::address_map::ZEROS_BASE, dram_ptr_addr+DRAM_BUF_STREAMING_TAG_OFFSET, 4,
    a6d4:	100d8d93          	addi	s11, s11, 256 # 2100 <__trisc1_size+0x100>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1539 (discriminator 6)
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    a6d8:	0009a783          	lw	a5, 0(s3)
    a6dc:	10fcee63          	bltu	s9, a5, a7f8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xd88>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1418
    while (!all_dram_prefetch_have_data || !all_dram_io_ptrs_loaded) {
    a6e0:	d40b8ce3          	beqz	s7, a438 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x9c8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1418 (discriminator 1)
    a6e4:	d40d0ae3          	beqz	s10, a438 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x9c8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1700
            dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    a6e8:	c00004b7          	lui	s1, 0xc0000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1652
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a6ec:	00000413          	li	s0, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1700
            dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    a6f0:	fff48493          	addi	s1, s1, -1 # bfffffff <TENSIX_MAILBOX_BASE+0xc013ffff>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1699
            bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    a6f4:	40000b37          	lui	s6, 0x40000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1670
        uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_buf_addr);
    a6f8:	84018993          	addi	s3, gp, -1984 # ffb00040 <my_y>
    a6fc:	84418a13          	addi	s4, gp, -1980 # ffb00044 <my_x>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1652 (discriminator 1)
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a700:	00012783          	lw	a5, 0(sp)
    a704:	0007a783          	lw	a5, 0(a5)
    a708:	3cf47663          	bgeu	s0, a5, aad4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1064>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1653
    curr_active_stream_info = dram_prefetch_active_stream_info[i];
    a70c:	01412703          	lw	a4, 20(sp)
    a710:	00241793          	slli	a5, s0, 0x2
    a714:	00f70733          	add	a4, a4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1655
    uint32_t flags = curr_active_stream_info->flags;
    a718:	00072703          	lw	a4, 0(a4)
    a71c:	00275683          	lhu	a3, 2(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1657
    if ((flags & STREAM_DRAM_INPUT) != 0) {
    a720:	0046f713          	andi	a4, a3, 4
    a724:	36070c63          	beqz	a4, aa9c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x102c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1662
      epoch_stream_info_t tt_l1_ptr * l1_stream_info = dram_prefetch_epoch_stream_info[i];
    a728:	00c12703          	lw	a4, 12(sp)
    a72c:	00f707b3          	add	a5, a4, a5
    a730:	0007ad83          	lw	s11, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1663
      epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    a734:	088da503          	lw	a0, 136(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1666
      uint32_t stream_buf_size_bytes = l1_stream_info->buf_full_size_bytes;
    a738:	014dac83          	lw	s9, 20(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1667
      uint32_t stream_buf_addr = l1_stream_info->buf_base_addr;
    a73c:	018dab83          	lw	s7, 24(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1664
      volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a740:	01c52783          	lw	a5, 28(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1665
      uint32_t input_noc = l1_dram_io_info->input_noc;
    a744:	00454c03          	lbu	s8, 4(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1669
      if ((l1_dram_io_state->rd_flags & DRAM_Q_HEADER_ZERO_FLAG) != 0) {
    a748:	00e7d703          	lhu	a4, 14(a5)
    a74c:	00177713          	andi	a4, a4, 1
    a750:	20070a63          	beqz	a4, a964 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xef4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1670
        uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_buf_addr);
    a754:	013c07b3          	add	a5, s8, s3
    a758:	0007cd03          	lbu	s10, 0(a5)
    a75c:	014c07b3          	add	a5, s8, s4
    a760:	0007c683          	lbu	a3, 0(a5)
    a764:	00ad1d13          	slli	s10, s10, 0xa
    a768:	00469693          	slli	a3, a3, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1671
        replicate_l1(input_noc, l1_mem::address_map::ZEROS_BASE, replicate_dest_addr, ZERO_GRAD_CHUNK_SIZE_BYTES, stream_buf_size_bytes >> LOG_ZERO_GRAD_CHUNK_SIZE_BYTES, NCRISC_WR_LOCAL_TRID);
    a76c:	00002837          	lui	a6, 0x2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1670
        uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_buf_addr);
    a770:	00dd6d33          	or	s10, s10, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1671
        replicate_l1(input_noc, l1_mem::address_map::ZEROS_BASE, replicate_dest_addr, ZERO_GRAD_CHUNK_SIZE_BYTES, stream_buf_size_bytes >> LOG_ZERO_GRAD_CHUNK_SIZE_BYTES, NCRISC_WR_LOCAL_TRID);
    a774:	20000713          	li	a4, 512
    a778:	000d0693          	mv	a3, s10
    a77c:	10080593          	addi	a1, a6, 256 # 2100 <__trisc1_size+0x100>
    a780:	009cd793          	srli	a5, s9, 0x9
    a784:	000b8613          	mv	a2, s7
    a788:	000c0513          	mv	a0, s8
    a78c:	de9fe0ef          	jal	ra, 9574 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1673
        uint32_t bytes_left = stream_buf_size_bytes - last_offset;
    a790:	1ffcf713          	andi	a4, s9, 511
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1672
        uint32_t last_offset = ((stream_buf_size_bytes >> LOG_ZERO_GRAD_CHUNK_SIZE_BYTES) << LOG_ZERO_GRAD_CHUNK_SIZE_BYTES);
    a794:	e00cf693          	andi	a3, s9, -512
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1674
        if (bytes_left > 0) {
    a798:	00002837          	lui	a6, 0x2
    a79c:	02070063          	beqz	a4, a7bc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xd4c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1675
          replicate_l1(input_noc, l1_mem::address_map::ZEROS_BASE, replicate_dest_addr + last_offset, bytes_left, 1, NCRISC_WR_LOCAL_TRID);
    a7a0:	01768633          	add	a2, a3, s7
    a7a4:	00d636b3          	sltu	a3, a2, a3
    a7a8:	00100793          	li	a5, 1
    a7ac:	01a686b3          	add	a3, a3, s10
    a7b0:	10080593          	addi	a1, a6, 256 # 2100 <__trisc1_size+0x100>
    a7b4:	000c0513          	mv	a0, s8
    a7b8:	dbdfe0ef          	jal	ra, 9574 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1677
        uint32_t stream_msg_info_buf_ptr = (l1_stream_info->msg_info_buf_start)*MEM_WORD_WIDTH;
    a7bc:	020da783          	lw	a5, 32(s11)
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    a7c0:	ffb20537          	lui	a0, 0xffb20
    a7c4:	010c1c13          	slli	s8, s8, 0x10
    a7c8:	24450513          	addi	a0, a0, 580 # ffb20244 <TENSIX_MAILBOX_BASE+0xffc60244>
    a7cc:	00ac0c33          	add	s8, s8, a0
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1677
    a7d0:	00479793          	slli	a5, a5, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1678
        uint32_t tile_size_words = *(volatile uint32_t tt_l1_ptr *)(stream_msg_info_buf_ptr);
    a7d4:	0007a783          	lw	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1679
        uint32_t tile_size_bytes = tile_size_words*MEM_WORD_WIDTH;
    a7d8:	00479713          	slli	a4, a5, 0x4
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    a7dc:	000c2683          	lw	a3, 0(s8)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1680
        while (!ncrisc_noc_nonposted_writes_flushed_l1(input_noc, NCRISC_WR_LOCAL_TRID));
    a7e0:	fe069ee3          	bnez	a3, a7dc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xd6c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1681
        for (uint32_t tile_header_ptr = stream_buf_addr; tile_header_ptr < stream_buf_addr + stream_buf_size_bytes; tile_header_ptr += tile_size_bytes) {
    a7e4:	017c8cb3          	add	s9, s9, s7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1681 (discriminator 3)
    a7e8:	2b9bfa63          	bgeu	s7, s9, aa9c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x102c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1682 (discriminator 2)
          *((uint32_t *)(tile_header_ptr)) = tile_size_words;
    a7ec:	00fba023          	sw	a5, 0(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1681 (discriminator 2)
        for (uint32_t tile_header_ptr = stream_buf_addr; tile_header_ptr < stream_buf_addr + stream_buf_size_bytes; tile_header_ptr += tile_size_bytes) {
    a7f0:	00eb8bb3          	add	s7, s7, a4
    a7f4:	ff5ff06f          	j	a7e8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xd78>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1541
        if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_PTRS_LOADED_FLAG) == 0) {
    a7f8:	004c4503          	lbu	a0, 4(s8)
    a7fc:	01057793          	andi	a5, a0, 16
    a800:	14079063          	bnez	a5, a940 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xed0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1548
          if (!(reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
    a804:	02040863          	beqz	s0, a834 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xdc4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1554 (discriminator 4)
          bool is_dram_streaming_write = !curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a808:	005c4703          	lbu	a4, 5(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1545 (discriminator 4)
          volatile uint32_t tt_l1_ptr * l1_ptr_addr = curr_dram_q_state->l1_dram_ptrs;
    a80c:	000c2783          	lw	a5, 0(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1554 (discriminator 4)
          bool is_dram_streaming_write = !curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a810:	02071663          	bnez	a4, a83c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xdcc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1554 (discriminator 1)
    a814:	00857693          	andi	a3, a0, 8
    a818:	02068263          	beqz	a3, a83c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xdcc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1556
            uint32_t dest_epoch_id = l1_ptrs->dram_streaming_epoch_id;
    a81c:	0187a603          	lw	a2, 24(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1557
            bool tag_match = l1_ptrs->dram_streaming_tag == DRAM_STREAMING_SYNC_NUMBER;
    a820:	01c7a683          	lw	a3, 28(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1559
            dram_streaming_not_ready = !tag_match || current_epoch_id != dest_epoch_id;
    a824:	01469863          	bne	a3, s4, a834 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xdc4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1559 (discriminator 2)
    a828:	010c2683          	lw	a3, 16(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1554 (discriminator 2)
          bool is_dram_streaming_write = !curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a82c:	00040813          	mv	a6, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1559 (discriminator 2)
            dram_streaming_not_ready = !tag_match || current_epoch_id != dest_epoch_id;
    a830:	00d60863          	beq	a2, a3, a840 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xdd0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1549
            all_dram_io_ptrs_loaded = false;
    a834:	00000d13          	li	s10, 0
    a838:	1080006f          	j	a940 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xed0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1554
          bool is_dram_streaming_write = !curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a83c:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1562 (discriminator 2)
          if (dram_streaming_not_ready || l1_ptrs->rd_stride > curr_dram_q_state->temp0) {
    a840:	00c7d683          	lhu	a3, 12(a5)
    a844:	00fc4603          	lbu	a2, 15(s8)
    a848:	fed666e3          	bltu	a2, a3, a834 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xdc4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1571
          if (l1_dram_incoming_ptr_index) { // Read
    a84c:	06070463          	beqz	a4, a8b4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xe44>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1572
            if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_RAM) != 0) {
    a850:	00157713          	andi	a4, a0, 1
    a854:	04070c63          	beqz	a4, a8ac <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xe3c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1573
              dram_ptr_issued_q_slots = l1_ptrs->rd_dram_rdptr;
    a858:	0007d683          	lhu	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1577
            dram_ptr_incoming_q_slots = l1_ptrs->rd_dram_wrptr;
    a85c:	0047d303          	lhu	t1, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1587
          if (is_strided) {
    a860:	008c5583          	lhu	a1, 8(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1588
            start_bytes = curr_dram_q_state->dram_ptr_issued_byte;
    a864:	018c2603          	lw	a2, 24(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1591
            start_bytes = 0;
    a868:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1587
          if (is_strided) {
    a86c:	00bb7c63          	bgeu	s6, a1, a884 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xe14>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1589
            inc_size_bytes = ((uint32_t)curr_dram_q_state->dram_ptr_incoming_q_slots << 16) | curr_dram_q_state->dram_ptr_issued_q_slots;
    a870:	00ac5583          	lhu	a1, 10(s8)
    a874:	006c5883          	lhu	a7, 6(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1588
            start_bytes = curr_dram_q_state->dram_ptr_issued_byte;
    a878:	00060713          	mv	a4, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1589
            inc_size_bytes = ((uint32_t)curr_dram_q_state->dram_ptr_incoming_q_slots << 16) | curr_dram_q_state->dram_ptr_issued_q_slots;
    a87c:	01059593          	slli	a1, a1, 0x10
    a880:	0115e633          	or	a2, a1, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1596
          uint32_t dram_data_buf_size_bytes = l1_ptrs->dram_buf_size_bytes;
    a884:	0407ae03          	lw	t3, 64(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    a888:	00000893          	li	a7, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1596
    a88c:	00068593          	mv	a1, a3
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
    a890:	02058863          	beqz	a1, a8c0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xe50>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    a894:	0015fe93          	andi	t4, a1, 1
    a898:	000e8463          	beqz	t4, a8a0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xe30>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
    a89c:	00c888b3          	add	a7, a7, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    a8a0:	0015d593          	srli	a1, a1, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    a8a4:	00161613          	slli	a2, a2, 0x1
    a8a8:	fe9ff06f          	j	a890 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xe20>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1575
              dram_ptr_issued_q_slots = l1_ptrs->rd_dram_local_rdptr;
    a8ac:	0087d683          	lhu	a3, 8(a5)
    a8b0:	fadff06f          	j	a85c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xdec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1579
            dram_ptr_issued_q_slots = l1_ptrs->rd_dram_wrptr;
    a8b4:	0047d683          	lhu	a3, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1580
            dram_ptr_incoming_q_slots = l1_ptrs->rd_dram_rdptr;
    a8b8:	0007d303          	lhu	t1, 0(a5)
    a8bc:	fa5ff06f          	j	a860 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xdf0>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    a8c0:	01170733          	add	a4, a4, a7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    a8c4:	01c76463          	bltu	a4, t3, a8cc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xe5c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    a8c8:	41c70733          	sub	a4, a4, t3
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1602
          curr_dram_q_state->dram_ptr_issued_byte = start_bytes;
    a8cc:	00ec2c23          	sw	a4, 24(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1604
          l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
    a8d0:	0007d703          	lhu	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1599
          curr_dram_q_state->dram_ptr_issued_q_slots = dram_ptr_issued_q_slots;
    a8d4:	00dc1323          	sh	a3, 6(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1600
          curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
    a8d8:	006c1523          	sh	t1, 10(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1601
          curr_dram_q_state->dram_ptr_flushed_q_slots = dram_ptr_issued_q_slots;
    a8dc:	00dc1423          	sh	a3, 8(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1603
          curr_dram_q_state->dram_num_partial_q_slot_issued_tiles = 0;
    a8e0:	000c2823          	sw	zero, 16(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1604
          l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
    a8e4:	02e79023          	sh	a4, 32(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1606
          if (is_dram_streaming_write) {
    a8e8:	04080663          	beqz	a6, a934 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xec4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1608
            uint32_t output_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    a8ec:	00155513          	srli	a0, a0, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1607
            l1_ptrs->dram_streaming_tag = 0;
    a8f0:	0007ae23          	sw	zero, 28(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1608
            uint32_t output_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    a8f4:	00357513          	andi	a0, a0, 3
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    a8f8:	0307a603          	lw	a2, 48(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    a8fc:	0347a703          	lw	a4, 52(a5)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    a900:	01051793          	slli	a5, a0, 0x10
    a904:	009787b3          	add	a5, a5, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    a908:	0007a683          	lw	a3, 0(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1611
            while (!ncrisc_noc_fast_write_ok_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
    a90c:	fe069ee3          	bnez	a3, a908 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xe98>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1612
            ncrisc_noc_fast_write_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF, l1_mem::address_map::ZEROS_BASE, dram_ptr_addr+DRAM_BUF_STREAMING_TAG_OFFSET, 4,
    a910:	01c60693          	addi	a3, a2, 28
    a914:	00c6b633          	sltu	a2, a3, a2
    a918:	00e60733          	add	a4, a2, a4
    a91c:	00000893          	li	a7, 0
    a920:	00100813          	li	a6, 1
    a924:	00400793          	li	a5, 4
    a928:	000d8613          	mv	a2, s11
    a92c:	00300593          	li	a1, 3
    a930:	bc5fe0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1644
          curr_dram_q_state->dram_q_state_flags |= DRAM_Q_PTRS_LOADED_FLAG;
    a934:	004c4783          	lbu	a5, 4(s8)
    a938:	0107e793          	ori	a5, a5, 16
    a93c:	00fc0223          	sb	a5, 4(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1539
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    a940:	02700793          	li	a5, 39
    a944:	00fc9a63          	bne	s9, a5, a958 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xee8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1539 (discriminator 2)
    a948:	000237b7          	lui	a5, 0x23
    a94c:	2f87ac03          	lw	s8, 760(a5) # 232f8 <substitutes.cpp.cd30c172+0x49e2>
    a950:	02800c93          	li	s9, 40
    a954:	d85ff06f          	j	a6d8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc68>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1539 (discriminator 3)
    a958:	001c8c93          	addi	s9, s9, 1
    a95c:	024c0c13          	addi	s8, s8, 36
    a960:	d79ff06f          	j	a6d8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc68>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1685
        dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state = l1_dram_io_state->dram_io_scatter_state;
    a964:	0587a703          	lw	a4, 88(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1687
        if (is_dram_io_scatter) {
    a968:	0a070a63          	beqz	a4, aa1c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xfac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1688
          uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_rdptr : l1_dram_io_state->rd_dram_local_rdptr;
    a96c:	2006f693          	andi	a3, a3, 512
    a970:	02068863          	beqz	a3, a9a0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xf30>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1688 (discriminator 1)
    a974:	0007dc83          	lhu	s9, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1689 (discriminator 4)
          uint32_t inc_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    a978:	00052683          	lw	a3, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1690 (discriminator 4)
          uint32_t dram_data_buf_size_bytes = l1_dram_io_state->dram_buf_size_bytes;
    a97c:	0407a603          	lw	a2, 64(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164 (discriminator 4)
  unsigned int r = 0;
    a980:	00000793          	li	a5, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
    a984:	020c8263          	beqz	s9, a9a8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xf38>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    a988:	001cf593          	andi	a1, s9, 1
    a98c:	00058463          	beqz	a1, a994 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xf24>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
    a990:	00d787b3          	add	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    a994:	001cdc93          	srli	s9, s9, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    a998:	00169693          	slli	a3, a3, 0x1
    a99c:	fe9ff06f          	j	a984 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xf14>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1688 (discriminator 2)
          uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_rdptr : l1_dram_io_state->rd_dram_local_rdptr;
    a9a0:	0087dc83          	lhu	s9, 8(a5)
    a9a4:	fd5ff06f          	j	a978 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xf08>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    a9a8:	00c7e463          	bltu	a5, a2, a9b0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xf40>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    a9ac:	40c787b3          	sub	a5, a5, a2
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1693
          uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
    a9b0:	00472d83          	lw	s11, 4(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1694
          volatile tt_uint64_t tt_l1_ptr * scatter_offsets = dram_io_scatter_state->scatter_offsets; // Since this is prolog we cannot use an external index table as dram io code is not proccessed during prolog.
    a9b4:	01c72803          	lw	a6, 28(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1695
          uint32_t dram_io_scatter_chunk_size_bytes = dram_io_scatter_state->scatter_chunk_size_bytes;
    a9b8:	00872703          	lw	a4, 8(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1702
              dram_src_addr_w_offset += (buf_offset + DRAM_BUF_DATA_OFFSET);
    a9bc:	02078d13          	addi	s10, a5, 32
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1697 (discriminator 1)
          for (uint32_t scatter_idx = 0; scatter_idx < dram_io_scatter_size; scatter_idx++) {
    a9c0:	0dbc8e63          	beq	s9, s11, aa9c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x102c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1698
            uint64_t dram_src_addr_w_offset = tt_l1_load(&scatter_offsets[scatter_idx]);
    a9c4:	003c9793          	slli	a5, s9, 0x3
    a9c8:	00f807b3          	add	a5, a6, a5
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    a9cc:	0007a583          	lw	a1, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    a9d0:	0047a783          	lw	a5, 4(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1700
            dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    a9d4:	0097f633          	and	a2, a5, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1699
            bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    a9d8:	00fb77b3          	and	a5, s6, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1701
            if (!is_padding_set)
    a9dc:	00079a63          	bnez	a5, a9f0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xf80>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1702
              dram_src_addr_w_offset += (buf_offset + DRAM_BUF_DATA_OFFSET);
    a9e0:	01a587b3          	add	a5, a1, s10
    a9e4:	00b7b6b3          	sltu	a3, a5, a1
    a9e8:	00c68633          	add	a2, a3, a2
    a9ec:	00078593          	mv	a1, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1703 (discriminator 2)
            ncrisc_noc_fast_read_any_len_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, next_stream_buf_addr, dram_io_scatter_chunk_size_bytes, NCRISC_RD_START_TRID);
    a9f0:	000b8693          	mv	a3, s7
    a9f4:	00400793          	li	a5, 4
    a9f8:	000c0513          	mv	a0, s8
    a9fc:	01012c23          	sw	a6, 24(sp)
    aa00:	00e12823          	sw	a4, 16(sp)
    aa04:	850ff0ef          	jal	ra, 9a54 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1704 (discriminator 2)
            next_stream_buf_addr += dram_io_scatter_chunk_size_bytes;
    aa08:	01012703          	lw	a4, 16(sp)
    aa0c:	01812803          	lw	a6, 24(sp)
    aa10:	00eb8bb3          	add	s7, s7, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1697 (discriminator 2)
          for (uint32_t scatter_idx = 0; scatter_idx < dram_io_scatter_size; scatter_idx++) {
    aa14:	001c8c93          	addi	s9, s9, 1
    aa18:	fa9ff06f          	j	a9c0 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xf50>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1707
          bool is_dram_padding = l1_dram_io_state->dram_padding;
    aa1c:	03e7c883          	lbu	a7, 62(a5)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    aa20:	0487a703          	lw	a4, 72(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    aa24:	04c7a803          	lw	a6, 76(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:32
    return v.v;
    aa28:	00070593          	mv	a1, a4
    aa2c:	00080613          	mv	a2, a6
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1709
          if (!is_dram_padding) {
    aa30:	04089c63          	bnez	a7, aa88 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1018>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1710
            uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_rdptr : l1_dram_io_state->rd_dram_local_rdptr;
    aa34:	2006f693          	andi	a3, a3, 512
    aa38:	02068863          	beqz	a3, aa68 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xff8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1710 (discriminator 1)
    aa3c:	0007d683          	lhu	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1711 (discriminator 4)
            uint32_t inc_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    aa40:	00052603          	lw	a2, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1712 (discriminator 4)
            uint32_t dram_data_buf_size_bytes = l1_dram_io_state->dram_buf_size_bytes;
    aa44:	0407a783          	lw	a5, 64(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164 (discriminator 4)
  unsigned int r = 0;
    aa48:	00000593          	li	a1, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
    aa4c:	02068263          	beqz	a3, aa70 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1000>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    aa50:	0016f513          	andi	a0, a3, 1
    aa54:	00050463          	beqz	a0, aa5c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xfec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
    aa58:	00c585b3          	add	a1, a1, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    aa5c:	0016d693          	srli	a3, a3, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    aa60:	00161613          	slli	a2, a2, 0x1
    aa64:	fe9ff06f          	j	aa4c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xfdc>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1710 (discriminator 2)
            uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_rdptr : l1_dram_io_state->rd_dram_local_rdptr;
    aa68:	0087d683          	lhu	a3, 8(a5)
    aa6c:	fd5ff06f          	j	aa40 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xfd0>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    aa70:	00f5e463          	bltu	a1, a5, aa78 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1008>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    aa74:	40f585b3          	sub	a1, a1, a5
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1714
            dram_src_addr_w_offset += (DRAM_BUF_DATA_OFFSET+buf_offset);
    aa78:	02058593          	addi	a1, a1, 32
    aa7c:	00b705b3          	add	a1, a4, a1
    aa80:	00e5b733          	sltu	a4, a1, a4
    aa84:	01070633          	add	a2, a4, a6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1716
          ncrisc_noc_fast_read_any_len_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_buf_addr, stream_buf_size_bytes, NCRISC_RD_START_TRID);
    aa88:	00400793          	li	a5, 4
    aa8c:	000c8713          	mv	a4, s9
    aa90:	000b8693          	mv	a3, s7
    aa94:	000c0513          	mv	a0, s8
    aa98:	fbdfe0ef          	jal	ra, 9a54 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1652 (discriminator 2)
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    aa9c:	00140413          	addi	s0, s0, 1
    aaa0:	c61ff06f          	j	a700 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xc90>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1726
    if (curr_dram_output_stream_state_init->moves_raw_data) {
    aaa4:	00294783          	lbu	a5, 2(s2)
    aaa8:	0e078063          	beqz	a5, ab88 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1118>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1725
    uint32_t dram_ptr_issued_byte = next_dram_q_issue->dram_ptr_issued_byte;
    aaac:	05892783          	lw	a5, 88(s2)
    aab0:	0187a783          	lw	a5, 24(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1727
      curr_dram_output_stream_state_init->prev_row_ptr_bytes   = dram_ptr_issued_byte;
    aab4:	02f92a23          	sw	a5, 52(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1728
      curr_dram_output_stream_state_init->prev_zc_ptr_bytes    = dram_ptr_issued_byte;
    aab8:	02f92c23          	sw	a5, 56(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1729
      curr_dram_output_stream_state_init->prev_zr_ptr_bytes    = dram_ptr_issued_byte;
    aabc:	02f92e23          	sw	a5, 60(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1730
      curr_dram_output_stream_state_init->prev_batch_ptr_bytes = dram_ptr_issued_byte;
    aac0:	04f92023          	sw	a5, 64(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1723 (discriminator 2)
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state_init++) {
    aac4:	00412783          	lw	a5, 4(sp)
    aac8:	06090913          	addi	s2, s2, 96
    aacc:	00178793          	addi	a5, a5, 1
    aad0:	00f12223          	sw	a5, 4(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1723 (discriminator 1)
    aad4:	00812783          	lw	a5, 8(sp)
    aad8:	00412703          	lw	a4, 4(sp)
    aadc:	0007a783          	lw	a5, 0(a5)
    aae0:	fcf762e3          	bltu	a4, a5, aaa4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1034>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    aae4:	ffb20737          	lui	a4, 0xffb20
    aae8:	25072783          	lw	a5, 592(a4) # ffb20250 <TENSIX_MAILBOX_BASE+0xffc60250>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1740
    while (!ncrisc_noc_reads_flushed_l1(n, NCRISC_RD_START_TRID));
    aaec:	fe079ee3          	bnez	a5, aae8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1078>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
    aaf0:	ffb307b7          	lui	a5, 0xffb30
    aaf4:	2507a403          	lw	s0, 592(a5) # ffb30250 <TENSIX_MAILBOX_BASE+0xffc70250>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1740
    aaf8:	fe041ee3          	bnez	s0, aaf4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1084>
    aafc:	00023937          	lui	s2, 0x23
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    ab00:	001009b7          	lui	s3, 0x100
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    ab04:	00003a37          	lui	s4, 0x3
    ab08:	08090913          	addi	s2, s2, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1754
    if (((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0)) {
    ab0c:	00400b13          	li	s6, 4
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    ab10:	b4098993          	addi	s3, s3, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    ab14:	200a0a13          	addi	s4, s4, 512 # 3200 <__trisc1_size+0x1200>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1748
       i < num_active_streams;
    ab18:	000aa783          	lw	a5, 0(s5)
    ab1c:	0af47063          	bgeu	s0, a5, abbc <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x114c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1750
    volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    ab20:	04440793          	addi	a5, s0, 68
    ab24:	00279793          	slli	a5, a5, 0x2
    ab28:	00f907b3          	add	a5, s2, a5
    ab2c:	0047a703          	lw	a4, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1751
    uint32_t stream_id = l1_stream_info->stream_id;
    ab30:	00075503          	lhu	a0, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1752
    uint32_t flags = l1_stream_info->flags;
    ab34:	03c72683          	lw	a3, 60(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1754
    if (((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0)) {
    ab38:	0266f793          	andi	a5, a3, 38
    ab3c:	05679263          	bne	a5, s6, ab80 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1110>
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    ab40:	013507b3          	add	a5, a0, s3
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1755
      if ((flags & STREAM_INTERMEDIATE) != 0 || (flags & STREAM_MOVES_RAW_DATA) != 0) {
    ab44:	0506f693          	andi	a3, a3, 80
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
    ab48:	00c79793          	slli	a5, a5, 0xc
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1755
    ab4c:	04068863          	beqz	a3, ab9c <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x112c>
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
    ab50:	0047a483          	lw	s1, 4(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1757
        volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    ab54:	ffbf6097          	auipc	ra, 0xffbf6
    ab58:	118080e7          	jalr	280(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
    ab5c:	ffbf6097          	auipc	ra, 0xffbf6
    ab60:	0d4080e7          	jalr	212(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    ab64:	01350533          	add	a0, a0, s3
    ab68:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1758
        uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    ab6c:	01052783          	lw	a5, 16(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
    ab70:	00f484b3          	add	s1, s1, a5
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1760
        tiles_received_ptr[0] = new_epoch_tiles_received;
    ab74:	01049493          	slli	s1, s1, 0x10
    ab78:	0104d493          	srli	s1, s1, 0x10
    ab7c:	00952823          	sw	s1, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1747
  for (uint32_t i = 0;
    ab80:	00140413          	addi	s0, s0, 1
    ab84:	f95ff06f          	j	ab18 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x10a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1732
      curr_dram_output_stream_state_init->prev_row_ptr_bytes   = 0;
    ab88:	02092a23          	sw	zero, 52(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1733
      curr_dram_output_stream_state_init->prev_zc_ptr_bytes    = 0;
    ab8c:	02092c23          	sw	zero, 56(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1734
      curr_dram_output_stream_state_init->prev_zr_ptr_bytes    = 0;
    ab90:	02092e23          	sw	zero, 60(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1735
      curr_dram_output_stream_state_init->prev_batch_ptr_bytes = 0;
    ab94:	04092023          	sw	zero, 64(s2)
    ab98:	f2dff06f          	j	aac4 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1054>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1762
        uint32_t blob_start_addr = l1_stream_info->blob_start_addr;
    ab9c:	02472683          	lw	a3, 36(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1763
        uint32_t start_phase_num_cfg_regs = l1_stream_info->start_phase_num_cfg_regs;
    aba0:	01e74703          	lbu	a4, 30(a4)
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    aba4:	0207a223          	sw	zero, 36(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:28
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr);
    aba8:	02d7a823          	sw	a3, 48(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    abac:	01871713          	slli	a4, a4, 0x18
    abb0:	08e7a823          	sw	a4, 144(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    abb4:	0347a423          	sw	s4, 40(a5)
    abb8:	fc9ff06f          	j	ab80 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1110>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1769
  RISC_EPOCH_INFO_PTR->all_streams_ready = 1;
    abbc:	00100793          	li	a5, 1
    abc0:	00f906a3          	sb	a5, 13(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1773
}
    abc4:	09812403          	lw	s0, 152(sp)
    abc8:	09c12083          	lw	ra, 156(sp)
    abcc:	09412483          	lw	s1, 148(sp)
    abd0:	09012903          	lw	s2, 144(sp)
    abd4:	08c12983          	lw	s3, 140(sp)
    abd8:	08812a03          	lw	s4, 136(sp)
    abdc:	08412a83          	lw	s5, 132(sp)
    abe0:	08012b03          	lw	s6, 128(sp)
    abe4:	07c12b83          	lw	s7, 124(sp)
    abe8:	07812c03          	lw	s8, 120(sp)
    abec:	07412c83          	lw	s9, 116(sp)
    abf0:	07012d03          	lw	s10, 112(sp)
    abf4:	06c12d83          	lw	s11, 108(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1771
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_INIT, risc::PROLOGUE_END_OFFSET);
    abf8:	01600593          	li	a1, 22
    abfc:	04000537          	lui	a0, 0x4000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1773
}
    ac00:	0a010113          	addi	sp, sp, 160
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:1771
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_INIT, risc::PROLOGUE_END_OFFSET);
    ac04:	8a9fe06f          	j	94ac <risc::record_timestamp_at_offset_l1(unsigned long, unsigned long)>
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
    ac08:	9eb6fce3          	bgeu	a3, a1, a600 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb90>
risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:78
  uint32_t case1 = rd_ptr < wr_ptr && (local_rd_ptr < rd_ptr || local_rd_ptr >= wr_ptr);
    ac0c:	00000893          	li	a7, 0
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
    ac10:	9ed874e3          	bgeu	a6, a3, a5f8 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb88>
    ac14:	9edff06f          	j	a600 <risc_dram_stream_handler_init_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xb90>

0000ac18 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]>:
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:432
    int num_32B_rdwr_loops          = 1; // Common case, only 4B with upper+lower update_mask bits set will use 2 loops.
    int update_mask_start_idx       = 0;
    int update_mask_bits_per_loop   = 16;

    // For 4B field sizes, determine number of loops and/or DRAM addr offset if single loop.
    if ((varinst_cmd_info.field_size_bytes == 4) && (varinst_cmd_info.update_mask & 0xFF00)){
    ac18:	00e55783          	lhu	a5, 14(a0) # 400000e <substitutes.cpp.cd30c172+0x3fe16f8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:419
void run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo &varinst_cmd_info, uint64_t &queue_addr_ptr, uint32_t header_addr, volatile uint32_t tt_l1_ptr *header_addr_ptr){
    ac1c:	fb010113          	addi	sp, sp, -80
    ac20:	04812423          	sw	s0, 72(sp)
    ac24:	04912223          	sw	s1, 68(sp)
    ac28:	04112623          	sw	ra, 76(sp)
    ac2c:	05212023          	sw	s2, 64(sp)
    ac30:	03312e23          	sw	s3, 60(sp)
    ac34:	03412c23          	sw	s4, 56(sp)
    ac38:	03512a23          	sw	s5, 52(sp)
    ac3c:	03612823          	sw	s6, 48(sp)
    ac40:	03712623          	sw	s7, 44(sp)
    ac44:	03812423          	sw	s8, 40(sp)
    ac48:	03912223          	sw	s9, 36(sp)
    ac4c:	03a12023          	sw	s10, 32(sp)
    ac50:	01b12e23          	sw	s11, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:432
    if ((varinst_cmd_info.field_size_bytes == 4) && (varinst_cmd_info.update_mask & 0xFF00)){
    ac54:	0387f793          	andi	a5, a5, 56
    ac58:	02000713          	li	a4, 32
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:419
void run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo &varinst_cmd_info, uint64_t &queue_addr_ptr, uint32_t header_addr, volatile uint32_t tt_l1_ptr *header_addr_ptr){
    ac5c:	00050413          	mv	s0, a0
    ac60:	00058493          	mv	s1, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:432
    if ((varinst_cmd_info.field_size_bytes == 4) && (varinst_cmd_info.update_mask & 0xFF00)){
    ac64:	14e79263          	bne	a5, a4, ada8 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x190>
    ac68:	00c55783          	lhu	a5, 12(a0)
    ac6c:	f007f713          	andi	a4, a5, -256
    ac70:	12070c63          	beqz	a4, ada8 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x190>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:433
        if (varinst_cmd_info.update_mask & 0x00FF){
    ac74:	0ff7f793          	zext.b	a5, a5
    ac78:	12079e63          	bnez	a5, adb4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x19c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:437
            num_32B_rdwr_loops = 2;
            update_mask_bits_per_loop = 8; // num_varinst_words;
        }else{
            queue_addr_ptr += read_size;
    ac7c:	0005a783          	lw	a5, 0(a1)
    ac80:	0045a683          	lw	a3, 4(a1)
    ac84:	02078713          	addi	a4, a5, 32
    ac88:	00f737b3          	sltu	a5, a4, a5
    ac8c:	00d787b3          	add	a5, a5, a3
    ac90:	00e5a023          	sw	a4, 0(a1)
    ac94:	00f5a223          	sw	a5, 4(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:429
    int update_mask_bits_per_loop   = 16;
    ac98:	01000c93          	li	s9, 16
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:438
            update_mask_start_idx += num_varinst_words;
    ac9c:	00800b13          	li	s6, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:427
    int num_32B_rdwr_loops          = 1; // Common case, only 4B with upper+lower update_mask bits set will use 2 loops.
    aca0:	00100913          	li	s2, 1
    aca4:	00391913          	slli	s2, s2, 0x3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:449
    for (int loop_idx=0; loop_idx<num_32B_rdwr_loops; loop_idx++){

        int field_offset_1B = 0;

        // Step 1 : Read 32B chunk from DRAM to L1 and wait for read to complete.
        ncrisc_noc_fast_read_any_len_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_addr_ptr, header_addr, read_size, NCRISC_HEADER_RD_TRID);
    aca8:	0002a9b7          	lui	s3, 0x2a
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    acac:	ffb21a37          	lui	s4, 0xffb21
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:466
            if (update_word) {

                // Instead of modulo operator, for 2 loops, want to re-use same 8 slots of 32B L1 for each loop.
                uint16_t field_offset_4B        = field_offset_1B >= read_size ? (field_offset_1B - read_size) >> 2 : (field_offset_1B) >> 2;
                uint32_t field_shift_amt        = (field_offset_1B << 3) & 0x1F; // Number of bits to shift by into 4B word to reach field.
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    acb0:	00010ab7          	lui	s5, 0x10
    acb4:	01690933          	add	s2, s2, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:449
        ncrisc_noc_fast_read_any_len_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_addr_ptr, header_addr, read_size, NCRISC_HEADER_RD_TRID);
    acb8:	ca098993          	addi	s3, s3, -864 # 29ca0 <substitutes.cpp.cd30c172+0xb38a>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    acbc:	c28a0a13          	addi	s4, s4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:466
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    acc0:	fffa8a93          	addi	s5, s5, -1 # ffff <dram_stream_intf.cc.5f8411f1+0x1bec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:449
        ncrisc_noc_fast_read_any_len_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_addr_ptr, header_addr, read_size, NCRISC_HEADER_RD_TRID);
    acc4:	0004a583          	lw	a1, 0(s1)
    acc8:	0044a603          	lw	a2, 4(s1)
    accc:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
    acd0:	00300793          	li	a5, 3
    acd4:	02000713          	li	a4, 32
    acd8:	00098693          	mv	a3, s3
    acdc:	d79fe0ef          	jal	ra, 9a54 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:450
        while (!ncrisc_noc_reads_flushed_l1(loading_noc, NCRISC_HEADER_RD_TRID));
    ace0:	84f1c783          	lbu	a5, -1969(gp) # ffb0004f <loading_noc>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    ace4:	ffb20737          	lui	a4, 0xffb20
    ace8:	01079793          	slli	a5, a5, 0x10
    acec:	24c70713          	addi	a4, a4, 588 # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
    acf0:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    acf4:	0007a703          	lw	a4, 0(a5)
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:450
    acf8:	fe071ee3          	bnez	a4, acf4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0xdc>
    acfc:	000b0c13          	mv	s8, s6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:446
        int field_offset_1B = 0;
    ad00:	00000b93          	li	s7, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:453
        for (int i = update_mask_start_idx; i < 16; i++) {
    ad04:	00f00d93          	li	s11, 15
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:456
            if (i > (update_mask_start_idx + update_mask_bits_per_loop - 1)){
    ad08:	019b0333          	add	t1, s6, s9
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:453
        for (int i = update_mask_start_idx; i < 16; i++) {
    ad0c:	1b8dcc63          	blt	s11, s8, aec4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x2ac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:456
            if (i > (update_mask_start_idx + update_mask_bits_per_loop - 1)){
    ad10:	146c5263          	bge	s8, t1, ae54 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:460
            bool update_word = (varinst_cmd_info.update_mask >> i) & 0x1;
    ad14:	00c45783          	lhu	a5, 12(s0)
    ad18:	4187d7b3          	sra	a5, a5, s8
    ad1c:	0017f793          	andi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:461
            if (update_word) {
    ad20:	12078263          	beqz	a5, ae44 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x22c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:464
                uint16_t field_offset_4B        = field_offset_1B >= read_size ? (field_offset_1B - read_size) >> 2 : (field_offset_1B) >> 2;
    ad24:	01f00793          	li	a5, 31
    ad28:	402bd613          	srai	a2, s7, 0x2
    ad2c:	0177d663          	bge	a5, s7, ad38 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x120>
    ad30:	fe0b8613          	addi	a2, s7, -32
    ad34:	40265613          	srai	a2, a2, 0x2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:466
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    ad38:	00e45703          	lhu	a4, 14(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:465
                uint32_t field_shift_amt        = (field_offset_1B << 3) & 0x1F; // Number of bits to shift by into 4B word to reach field.
    ad3c:	003b9793          	slli	a5, s7, 0x3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:464
                uint16_t field_offset_4B        = field_offset_1B >= read_size ? (field_offset_1B - read_size) >> 2 : (field_offset_1B) >> 2;
    ad40:	01061613          	slli	a2, a2, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:465
                uint32_t field_shift_amt        = (field_offset_1B << 3) & 0x1F; // Number of bits to shift by into 4B word to reach field.
    ad44:	01f7f813          	andi	a6, a5, 31
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:466
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    ad48:	01000693          	li	a3, 16
    ad4c:	03877793          	andi	a5, a4, 56
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:464
                uint16_t field_offset_4B        = field_offset_1B >= read_size ? (field_offset_1B - read_size) >> 2 : (field_offset_1B) >> 2;
    ad50:	01065613          	srli	a2, a2, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:466
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    ad54:	000a8593          	mv	a1, s5
    ad58:	00d78a63          	beq	a5, a3, ad6c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x154>
    ad5c:	00800693          	li	a3, 8
    ad60:	0ff00593          	li	a1, 255
    ad64:	00d78463          	beq	a5, a3, ad6c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x154>
    ad68:	fff00593          	li	a1, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:470
                uint32_t field_mask_shifted_4B  = field_mask_4B << field_shift_amt;

                // TODO - Could improve by avoiding datacopies, and using references.
                uint32_t rd_val_field = (header_addr_ptr[field_offset_4B] & field_mask_shifted_4B) >> field_shift_amt;
    ad6c:	00261613          	slli	a2, a2, 0x2
    ad70:	01360633          	add	a2, a2, s3
    ad74:	00062683          	lw	a3, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:467
                uint32_t field_mask_shifted_4B  = field_mask_4B << field_shift_amt;
    ad78:	01059533          	sll	a0, a1, a6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:473
                uint32_t wr_val_field = 0;

                if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdIncWrap){
    ad7c:	00777713          	andi	a4, a4, 7
    ad80:	00100793          	li	a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:470
                uint32_t rd_val_field = (header_addr_ptr[field_offset_4B] & field_mask_shifted_4B) >> field_shift_amt;
    ad84:	00d576b3          	and	a3, a0, a3
    ad88:	0106d6b3          	srl	a3, a3, a6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:473
                if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdIncWrap){
    ad8c:	02f71c63          	bne	a4, a5, adc4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1ac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:476
                    // Can't use modulo, do wrapping manually. This isn't efficient for the case where existing data is 
                    // many times larget than wrap value. Could be optimized, but this shouldn't be common.
                    wr_val_field = rd_val_field + varinst_cmd_info.operand_0;
    ad90:	01042783          	lw	a5, 16(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:477
                    while (wr_val_field >= varinst_cmd_info.operand_1) {
    ad94:	01442703          	lw	a4, 20(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:476
                    wr_val_field = rd_val_field + varinst_cmd_info.operand_0;
    ad98:	00f687b3          	add	a5, a3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:477
                    while (wr_val_field >= varinst_cmd_info.operand_1) {
    ad9c:	02e7ec63          	bltu	a5, a4, add4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:478
                        wr_val_field -= varinst_cmd_info.operand_1;
    ada0:	40e787b3          	sub	a5, a5, a4
    ada4:	ff9ff06f          	j	ad9c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x184>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:429
    int update_mask_bits_per_loop   = 16;
    ada8:	01000c93          	li	s9, 16
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:428
    int update_mask_start_idx       = 0;
    adac:	00000b13          	li	s6, 0
    adb0:	ef1ff06f          	j	aca0 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x88>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:435
            update_mask_bits_per_loop = 8; // num_varinst_words;
    adb4:	00800c93          	li	s9, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:428
    int update_mask_start_idx       = 0;
    adb8:	00000b13          	li	s6, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:434
            num_32B_rdwr_loops = 2;
    adbc:	00200913          	li	s2, 2
    adc0:	ee5ff06f          	j	aca4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x8c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:480
                    }
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdInc){
    adc4:	00200793          	li	a5, 2
    adc8:	08f71a63          	bne	a4, a5, ae5c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x244>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:481
                    wr_val_field = rd_val_field + varinst_cmd_info.operand_0;
    adcc:	01042783          	lw	a5, 16(s0)
    add0:	00f687b3          	add	a5, a3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:495
                            wr_val_field += (varinst_cmd_info.operand_0 << j);
                        }
                    }
                }

                header_addr_ptr[field_offset_4B] = header_addr_ptr[field_offset_4B] & ~field_mask_shifted_4B;
    add4:	00062683          	lw	a3, 0(a2)
    add8:	fff54713          	not	a4, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:496
                header_addr_ptr[field_offset_4B] = header_addr_ptr[field_offset_4B] | ((wr_val_field & field_mask_4B) << field_shift_amt);
    addc:	00f5f7b3          	and	a5, a1, a5
    ade0:	010797b3          	sll	a5, a5, a6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:495
                header_addr_ptr[field_offset_4B] = header_addr_ptr[field_offset_4B] & ~field_mask_shifted_4B;
    ade4:	00d77733          	and	a4, a4, a3
    ade8:	00e62023          	sw	a4, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:496
                header_addr_ptr[field_offset_4B] = header_addr_ptr[field_offset_4B] | ((wr_val_field & field_mask_4B) << field_shift_amt);
    adec:	00062703          	lw	a4, 0(a2)
    adf0:	00e7e7b3          	or	a5, a5, a4
    adf4:	00f62023          	sw	a5, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:503
                // queue_addr_ptr, varinst_cmd_info.field_size_bytes, varinst_cmd_info.num_buffers, varinst_cmd_info.num_readers, varinst_cmd_info.reader_index, i, varinst_cmd_info.opcode, rd_val_field, wr_val_field);

            // Step 3 : Write updated fields back to DRAM. Not entire 32B chunk, but just updated fields, one at a time.
            // This is a bit dangerous, write back entire 4B word that may have been partially (1B or 2B) updated. It works to solve Rdptr/Wrptr modification race though since
            // they are in different 4B words.
            while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    adf8:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    adfc:	01051793          	slli	a5, a0, 0x10
    ae00:	014787b3          	add	a5, a5, s4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    ae04:	0007a703          	lw	a4, 0(a5)
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:503
    ae08:	fe071ee3          	bnez	a4, ae04 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1ec>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:504
            ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[field_offset_4B])), queue_addr_ptr + field_offset_1B, write_size,
    ae0c:	0004a683          	lw	a3, 0(s1)
    ae10:	0044a783          	lw	a5, 4(s1)
    ae14:	00db86b3          	add	a3, s7, a3
    ae18:	41fbd713          	srai	a4, s7, 0x1f
    ae1c:	0176b5b3          	sltu	a1, a3, s7
    ae20:	00f70733          	add	a4, a4, a5
    ae24:	00e58733          	add	a4, a1, a4
    ae28:	00000893          	li	a7, 0
    ae2c:	00100813          	li	a6, 1
    ae30:	00400793          	li	a5, 4
    ae34:	00300593          	li	a1, 3
    ae38:	00612623          	sw	t1, 12(sp)
    ae3c:	eb8fe0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    ae40:	00c12303          	lw	t1, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:508
                                    DRAM_PTR_UPDATE_VC, false, false, 1, NCRISC_WR_DEF_TRID);
            }

            field_offset_1B += varinst_cmd_info.field_size_bytes;
    ae44:	00c42783          	lw	a5, 12(s0)
    ae48:	0137d793          	srli	a5, a5, 0x13
    ae4c:	0077f793          	andi	a5, a5, 7
    ae50:	00fb8bb3          	add	s7, s7, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:453
        for (int i = update_mask_start_idx; i < 16; i++) {
    ae54:	001c0c13          	addi	s8, s8, 1
    ae58:	eb5ff06f          	j	ad0c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0xf4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:482
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdSet){
    ae5c:	00300793          	li	a5, 3
    ae60:	00f71663          	bne	a4, a5, ae6c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x254>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:483
                    wr_val_field = varinst_cmd_info.operand_0;
    ae64:	01042783          	lw	a5, 16(s0)
    ae68:	f6dff06f          	j	add4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:484
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdAdd){
    ae6c:	00400793          	li	a5, 4
    ae70:	00f71a63          	bne	a4, a5, ae84 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x26c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:485
                    wr_val_field = varinst_cmd_info.operand_0 + varinst_cmd_info.operand_1;
    ae74:	01042703          	lw	a4, 16(s0)
    ae78:	01442783          	lw	a5, 20(s0)
    ae7c:	00f707b3          	add	a5, a4, a5
    ae80:	f55ff06f          	j	add4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:486
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdMul){
    ae84:	00500693          	li	a3, 5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:471
                uint32_t wr_val_field = 0;
    ae88:	00000793          	li	a5, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:486
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdMul){
    ae8c:	f4d714e3          	bne	a4, a3, add4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:489
                        if (varinst_cmd_info.operand_1 & (1u << j)) {
    ae90:	01442e03          	lw	t3, 20(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:488
                    for (uint32_t j = 0; j < 32; ++j) {
    ae94:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:489
                        if (varinst_cmd_info.operand_1 & (1u << j)) {
    ae98:	00100e93          	li	t4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:488
                    for (uint32_t j = 0; j < 32; ++j) {
    ae9c:	02000893          	li	a7, 32
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:489
                        if (varinst_cmd_info.operand_1 & (1u << j)) {
    aea0:	00ee96b3          	sll	a3, t4, a4
    aea4:	01c6f6b3          	and	a3, a3, t3
    aea8:	00068863          	beqz	a3, aeb8 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x2a0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:490
                            wr_val_field += (varinst_cmd_info.operand_0 << j);
    aeac:	01042683          	lw	a3, 16(s0)
    aeb0:	00e696b3          	sll	a3, a3, a4
    aeb4:	00d787b3          	add	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:488
                    for (uint32_t j = 0; j < 32; ++j) {
    aeb8:	00170713          	addi	a4, a4, 1
    aebc:	ff1712e3          	bne	a4, a7, aea0 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x288>
    aec0:	f15ff06f          	j	add4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:512
        }

        // If there is a next loop, offset read/write location by next 32B chunk.
        queue_addr_ptr += read_size;
    aec4:	0004a783          	lw	a5, 0(s1)
    aec8:	0044a683          	lw	a3, 4(s1)
    aecc:	02078713          	addi	a4, a5, 32
    aed0:	00f737b3          	sltu	a5, a4, a5
    aed4:	00d787b3          	add	a5, a5, a3
    aed8:	00e4a023          	sw	a4, 0(s1)
    aedc:	00f4a223          	sw	a5, 4(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:513
        update_mask_start_idx += num_varinst_words;
    aee0:	008b0b13          	addi	s6, s6, 8 # 40000008 <substitutes.cpp.cd30c172+0x3ffe16f2>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:444
    for (int loop_idx=0; loop_idx<num_32B_rdwr_loops; loop_idx++){
    aee4:	df2b10e3          	bne	s6, s2, acc4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0xac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:515
    }
    aee8:	04c12083          	lw	ra, 76(sp)
    aeec:	04812403          	lw	s0, 72(sp)
    aef0:	04412483          	lw	s1, 68(sp)
    aef4:	04012903          	lw	s2, 64(sp)
    aef8:	03c12983          	lw	s3, 60(sp)
    aefc:	03812a03          	lw	s4, 56(sp)
    af00:	03412a83          	lw	s5, 52(sp)
    af04:	03012b03          	lw	s6, 48(sp)
    af08:	02c12b83          	lw	s7, 44(sp)
    af0c:	02812c03          	lw	s8, 40(sp)
    af10:	02412c83          	lw	s9, 36(sp)
    af14:	02012d03          	lw	s10, 32(sp)
    af18:	01c12d83          	lw	s11, 28(sp)
    af1c:	05010113          	addi	sp, sp, 80
    af20:	00008067          	ret

0000af24 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]>:
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:908
void poll_dram_ptrs(void * pFunction, uint32_t &num_active_dram_queues, dram_q_state_t tt_l1_ptr *dram_q_state, bool& check_ptrs_flushed, bool& all_ptrs_flushed) {
    af24:	fd010113          	addi	sp, sp, -48
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:909
  all_ptrs_flushed = check_ptrs_flushed;
    af28:	00054783          	lbu	a5, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:908
void poll_dram_ptrs(void * pFunction, uint32_t &num_active_dram_queues, dram_q_state_t tt_l1_ptr *dram_q_state, bool& check_ptrs_flushed, bool& all_ptrs_flushed) {
    af2c:	03212023          	sw	s2, 32(sp)
    af30:	01312e23          	sw	s3, 28(sp)
    af34:	02112623          	sw	ra, 44(sp)
    af38:	02812423          	sw	s0, 40(sp)
    af3c:	02912223          	sw	s1, 36(sp)
    af40:	01412c23          	sw	s4, 24(sp)
    af44:	01512a23          	sw	s5, 20(sp)
    af48:	01612823          	sw	s6, 16(sp)
    af4c:	01712623          	sw	s7, 12(sp)
    af50:	01812423          	sw	s8, 8(sp)
    af54:	01912223          	sw	s9, 4(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:909
  all_ptrs_flushed = check_ptrs_flushed;
    af58:	00f58023          	sb	a5, 0(a1)
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    af5c:	ffb207b7          	lui	a5, 0xffb20
    af60:	24c7a783          	lw	a5, 588(a5) # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:908
void poll_dram_ptrs(void * pFunction, uint32_t &num_active_dram_queues, dram_q_state_t tt_l1_ptr *dram_q_state, bool& check_ptrs_flushed, bool& all_ptrs_flushed) {
    af64:	00050993          	mv	s3, a0
    af68:	00000913          	li	s2, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:913
    reads_flushed = reads_flushed && 
    af6c:	00079863          	bnez	a5, af7c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x58>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
    af70:	ffb307b7          	lui	a5, 0xffb30
    af74:	24c7a903          	lw	s2, 588(a5) # ffb3024c <TENSIX_MAILBOX_BASE+0xffc7024c>
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:913
    af78:	00193913          	seqz	s2, s2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:922
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    af7c:	c7018793          	addi	a5, gp, -912 # ffb00470 <num_active_streams>
    af80:	5a47a303          	lw	t1, 1444(a5)
    af84:	00000893          	li	a7, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:921
  dram_q_state_t tt_l1_ptr * curr_dram_q_state = dram_q_state;
    af88:	00478793          	addi	a5, a5, 4
    af8c:	c7018a13          	addi	s4, gp, -912 # ffb00470 <num_active_streams>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:922
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    af90:	02700e13          	li	t3, 39
    af94:	00023eb7          	lui	t4, 0x23
    af98:	0a68f663          	bgeu	a7, t1, b044 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x120>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:924
    curr_dram_q_state->dram_q_state_flags &= ~DRAM_Q_PTRS_LOADED_FLAG;
    af9c:	0047c503          	lbu	a0, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:929
    if (ptr_read_pending && (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
    afa0:	00a79703          	lh	a4, 10(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:924
    curr_dram_q_state->dram_q_state_flags &= ~DRAM_Q_PTRS_LOADED_FLAG;
    afa4:	0ef57693          	andi	a3, a0, 239
    afa8:	00d78223          	sb	a3, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:929
    if (ptr_read_pending && (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
    afac:	06075e63          	bgez	a4, b028 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x104>
    afb0:	06090c63          	beqz	s2, b028 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x104>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:930
      uint32_t l1_dram_incoming_ptr_index = curr_dram_q_state->l1_dram_incoming_ptr_index;
    afb4:	0057c803          	lbu	a6, 5(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:925
    volatile uint32_t tt_l1_ptr * l1_ptr_addr = curr_dram_q_state->l1_dram_ptrs;
    afb8:	0007a703          	lw	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:931
      uint32_t dram_ptr_incoming_q_slots = l1_dram_incoming_ptr_index ? l1_ptrs->rd_dram_wrptr : l1_ptrs->rd_dram_rdptr;
    afbc:	04080063          	beqz	a6, affc <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xd8>
    afc0:	00475603          	lhu	a2, 4(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:937
      curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
    afc4:	00c79523          	sh	a2, 10(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:941
      if (check_ptrs_flushed) {
    afc8:	0009c603          	lbu	a2, 0(s3)
    afcc:	02060263          	beqz	a2, aff0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xcc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:942
        bool updater_stride = l1_ptrs->wr_stride == 0;
    afd0:	02c75603          	lhu	a2, 44(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:943
        if ((l1_dram_incoming_ptr_index && updater_stride && l1_ptrs->rd_grd_ptr_autoinc && l1_ptrs->wr_dram_rdptr != l1_ptrs->rd_dram_rdptr) || // read
    afd4:	04080063          	beqz	a6, b014 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xf0>
    afd8:	00061c63          	bnez	a2, aff0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xcc>
    afdc:	00275603          	lhu	a2, 2(a4)
    afe0:	00060863          	beqz	a2, aff0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xcc>
    afe4:	02075603          	lhu	a2, 32(a4)
    afe8:	00075703          	lhu	a4, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:944
            (!l1_dram_incoming_ptr_index && updater_stride && l1_ptrs->wr_dram_wrptr != l1_ptrs->rd_dram_wrptr)) {
    afec:	02e61c63          	bne	a2, a4, b024 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x100>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:950
        curr_dram_q_state->dram_q_state_flags |= DRAM_Q_PTRS_LOADED_FLAG;
    aff0:	0106e693          	ori	a3, a3, 16
    aff4:	00d78223          	sb	a3, 4(a5)
    aff8:	0300006f          	j	b028 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x104>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:931
      uint32_t dram_ptr_incoming_q_slots = l1_dram_incoming_ptr_index ? l1_ptrs->rd_dram_wrptr : l1_ptrs->rd_dram_rdptr;
    affc:	00075603          	lhu	a2, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:936
      bool is_dram_streaming_write = !l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    b000:	00857513          	andi	a0, a0, 8
    b004:	fc0500e3          	beqz	a0, afc4 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xa0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:937
      curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
    b008:	00c79523          	sh	a2, 10(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:939
        l1_ptrs->dram_streaming_tag = 0;
    b00c:	00072e23          	sw	zero, 28(a4)
    b010:	fb9ff06f          	j	afc8 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xa4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:944
            (!l1_dram_incoming_ptr_index && updater_stride && l1_ptrs->wr_dram_wrptr != l1_ptrs->rd_dram_wrptr)) {
    b014:	fc061ee3          	bnez	a2, aff0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xcc>
    b018:	02475603          	lhu	a2, 36(a4)
    b01c:	00475703          	lhu	a4, 4(a4)
    b020:	fcdff06f          	j	afec <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xc8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:945
          all_ptrs_flushed = false;
    b024:	00058023          	sb	zero, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:922
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    b028:	01c89863          	bne	a7, t3, b038 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x114>
    b02c:	2f8ea783          	lw	a5, 760(t4) # 232f8 <substitutes.cpp.cd30c172+0x49e2>
    b030:	02800893          	li	a7, 40
    b034:	f65ff06f          	j	af98 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x74>
    b038:	00188893          	addi	a7, a7, 1
    b03c:	02478793          	addi	a5, a5, 36
    b040:	f59ff06f          	j	af98 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x74>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    b044:	ffb21ab7          	lui	s5, 0xffb21
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:956
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    b048:	00000493          	li	s1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:955
  curr_dram_q_state = dram_q_state;
    b04c:	c7418413          	addi	s0, gp, -908 # ffb00474 <dram_q_state>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:962
    bool has_multi_readers = total_readers > 1 && rd_grd_ptr_autoinc;
    b050:	00100b13          	li	s6, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:981
        curr_dram_q_state->dram_ptr_incoming_q_slots = ptr_remote | DRAM_PTR_UPDATE_PENDING_MASK;
    b054:	ffff8bb7          	lui	s7, 0xffff8
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    b058:	c28a8a93          	addi	s5, s5, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:956
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    b05c:	02700c13          	li	s8, 39
    b060:	00023cb7          	lui	s9, 0x23
    b064:	5a4a2783          	lw	a5, 1444(s4)
    b068:	0ef4fc63          	bgeu	s1, a5, b160 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:958
    volatile uint32_t tt_l1_ptr * l1_ptr_addr = curr_dram_q_state->l1_dram_ptrs;
    b06c:	00042683          	lw	a3, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:962
    bool has_multi_readers = total_readers > 1 && rd_grd_ptr_autoinc;
    b070:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:960
    uint32_t rd_grd_ptr_autoinc = l1_ptrs->rd_grd_ptr_autoinc;
    b074:	0026d783          	lhu	a5, 2(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:961
    uint32_t total_readers = l1_ptrs->total_readers;
    b078:	0556c603          	lbu	a2, 85(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:962
    bool has_multi_readers = total_readers > 1 && rd_grd_ptr_autoinc;
    b07c:	00cb7463          	bgeu	s6, a2, b084 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x160>
    b080:	00f03733          	snez	a4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:963
    bool is_ram_non_multi_read = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_RAM) != 0 && !has_multi_readers;
    b084:	00444503          	lbu	a0, 4(s0)
    b088:	00000613          	li	a2, 0
    b08c:	00157793          	andi	a5, a0, 1
    b090:	00078463          	beqz	a5, b098 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x174>
    b094:	00174613          	xori	a2, a4, 1
    b098:	00857713          	andi	a4, a0, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:964
    bool is_dram_streaming_read = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0 && curr_dram_q_state->l1_dram_incoming_ptr_index;
    b09c:	00070663          	beqz	a4, b0a8 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x184>
    b0a0:	00544783          	lbu	a5, 5(s0)
    b0a4:	00079e63          	bnez	a5, b0c0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x19c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:965
    bool is_dram_padding = l1_ptrs->dram_padding;
    b0a8:	03e6c783          	lbu	a5, 62(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:966
    if (!is_dram_streaming_read && !is_ram_non_multi_read && !is_dram_padding) {
    b0ac:	00060e63          	beqz	a2, b0c8 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1a4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:956
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    b0b0:	0b849263          	bne	s1, s8, b154 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x230>
    b0b4:	2f8ca403          	lw	s0, 760(s9) # 232f8 <substitutes.cpp.cd30c172+0x49e2>
    b0b8:	02800493          	li	s1, 40
    b0bc:	fa9ff06f          	j	b064 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x140>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:965
    bool is_dram_padding = l1_ptrs->dram_padding;
    b0c0:	03e6c783          	lbu	a5, 62(a3)
    b0c4:	fedff06f          	j	b0b0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x18c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:966
    if (!is_dram_streaming_read && !is_ram_non_multi_read && !is_dram_padding) {
    b0c8:	fe0794e3          	bnez	a5, b0b0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x18c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:967
      uint32_t ptr_remote = curr_dram_q_state->dram_ptr_incoming_q_slots;
    b0cc:	00a45803          	lhu	a6, 10(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:972
      if (!ptr_read_pending && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_PTRS_LOADED_FLAG) == 0 && (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
    b0d0:	01081793          	slli	a5, a6, 0x10
    b0d4:	4107d793          	srai	a5, a5, 0x10
    b0d8:	fc07cce3          	bltz	a5, b0b0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x18c>
    b0dc:	01057793          	andi	a5, a0, 16
    b0e0:	fc0798e3          	bnez	a5, b0b0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x18c>
    b0e4:	fc0906e3          	beqz	s2, b0b0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x18c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:974
        if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    b0e8:	06070063          	beqz	a4, b148 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x224>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    b0ec:	0306a583          	lw	a1, 48(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    b0f0:	0346a603          	lw	a2, 52(a3)
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:979
        if (check_ptrs_flushed && !addr_is_pcie(dram_ptr_addr))
    b0f4:	0009c783          	lbu	a5, 0(s3)
    b0f8:	02078063          	beqz	a5, b118 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1f4>
addr_is_pcie(unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:60
  uint32_t x = NOC_UNICAST_ADDR_X(dram_ptr_addr);
    b0fc:	00465713          	srli	a4, a2, 0x4
    b100:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:62
  return x == 0 && y == 3;
    b104:	fa0716e3          	bnez	a4, b0b0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x18c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:61
  uint32_t y = NOC_UNICAST_ADDR_Y(dram_ptr_addr);
    b108:	00a65713          	srli	a4, a2, 0xa
    b10c:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:62
  return x == 0 && y == 3;
    b110:	00300793          	li	a5, 3
    b114:	f8f71ee3          	bne	a4, a5, b0b0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x18c>
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:969
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    b118:	00155793          	srli	a5, a0, 0x1
    b11c:	0037f513          	andi	a0, a5, 3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:981
        curr_dram_q_state->dram_ptr_incoming_q_slots = ptr_remote | DRAM_PTR_UPDATE_PENDING_MASK;
    b120:	017867b3          	or	a5, a6, s7
    b124:	00f41523          	sh	a5, 10(s0)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    b128:	01051793          	slli	a5, a0, 0x10
    b12c:	015787b3          	add	a5, a5, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    b130:	0007a703          	lw	a4, 0(a5)
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:990
        while (!ncrisc_noc_fast_read_ok_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
    b134:	fe071ee3          	bnez	a4, b130 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x20c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:991
        ncrisc_noc_fast_read_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_ptr_addr, (uint32_t)l1_ptr_addr, DRAM_HEADER_SIZE, NCRISC_HEADER_RD_TRID);
    b138:	00300793          	li	a5, 3
    b13c:	02000713          	li	a4, 32
    b140:	891fe0ef          	jal	ra, 99d0 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
    b144:	f6dff06f          	j	b0b0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x18c>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    b148:	0486a583          	lw	a1, 72(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    b14c:	04c6a603          	lw	a2, 76(a3)
    b150:	fa5ff06f          	j	b0f4 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1d0>
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:956
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    b154:	00148493          	addi	s1, s1, 1
    b158:	02440413          	addi	s0, s0, 36
    b15c:	f09ff06f          	j	b064 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x140>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:999
}
    b160:	02c12083          	lw	ra, 44(sp)
    b164:	02812403          	lw	s0, 40(sp)
    b168:	02412483          	lw	s1, 36(sp)
    b16c:	02012903          	lw	s2, 32(sp)
    b170:	01c12983          	lw	s3, 28(sp)
    b174:	01812a03          	lw	s4, 24(sp)
    b178:	01412a83          	lw	s5, 20(sp)
    b17c:	01012b03          	lw	s6, 16(sp)
    b180:	00c12b83          	lw	s7, 12(sp)
    b184:	00812c03          	lw	s8, 8(sp)
    b188:	00412c83          	lw	s9, 4(sp)
    b18c:	03010113          	addi	sp, sp, 48
    b190:	00008067          	ret

0000b194 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]>:
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:756
void process_dram_streaming_read_l1(void * pFunction, uint32_t& stream_id, uint32_t& phase_active, uint32_t& curr_phase_tiles_remaining_to_issue, dram_input_stream_state_t* curr_dram_input_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue,
    b194:	fa010113          	addi	sp, sp, -96
    b198:	04812c23          	sw	s0, 88(sp)
    b19c:	05312623          	sw	s3, 76(sp)
    b1a0:	05412423          	sw	s4, 72(sp)
    b1a4:	05512223          	sw	s5, 68(sp)
    b1a8:	04112e23          	sw	ra, 92(sp)
    b1ac:	04912a23          	sw	s1, 84(sp)
    b1b0:	05212823          	sw	s2, 80(sp)
    b1b4:	05612023          	sw	s6, 64(sp)
    b1b8:	03712e23          	sw	s7, 60(sp)
    b1bc:	03812c23          	sw	s8, 56(sp)
    b1c0:	03912a23          	sw	s9, 52(sp)
    b1c4:	03a12823          	sw	s10, 48(sp)
    b1c8:	03b12623          	sw	s11, 44(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:759
  uint32_t in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    b1cc:	0046d983          	lhu	s3, 4(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:756
void process_dram_streaming_read_l1(void * pFunction, uint32_t& stream_id, uint32_t& phase_active, uint32_t& curr_phase_tiles_remaining_to_issue, dram_input_stream_state_t* curr_dram_input_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue,
    b1d0:	00050a13          	mv	s4, a0
    b1d4:	00068413          	mv	s0, a3
    b1d8:	00078a93          	mv	s5, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:761
  if (phase_active && curr_phase_tiles_remaining_to_issue) {
    b1dc:	22058863          	beqz	a1, b40c <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x278>
    b1e0:	00062783          	lw	a5, 0(a2)
    b1e4:	22078463          	beqz	a5, b40c <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x278>
    b1e8:	00070493          	mv	s1, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:765
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    b1ec:	0004a903          	lw	s2, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:763
    RISC_POST_STATUS(0xDD000000 | stream_id);
    b1f0:	00052703          	lw	a4, 0(a0)
    b1f4:	dd0007b7          	lui	a5, 0xdd000
    b1f8:	00e7e7b3          	or	a5, a5, a4
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    b1fc:	ffb20737          	lui	a4, 0xffb20
    b200:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:770
    if (dram_q_slot_available) {
    b204:	0064d703          	lhu	a4, 6(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:767
    uint32_t wrptr_val_issue = l1_ptrs->rd_dram_wrptr;
    b208:	00495783          	lhu	a5, 4(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:770
    if (dram_q_slot_available) {
    b20c:	20f70063          	beq	a4, a5, b40c <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x278>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:771
      uint32_t q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
    b210:	05092783          	lw	a5, 80(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:772
      uint32_t data_rec_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
    b214:	03c95b83          	lhu	s7, 60(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:773
      uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    b218:	03892c03          	lw	s8, 56(s2)
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    b21c:	00100db7          	lui	s11, 0x100
    b220:	b40d8d93          	addi	s11, s11, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:783
          if (fork_stream_id == NULL_STREAM) {
    b224:	0ff00c93          	li	s9, 255
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:771
      uint32_t q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
    b228:	00f12623          	sw	a5, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:776
        uint32_t dram_num_partial_q_slot_issued_tiles = next_dram_q_issue->dram_num_partial_q_slot_issued_tiles;
    b22c:	0104a783          	lw	a5, 16(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:778
        curr_phase_tiles_remaining_to_issue -= data_rec_chunk_size_tiles;
    b230:	00062683          	lw	a3, 0(a2)
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
    b234:	ffff0737          	lui	a4, 0xffff0
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:778
    b238:	41768533          	sub	a0, a3, s7
    b23c:	00a62023          	sw	a0, 0(a2)
    b240:	03840b13          	addi	s6, s0, 56
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    b244:	000b0813          	mv	a6, s6
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:776
        uint32_t dram_num_partial_q_slot_issued_tiles = next_dram_q_issue->dram_num_partial_q_slot_issued_tiles;
    b248:	00f12823          	sw	a5, 16(sp)
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    b24c:	000a2783          	lw	a5, 0(s4)
    b250:	01b787b3          	add	a5, a5, s11
    b254:	00c79793          	slli	a5, a5, 0xc
    b258:	0047a683          	lw	a3, 4(a5) # dd000004 <TENSIX_MAILBOX_BASE+0xdd140004>
    b25c:	00e6f6b3          	and	a3, a3, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    b260:	00a6e6b3          	or	a3, a3, a0
    b264:	00d7a223          	sw	a3, 4(a5)
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:782
          uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    b268:	00084783          	lbu	a5, 0(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:783
          if (fork_stream_id == NULL_STREAM) {
    b26c:	00180813          	addi	a6, a6, 1
    b270:	03978463          	beq	a5, s9, b298 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x104>
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    b274:	01b787b3          	add	a5, a5, s11
    b278:	00c79793          	slli	a5, a5, 0xc
    b27c:	0047a503          	lw	a0, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    b280:	00062883          	lw	a7, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    b284:	ffff0737          	lui	a4, 0xffff0
    b288:	00e57533          	and	a0, a0, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    b28c:	01156533          	or	a0, a0, a7
    b290:	00a7a223          	sw	a0, 4(a5)
    b294:	fd5ff06f          	j	b268 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0xd4>
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:790
        push_readdata_to_stream_l1(curr_dram_input_stream_state, stream_id, curr_dram_input_stream_state->moves_raw_data, data_rec_chunk_size_tiles, data_rec_chunk_size_bytes);
    b298:	01044d03          	lbu	s10, 16(s0)
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:153
    stream_signal_flushed_tiles(stream_id, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes/MEM_WORD_WIDTH);
    b29c:	004c5813          	srli	a6, s8, 0x4
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:790
        push_readdata_to_stream_l1(curr_dram_input_stream_state, stream_id, curr_dram_input_stream_state->moves_raw_data, data_rec_chunk_size_tiles, data_rec_chunk_size_bytes);
    b2a0:	000a2503          	lw	a0, 0(s4)
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:185
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    b2a4:	00c81813          	slli	a6, a6, 0xc
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:139
  if (moves_raw_data) {
    b2a8:	0c0d0663          	beqz	s10, b374 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x1e0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:140
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
    b2ac:	05042783          	lw	a5, 80(s0)
    b2b0:	00c12e23          	sw	a2, 28(sp)
    b2b4:	0887a303          	lw	t1, 136(a5)
    b2b8:	01012c23          	sw	a6, 24(sp)
    b2bc:	00612a23          	sw	t1, 20(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:141
    volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    b2c0:	ffbf6097          	auipc	ra, 0xffbf6
    b2c4:	9ac080e7          	jalr	-1620(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
    b2c8:	ffbf6097          	auipc	ra, 0xffbf6
    b2cc:	968080e7          	jalr	-1688(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:143
    uint32_t scatter_list_stream_id = dram_io_info->scatter_list_stream_id;
    b2d0:	01412303          	lw	t1, 20(sp)
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
    b2d4:	01b50533          	add	a0, a0, s11
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:144
    uint32_t hw_tilize = dram_io_info->hw_tilize;
    b2d8:	01b34883          	lbu	a7, 27(t1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:143
    uint32_t scatter_list_stream_id = dram_io_info->scatter_list_stream_id;
    b2dc:	00835e03          	lhu	t3, 8(t1)
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
    b2e0:	00c51513          	slli	a0, a0, 0xc
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:142
    uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    b2e4:	01052783          	lw	a5, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:146
    if (scatter_list_stream_id || hw_tilize) {
    b2e8:	01812803          	lw	a6, 24(sp)
    b2ec:	01c12603          	lw	a2, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:142
    uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    b2f0:	01079793          	slli	a5, a5, 0x10
    b2f4:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:146
    if (scatter_list_stream_id || hw_tilize) {
    b2f8:	011e6e33          	or	t3, t3, a7
    b2fc:	000b8893          	mv	a7, s7
    b300:	000e0463          	beqz	t3, b308 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x174>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:147
      prev_data_rec_chunk_size_tiles = dram_io_info->dram_embeddings_row_tiles;
    b304:	01835883          	lhu	a7, 24(t1)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
    b308:	011787b3          	add	a5, a5, a7
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:151
    tiles_received_ptr[0] = new_epoch_tiles_received;
    b30c:	01079793          	slli	a5, a5, 0x10
    b310:	0107d793          	srli	a5, a5, 0x10
    b314:	00f52823          	sw	a5, 16(a0)
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:185
    b318:	0108e833          	or	a6, a7, a6
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:161
    uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    b31c:	000b4503          	lbu	a0, 0(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:162
    if (fork_stream_id == NULL_STREAM) {
    b320:	07950e63          	beq	a0, s9, b39c <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x208>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:165
    if (moves_raw_data) {
    b324:	060d0463          	beqz	s10, b38c <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x1f8>
    b328:	00c12e23          	sw	a2, 28(sp)
    b32c:	01012c23          	sw	a6, 24(sp)
    b330:	01112a23          	sw	a7, 20(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:166
      volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(fork_stream_id));
    b334:	ffbf6097          	auipc	ra, 0xffbf6
    b338:	938080e7          	jalr	-1736(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
    b33c:	ffbf6097          	auipc	ra, 0xffbf6
    b340:	8f4080e7          	jalr	-1804(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    b344:	01b50533          	add	a0, a0, s11
    b348:	00c51513          	slli	a0, a0, 0xc
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:167
      uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    b34c:	01052783          	lw	a5, 16(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
    b350:	01412883          	lw	a7, 20(sp)
    b354:	01812803          	lw	a6, 24(sp)
    b358:	01c12603          	lw	a2, 28(sp)
    b35c:	011787b3          	add	a5, a5, a7
push_readdata_to_stream_l1(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:169
      tiles_received_ptr[0] = new_epoch_tiles_received;
    b360:	01079793          	slli	a5, a5, 0x10
    b364:	0107d793          	srli	a5, a5, 0x10
    b368:	00f52823          	sw	a5, 16(a0)
    b36c:	001b0b13          	addi	s6, s6, 1
    b370:	fadff06f          	j	b31c <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x188>
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:185
    b374:	01b50533          	add	a0, a0, s11
    b378:	00c51513          	slli	a0, a0, 0xc
    b37c:	010be7b3          	or	a5, s7, a6
    b380:	06f52c23          	sw	a5, 120(a0)
    b384:	000b8893          	mv	a7, s7
    b388:	f91ff06f          	j	b318 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x184>
    b38c:	01b50533          	add	a0, a0, s11
    b390:	00c51513          	slli	a0, a0, 0xc
    b394:	07052c23          	sw	a6, 120(a0)
    b398:	fd5ff06f          	j	b36c <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x1d8>
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:795
        curr_dram_input_stream_state->stream_flushed_ptr_byte -= data_rec_chunk_size_bytes;
    b39c:	00c42783          	lw	a5, 12(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:796
        in_flight_data_rec_chunks++;
    b3a0:	00198993          	addi	s3, s3, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:795
        curr_dram_input_stream_state->stream_flushed_ptr_byte -= data_rec_chunk_size_bytes;
    b3a4:	418787b3          	sub	a5, a5, s8
    b3a8:	00f42623          	sw	a5, 12(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:798
        dram_num_partial_q_slot_issued_tiles += data_rec_chunk_size_tiles;
    b3ac:	01012783          	lw	a5, 16(sp)
    b3b0:	01778b33          	add	s6, a5, s7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:801
        if (full_q_slot_recv) {
    b3b4:	00c12783          	lw	a5, 12(sp)
    b3b8:	14fb1c63          	bne	s6, a5, b510 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x37c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:802
          uint32_t dram_buf_size_q_slots = next_dram_q_issue->dram_buf_size_q_slots;
    b3bc:	00c4d703          	lhu	a4, 12(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:804
          next_dram_q_issue->dram_ptr_issued_q_slots = dram_io_incr_ptr_l1(next_dram_q_issue->dram_ptr_issued_q_slots, 1, dram_buf_size_q_slots);
    b3c0:	0064d783          	lhu	a5, 6(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:803
          next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = 0;
    b3c4:	0004a823          	sw	zero, 16(s1)
dram_io_incr_ptr_l1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:63
  uint32_t double_buf_size_q_slots = 2*buf_size_q_slots;
    b3c8:	00171713          	slli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:62
  uint32_t next_ptr = curr_ptr + incr;
    b3cc:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:64
  if (next_ptr >= double_buf_size_q_slots) {
    b3d0:	00e7e463          	bltu	a5, a4, b3d8 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x244>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:65
    next_ptr -= double_buf_size_q_slots;
    b3d4:	40e787b3          	sub	a5, a5, a4
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:804
          next_dram_q_issue->dram_ptr_issued_q_slots = dram_io_incr_ptr_l1(next_dram_q_issue->dram_ptr_issued_q_slots, 1, dram_buf_size_q_slots);
    b3d8:	00f49323          	sh	a5, 6(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:805
          next_dram_q_issue = (dram_q_state_t tt_l1_ptr *)next_dram_q_issue->next;
    b3dc:	0204a483          	lw	s1, 32(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:806
          l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    b3e0:	0004a903          	lw	s2, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:807
          data_rec_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
    b3e4:	03c95b83          	lhu	s7, 60(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:808
          data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    b3e8:	03892c03          	lw	s8, 56(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:809
          q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
    b3ec:	05092783          	lw	a5, 80(s2)
    b3f0:	00f12623          	sw	a5, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:814
        if (!curr_phase_tiles_remaining_to_issue) {
    b3f4:	00062783          	lw	a5, 0(a2)
    b3f8:	00078863          	beqz	a5, b408 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x274>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:818
        wrptr_val_issue = l1_ptrs->rd_dram_wrptr;
    b3fc:	00495783          	lhu	a5, 4(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:775
      while (dram_q_slot_available) {
    b400:	0064d683          	lhu	a3, 6(s1)
    b404:	e2f694e3          	bne	a3, a5, b22c <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x98>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:821
      curr_dram_input_stream_state->in_flight_data_rec_chunks = in_flight_data_rec_chunks;
    b408:	01341223          	sh	s3, 4(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:825
  if (in_flight_data_rec_chunks > 0) {
    b40c:	0c098463          	beqz	s3, b4d4 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x340>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:827
    dram_q_state_t tt_l1_ptr * next_dram_q_in_flight = curr_dram_input_stream_state->next_dram_q_in_flight;
    b410:	04c42483          	lw	s1, 76(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:831
    RISC_POST_STATUS(0xEE000000 | stream_id);
    b414:	000a2703          	lw	a4, 0(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:828
    volatile dram_io_state_t tt_l1_ptr* l1_ptrs = (volatile dram_io_state_t tt_l1_ptr*)next_dram_q_in_flight->l1_dram_ptrs;
    b418:	0004a903          	lw	s2, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:831
    RISC_POST_STATUS(0xEE000000 | stream_id);
    b41c:	ee0007b7          	lui	a5, 0xee000
    b420:	00e7e7b3          	or	a5, a5, a4
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    b424:	ffb20b37          	lui	s6, 0xffb20
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:833
    bool push_flushed = get_stream_push_flushed_l1(curr_dram_input_stream_state, stream_id, data_rec_chunk_size_bytes);
    b428:	00040513          	mv	a0, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:829
    uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    b42c:	03892b83          	lw	s7, 56(s2)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    b430:	10fb2623          	sw	a5, 268(s6) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:833
    bool push_flushed = get_stream_push_flushed_l1(curr_dram_input_stream_state, stream_id, data_rec_chunk_size_bytes);
    b434:	000a2583          	lw	a1, 0(s4)
    b438:	000b8613          	mv	a2, s7
    b43c:	c1dfd0ef          	jal	ra, 9058 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:835
    if (push_flushed) {
    b440:	08050a63          	beqz	a0, b4d4 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x340>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    b444:	ee1007b7          	lui	a5, 0xee100
    b448:	10fb2623          	sw	a5, 268(s6)
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:840
      uint32_t data_rec_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
    b44c:	03c95c03          	lhu	s8, 60(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:839
      uint32_t flushed_partial_q_slot_tiles = next_dram_q_in_flight->flushed_partial_q_slot_tiles;
    b450:	0144ab03          	lw	s6, 20(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:841
      uint32_t q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
    b454:	05092c83          	lw	s9, 80(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:845
        flushed_partial_q_slot_tiles += data_rec_chunk_size_tiles;
    b458:	018b0b33          	add	s6, s6, s8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:848
        if (full_q_slot_flushed) {
    b45c:	0b9b1e63          	bne	s6, s9, b518 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x384>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:850
          uint32_t rdptr_flushed_val = next_dram_q_in_flight->dram_ptr_flushed_q_slots;  
    b460:	0084d783          	lhu	a5, 8(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:849
          uint32_t dram_buf_size_q_slots = next_dram_q_in_flight->dram_buf_size_q_slots;
    b464:	00c4d703          	lhu	a4, 12(s1)
dram_io_incr_ptr_l1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:62
  uint32_t next_ptr = curr_ptr + incr;
    b468:	00178793          	addi	a5, a5, 1 # ee100001 <TENSIX_MAILBOX_BASE+0xee240001>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:63
  uint32_t double_buf_size_q_slots = 2*buf_size_q_slots;
    b46c:	00171713          	slli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:64
  if (next_ptr >= double_buf_size_q_slots) {
    b470:	00e7e463          	bltu	a5, a4, b478 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x2e4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:65
    next_ptr -= double_buf_size_q_slots;
    b474:	40e787b3          	sub	a5, a5, a4
process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:853
          l1_ptrs->rd_dram_rdptr = rdptr_flushed_val;
    b478:	00f91023          	sh	a5, 0(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:856
          next_dram_q_in_flight->flushed_partial_q_slot_tiles = flushed_partial_q_slot_tiles;
    b47c:	0004aa23          	sw	zero, 20(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:857
          next_dram_q_in_flight->dram_ptr_flushed_q_slots = rdptr_flushed_val;     
    b480:	00f49423          	sh	a5, 8(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:858
          next_dram_q_in_flight = next_dram_q_in_flight->next;
    b484:	0204a483          	lw	s1, 32(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:864
          epoch_q_slots_remaining--;
    b488:	000aa783          	lw	a5, 0(s5)
    b48c:	fff78793          	addi	a5, a5, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:859
          l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;
    b490:	0004a903          	lw	s2, 0(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:860
          flushed_partial_q_slot_tiles = next_dram_q_in_flight->flushed_partial_q_slot_tiles;
    b494:	0144ab03          	lw	s6, 20(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:861
          data_rec_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
    b498:	03c95c03          	lhu	s8, 60(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:862
          data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    b49c:	03892b83          	lw	s7, 56(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:863
          q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
    b4a0:	05092c83          	lw	s9, 80(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:864
          epoch_q_slots_remaining--;
    b4a4:	00faa023          	sw	a5, 0(s5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:872
        in_flight_data_rec_chunks--;
    b4a8:	fff98993          	addi	s3, s3, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:874
        if (!in_flight_data_rec_chunks) {
    b4ac:	00098c63          	beqz	s3, b4c4 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x330>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:877
        push_flushed = get_stream_push_flushed_l1(curr_dram_input_stream_state, stream_id, data_rec_chunk_size_bytes);
    b4b0:	000a2583          	lw	a1, 0(s4)
    b4b4:	000b8613          	mv	a2, s7
    b4b8:	00040513          	mv	a0, s0
    b4bc:	b9dfd0ef          	jal	ra, 9058 <get_stream_push_flushed_l1(dram_input_stream_state_t*, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:843
      while (push_flushed) {
    b4c0:	f8051ce3          	bnez	a0, b458 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x2c4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:880
      curr_dram_input_stream_state->epoch_q_slots_remaining = epoch_q_slots_remaining;
    b4c4:	000aa783          	lw	a5, 0(s5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:879
      curr_dram_input_stream_state->next_dram_q_in_flight = next_dram_q_in_flight;
    b4c8:	04942623          	sw	s1, 76(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:880
      curr_dram_input_stream_state->epoch_q_slots_remaining = epoch_q_slots_remaining;
    b4cc:	00f42c23          	sw	a5, 24(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:881
      curr_dram_input_stream_state->in_flight_data_rec_chunks = in_flight_data_rec_chunks;
    b4d0:	01341223          	sh	s3, 4(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:885
}
    b4d4:	05c12083          	lw	ra, 92(sp)
    b4d8:	05812403          	lw	s0, 88(sp)
    b4dc:	05412483          	lw	s1, 84(sp)
    b4e0:	05012903          	lw	s2, 80(sp)
    b4e4:	04c12983          	lw	s3, 76(sp)
    b4e8:	04812a03          	lw	s4, 72(sp)
    b4ec:	04412a83          	lw	s5, 68(sp)
    b4f0:	04012b03          	lw	s6, 64(sp)
    b4f4:	03c12b83          	lw	s7, 60(sp)
    b4f8:	03812c03          	lw	s8, 56(sp)
    b4fc:	03412c83          	lw	s9, 52(sp)
    b500:	03012d03          	lw	s10, 48(sp)
    b504:	02c12d83          	lw	s11, 44(sp)
    b508:	06010113          	addi	sp, sp, 96
    b50c:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:811
          next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = dram_num_partial_q_slot_issued_tiles;
    b510:	0164a823          	sw	s6, 16(s1)
    b514:	ee1ff06f          	j	b3f4 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x260>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:869
          next_dram_q_in_flight->flushed_partial_q_slot_tiles = flushed_partial_q_slot_tiles;
    b518:	0164aa23          	sw	s6, 20(s1)
    b51c:	f8dff06f          	j	b4a8 <process_dram_streaming_read_l1(void*, unsigned long&, unsigned long&, unsigned long&, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x314>

0000b520 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]>:
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:251

inline __attribute__((section("code_l1"))) void risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo &varinst_cmd_info, volatile uint32_t *noc_read_scratch_buf, uint64_t &my_q_table_offset, uint32_t &my_q_rd_ptr, uint64_t dram_next_epoch_ptr) {

  volatile epoch_queue::VarinstCmdInfo* varinst_info;

  uint64_t my_q_entry_offset = (my_q_rd_ptr & (EPOCH_QUEUE_NUM_SLOTS-1)) * epoch_queue::EPOCH_Q_SLOT_SIZE + epoch_queue::EPOCH_Q_SLOTS_OFFSET + my_q_table_offset;
    b520:	8301a783          	lw	a5, -2000(gp) # ffb00030 <my_q_table_offset>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:140
void run_dram_queue_update(
    b524:	e7010113          	addi	sp, sp, -400
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:252
  uint32_t noc_read_dest_buf_offset = my_q_entry_offset % (NOC_WORD_BYTES);
    b528:	01f7f713          	andi	a4, a5, 31
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:140
    b52c:	17812423          	sw	s8, 360(sp)
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:253
  uint32_t noc_read_dest_buf_addr = (uint32_t)(noc_read_scratch_buf);
    b530:	000057b7          	lui	a5, 0x5
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:154
    if (varinst_cmd){
    b534:	00054c03          	lbu	s8, 0(a0)
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:253
    b538:	30078793          	addi	a5, a5, 768 # 5300 <noc_read_scratch_buf>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:140
void run_dram_queue_update(
    b53c:	18112623          	sw	ra, 396(sp)
    b540:	18812423          	sw	s0, 392(sp)
    b544:	18912223          	sw	s1, 388(sp)
    b548:	19212023          	sw	s2, 384(sp)
    b54c:	17312e23          	sw	s3, 380(sp)
    b550:	17412c23          	sw	s4, 376(sp)
    b554:	17512a23          	sw	s5, 372(sp)
    b558:	17612823          	sw	s6, 368(sp)
    b55c:	17712623          	sw	s7, 364(sp)
    b560:	17912223          	sw	s9, 356(sp)
    b564:	17a12023          	sw	s10, 352(sp)
    b568:	15b12e23          	sw	s11, 348(sp)
    b56c:	00a12223          	sw	a0, 4(sp)
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:254
  uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
    b570:	00f707b3          	add	a5, a4, a5
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:154
    if (varinst_cmd){
    b574:	1a0c0463          	beqz	s8, b71c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x1fc>
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:258

  varinst_info = (volatile epoch_queue::VarinstCmdInfo*)noc_read_dest_buf_ptr_addr;

  varinst_cmd_info.dram_addr_lower = varinst_info->dram_addr_lower;
    b578:	0007a883          	lw	a7, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:259
  varinst_cmd_info.dram_addr_upper = varinst_info->dram_addr_upper;
    b57c:	0047d503          	lhu	a0, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:258
  varinst_cmd_info.dram_addr_lower = varinst_info->dram_addr_lower;
    b580:	03112823          	sw	a7, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:259
  varinst_cmd_info.dram_addr_upper = varinst_info->dram_addr_upper;
    b584:	02a11a23          	sh	a0, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:260
  varinst_cmd_info.dram_core_x = varinst_info->dram_core_x;
    b588:	0047a683          	lw	a3, 4(a5)
    b58c:	0106d693          	srli	a3, a3, 0x10
    b590:	03f6f813          	andi	a6, a3, 63
    b594:	03615683          	lhu	a3, 54(sp)
    b598:	fc06f693          	andi	a3, a3, -64
    b59c:	0106e6b3          	or	a3, a3, a6
    b5a0:	02d11b23          	sh	a3, 54(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:261
  varinst_cmd_info.dram_core_y = varinst_info->dram_core_y;
    b5a4:	0047a703          	lw	a4, 4(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:159
        cmd_info_queue_header_addr |= static_cast<uint64_t>(cmd.varinst_cmd_info.dram_core_x & 0x3F) << 48;
    b5a8:	01081813          	slli	a6, a6, 0x10
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:261
    b5ac:	01675713          	srli	a4, a4, 0x16
    b5b0:	03f77313          	andi	t1, a4, 63
    b5b4:	fffff737          	lui	a4, 0xfffff
    b5b8:	03f70713          	addi	a4, a4, 63 # fffff03f <TENSIX_MAILBOX_BASE+0x13f03f>
    b5bc:	00631613          	slli	a2, t1, 0x6
    b5c0:	00e6f733          	and	a4, a3, a4
    b5c4:	00c76733          	or	a4, a4, a2
    b5c8:	02e11b23          	sh	a4, 54(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:262
  varinst_cmd_info.cmd_type = varinst_info->cmd_type;
    b5cc:	0047a683          	lw	a3, 4(a5)
    b5d0:	01471713          	slli	a4, a4, 0x14
    b5d4:	01c6d693          	srli	a3, a3, 0x1c
    b5d8:	00c69693          	slli	a3, a3, 0xc
    b5dc:	01475713          	srli	a4, a4, 0x14
    b5e0:	00d76733          	or	a4, a4, a3
    b5e4:	02e11b23          	sh	a4, 54(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:263
  varinst_cmd_info.num_buffers = varinst_info->num_buffers;
    b5e8:	0087c903          	lbu	s2, 8(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:264
  varinst_cmd_info.reader_index = varinst_info->reader_index;
    b5ec:	0097ca83          	lbu	s5, 9(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:265
  varinst_cmd_info.num_readers = varinst_info->num_readers;
    b5f0:	00a7cb03          	lbu	s6, 10(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:266
  varinst_cmd_info.update_mask = varinst_info->update_mask;
    b5f4:	00c7d703          	lhu	a4, 12(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:263
  varinst_cmd_info.num_buffers = varinst_info->num_buffers;
    b5f8:	03210c23          	sb	s2, 56(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:266
  varinst_cmd_info.update_mask = varinst_info->update_mask;
    b5fc:	02e11e23          	sh	a4, 60(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:267
  varinst_cmd_info.opcode = varinst_info->opcode;
    b600:	00c7a683          	lw	a3, 12(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:264
  varinst_cmd_info.reader_index = varinst_info->reader_index;
    b604:	03510ca3          	sb	s5, 57(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:267
  varinst_cmd_info.opcode = varinst_info->opcode;
    b608:	0106d693          	srli	a3, a3, 0x10
    b60c:	0076f713          	andi	a4, a3, 7
    b610:	03e15683          	lhu	a3, 62(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:265
  varinst_cmd_info.num_readers = varinst_info->num_readers;
    b614:	03610d23          	sb	s6, 58(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:267
  varinst_cmd_info.opcode = varinst_info->opcode;
    b618:	ff86f693          	andi	a3, a3, -8
    b61c:	00e6e6b3          	or	a3, a3, a4
    b620:	02d11f23          	sh	a3, 62(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:268
  varinst_cmd_info.field_size_bytes = varinst_info->field_size_bytes;
    b624:	00c7a703          	lw	a4, 12(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:159
    b628:	01056533          	or	a0, a0, a6
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:268
    b62c:	01075713          	srli	a4, a4, 0x10
    b630:	03877613          	andi	a2, a4, 56
    b634:	fc76f713          	andi	a4, a3, -57
    b638:	00c76733          	or	a4, a4, a2
    b63c:	02e11f23          	sh	a4, 62(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:269
  varinst_cmd_info.operand_0 = varinst_info->operand_0;
    b640:	0107a683          	lw	a3, 16(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:167
             cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdAdd || 
    b644:	00777713          	andi	a4, a4, 7
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:269
    b648:	04d12023          	sw	a3, 64(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:270
  varinst_cmd_info.operand_1 = varinst_info->operand_1;
    b64c:	0147a683          	lw	a3, 20(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:271
  varinst_cmd_info.sync_loc_enable = varinst_info->sync_loc_enable;
    b650:	0187a603          	lw	a2, 24(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:270
  varinst_cmd_info.operand_1 = varinst_info->operand_1;
    b654:	04d12223          	sw	a3, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:271
  varinst_cmd_info.sync_loc_enable = varinst_info->sync_loc_enable;
    b658:	00167693          	andi	a3, a2, 1
    b65c:	04815603          	lhu	a2, 72(sp)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:160
        cmd_info_queue_header_addr |= static_cast<uint64_t>(cmd.varinst_cmd_info.dram_core_y & 0x3F) << 54;
    b660:	01631313          	slli	t1, t1, 0x16
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:271
    b664:	ffe67613          	andi	a2, a2, -2
    b668:	00d66633          	or	a2, a2, a3
    b66c:	04c11423          	sh	a2, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:272
  varinst_cmd_info.sync_loc_dram_core_x = varinst_info->sync_loc_dram_core_x;
    b670:	0187a683          	lw	a3, 24(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:167
             cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdAdd || 
    b674:	ffd70713          	addi	a4, a4, -3
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:272
    b678:	07e6fe13          	andi	t3, a3, 126
    b67c:	f8167693          	andi	a3, a2, -127
    b680:	01c6e6b3          	or	a3, a3, t3
    b684:	04d11423          	sh	a3, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:273
  varinst_cmd_info.sync_loc_dram_core_y = varinst_info->sync_loc_dram_core_y;
    b688:	0187a603          	lw	a2, 24(a5)
    b68c:	ffffee37          	lui	t3, 0xffffe
    b690:	00765613          	srli	a2, a2, 0x7
    b694:	03f67613          	andi	a2, a2, 63
    b698:	07fe0e13          	addi	t3, t3, 127 # ffffe07f <TENSIX_MAILBOX_BASE+0x13e07f>
    b69c:	00761613          	slli	a2, a2, 0x7
    b6a0:	01c6f6b3          	and	a3, a3, t3
    b6a4:	00c6e6b3          	or	a3, a3, a2
    b6a8:	04d11423          	sh	a3, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:274
  varinst_cmd_info.sync_loc_index = varinst_info->sync_loc_index;
    b6ac:	01a7d783          	lhu	a5, 26(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:160
        cmd_info_queue_header_addr |= static_cast<uint64_t>(cmd.varinst_cmd_info.dram_core_y & 0x3F) << 54;
    b6b0:	00656533          	or	a0, a0, t1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:166
        if ((cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdSet || 
    b6b4:	01071713          	slli	a4, a4, 0x10
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:274
    b6b8:	04f11523          	sh	a5, 74(sp)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:161
        cmd_info_num_buffers        = cmd.varinst_cmd_info.num_buffers;
    b6bc:	01091913          	slli	s2, s2, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:160
        cmd_info_queue_header_addr |= static_cast<uint64_t>(cmd.varinst_cmd_info.dram_core_y & 0x3F) << 54;
    b6c0:	03112023          	sw	a7, 32(sp)
    b6c4:	02a12223          	sw	a0, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:166
        if ((cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdSet || 
    b6c8:	01075713          	srli	a4, a4, 0x10
    b6cc:	00200793          	li	a5, 2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:161
        cmd_info_num_buffers        = cmd.varinst_cmd_info.num_buffers;
    b6d0:	01095913          	srli	s2, s2, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:166
        if ((cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdSet || 
    b6d4:	00e7eee3          	bltu	a5, a4, bef0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x9d0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:168
             cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdMul) && loop_iteration != 0){
    b6d8:	0005a783          	lw	a5, 0(a1)
    b6dc:	00078ae3          	beqz	a5, bef0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x9d0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:416
}
    b6e0:	18c12083          	lw	ra, 396(sp)
    b6e4:	18812403          	lw	s0, 392(sp)
    b6e8:	18412483          	lw	s1, 388(sp)
    b6ec:	18012903          	lw	s2, 384(sp)
    b6f0:	17c12983          	lw	s3, 380(sp)
    b6f4:	17812a03          	lw	s4, 376(sp)
    b6f8:	17412a83          	lw	s5, 372(sp)
    b6fc:	17012b03          	lw	s6, 368(sp)
    b700:	16c12b83          	lw	s7, 364(sp)
    b704:	16812c03          	lw	s8, 360(sp)
    b708:	16412c83          	lw	s9, 356(sp)
    b70c:	16012d03          	lw	s10, 352(sp)
    b710:	15c12d83          	lw	s11, 348(sp)
    b714:	19010113          	addi	sp, sp, 400
    b718:	00008067          	ret
risc_get_epoch_update_info(epoch_queue::IOQueueUpdateCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:235
  queue_update_info.queue_header_addr = update_info->queue_header_addr;
    b71c:	0007a603          	lw	a2, 0(a5)
    b720:	0047a683          	lw	a3, 4(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:175
        cmd_info_queue_header_addr  = cmd.queue_update_info.queue_header_addr;
    b724:	02c12023          	sw	a2, 32(sp)
risc_get_epoch_update_info(epoch_queue::IOQueueUpdateCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:235
    b728:	02d12a23          	sw	a3, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:236
  queue_update_info.num_buffers = update_info->num_buffers;
    b72c:	0087c903          	lbu	s2, 8(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:237
  queue_update_info.reader_index = update_info->reader_index;
    b730:	0097ca83          	lbu	s5, 9(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:238
  queue_update_info.num_readers = update_info->num_readers;
    b734:	00a7cb03          	lbu	s6, 10(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:239
  queue_update_info.update_mask = update_info->update_mask;
    b738:	00b7c703          	lbu	a4, 11(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:240
  queue_update_info.header[0] = update_info->header[0];
    b73c:	00c7a503          	lw	a0, 12(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:236
  queue_update_info.num_buffers = update_info->num_buffers;
    b740:	03210c23          	sb	s2, 56(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:240
  queue_update_info.header[0] = update_info->header[0];
    b744:	02a12e23          	sw	a0, 60(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:241
  queue_update_info.header[1] = update_info->header[1];
    b748:	0107a503          	lw	a0, 16(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:176
        cmd_info_num_buffers        = cmd.queue_update_info.num_buffers;
    b74c:	01091913          	slli	s2, s2, 0x10
risc_get_epoch_update_info(epoch_queue::IOQueueUpdateCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:241
    b750:	04a12023          	sw	a0, 64(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:242
  queue_update_info.header[2] = update_info->header[2];
    b754:	0147a503          	lw	a0, 20(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:235
  queue_update_info.queue_header_addr = update_info->queue_header_addr;
    b758:	02c12823          	sw	a2, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:242
  queue_update_info.header[2] = update_info->header[2];
    b75c:	04a12223          	sw	a0, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:243
  queue_update_info.header[3] = update_info->header[3];
    b760:	0187a503          	lw	a0, 24(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:244
  queue_update_info.header[4] = update_info->header[4];
    b764:	01c7a783          	lw	a5, 28(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:237
  queue_update_info.reader_index = update_info->reader_index;
    b768:	03510ca3          	sb	s5, 57(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:238
  queue_update_info.num_readers = update_info->num_readers;
    b76c:	03610d23          	sb	s6, 58(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:239
  queue_update_info.update_mask = update_info->update_mask;
    b770:	02e10da3          	sb	a4, 59(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:243
  queue_update_info.header[3] = update_info->header[3];
    b774:	04a12423          	sw	a0, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:244
  queue_update_info.header[4] = update_info->header[4];
    b778:	04f12623          	sw	a5, 76(sp)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:175
        cmd_info_queue_header_addr  = cmd.queue_update_info.queue_header_addr;
    b77c:	02d12223          	sw	a3, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:176
        cmd_info_num_buffers        = cmd.queue_update_info.num_buffers;
    b780:	01095913          	srli	s2, s2, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:181
    bool allocate_queue = !varinst_cmd && (cmd.queue_update_info.update_mask == 0);
    b784:	78071063          	bnez	a4, bf04 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x9e4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:182
    bool single_sync_mode = allocate_queue || (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable);
    b788:	00100793          	li	a5, 1
    b78c:	00f12423          	sw	a5, 8(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:181
    bool allocate_queue = !varinst_cmd && (cmd.queue_update_info.update_mask == 0);
    b790:	00100c13          	li	s8, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:189
    if (cmd_info_num_buffers > 1) {
    b794:	00100793          	li	a5, 1
    b798:	0727fc63          	bgeu	a5, s2, b810 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x2f0>
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:184
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    b79c:	02012583          	lw	a1, 32(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    b7a0:	02412603          	lw	a2, 36(sp)
    b7a4:	01061793          	slli	a5, a2, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    b7a8:	02412603          	lw	a2, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    b7ac:	02412803          	lw	a6, 36(sp)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:194
        uint64_t queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    b7b0:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    b7b4:	01065613          	srli	a2, a2, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    b7b8:	01685813          	srli	a6, a6, 0x16
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    b7bc:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    b7c0:	03f67613          	andi	a2, a2, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    b7c4:	03f87813          	andi	a6, a6, 63
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:194
    b7c8:	10050a63          	beqz	a0, b8dc <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x3bc>
    b7cc:	ffb00737          	lui	a4, 0xffb00
    b7d0:	01d74703          	lbu	a4, 29(a4) # ffb0001d <TENSIX_MAILBOX_BASE+0xffc4001d>
    b7d4:	fff70713          	addi	a4, a4, -1
    b7d8:	41070833          	sub	a6, a4, a6
    b7dc:	ffb00737          	lui	a4, 0xffb00
    b7e0:	01c74703          	lbu	a4, 28(a4) # ffb0001c <TENSIX_MAILBOX_BASE+0xffc4001c>
    b7e4:	00a81813          	slli	a6, a6, 0xa
    b7e8:	fff70713          	addi	a4, a4, -1
    b7ec:	40c70633          	sub	a2, a4, a2
    b7f0:	00461613          	slli	a2, a2, 0x4
    b7f4:	00c7e633          	or	a2, a5, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:195
        ncrisc_noc_fast_read_any_len_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_addr_ptr, 
    b7f8:	000236b7          	lui	a3, 0x23
    b7fc:	00300793          	li	a5, 3
    b800:	00391713          	slli	a4, s2, 0x3
    b804:	4a068693          	addi	a3, a3, 1184 # 234a0 <substitutes.cpp.cd30c172+0x4b8a>
    b808:	01066633          	or	a2, a2, a6
    b80c:	a48fe0ef          	jal	ra, 9a54 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:213
    if (allocate_queue) {
    b810:	0c0c0a63          	beqz	s8, b8e4 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x3c4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:214
        header_addr_ptr[0] = 0;
    b814:	0002a7b7          	lui	a5, 0x2a
    b818:	ca07a023          	sw	zero, -864(a5) # 29ca0 <substitutes.cpp.cd30c172+0xb38a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:215
        header_addr_ptr[1] = 0;
    b81c:	ca07a223          	sw	zero, -860(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:216
        header_addr_ptr[2] = 0;
    b820:	ca07a423          	sw	zero, -856(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:217
        header_addr_ptr[3] = 0;
    b824:	ca07a623          	sw	zero, -852(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:218
        header_addr_ptr[4] = 0;
    b828:	ca07a823          	sw	zero, -848(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:226
    header_addr_ptr[5] = 0;
    b82c:	0002a7b7          	lui	a5, 0x2a
    b830:	ca07aa23          	sw	zero, -844(a5) # 29cb4 <substitutes.cpp.cd30c172+0xb39e>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:227
    header_addr_ptr[6] = 0;
    b834:	ca07ac23          	sw	zero, -840(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:228
    header_addr_ptr[7] = 0;
    b838:	ca07ae23          	sw	zero, -836(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:231
    for (uint32_t i = 0; i < cmd_info_num_buffers; i++) {
    b83c:	00000793          	li	a5, 0
    b840:	0f27e263          	bltu	a5, s2, b924 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x404>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:394
                            l1_ptrs->wr_queue_update_stride = DRAM_STRIDE_WRAP_BIT + reader_index + 1;
    b844:	000047b7          	lui	a5, 0x4
    b848:	00178793          	addi	a5, a5, 1 # 4001 <__trisc0_size+0x1>
    b84c:	00fa87b3          	add	a5, s5, a5
    b850:	01079793          	slli	a5, a5, 0x10
    b854:	0107d793          	srli	a5, a5, 0x10
    b858:	00f12823          	sw	a5, 16(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:365
                            l1_ptrs->wr_queue_update_stride = reader_index + 1;
    b85c:	001a8793          	addi	a5, s5, 1
    b860:	00f12a23          	sw	a5, 20(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:243
        while (!ncrisc_noc_reads_flushed_l1(loading_noc, NCRISC_HEADER_RD_TRID));
    b864:	84f1c783          	lbu	a5, -1969(gp) # ffb0004f <loading_noc>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    b868:	ffb20737          	lui	a4, 0xffb20
    b86c:	01079793          	slli	a5, a5, 0x10
    b870:	24c70713          	addi	a4, a4, 588 # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
    b874:	00e78733          	add	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    b878:	00072683          	lw	a3, 0(a4)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:243
    b87c:	fe069ee3          	bnez	a3, b878 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x358>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    b880:	ffb20737          	lui	a4, 0xffb20
    b884:	24070713          	addi	a4, a4, 576 # ffb20240 <TENSIX_MAILBOX_BASE+0xffc60240>
    b888:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    b88c:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:244
        while (!ncrisc_noc_nonposted_writes_flushed_l1(loading_noc, NCRISC_WR_DEF_TRID));
    b890:	fe071ee3          	bnez	a4, b88c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x36c>
    b894:	05010a13          	addi	s4, sp, 80
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:246
        for (int k = 0; k < cmd_info_num_buffers; k++) {
    b898:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:237
        all_done = true;
    b89c:	00100d13          	li	s10, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:246
        for (int k = 0; k < cmd_info_num_buffers; k++) {
    b8a0:	092ccc63          	blt	s9, s2, b938 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x418>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:236
    while (!all_done) {
    b8a4:	fc0d00e3          	beqz	s10, b864 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x344>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:414
    while (!ncrisc_noc_reads_flushed_l1(loading_noc, NCRISC_HEADER_RD_TRID));
    b8a8:	84f1c783          	lbu	a5, -1969(gp) # ffb0004f <loading_noc>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    b8ac:	ffb20737          	lui	a4, 0xffb20
    b8b0:	01079793          	slli	a5, a5, 0x10
    b8b4:	24c70713          	addi	a4, a4, 588 # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
    b8b8:	00e78733          	add	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    b8bc:	00072683          	lw	a3, 0(a4)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:414
    b8c0:	fe069ee3          	bnez	a3, b8bc <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x39c>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    b8c4:	ffb20737          	lui	a4, 0xffb20
    b8c8:	24070713          	addi	a4, a4, 576 # ffb20240 <TENSIX_MAILBOX_BASE+0xffc60240>
    b8cc:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    b8d0:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:415
    while (!ncrisc_noc_nonposted_writes_flushed_l1(loading_noc, NCRISC_WR_DEF_TRID));
    b8d4:	fe071ee3          	bnez	a4, b8d0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x3b0>
    b8d8:	e09ff06f          	j	b6e0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x1c0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:194
        uint64_t queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    b8dc:	00a81813          	slli	a6, a6, 0xa
    b8e0:	f11ff06f          	j	b7f0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x2d0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:219
    } else if (!varinst_cmd){
    b8e4:	00412783          	lw	a5, 4(sp)
    b8e8:	0007c783          	lbu	a5, 0(a5)
    b8ec:	f40790e3          	bnez	a5, b82c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x30c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:220
        header_addr_ptr[0] = cmd.queue_update_info.header[0];
    b8f0:	03c12703          	lw	a4, 60(sp)
    b8f4:	0002a7b7          	lui	a5, 0x2a
    b8f8:	c8078793          	addi	a5, a5, -896 # 29c80 <substitutes.cpp.cd30c172+0xb36a>
    b8fc:	02e7a023          	sw	a4, 32(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:221
        header_addr_ptr[1] = cmd.queue_update_info.header[1];
    b900:	04012703          	lw	a4, 64(sp)
    b904:	02e7a223          	sw	a4, 36(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:222
        header_addr_ptr[2] = cmd.queue_update_info.header[2];
    b908:	04412703          	lw	a4, 68(sp)
    b90c:	02e7a423          	sw	a4, 40(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:223
        header_addr_ptr[3] = cmd.queue_update_info.header[3];
    b910:	04812703          	lw	a4, 72(sp)
    b914:	02e7a623          	sw	a4, 44(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:224
        header_addr_ptr[4] = cmd.queue_update_info.header[4];
    b918:	04c12703          	lw	a4, 76(sp)
    b91c:	02e7a823          	sw	a4, 48(a5)
    b920:	f0dff06f          	j	b82c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x30c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:232
      state[i] = 0;
    b924:	05010713          	addi	a4, sp, 80
    b928:	00f70733          	add	a4, a4, a5
    b92c:	00070023          	sb	zero, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:231
    for (uint32_t i = 0; i < cmd_info_num_buffers; i++) {
    b930:	00178793          	addi	a5, a5, 1
    b934:	f0dff06f          	j	b840 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x320>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:247
            if (state[k] == 4)
    b938:	000a4603          	lbu	a2, 0(s4)
    b93c:	00400793          	li	a5, 4
    b940:	00f60c63          	beq	a2, a5, b958 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x438>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:250
            if (single_sync_mode) {
    b944:	00812783          	lw	a5, 8(sp)
    b948:	00078e63          	beqz	a5, b964 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x444>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:251
                if (k > 0) {  // skip since remaining are allocated all at once
    b94c:	000c8c63          	beqz	s9, b964 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x444>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:252
                    state[k] = state[0];
    b950:	05014783          	lbu	a5, 80(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:403
                    state[k] = 4;
    b954:	00fa0023          	sb	a5, 0(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:246
        for (int k = 0; k < cmd_info_num_buffers; k++) {
    b958:	001c8c93          	addi	s9, s9, 1
    b95c:	001a0a13          	addi	s4, s4, 1
    b960:	f41ff06f          	j	b8a0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x380>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:268
            if (has_multi_buffers) {
    b964:	00100793          	li	a5, 1
    b968:	1327f463          	bgeu	a5, s2, ba90 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x570>
    b96c:	000237b7          	lui	a5, 0x23
    b970:	4a078793          	addi	a5, a5, 1184 # 234a0 <substitutes.cpp.cd30c172+0x4b8a>
    b974:	003c9593          	slli	a1, s9, 0x3
    b978:	00f585b3          	add	a1, a1, a5
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:184
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    b97c:	0005a683          	lw	a3, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    b980:	0045a703          	lw	a4, 4(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:186
  dram_addr_offset = dram_addr_offset_lo | (dram_addr_offset_hi << 32);
    b984:	01071513          	slli	a0, a4, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    b988:	0045a703          	lw	a4, 4(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    b98c:	0045a783          	lw	a5, 4(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:186
  dram_addr_offset = dram_addr_offset_lo | (dram_addr_offset_hi << 32);
    b990:	01055513          	srli	a0, a0, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    b994:	01075713          	srli	a4, a4, 0x10
    b998:	03f77713          	andi	a4, a4, 63
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:276
            uint64_t queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    b99c:	84f1c803          	lbu	a6, -1969(gp) # ffb0004f <loading_noc>
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    b9a0:	0167d793          	srli	a5, a5, 0x16
    b9a4:	03f7f793          	andi	a5, a5, 63
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:276
    b9a8:	10080663          	beqz	a6, bab4 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x594>
    b9ac:	ffb005b7          	lui	a1, 0xffb00
    b9b0:	01d5c583          	lbu	a1, 29(a1) # ffb0001d <TENSIX_MAILBOX_BASE+0xffc4001d>
    b9b4:	fff58593          	addi	a1, a1, -1
    b9b8:	40f587b3          	sub	a5, a1, a5
    b9bc:	ffb005b7          	lui	a1, 0xffb00
    b9c0:	01c5c583          	lbu	a1, 28(a1) # ffb0001c <TENSIX_MAILBOX_BASE+0xffc4001c>
    b9c4:	00a79793          	slli	a5, a5, 0xa
    b9c8:	fff58593          	addi	a1, a1, -1
    b9cc:	40e58733          	sub	a4, a1, a4
    b9d0:	00471713          	slli	a4, a4, 0x4
    b9d4:	00f76733          	or	a4, a4, a5
    b9d8:	00a76733          	or	a4, a4, a0
    b9dc:	02d12423          	sw	a3, 40(sp)
    b9e0:	02e12623          	sw	a4, 44(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:278
            if (allocate_queue) {
    b9e4:	100c0263          	beqz	s8, bae8 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x5c8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:279
                queue_sync_ptr = NOC_XY_ADDR(
    b9e8:	04012783          	lw	a5, 64(sp)
    b9ec:	03c12583          	lw	a1, 60(sp)
    b9f0:	0c081663          	bnez	a6, babc <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x59c>
    b9f4:	00a79793          	slli	a5, a5, 0xa
    b9f8:	00459413          	slli	s0, a1, 0x4
    b9fc:	04412483          	lw	s1, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:284
                queue_sync_ptr = NOC_XY_ADDR(
    ba00:	000385b7          	lui	a1, 0x38
    ba04:	68858593          	addi	a1, a1, 1672 # 38688 <substitutes.cpp.cd30c172+0x19d72>
    ba08:	00b484b3          	add	s1, s1, a1
    ba0c:	00549493          	slli	s1, s1, 0x5
    ba10:	00f46433          	or	s0, s0, a5
    ba14:	06000793          	li	a5, 96
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:292
            uint32_t l1_ptr_addr = ((uint32_t)queue_addr_l1) + MAX_DRAM_QUEUES_TO_UPDATE*8 + k*sizeof(dram_io_state_t);
    ba18:	00024337          	lui	t1, 0x24
    ba1c:	02fc87b3          	mul	a5, s9, a5
    ba20:	ca030313          	addi	t1, t1, -864 # 23ca0 <substitutes.cpp.cd30c172+0x538a>
    ba24:	00f12623          	sw	a5, 12(sp)
    ba28:	00678bb3          	add	s7, a5, t1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:295
            if (state[k] == 0 || state[k] == 2) {
    ba2c:	0fd67793          	andi	a5, a2, 253
    ba30:	12079c63          	bnez	a5, bb68 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x648>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    ba34:	11d007b7          	lui	a5, 0x11d00
    ba38:	ffb20737          	lui	a4, 0xffb20
    ba3c:	00178793          	addi	a5, a5, 1 # 11d00001 <substitutes.cpp.cd30c172+0x11ce16eb>
    ba40:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:297
                while (!ncrisc_noc_fast_read_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    ba44:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    ba48:	ffb21737          	lui	a4, 0xffb21
    ba4c:	01051793          	slli	a5, a0, 0x10
    ba50:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    ba54:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    ba58:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:297
    ba5c:	fe071ee3          	bnez	a4, ba58 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x538>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:298
                ncrisc_noc_fast_read_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_sync_ptr, l1_ptr_addr, DRAM_HEADER_SIZE, NCRISC_HEADER_RD_TRID);
    ba60:	00300793          	li	a5, 3
    ba64:	02000713          	li	a4, 32
    ba68:	000b8693          	mv	a3, s7
    ba6c:	00048593          	mv	a1, s1
    ba70:	00040613          	mv	a2, s0
    ba74:	f5dfd0ef          	jal	ra, 99d0 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:308
                if (state[k] == 2)
    ba78:	000a4703          	lbu	a4, 0(s4)
    ba7c:	00200793          	li	a5, 2
    ba80:	0ef71063          	bne	a4, a5, bb60 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x640>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:309
                    state[k] = 3;
    ba84:	00300793          	li	a5, 3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:405
                    state[k] = 2;
    ba88:	00fa0023          	sb	a5, 0(s4)
    ba8c:	3bc0006f          	j	be48 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x928>
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:168
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    ba90:	02012683          	lw	a3, 32(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:169
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    ba94:	02412703          	lw	a4, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:170
  dram_addr_offset = dram_addr_offset_lo | (dram_addr_offset_hi << 32);
    ba98:	01071513          	slli	a0, a4, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    ba9c:	02412703          	lw	a4, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:170
  dram_addr_offset = dram_addr_offset_lo | (dram_addr_offset_hi << 32);
    baa0:	01055513          	srli	a0, a0, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    baa4:	01075713          	srli	a4, a4, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    baa8:	02412783          	lw	a5, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    baac:	03f77713          	andi	a4, a4, 63
    bab0:	eedff06f          	j	b99c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x47c>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:276
            uint64_t queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    bab4:	00a79793          	slli	a5, a5, 0xa
    bab8:	f19ff06f          	j	b9d0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x4b0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:279
                queue_sync_ptr = NOC_XY_ADDR(
    babc:	ffb00537          	lui	a0, 0xffb00
    bac0:	01d54403          	lbu	s0, 29(a0) # ffb0001d <TENSIX_MAILBOX_BASE+0xffc4001d>
    bac4:	ffb00537          	lui	a0, 0xffb00
    bac8:	40f40433          	sub	s0, s0, a5
    bacc:	fff40413          	addi	s0, s0, -1
    bad0:	00a41793          	slli	a5, s0, 0xa
    bad4:	01c54403          	lbu	s0, 28(a0) # ffb0001c <TENSIX_MAILBOX_BASE+0xffc4001c>
    bad8:	40b40433          	sub	s0, s0, a1
    badc:	fff40413          	addi	s0, s0, -1
    bae0:	00441413          	slli	s0, s0, 0x4
    bae4:	f19ff06f          	j	b9fc <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x4dc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:283
            } else if (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable){
    bae8:	00412783          	lw	a5, 4(sp)
    baec:	0007c783          	lbu	a5, 0(a5)
    baf0:	06078263          	beqz	a5, bb54 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x634>
    baf4:	04815783          	lhu	a5, 72(sp)
    baf8:	0017f793          	andi	a5, a5, 1
    bafc:	04078c63          	beqz	a5, bb54 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x634>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:284
                queue_sync_ptr = NOC_XY_ADDR(
    bb00:	04812583          	lw	a1, 72(sp)
    bb04:	0075d413          	srli	s0, a1, 0x7
    bb08:	03f47513          	andi	a0, s0, 63
    bb0c:	0015d413          	srli	s0, a1, 0x1
    bb10:	03f47593          	andi	a1, s0, 63
    bb14:	00081a63          	bnez	a6, bb28 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x608>
    bb18:	00a51793          	slli	a5, a0, 0xa
    bb1c:	00459413          	slli	s0, a1, 0x4
    bb20:	04a15483          	lhu	s1, 74(sp)
    bb24:	eddff06f          	j	ba00 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x4e0>
    bb28:	ffb007b7          	lui	a5, 0xffb00
    bb2c:	01d7c783          	lbu	a5, 29(a5) # ffb0001d <TENSIX_MAILBOX_BASE+0xffc4001d>
    bb30:	fff78793          	addi	a5, a5, -1
    bb34:	40a78433          	sub	s0, a5, a0
    bb38:	ffb00537          	lui	a0, 0xffb00
    bb3c:	00a41793          	slli	a5, s0, 0xa
    bb40:	01c54403          	lbu	s0, 28(a0) # ffb0001c <TENSIX_MAILBOX_BASE+0xffc4001c>
    bb44:	fff40413          	addi	s0, s0, -1
    bb48:	40b40433          	sub	s0, s0, a1
    bb4c:	00441413          	slli	s0, s0, 0x4
    bb50:	fd1ff06f          	j	bb20 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x600>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:289
                queue_sync_ptr = queue_addr_ptr;
    bb54:	00068493          	mv	s1, a3
    bb58:	00070413          	mv	s0, a4
    bb5c:	eb9ff06f          	j	ba14 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x4f4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:311
                    state[k] = 1;
    bb60:	00100793          	li	a5, 1
    bb64:	f25ff06f          	j	ba88 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x568>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:313
            } else if (state[k] == 1) {
    bb68:	00100593          	li	a1, 1
    bb6c:	2eb61263          	bne	a2, a1, be50 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x930>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    bb70:	11d007b7          	lui	a5, 0x11d00
    bb74:	00278793          	addi	a5, a5, 2 # 11d00002 <substitutes.cpp.cd30c172+0x11ce16ec>
    bb78:	ffb205b7          	lui	a1, 0xffb20
    bb7c:	10f5a623          	sw	a5, 268(a1) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:318
                uint32_t rd_stride = l1_ptrs->rd_queue_update_stride; 
    bb80:	014bd783          	lhu	a5, 20(s7) # ffff8014 <TENSIX_MAILBOX_BASE+0x138014>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:320
                if (!has_multi_readers || reader_index == rd_stride) {
    bb84:	01667863          	bgeu	a2, s6, bb94 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x674>
    bb88:	2afa9e63          	bne	s5, a5, be44 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x924>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:321
                    if (!has_multi_readers || reader_index == total_readers-1) {
    bb8c:	fffb0793          	addi	a5, s6, -1
    bb90:	2afa9663          	bne	s5, a5, be3c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x91c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:322
                        if (varinst_cmd){
    bb94:	00412783          	lw	a5, 4(sp)
    bb98:	0007c783          	lbu	a5, 0(a5)
    bb9c:	08078463          	beqz	a5, bc24 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x704>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:323
                            run_varinst_cmd_dram_rmw(cmd.varinst_cmd_info, queue_addr_ptr, header_addr, header_addr_ptr);
    bba0:	02810593          	addi	a1, sp, 40
    bba4:	03010513          	addi	a0, sp, 48
    bba8:	870ff0ef          	jal	ra, ac18 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:340
                        if (single_sync_mode) {
    bbac:	00812783          	lw	a5, 8(sp)
    bbb0:	16079863          	bnez	a5, bd20 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x800>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:360
                    if (has_multi_readers) {
    bbb4:	00100793          	li	a5, 1
    bbb8:	0767f263          	bgeu	a5, s6, bc1c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x6fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:361
                        if (reader_index == total_readers-1) {
    bbbc:	fffb0793          	addi	a5, s6, -1
    bbc0:	26fa9e63          	bne	s5, a5, be3c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x91c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:362
                            l1_ptrs->wr_queue_update_stride = DRAM_STRIDE_WRAP_BIT + 0;
    bbc4:	000047b7          	lui	a5, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:365
                            l1_ptrs->wr_queue_update_stride = reader_index + 1;
    bbc8:	02fb9a23          	sh	a5, 52(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:366
                            l1_ptrs->rd_queue_update_stride = reader_index + 1;
    bbcc:	00fb9a23          	sh	a5, 20(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:369
                        while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    bbd0:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    bbd4:	ffb21737          	lui	a4, 0xffb21
    bbd8:	01051793          	slli	a5, a0, 0x10
    bbdc:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    bbe0:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    bbe4:	0007a703          	lw	a4, 0(a5) # 4000 <__trisc0_size>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:369
    bbe8:	fe071ee3          	bnez	a4, bbe4 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x6c4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:370
                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_queue_update_stride)), queue_sync_ptr+DRAM_BUF_QUEUE_UPDATE_STRIDE_OFFSET, 2,
    bbec:	00c12583          	lw	a1, 12(sp)
    bbf0:	01448693          	addi	a3, s1, 20
    bbf4:	00024637          	lui	a2, 0x24
    bbf8:	0096b733          	sltu	a4, a3, s1
    bbfc:	cd460613          	addi	a2, a2, -812 # 23cd4 <substitutes.cpp.cd30c172+0x53be>
    bc00:	00c58633          	add	a2, a1, a2
    bc04:	00000893          	li	a7, 0
    bc08:	00100813          	li	a6, 1
    bc0c:	00200793          	li	a5, 2
    bc10:	00870733          	add	a4, a4, s0
    bc14:	00300593          	li	a1, 3
    bc18:	8ddfd0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:405
                    state[k] = 2;
    bc1c:	00200793          	li	a5, 2
    bc20:	e69ff06f          	j	ba88 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x568>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:325
                            if (allocate_queue || cmd.queue_update_info.update_mask == 0xff) {
    bc24:	000c1863          	bnez	s8, bc34 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x714>
    bc28:	03b14603          	lbu	a2, 59(sp)
    bc2c:	0ff00793          	li	a5, 255
    bc30:	04f61063          	bne	a2, a5, bc70 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x750>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:326
                                while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    bc34:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    bc38:	ffb21637          	lui	a2, 0xffb21
    bc3c:	01051793          	slli	a5, a0, 0x10
    bc40:	c2860613          	addi	a2, a2, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    bc44:	00c787b3          	add	a5, a5, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    bc48:	0007a603          	lw	a2, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:326
    bc4c:	fe061ee3          	bnez	a2, bc48 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x728>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:327
                                ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[0])), queue_addr_ptr, DRAM_HEADER_SIZE,
    bc50:	0002a637          	lui	a2, 0x2a
    bc54:	00000893          	li	a7, 0
    bc58:	00100813          	li	a6, 1
    bc5c:	02000793          	li	a5, 32
    bc60:	ca060613          	addi	a2, a2, -864 # 29ca0 <substitutes.cpp.cd30c172+0xb38a>
    bc64:	00300593          	li	a1, 3
    bc68:	88dfd0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    bc6c:	f41ff06f          	j	bbac <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x68c>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    bc70:	ffb21eb7          	lui	t4, 0xffb21
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:334
                                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[m])), queue_addr_ptr + 4*m, 4,
    bc74:	0002af37          	lui	t5, 0x2a
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:325
                            if (allocate_queue || cmd.queue_update_info.update_mask == 0xff) {
    bc78:	00000d13          	li	s10, 0
    bc7c:	00000d93          	li	s11, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:330
                                for (int m = 0; m < 8; m++) {
    bc80:	00000e13          	li	t3, 0
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    bc84:	c28e8e93          	addi	t4, t4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:334
                                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[m])), queue_addr_ptr + 4*m, 4,
    bc88:	ca0f0f13          	addi	t5, t5, -864 # 29ca0 <substitutes.cpp.cd30c172+0xb38a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:330
                                for (int m = 0; m < 8; m++) {
    bc8c:	02000f93          	li	t6, 32
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:331
                                    bool update_word = (cmd.queue_update_info.update_mask >> m) & 0x1;
    bc90:	03b14783          	lbu	a5, 59(sp)
    bc94:	41c7d7b3          	sra	a5, a5, t3
    bc98:	0017f793          	andi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:332
                                    if (update_word) {
    bc9c:	06078263          	beqz	a5, bd00 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x7e0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:333
                                        while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    bca0:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    bca4:	01051793          	slli	a5, a0, 0x10
    bca8:	01d787b3          	add	a5, a5, t4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    bcac:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:333
    bcb0:	fe071ee3          	bnez	a4, bcac <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x78c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:334
                                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[m])), queue_addr_ptr + 4*m, 4,
    bcb4:	02812683          	lw	a3, 40(sp)
    bcb8:	02c12703          	lw	a4, 44(sp)
    bcbc:	00dd06b3          	add	a3, s10, a3
    bcc0:	01a6b633          	sltu	a2, a3, s10
    bcc4:	00ed8733          	add	a4, s11, a4
    bcc8:	00400793          	li	a5, 4
    bccc:	00e60733          	add	a4, a2, a4
    bcd0:	00000893          	li	a7, 0
    bcd4:	01ed0633          	add	a2, s10, t5
    bcd8:	00100813          	li	a6, 1
    bcdc:	00300593          	li	a1, 3
    bce0:	01c12c23          	sw	t3, 24(sp)
    bce4:	811fd0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    bce8:	ffb217b7          	lui	a5, 0xffb21
    bcec:	c2878e93          	addi	t4, a5, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    bcf0:	01812e03          	lw	t3, 24(sp)
    bcf4:	0002a7b7          	lui	a5, 0x2a
    bcf8:	02000f93          	li	t6, 32
    bcfc:	ca078f13          	addi	t5, a5, -864 # 29ca0 <substitutes.cpp.cd30c172+0xb38a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:330
                                for (int m = 0; m < 8; m++) {
    bd00:	004d0793          	addi	a5, s10, 4
    bd04:	01a7b733          	sltu	a4, a5, s10
    bd08:	001e0e13          	addi	t3, t3, 1
    bd0c:	00078d13          	mv	s10, a5
    bd10:	01b70db3          	add	s11, a4, s11
    bd14:	f7f79ee3          	bne	a5, t6, bc90 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x770>
    bd18:	f60d9ce3          	bnez	s11, bc90 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x770>
    bd1c:	e91ff06f          	j	bbac <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x68c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:341
                            if (has_multi_buffers) {
    bd20:	00100793          	li	a5, 1
    bd24:	0f27fc63          	bgeu	a5, s2, be1c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x8fc>
    bd28:	000237b7          	lui	a5, 0x23
    bd2c:	4a078793          	addi	a5, a5, 1184 # 234a0 <substitutes.cpp.cd30c172+0x4b8a>
    bd30:	00f12c23          	sw	a5, 24(sp)
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    bd34:	000107b7          	lui	a5, 0x10
    bd38:	fff78793          	addi	a5, a5, -1 # ffff <dram_stream_intf.cc.5f8411f1+0x1bec>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    bd3c:	ffb21d37          	lui	s10, 0xffb21
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:343
                                for (int b = 1; b < cmd_info_num_buffers; b++) {
    bd40:	00100d93          	li	s11, 1
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:185
    bd44:	00f12e23          	sw	a5, 28(sp)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    bd48:	c28d0d13          	addi	s10, s10, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:346
                                    queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    bd4c:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:343
                                for (int b = 1; b < cmd_info_num_buffers; b++) {
    bd50:	0d2dd663          	bge	s11, s2, be1c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x8fc>
    bd54:	01812783          	lw	a5, 24(sp)
    bd58:	003d9593          	slli	a1, s11, 0x3
    bd5c:	00f585b3          	add	a1, a1, a5
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:184
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    bd60:	0005a683          	lw	a3, 0(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    bd64:	0045a783          	lw	a5, 4(a1)
    bd68:	01c12703          	lw	a4, 28(sp)
    bd6c:	00e7f633          	and	a2, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    bd70:	0045a783          	lw	a5, 4(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    bd74:	0045a703          	lw	a4, 4(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    bd78:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    bd7c:	01675713          	srli	a4, a4, 0x16
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    bd80:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    bd84:	03f77713          	andi	a4, a4, 63
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:346
                                    queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    bd88:	06050663          	beqz	a0, bdf4 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x8d4>
    bd8c:	ffb005b7          	lui	a1, 0xffb00
    bd90:	01d5c583          	lbu	a1, 29(a1) # ffb0001d <TENSIX_MAILBOX_BASE+0xffc4001d>
    bd94:	fff58593          	addi	a1, a1, -1
    bd98:	40e58733          	sub	a4, a1, a4
    bd9c:	ffb005b7          	lui	a1, 0xffb00
    bda0:	01c5c583          	lbu	a1, 28(a1) # ffb0001c <TENSIX_MAILBOX_BASE+0xffc4001c>
    bda4:	00a71713          	slli	a4, a4, 0xa
    bda8:	fff58593          	addi	a1, a1, -1
    bdac:	40f587b3          	sub	a5, a1, a5
    bdb0:	00479793          	slli	a5, a5, 0x4
    bdb4:	00f667b3          	or	a5, a2, a5
    bdb8:	00e7e733          	or	a4, a5, a4
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    bdbc:	01051793          	slli	a5, a0, 0x10
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:346
    bdc0:	02d12423          	sw	a3, 40(sp)
    bdc4:	02e12623          	sw	a4, 44(sp)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    bdc8:	01a787b3          	add	a5, a5, s10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    bdcc:	0007a603          	lw	a2, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:347
                                    while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    bdd0:	fe061ee3          	bnez	a2, bdcc <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x8ac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:348
                                    if (varinst_cmd){
    bdd4:	00412783          	lw	a5, 4(sp)
    bdd8:	0007c783          	lbu	a5, 0(a5)
    bddc:	02078063          	beqz	a5, bdfc <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x8dc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:349
                                        run_varinst_cmd_dram_rmw(cmd.varinst_cmd_info, queue_addr_ptr, header_addr, header_addr_ptr);
    bde0:	02810593          	addi	a1, sp, 40
    bde4:	03010513          	addi	a0, sp, 48
    bde8:	e31fe0ef          	jal	ra, ac18 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:343
                                for (int b = 1; b < cmd_info_num_buffers; b++) {
    bdec:	001d8d93          	addi	s11, s11, 1
    bdf0:	f5dff06f          	j	bd4c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x82c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:346
                                    queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    bdf4:	00a71713          	slli	a4, a4, 0xa
    bdf8:	fb9ff06f          	j	bdb0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x890>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:351
                                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[0])), queue_addr_ptr, DRAM_HEADER_SIZE,
    bdfc:	0002a637          	lui	a2, 0x2a
    be00:	00000893          	li	a7, 0
    be04:	00100813          	li	a6, 1
    be08:	02000793          	li	a5, 32
    be0c:	ca060613          	addi	a2, a2, -864 # 29ca0 <substitutes.cpp.cd30c172+0xb38a>
    be10:	00300593          	li	a1, 3
    be14:	ee0fd0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    be18:	fd5ff06f          	j	bdec <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x8cc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:356
                            while (!ncrisc_noc_nonposted_writes_flushed_l1(loading_noc, NCRISC_WR_DEF_TRID));
    be1c:	84f1c783          	lbu	a5, -1969(gp) # ffb0004f <loading_noc>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    be20:	ffb20737          	lui	a4, 0xffb20
    be24:	01079793          	slli	a5, a5, 0x10
    be28:	24070713          	addi	a4, a4, 576 # ffb20240 <TENSIX_MAILBOX_BASE+0xffc60240>
    be2c:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    be30:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:356
    be34:	fe071ee3          	bnez	a4, be30 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x910>
    be38:	d7dff06f          	j	bbb4 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x694>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:365
                            l1_ptrs->wr_queue_update_stride = reader_index + 1;
    be3c:	01412783          	lw	a5, 20(sp)
    be40:	d89ff06f          	j	bbc8 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x6a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:377
                    state[k] = 0;
    be44:	000a0023          	sb	zero, 0(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:406
                    all_done = false;
    be48:	00000d13          	li	s10, 0
    be4c:	b0dff06f          	j	b958 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x438>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:381
            } else if (state[k] == 3) {
    be50:	00300793          	li	a5, 3
    be54:	b0f612e3          	bne	a2, a5, b958 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x438>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    be58:	11d007b7          	lui	a5, 0x11d00
    be5c:	ffb20737          	lui	a4, 0xffb20
    be60:	00378793          	addi	a5, a5, 3 # 11d00003 <substitutes.cpp.cd30c172+0x11ce16ed>
    be64:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:386
                uint32_t rd_stride = l1_ptrs->rd_queue_update_stride;
    be68:	014bd703          	lhu	a4, 20(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:388
                if (!has_multi_readers || (reader_index + DRAM_STRIDE_WRAP_BIT) == rd_stride) {
    be6c:	0765f663          	bgeu	a1, s6, bed8 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x9b8>
    be70:	000047b7          	lui	a5, 0x4
    be74:	00fa87b3          	add	a5, s5, a5
    be78:	daf712e3          	bne	a4, a5, bc1c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x6fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:390
                        if (reader_index == total_readers-1) {
    be7c:	fffb0793          	addi	a5, s6, -1
    be80:	06fa9063          	bne	s5, a5, bee0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x9c0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:391
                            l1_ptrs->wr_queue_update_stride = 0;
    be84:	020b9a23          	sh	zero, 52(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:392
                            l1_ptrs->rd_queue_update_stride = 0;
    be88:	000b9a23          	sh	zero, 20(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:398
                        while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    be8c:	84f1c503          	lbu	a0, -1969(gp) # ffb0004f <loading_noc>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    be90:	ffb21737          	lui	a4, 0xffb21
    be94:	01051793          	slli	a5, a0, 0x10
    be98:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    be9c:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    bea0:	0007a703          	lw	a4, 0(a5) # 4000 <__trisc0_size>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:398
    bea4:	fe071ee3          	bnez	a4, bea0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x980>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:399
                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_queue_update_stride)), queue_sync_ptr+DRAM_BUF_QUEUE_UPDATE_STRIDE_OFFSET, 2,
    bea8:	00c12583          	lw	a1, 12(sp)
    beac:	01448693          	addi	a3, s1, 20
    beb0:	00024637          	lui	a2, 0x24
    beb4:	0096b733          	sltu	a4, a3, s1
    beb8:	cd460613          	addi	a2, a2, -812 # 23cd4 <substitutes.cpp.cd30c172+0x53be>
    bebc:	00c58633          	add	a2, a1, a2
    bec0:	00000893          	li	a7, 0
    bec4:	00100813          	li	a6, 1
    bec8:	00200793          	li	a5, 2
    becc:	00870733          	add	a4, a4, s0
    bed0:	00300593          	li	a1, 3
    bed4:	e20fd0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:403
                    state[k] = 4;
    bed8:	00400793          	li	a5, 4
    bedc:	a79ff06f          	j	b954 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x434>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:394
                            l1_ptrs->wr_queue_update_stride = DRAM_STRIDE_WRAP_BIT + reader_index + 1;
    bee0:	01012783          	lw	a5, 16(sp)
    bee4:	02fb9a23          	sh	a5, 52(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:395
                            l1_ptrs->rd_queue_update_stride = DRAM_STRIDE_WRAP_BIT + reader_index + 1;
    bee8:	00fb9a23          	sh	a5, 20(s7)
    beec:	fa1ff06f          	j	be8c <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x96c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:182
    bool single_sync_mode = allocate_queue || (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable);
    bef0:	04815783          	lhu	a5, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:181
    bool allocate_queue = !varinst_cmd && (cmd.queue_update_info.update_mask == 0);
    bef4:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:182
    bool single_sync_mode = allocate_queue || (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable);
    bef8:	0017f793          	andi	a5, a5, 1
    befc:	00f12423          	sw	a5, 8(sp)
    bf00:	895ff06f          	j	b794 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x274>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:185
    if (!varinst_cmd && !allocate_queue && loop_iteration != 0) {
    bf04:	0005a783          	lw	a5, 0(a1)
    bf08:	fc079c63          	bnez	a5, b6e0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x1c0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_epoch.cc:182
    bool single_sync_mode = allocate_queue || (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable);
    bf0c:	00012423          	sw	zero, 8(sp)
    bf10:	885ff06f          	j	b794 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]+0x274>

0000bf14 <risc::check_dram_spill_requests(bool) [clone .constprop.0]>:
risc::check_dram_spill_requests(bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:397
  if (epoch_perf_en == 0) {
    bf14:	8901c703          	lbu	a4, -1904(gp) # ffb00090 <risc::epoch_perf_en>
    bf18:	06071463          	bnez	a4, bf80 <risc::check_dram_spill_requests(bool) [clone .constprop.0]+0x6c>
    bf1c:	ffb00737          	lui	a4, 0xffb00
    bf20:	00023537          	lui	a0, 0x23
    bf24:	88418793          	addi	a5, gp, -1916 # ffb00084 <risc::thread_dram_copy_ack>
    bf28:	00c70713          	addi	a4, a4, 12 # ffb0000c <TENSIX_MAILBOX_BASE+0xffc4000c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:398
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    bf2c:	00000613          	li	a2, 0
    bf30:	08050513          	addi	a0, a0, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:402
        thread_l1_buf_sel[i] = 1 - thread_l1_buf_sel[i]; //toggle thread_l1_buf_sel for next time.
    bf34:	00100893          	li	a7, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:398
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    bf38:	00500813          	li	a6, 5
    bf3c:	00261593          	slli	a1, a2, 0x2
    bf40:	00a585b3          	add	a1, a1, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:399
      uint32_t current_req = EPOCH_INFO_PTR->perf_dram_copy_req[i];
    bf44:	2145a303          	lw	t1, 532(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:400
      while(thread_dram_copy_ack[i] < current_req) {
    bf48:	0007d683          	lhu	a3, 0(a5)
    bf4c:	0066fe63          	bgeu	a3, t1, bf68 <risc::check_dram_spill_requests(bool) [clone .constprop.0]+0x54>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:401
        thread_dram_copy_ack[i]++;
    bf50:	00168693          	addi	a3, a3, 1
    bf54:	00d79023          	sh	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:402
        thread_l1_buf_sel[i] = 1 - thread_l1_buf_sel[i]; //toggle thread_l1_buf_sel for next time.
    bf58:	00074683          	lbu	a3, 0(a4)
    bf5c:	40d886b3          	sub	a3, a7, a3
    bf60:	00d70023          	sb	a3, 0(a4)
    bf64:	fe5ff06f          	j	bf48 <risc::check_dram_spill_requests(bool) [clone .constprop.0]+0x34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:404
      EPOCH_INFO_PTR->perf_dram_copy_ack[i] = thread_dram_copy_ack[i];      
    bf68:	22d5a423          	sw	a3, 552(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:398
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    bf6c:	00160613          	addi	a2, a2, 1
    bf70:	00278793          	addi	a5, a5, 2
    bf74:	00170713          	addi	a4, a4, 1
    bf78:	fd0612e3          	bne	a2, a6, bf3c <risc::check_dram_spill_requests(bool) [clone .constprop.0]+0x28>
    bf7c:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:396
void check_dram_spill_requests(bool blocking) {
    bf80:	ff010113          	addi	sp, sp, -16
    bf84:	00912223          	sw	s1, 4(sp)
    bf88:	88418493          	addi	s1, gp, -1916 # ffb00084 <risc::thread_dram_copy_ack>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    bf8c:	1ffff7b7          	lui	a5, 0x1ffff
risc::check_dram_spill_requests(bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:396
    bf90:	00812423          	sw	s0, 8(sp)
    bf94:	01212023          	sw	s2, 0(sp)
    bf98:	00112623          	sw	ra, 12(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    bf9c:	ffb20737          	lui	a4, 0xffb20
    bfa0:	12778793          	addi	a5, a5, 295 # 1ffff127 <substitutes.cpp.cd30c172+0x1ffe0811>
risc::check_dram_spill_requests(bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:414
        if (EPOCH_INFO_PTR->perf_dram_copy_req[i] != thread_dram_copy_ack[i]) {
    bfa4:	00023437          	lui	s0, 0x23
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    bfa8:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc::check_dram_spill_requests(bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:414
    bfac:	08040413          	addi	s0, s0, 128 # 23080 <substitutes.cpp.cd30c172+0x476a>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:413
      for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    bfb0:	00500913          	li	s2, 5
    bfb4:	00048693          	mv	a3, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:398
    for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    bfb8:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:414
        if (EPOCH_INFO_PTR->perf_dram_copy_req[i] != thread_dram_copy_ack[i]) {
    bfbc:	08470793          	addi	a5, a4, 132
    bfc0:	00279793          	slli	a5, a5, 0x2
    bfc4:	00f407b3          	add	a5, s0, a5
    bfc8:	0047a603          	lw	a2, 4(a5)
    bfcc:	0006d783          	lhu	a5, 0(a3)
    bfd0:	02f61c63          	bne	a2, a5, c008 <risc::check_dram_spill_requests(bool) [clone .constprop.0]+0xf4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:413
      for (int i = 0; i < l1_mem::address_map::PERF_NUM_THREADS; i++) {
    bfd4:	00170713          	addi	a4, a4, 1
    bfd8:	00268693          	addi	a3, a3, 2
    bfdc:	ff2710e3          	bne	a4, s2, bfbc <risc::check_dram_spill_requests(bool) [clone .constprop.0]+0xa8>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    bfe0:	1ffff7b7          	lui	a5, 0x1ffff
risc::check_dram_spill_requests(bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:427
}
    bfe4:	00c12083          	lw	ra, 12(sp)
    bfe8:	00812403          	lw	s0, 8(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    bfec:	ffb20737          	lui	a4, 0xffb20
    bff0:	12878793          	addi	a5, a5, 296 # 1ffff128 <substitutes.cpp.cd30c172+0x1ffe0812>
    bff4:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc::check_dram_spill_requests(bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:427
    bff8:	00412483          	lw	s1, 4(sp)
    bffc:	00012903          	lw	s2, 0(sp)
    c000:	01010113          	addi	sp, sp, 16
    c004:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:420
        check_dram_spill_requests_once();
    c008:	f10fd0ef          	jal	ra, 9718 <risc::check_dram_spill_requests_once()>
    c00c:	fa9ff06f          	j	bfb4 <risc::check_dram_spill_requests(bool) [clone .constprop.0]+0xa0>

0000c010 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)>:
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2108
  volatile uint32_t &gsync_epoch, volatile uint32_t &epochs_in_progress,
#endif
  uint32_t &num_dram_input_streams, uint32_t &num_dram_output_streams, uint32_t &num_active_streams, uint32_t &num_active_dram_queues, uint32_t &num_dram_prefetch_streams,
  dram_q_state_t tt_l1_ptr *dram_q_state, dram_input_stream_state_t *dram_input_stream_state, dram_output_stream_state_t *dram_output_stream_state, active_stream_info_t *active_stream_info,
  epoch_stream_info_t tt_l1_ptr * tt_l1_ptr *dram_prefetch_epoch_stream_info, active_stream_info_t tt_l1_ptr * tt_l1_ptr *dram_prefetch_active_stream_info
) {
    c010:	fa010113          	addi	sp, sp, -96
    c014:	05612023          	sw	s6, 64(sp)
    c018:	00078b13          	mv	s6, a5
    c01c:	06812783          	lw	a5, 104(sp)
    c020:	04912a23          	sw	s1, 84(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2111

#ifdef PERF_DUMP
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_LOOP, risc::STREAM_HANDLER_END_OFFSET);
    c024:	02000537          	lui	a0, 0x2000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2108
) {
    c028:	00058493          	mv	s1, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2111
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_LOOP, risc::STREAM_HANDLER_END_OFFSET);
    c02c:	00a00593          	li	a1, 10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2108
) {
    c030:	00f12823          	sw	a5, 16(sp)
    c034:	04112e23          	sw	ra, 92(sp)
    c038:	04812c23          	sw	s0, 88(sp)
    c03c:	05212823          	sw	s2, 80(sp)
    c040:	05312623          	sw	s3, 76(sp)
    c044:	05412423          	sw	s4, 72(sp)
    c048:	05512223          	sw	s5, 68(sp)
    c04c:	00070a13          	mv	s4, a4
    c050:	03712e23          	sw	s7, 60(sp)
    c054:	03912a23          	sw	s9, 52(sp)
    c058:	03a12823          	sw	s10, 48(sp)
    c05c:	03b12623          	sw	s11, 44(sp)
    c060:	00080413          	mv	s0, a6
    c064:	01112623          	sw	a7, 12(sp)
    c068:	06c12c83          	lw	s9, 108(sp)
    c06c:	03812c23          	sw	s8, 56(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2111
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_LOOP, risc::STREAM_HANDLER_END_OFFSET);
    c070:	c3cfd0ef          	jal	ra, 94ac <risc::record_timestamp_at_offset_l1(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2112
  risc::record_timestamp_at_offset_l1(risc::perf_event::EPOCH_EPILOGUE, risc::EPILOGUE_START_OFFSET);
    c074:	00d00593          	li	a1, 13
    c078:	03000537          	lui	a0, 0x3000
    c07c:	c30fd0ef          	jal	ra, 94ac <risc::record_timestamp_at_offset_l1(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2115
#endif
  // Full handshake with brisc
  RISC_EPOCH_INFO_PTR->all_streams_ready = 0;
    c080:	000237b7          	lui	a5, 0x23
    c084:	080786a3          	sb	zero, 141(a5) # 2308d <substitutes.cpp.cd30c172+0x4777>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    c088:	222227b7          	lui	a5, 0x22222
    c08c:	ffb20737          	lui	a4, 0xffb20
    c090:	22278793          	addi	a5, a5, 546 # 22222222 <substitutes.cpp.cd30c172+0x2220390c>
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    c094:	00100ab7          	lui	s5, 0x100
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    c098:	ffb21bb7          	lui	s7, 0xffb21
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    c09c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2120

  RISC_POST_STATUS(0x22222222);

  dram_q_state_t tt_l1_ptr * curr_dram_q_state = dram_q_state;
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    c0a0:	00000913          	li	s2, 0
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
    c0a4:	b40a8a93          	addi	s5, s5, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2126
    old_i = i; // Not sure if i++ happens before or after the other incremrent, this statement makes it clear what the order should be
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)curr_dram_q_state->l1_dram_ptrs;
    uint8_t q_stream_id = curr_dram_q_state->dram_q_stream_id;
    uint32_t stream_vc = stream_get_output_unicast_vc(q_stream_id);

    if (l1_ptrs->wr_stride == (DRAM_STRIDE_WRAP_BIT + 0)) {
    c0a8:	00004d37          	lui	s10, 0x4
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c0ac:	c28b8b93          	addi	s7, s7, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2120
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    c0b0:	02700d93          	li	s11, 39
    c0b4:	000239b7          	lui	s3, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2120 (discriminator 6)
    c0b8:	000a2783          	lw	a5, 0(s4)
    c0bc:	08f97c63          	bgeu	s2, a5, c154 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x144>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2124
    uint32_t stream_vc = stream_get_output_unicast_vc(q_stream_id);
    c0c0:	00e44783          	lbu	a5, 14(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2122
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)curr_dram_q_state->l1_dram_ptrs;
    c0c4:	00042603          	lw	a2, 0(s0)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
    c0c8:	015787b3          	add	a5, a5, s5
    c0cc:	00c79793          	slli	a5, a5, 0xc
    c0d0:	0287a583          	lw	a1, 40(a5)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2126
    if (l1_ptrs->wr_stride == (DRAM_STRIDE_WRAP_BIT + 0)) {
    c0d4:	02c65783          	lhu	a5, 44(a2)
    c0d8:	07a79063          	bne	a5, s10, c138 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x128>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    c0dc:	04862783          	lw	a5, 72(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    c0e0:	04c62703          	lw	a4, 76(a2)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2127
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    c0e4:	00444503          	lbu	a0, 4(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2131
      uint64_t dram_buf_addr_plus_offset = tt_l1_load(&l1_ptrs->dram_buf_addr) + DRAM_BUF_STRIDE_OFFSET;
      uint32_t l1_dram_incoming_ptr_index = curr_dram_q_state->l1_dram_incoming_ptr_index;
      l1_ptrs->wr_stride = 0;
      uint32_t output_vc = l1_dram_incoming_ptr_index ? DRAM_PTR_UPDATE_VC : stream_vc;
    c0e8:	00100813          	li	a6, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2128
      uint64_t dram_buf_addr_plus_offset = tt_l1_load(&l1_ptrs->dram_buf_addr) + DRAM_BUF_STRIDE_OFFSET;
    c0ec:	00c78693          	addi	a3, a5, 12
    c0f0:	00f6b7b3          	sltu	a5, a3, a5
    c0f4:	00e78733          	add	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2129
      uint32_t l1_dram_incoming_ptr_index = curr_dram_q_state->l1_dram_incoming_ptr_index;
    c0f8:	00544783          	lbu	a5, 5(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2127
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    c0fc:	00155513          	srli	a0, a0, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2130
      l1_ptrs->wr_stride = 0;
    c100:	02061623          	sh	zero, 44(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2127
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    c104:	00357513          	andi	a0, a0, 3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2131
      uint32_t output_vc = l1_dram_incoming_ptr_index ? DRAM_PTR_UPDATE_VC : stream_vc;
    c108:	00079663          	bnez	a5, c114 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x104>
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
    c10c:	0125d593          	srli	a1, a1, 0x12
    c110:	0075f813          	andi	a6, a1, 7
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63 (discriminator 4)
    c114:	01051793          	slli	a5, a0, 0x10
    c118:	017787b3          	add	a5, a5, s7
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    c11c:	0007a583          	lw	a1, 0(a5)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2133
      // Reg poll loop, flushed immediately
      while (!ncrisc_noc_fast_write_ok_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
    c120:	fe059ee3          	bnez	a1, c11c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x10c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2134
      ncrisc_noc_fast_write_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr_plus_offset, 2,
    c124:	00000893          	li	a7, 0
    c128:	00200793          	li	a5, 2
    c12c:	02c60613          	addi	a2, a2, 44
    c130:	00300593          	li	a1, 3
    c134:	bc0fd0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2120
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    c138:	01b91863          	bne	s2, s11, c148 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x138>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2120 (discriminator 2)
    c13c:	2f89a403          	lw	s0, 760(s3) # 232f8 <substitutes.cpp.cd30c172+0x49e2>
    c140:	02800913          	li	s2, 40
    c144:	f75ff06f          	j	c0b8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2120 (discriminator 3)
    c148:	00190913          	addi	s2, s2, 1
    c14c:	02440413          	addi	s0, s0, 36
    c150:	f69ff06f          	j	c0b8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0xa8>
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
    c154:	00100bb7          	lui	s7, 0x100
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    c158:	ffb21ab7          	lui	s5, 0xffb21
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2140
                            output_vc, false, false, 1, NCRISC_WR_DEF_TRID);
    }
  }

#ifndef ERISC
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    c15c:	00000a13          	li	s4, 0
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
    c160:	b40b8b93          	addi	s7, s7, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c164:	c28a8a93          	addi	s5, s5, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
dram_io_incr_ptr_l1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:64
  if (next_ptr >= double_buf_size_q_slots) {
    c168:	00100d13          	li	s10, 1
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2140 (discriminator 1)
    c16c:	000b2783          	lw	a5, 0(s6)
    c170:	18fa7863          	bgeu	s4, a5, c300 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2141
    active_stream_info_t tt_l1_ptr * curr_active_stream_info = dram_prefetch_active_stream_info[i];
    c174:	002a1793          	slli	a5, s4, 0x2
    c178:	00fc8733          	add	a4, s9, a5
    c17c:	00072603          	lw	a2, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2142
    uint32_t flags = curr_active_stream_info->flags;
    c180:	00265883          	lhu	a7, 2(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2143
    if ((flags & STREAM_DRAM_OUTPUT) != 0) {
    c184:	0088f713          	andi	a4, a7, 8
    c188:	10070263          	beqz	a4, c28c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x27c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2145
      uint32_t stream_id = curr_active_stream_info->stream_id;
      epoch_stream_info_t tt_l1_ptr * l1_stream_info = dram_prefetch_epoch_stream_info[i];
    c18c:	01012703          	lw	a4, 16(sp)
    c190:	2008f893          	andi	a7, a7, 512
    c194:	00f707b3          	add	a5, a4, a5
    c198:	0007a703          	lw	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2144
      uint32_t stream_id = curr_active_stream_info->stream_id;
    c19c:	00064783          	lbu	a5, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2146
      epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    c1a0:	08872683          	lw	a3, 136(a4)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
    c1a4:	017787b3          	add	a5, a5, s7
    c1a8:	00c79793          	slli	a5, a5, 0xc
    c1ac:	0287a503          	lw	a0, 40(a5)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    c1b0:	0287a803          	lw	a6, 40(a5)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2152
      uint32_t output_noc = stream_get_output_noc(stream_id);
      uint32_t output_vc = stream_get_output_unicast_vc(stream_id);
      volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
      uint64_t dram_dest_addr = tt_l1_load(&l1_dram_io_state->dram_buf_addr);
      //uint32_t gwr_ptr_autoinc = l1_dram_io_state->rd_gwr_ptr_autoinc;
      uint32_t stream_buf_addr_byte = l1_stream_info->buf_base_addr;
    c1b4:	01872583          	lw	a1, 24(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2153
      uint32_t stream_buf_size_bytes = l1_stream_info->buf_full_size_bytes;
    c1b8:	01472703          	lw	a4, 20(a4)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
    c1bc:	00155513          	srli	a0, a0, 0x1
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    c1c0:	01285813          	srli	a6, a6, 0x12
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
    c1c4:	00157513          	andi	a0, a0, 1
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    c1c8:	00787813          	andi	a6, a6, 7
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2149
      volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    c1cc:	01c6a903          	lw	s2, 28(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2154
      uint32_t inc_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    c1d0:	0006a783          	lw	a5, 0(a3)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    c1d4:	04892983          	lw	s3, 72(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    c1d8:	04c92c03          	lw	s8, 76(s2)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2155
      uint32_t dram_data_buf_size_bytes = l1_dram_io_state->dram_buf_size_bytes;
    c1dc:	04092603          	lw	a2, 64(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2156
      uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_wrptr : l1_dram_io_state->rd_dram_local_rdptr;
    c1e0:	02088663          	beqz	a7, c20c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2156 (discriminator 1)
    c1e4:	00495403          	lhu	s0, 4(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2140 (discriminator 4)
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    c1e8:	00040d93          	mv	s11, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164 (discriminator 4)
  unsigned int r = 0;
    c1ec:	00000693          	li	a3, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
    c1f0:	020d8263          	beqz	s11, c214 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x204>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    c1f4:	001dfe93          	andi	t4, s11, 1
    c1f8:	000e8463          	beqz	t4, c200 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
    c1fc:	00f686b3          	add	a3, a3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    c200:	001ddd93          	srli	s11, s11, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    c204:	00179793          	slli	a5, a5, 0x1
    c208:	fe9ff06f          	j	c1f0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1e0>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2156 (discriminator 2)
      uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_wrptr : l1_dram_io_state->rd_dram_local_rdptr;
    c20c:	00895403          	lhu	s0, 8(s2)
    c210:	fd9ff06f          	j	c1e8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x1d8>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c214:	00c6e463          	bltu	a3, a2, c21c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x20c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c218:	40c686b3          	sub	a3, a3, a2
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2158
      uint32_t buf_offset = buf_ptr_inc_wrap(0, mulsi3(dram_ptr_issued_q_slots,inc_size_bytes), dram_data_buf_size_bytes);
      ncrisc_noc_fast_write_any_len_l1(output_noc, NCRISC_WR_CMD_BUF, stream_buf_addr_byte, dram_dest_addr+(DRAM_BUF_DATA_OFFSET+buf_offset), stream_buf_size_bytes, output_vc, false, false, 1, NCRISC_WR_DEF_TRID);
    c21c:	02068693          	addi	a3, a3, 32
    c220:	01368633          	add	a2, a3, s3
    c224:	00d636b3          	sltu	a3, a2, a3
    c228:	00080793          	mv	a5, a6
    c22c:	018686b3          	add	a3, a3, s8
    c230:	01112e23          	sw	a7, 28(sp)
    c234:	01012c23          	sw	a6, 24(sp)
    c238:	00a12a23          	sw	a0, 20(sp)
    c23c:	c00fd0ef          	jal	ra, 963c <ncrisc_noc_fast_write_any_len_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2159
      if ((flags & STREAM_DRAM_RAM) != 0) {
    c240:	01c12883          	lw	a7, 28(sp)
    c244:	01412503          	lw	a0, 20(sp)
    c248:	01812803          	lw	a6, 24(sp)
    c24c:	04088463          	beqz	a7, c294 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x284>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2161
        //l1_dram_io_state->wr_dram_wrptr = dram_ptr_issued_q_slots + gwr_ptr_autoinc;
        l1_dram_io_state->wr_dram_wrptr = dram_ptr_issued_q_slots + 1;
    c250:	00140413          	addi	s0, s0, 1
    c254:	02891223          	sh	s0, 36(s2)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c258:	01051793          	slli	a5, a0, 0x10
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2176
        l1_dram_io_state->wr_epoch_id_tag = DRAM_QUEUE_EPOCH_CHECK_EN | (RISC_EPOCH_INFO_PTR->epoch_id);
      else
        l1_dram_io_state->wr_epoch_id_tag = DRAM_QUEUE_NO_EPOCH_CHECK;
#else
      // No epoch check works around #928, however it will not support multiple epoch consumers that need to sync on the same queue
      l1_dram_io_state->wr_epoch_id_tag = DRAM_QUEUE_NO_EPOCH_CHECK;
    c25c:	02091523          	sh	zero, 42(s2)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c260:	015787b3          	add	a5, a5, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    c264:	0007a703          	lw	a4, 0(a5)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2178
#endif
      while (!ncrisc_noc_fast_write_ok_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
    c268:	fe071ee3          	bnez	a4, c264 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x254>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2179
      ncrisc_noc_fast_write_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_dram_io_state->wr_epoch_id_tag)), dram_dest_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
    c26c:	00a98693          	addi	a3, s3, 10
    c270:	0136b733          	sltu	a4, a3, s3
    c274:	00000893          	li	a7, 0
    c278:	00200793          	li	a5, 2
    c27c:	01870733          	add	a4, a4, s8
    c280:	02a90613          	addi	a2, s2, 42
    c284:	00300593          	li	a1, 3
    c288:	a6cfd0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2140 (discriminator 2)
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    c28c:	001a0a13          	addi	s4, s4, 1
    c290:	eddff06f          	j	c16c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x15c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2164
        l1_dram_io_state->wr_dram_wrptr = dram_io_incr_ptr_l1(dram_ptr_issued_q_slots, dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, dram_ptr_issued_q_slots) ? 1 : 0, 1);
    c294:	00895703          	lhu	a4, 8(s2)
    c298:	00095783          	lhu	a5, 0(s2)
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:75
  if (rd_ptr == wr_ptr)
    c29c:	2a878663          	beq	a5, s0, c548 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x538>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:78
  uint32_t case1 = rd_ptr < wr_ptr && (local_rd_ptr < rd_ptr || local_rd_ptr >= wr_ptr);
    c2a0:	2887fe63          	bgeu	a5, s0, c53c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x52c>
    c2a4:	2af76263          	bltu	a4, a5, c548 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x538>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:81
  return case1 || case2;
    c2a8:	2a877063          	bgeu	a4, s0, c548 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x538>
dram_io_incr_ptr_l1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:62 (discriminator 4)
  uint32_t next_ptr = curr_ptr + incr;
    c2ac:	01b40433          	add	s0, s0, s11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:64 (discriminator 4)
  if (next_ptr >= double_buf_size_q_slots) {
    c2b0:	008d7463          	bgeu	s10, s0, c2b8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:65
    next_ptr -= double_buf_size_q_slots;
    c2b4:	ffe40413          	addi	s0, s0, -2
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    c2b8:	01051793          	slli	a5, a0, 0x10
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2164
    c2bc:	02891223          	sh	s0, 36(s2)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c2c0:	015787b3          	add	a5, a5, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    c2c4:	0007a703          	lw	a4, 0(a5)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2165
        while (!ncrisc_noc_fast_write_ok_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
    c2c8:	fe071ee3          	bnez	a4, c2c4 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x2b4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2166
        ncrisc_noc_fast_write_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_dram_io_state->wr_dram_wrptr)), dram_dest_addr+DRAM_BUF_WRPTR_OFFSET, 2,
    c2cc:	00498693          	addi	a3, s3, 4
    c2d0:	0136b733          	sltu	a4, a3, s3
    c2d4:	00000893          	li	a7, 0
    c2d8:	00200793          	li	a5, 2
    c2dc:	01870733          	add	a4, a4, s8
    c2e0:	02490613          	addi	a2, s2, 36
    c2e4:	00300593          	li	a1, 3
    c2e8:	01012c23          	sw	a6, 24(sp)
    c2ec:	00a12a23          	sw	a0, 20(sp)
    c2f0:	a04fd0ef          	jal	ra, 94f4 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    c2f4:	01812803          	lw	a6, 24(sp)
    c2f8:	01412503          	lw	a0, 20(sp)
    c2fc:	f5dff06f          	j	c258 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x248>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    c300:	333337b7          	lui	a5, 0x33333
    c304:	33378793          	addi	a5, a5, 819 # 33333333 <substitutes.cpp.cd30c172+0x33314a1d>
    c308:	ffb20737          	lui	a4, 0xffb20
    c30c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2195

  // Reset streams that need to be reset
  // We cannot easily reset this in brisc because we can have a case where brisc wants to go idle but risc hasnt loaded 
  // dram io yet (for example if the dram io stream goes to another core)
  dram_input_stream_state_t* curr_dram_input_stream_state = dram_input_stream_state;
  for (uint32_t i = 0;
    c310:	00c12783          	lw	a5, 12(sp)
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    c314:	00100437          	lui	s0, 0x100
    c318:	03878c13          	addi	s8, a5, 56
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2195
    c31c:	00000913          	li	s2, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
    c320:	b4040413          	addi	s0, s0, -1216 # ffb40 <substitutes.cpp.cd30c172+0xe122a>
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    c324:	00100993          	li	s3, 1
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2196
       i < num_dram_input_streams;
    c328:	0004a783          	lw	a5, 0(s1)
    c32c:	14f97063          	bgeu	s2, a5, c46c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x45c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2198
       i++, curr_dram_input_stream_state++) {
        uint32_t stream_id = curr_dram_input_stream_state->stream_id;
    c330:	fc8c4a03          	lbu	s4, -56(s8)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2201
        uint32_t moves_raw_data = curr_dram_input_stream_state->moves_raw_data;

        if (moves_raw_data) {
    c334:	fd8c4783          	lbu	a5, -40(s8)
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    c338:	008a0bb3          	add	s7, s4, s0
    c33c:	00cb9b93          	slli	s7, s7, 0xc
    c340:	08cb8b13          	addi	s6, s7, 140
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2201
    c344:	0a078063          	beqz	a5, c3e4 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x3d4>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    c348:	000b2783          	lw	a5, 0(s6)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2202
          while (stream_phase_is_active(stream_id)) {
    c34c:	0047f793          	andi	a5, a5, 4
    c350:	08078a63          	beqz	a5, c3e4 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x3d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2203
            uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    c354:	000a0513          	mv	a0, s4
    c358:	ffbf5097          	auipc	ra, 0xffbf5
    c35c:	914080e7          	jalr	-1772(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
    c360:	ffbf5097          	auipc	ra, 0xffbf5
    c364:	8d0080e7          	jalr	-1840(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    c368:	00850533          	add	a0, a0, s0
    c36c:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2203
    c370:	01052a83          	lw	s5, 16(a0) # 3000010 <substitutes.cpp.cd30c172+0x2fe16fa>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2204
            uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    c374:	000a0513          	mv	a0, s4
    c378:	ffbf5097          	auipc	ra, 0xffbf5
    c37c:	8f4080e7          	jalr	-1804(ra) # ffc00c6c <TENSIX_MAILBOX_BASE+0xffd40c6c>
    c380:	00050c93          	mv	s9, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2203
            uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    c384:	010a9a93          	slli	s5, s5, 0x10
    c388:	010ada93          	srli	s5, s5, 0x10
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
    c38c:	ffbf5097          	auipc	ra, 0xffbf5
    c390:	918080e7          	jalr	-1768(ra) # ffc00ca4 <TENSIX_MAILBOX_BASE+0xffd40ca4>
    c394:	02050a63          	beqz	a0, c3c8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x3b8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    c398:	000c8513          	mv	a0, s9
    c39c:	ffbf5097          	auipc	ra, 0xffbf5
    c3a0:	894080e7          	jalr	-1900(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    c3a4:	00850533          	add	a0, a0, s0
    c3a8:	00c51513          	slli	a0, a0, 0xc
    c3ac:	01050513          	addi	a0, a0, 16
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2204
            uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    c3b0:	00052783          	lw	a5, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2206
            uint16_t tiles_available = op_pack_tiles_ptr_sub(operand_tiles_received, operand_tiles_acked);
            if (tiles_available == 0) {
    c3b4:	01079793          	slli	a5, a5, 0x10
    c3b8:	0107d793          	srli	a5, a5, 0x10
    c3bc:	f8fa96e3          	bne	s5, a5, c348 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x338>
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    c3c0:	073bae23          	sw	s3, 124(s7)
    c3c4:	f85ff06f          	j	c348 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x338>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    c3c8:	000c8513          	mv	a0, s9
    c3cc:	ffbf5097          	auipc	ra, 0xffbf5
    c3d0:	864080e7          	jalr	-1948(ra) # ffc00c30 <TENSIX_MAILBOX_BASE+0xffd40c30>
    c3d4:	00850533          	add	a0, a0, s0
    c3d8:	00c51513          	slli	a0, a0, 0xc
    c3dc:	00c50513          	addi	a0, a0, 12
    c3e0:	fd1ff06f          	j	c3b0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x3a0>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    c3e4:	3a4b8693          	addi	a3, s7, 932
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    c3e8:	000b2703          	lw	a4, 0(s6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    c3ec:	0006a783          	lw	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    c3f0:	00177713          	andi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    c3f4:	fe070ae3          	beqz	a4, c3e8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x3d8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    c3f8:	0117d793          	srli	a5, a5, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    c3fc:	fe0796e3          	bnez	a5, c3e8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x3d8>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    c400:	028ba783          	lw	a5, 40(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    c404:	000c0713          	mv	a4, s8
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2218
        stream_reset(stream_id);

        uint32_t fork_index = 0;
        while (true) {
          uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
          if (fork_stream_id == NULL_STREAM) {
    c408:	0ff00593          	li	a1, 255
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    c40c:	dff7f793          	andi	a5, a5, -513
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    c410:	02fba423          	sw	a5, 40(s7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    c414:	073bae23          	sw	s3, 124(s7)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2217
          uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    c418:	00074783          	lbu	a5, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2218
          if (fork_stream_id == NULL_STREAM) {
    c41c:	04b78263          	beq	a5, a1, c460 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x450>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    c420:	008787b3          	add	a5, a5, s0
    c424:	00c79793          	slli	a5, a5, 0xc
    c428:	08c78513          	addi	a0, a5, 140
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    c42c:	3a478813          	addi	a6, a5, 932
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    c430:	00052603          	lw	a2, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    c434:	00082683          	lw	a3, 0(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    c438:	00167613          	andi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    c43c:	fe060ae3          	beqz	a2, c430 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x420>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    c440:	0116d693          	srli	a3, a3, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    c444:	fe0696e3          	bnez	a3, c430 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x420>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    c448:	0287a683          	lw	a3, 40(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    c44c:	00170713          	addi	a4, a4, 1
    c450:	dff6f693          	andi	a3, a3, -513
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    c454:	02d7a423          	sw	a3, 40(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    c458:	0737ae23          	sw	s3, 124(a5)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2216
        while (true) {
    c45c:	fbdff06f          	j	c418 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x408>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2195
  for (uint32_t i = 0;
    c460:	00190913          	addi	s2, s2, 1
    c464:	054c0c13          	addi	s8, s8, 84
    c468:	ec1ff06f          	j	c328 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x318>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    c46c:	444447b7          	lui	a5, 0x44444
    c470:	ffb20737          	lui	a4, 0xffb20
    c474:	44478793          	addi	a5, a5, 1092 # 44444444 <substitutes.cpp.cd30c172+0x44425b2e>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
    c478:	ffb20637          	lui	a2, 0xffb20
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/targets/ncrisc/risc.h:16
    c47c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
ncrisc_noc_all_reads_flushed_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    c480:	27860593          	addi	a1, a2, 632 # ffb20278 <TENSIX_MAILBOX_BASE+0xffc60278>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
    c484:	24860713          	addi	a4, a2, 584
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:142
  bool all_flushed = true;
    c488:	00100793          	li	a5, 1
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    c48c:	00072683          	lw	a3, 0(a4)
ncrisc_noc_all_reads_flushed_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    c490:	00470713          	addi	a4, a4, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:144
    all_flushed &= NOC_STATUS_READ_REG_L1(noc, NIU_MST_REQS_OUTSTANDING_ID(id)) == 0;
    c494:	0016b693          	seqz	a3, a3
    c498:	00d7f7b3          	and	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    c49c:	feb718e3          	bne	a4, a1, c48c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x47c>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2230
  }

  RISC_POST_STATUS(0x44444444);

  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    while (!ncrisc_noc_all_reads_flushed_l1(n));
    c4a0:	fe0782e3          	beqz	a5, c484 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x474>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:142
  bool all_flushed = true;
    c4a4:	ffb305b7          	lui	a1, 0xffb30
ncrisc_noc_all_reads_flushed_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    c4a8:	27858513          	addi	a0, a1, 632 # ffb30278 <TENSIX_MAILBOX_BASE+0xffc70278>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:142
  bool all_flushed = true;
    c4ac:	00078693          	mv	a3, a5
    c4b0:	24858713          	addi	a4, a1, 584
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    c4b4:	00072603          	lw	a2, 0(a4)
ncrisc_noc_all_reads_flushed_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    c4b8:	00470713          	addi	a4, a4, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:144
    all_flushed &= NOC_STATUS_READ_REG_L1(noc, NIU_MST_REQS_OUTSTANDING_ID(id)) == 0;
    c4bc:	00163613          	seqz	a2, a2
    c4c0:	00c6f6b3          	and	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    c4c4:	fea718e3          	bne	a4, a0, c4b4 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x4a4>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2230
    c4c8:	fe0682e3          	beqz	a3, c4ac <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x49c>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    c4cc:	ffb20737          	lui	a4, 0xffb20
    c4d0:	24072783          	lw	a5, 576(a4) # ffb20240 <TENSIX_MAILBOX_BASE+0xffc60240>
    c4d4:	24472683          	lw	a3, 580(a4)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2233
  }
  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    while (!ncrisc_noc_nonposted_all_writes_flushed_l1(n));
    c4d8:	00d7e7b3          	or	a5, a5, a3
    c4dc:	fe079ae3          	bnez	a5, c4d0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x4c0>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
    c4e0:	ffb30737          	lui	a4, 0xffb30
    c4e4:	24072783          	lw	a5, 576(a4) # ffb30240 <TENSIX_MAILBOX_BASE+0xffc70240>
    c4e8:	24472683          	lw	a3, 580(a4)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2233
    c4ec:	00d7e7b3          	or	a5, a5, a3
    c4f0:	fe079ae3          	bnez	a5, c4e4 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x4d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2244
#endif

#ifdef PERF_DUMP
  //Last check for dram spill requests before epoch finishes.
  //Trisc Kernels send a last spill request for last partial half buffer when kernels finish.
  risc::check_dram_spill_requests(true);
    c4f4:	a21ff0ef          	jal	ra, bf14 <risc::check_dram_spill_requests(bool) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2248
  risc::record_timestamp_at_offset_l1(risc::perf_event::EPOCH_EPILOGUE, risc::EPILOGUE_END_OFFSET);
#endif

}
    c4f8:	05812403          	lw	s0, 88(sp)
    c4fc:	05c12083          	lw	ra, 92(sp)
    c500:	05412483          	lw	s1, 84(sp)
    c504:	05012903          	lw	s2, 80(sp)
    c508:	04c12983          	lw	s3, 76(sp)
    c50c:	04812a03          	lw	s4, 72(sp)
    c510:	04412a83          	lw	s5, 68(sp)
    c514:	04012b03          	lw	s6, 64(sp)
    c518:	03c12b83          	lw	s7, 60(sp)
    c51c:	03812c03          	lw	s8, 56(sp)
    c520:	03412c83          	lw	s9, 52(sp)
    c524:	03012d03          	lw	s10, 48(sp)
    c528:	02c12d83          	lw	s11, 44(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2245
  risc::record_timestamp_at_offset_l1(risc::perf_event::EPOCH_EPILOGUE, risc::EPILOGUE_END_OFFSET);
    c52c:	01000593          	li	a1, 16
    c530:	03000537          	lui	a0, 0x3000
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2248
}
    c534:	06010113          	addi	sp, sp, 96
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2245
  risc::record_timestamp_at_offset_l1(risc::perf_event::EPOCH_EPILOGUE, risc::EPILOGUE_END_OFFSET);
    c538:	f75fc06f          	j	94ac <risc::record_timestamp_at_offset_l1(unsigned long, unsigned long)>
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
    c53c:	d6f478e3          	bgeu	s0, a5, c2ac <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x29c>
    c540:	d68766e3          	bltu	a4, s0, c2ac <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x29c>
    c544:	d6f774e3          	bgeu	a4, a5, c2ac <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x29c>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.cc:2164
        l1_dram_io_state->wr_dram_wrptr = dram_io_incr_ptr_l1(dram_ptr_issued_q_slots, dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, dram_ptr_issued_q_slots) ? 1 : 0, 1);
    c548:	00100d93          	li	s11, 1
    c54c:	d61ff06f          	j	c2ac <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr)+0x29c>

0000c550 <risc::record_perf_dump_end()>:
risc::record_perf_dump_end():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:169
  if (perf_index < perf_end) {
    c550:	89018793          	addi	a5, gp, -1904 # ffb00090 <risc::epoch_perf_en>
    c554:	0047a703          	lw	a4, 4(a5)
    c558:	0087a683          	lw	a3, 8(a5)
    c55c:	02d77463          	bgeu	a4, a3, c584 <risc::record_perf_dump_end()+0x34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:170
    perf_buf_base[perf_index] = PERF_DUMP_END_SIGNAL;
    c560:	ffb006b7          	lui	a3, 0xffb00
    c564:	0046a683          	lw	a3, 4(a3) # ffb00004 <TENSIX_MAILBOX_BASE+0xffc40004>
    c568:	00271613          	slli	a2, a4, 0x2
    c56c:	00c686b3          	add	a3, a3, a2
    c570:	beeff637          	lui	a2, 0xbeeff
    c574:	00d60613          	addi	a2, a2, 13 # beeff00d <TENSIX_MAILBOX_BASE+0xbf03f00d>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:171
    perf_index += 1;
    c578:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:170
    perf_buf_base[perf_index] = PERF_DUMP_END_SIGNAL;
    c57c:	00c6a023          	sw	a2, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:171
    perf_index += 1;
    c580:	00e7a223          	sw	a4, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:179
    EPOCH_INFO_PTR->perf_dram_copy_req[3] += 2;
    c584:	000237b7          	lui	a5, 0x23
    c588:	2a07a703          	lw	a4, 672(a5) # 232a0 <substitutes.cpp.cd30c172+0x498a>
    c58c:	00270713          	addi	a4, a4, 2
    c590:	2ae7a023          	sw	a4, 672(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_perf.cc:181
  check_dram_spill_requests(true);
    c594:	981ff06f          	j	bf14 <risc::check_dram_spill_requests(bool) [clone .constprop.0]>

0000c598 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]>:
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:974
#endif
    }
  }
}

void process_dram_write_moves_raw_data_l1(dram_output_stream_state_t* curr_dram_output_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue, uint32_t stream_id,
    c598:	fe010113          	addi	sp, sp, -32
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:977
                                       uint16_t data_send_chunk_size_tiles, uint32_t output_vc, uint32_t data_send_chunk_size_bytes, uint64_t dram_buf_addr,
                                       uint32_t& stream_rd_ptr_byte, uint32_t dram_buf_size_bytes, bool& full_q_slot_sent) {
  uint32_t untilize_copy_iters = curr_dram_output_stream_state->stream_info->untilize_copy_iters;  
    c59c:	05c52e03          	lw	t3, 92(a0) # 300005c <substitutes.cpp.cd30c172+0x2fe1746>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:974
void process_dram_write_moves_raw_data_l1(dram_output_stream_state_t* curr_dram_output_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue, uint32_t stream_id,
    c5a0:	00812e23          	sw	s0, 28(sp)
    c5a4:	00912c23          	sw	s1, 24(sp)
    c5a8:	01212a23          	sw	s2, 20(sp)
    c5ac:	01312823          	sw	s3, 16(sp)
    c5b0:	01412623          	sw	s4, 12(sp)
    c5b4:	01512423          	sw	s5, 8(sp)
    c5b8:	01612223          	sw	s6, 4(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:977
  uint32_t untilize_copy_iters = curr_dram_output_stream_state->stream_info->untilize_copy_iters;  
    c5bc:	084e4f83          	lbu	t6, 132(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:974
void process_dram_write_moves_raw_data_l1(dram_output_stream_state_t* curr_dram_output_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue, uint32_t stream_id,
    c5c0:	02012303          	lw	t1, 32(sp)
    c5c4:	02412383          	lw	t2, 36(sp)
    c5c8:	00100293          	li	t0, 1
    c5cc:	000f8463          	beqz	t6, c5d4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x3c>
    c5d0:	000f8293          	mv	t0, t6
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c5d4:	ffb21eb7          	lui	t4, 0xffb21
    c5d8:	c28eae03          	lw	t3, -984(t4) # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
risc_wait_for_cmd_buf(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:187
  while (!ncrisc_noc_fast_write_ok(noc, cmd_buf));
    c5dc:	fe0e1ee3          	bnez	t3, c5d8 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x40>
ncrisc_noc_blitz_write_setup(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:229
    NOC_CMD_STATIC_VC(vc) |
    c5e0:	00d69693          	slli	a3, a3, 0xd
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:226
  uint32_t noc_cmd_field =
    c5e4:	0926e693          	ori	a3, a3, 146
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c5e8:	ffb20e37          	lui	t3, 0xffb20
    c5ec:	028e2e83          	lw	t4, 40(t3) # ffb20028 <TENSIX_MAILBOX_BASE+0xffc60028>
ncrisc_noc_blitz_write_setup(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:232
  while (!ncrisc_noc_fast_write_ok(noc, cmd_buf)); 
    c5f0:	fe0e9ee3          	bnez	t4, c5ec <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x54>
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c5f4:	00de2e23          	sw	a3, 28(t3)
    c5f8:	02ee2023          	sw	a4, 32(t3)
    c5fc:	010e2823          	sw	a6, 16(t3)
    c600:	000e2c23          	sw	zero, 24(t3)
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:986
  uint32_t num_times_to_write = mulsi3(data_send_chunk_size_tiles,untilize_copy_iters);
  risc_wait_for_cmd_buf(0, NCRISC_SMALL_TXN_CMD_BUF); //NOP on Grayskull, Worhmole A0.
                                                      //Make sure there are no long transactions on common rd/wr command buffer on Wormhole B0.
                                                      //We cannot have two NOC command buffers active simultaneously.
  ncrisc_noc_blitz_write_setup(0, NCRISC_WR_CMD_BUF_0, dram_buf_addr, data_send_chunk_size_bytes, output_vc, num_times_to_write, NCRISC_WR_DEF_TRID);
  if (!single_row_copy)
    c604:	020f8063          	beqz	t6, c624 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x8c>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c608:	ffb20e37          	lui	t3, 0xffb20
    c60c:	428e2e83          	lw	t4, 1064(t3) # ffb20428 <TENSIX_MAILBOX_BASE+0xffc60428>
ncrisc_noc_blitz_write_setup(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:232
  while (!ncrisc_noc_fast_write_ok(noc, cmd_buf)); 
    c610:	fe0e9ee3          	bnez	t4, c60c <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x74>
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c614:	40de2e23          	sw	a3, 1052(t3)
    c618:	42ee2023          	sw	a4, 1056(t3)
    c61c:	410e2823          	sw	a6, 1040(t3)
    c620:	400e2c23          	sw	zero, 1048(t3)
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:974
void process_dram_write_moves_raw_data_l1(dram_output_stream_state_t* curr_dram_output_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue, uint32_t stream_id,
    c624:	00000413          	li	s0, 0
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c628:	ffb20837          	lui	a6, 0xffb20
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c62c:	00100f13          	li	t5, 1
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:988
    ncrisc_noc_blitz_write_setup(0, NCRISC_WR_CMD_BUF_1, dram_buf_addr, data_send_chunk_size_bytes, output_vc, num_times_to_write, NCRISC_WR_DEF_TRID);
  for (uint32_t untilize_tiles = 0; untilize_tiles < data_send_chunk_size_tiles; untilize_tiles++) {
    c630:	1ec47a63          	bgeu	s0, a2, c824 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x28c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:990
    uint32_t dram_wrptr_byte;
    untilize_copy<0>(next_dram_q_issue, dram_buf_addr, curr_dram_output_stream_state->stream_buf_addr_byte, stream_rd_ptr_byte,
    c634:	01452983          	lw	s3, 20(a0)
    c638:	0008ae83          	lw	t4, 0(a7)
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:297
  if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) == 0) {
    c63c:	0045c483          	lbu	s1, 4(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:293
  uint32_t dram_wrptr_byte = next_dram_q_issue->dram_ptr_issued_byte;      
    c640:	0185a683          	lw	a3, 24(a1)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c644:	02882903          	lw	s2, 40(a6) # ffb20028 <TENSIX_MAILBOX_BASE+0xffc60028>
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:297
  if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) == 0) {
    c648:	0084f493          	andi	s1, s1, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:296
  dram_dest_addr = ((uint32_t)dram_buf_addr) + dram_wrptr_byte;
    c64c:	00f68e33          	add	t3, a3, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:297
  if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) == 0) {
    c650:	00049463          	bnez	s1, c658 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0xc0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:298
    dram_dest_addr += DRAM_BUF_DATA_OFFSET;
    c654:	020e0e13          	addi	t3, t3, 32
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:300
  stream_rd_addr = stream_buf_addr + stream_rd_ptr_byte;
    c658:	01d98eb3          	add	t4, s3, t4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:302
  if (single_row_copy) {
    c65c:	060f9463          	bnez	t6, c6c4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x12c>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
    c660:	02882903          	lw	s2, 40(a6)
    c664:	02880493          	addi	s1, a6, 40
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:303
    while(NOC_CMD_BUF_READ_REG(NOC_ID, NCRISC_WR_CMD_BUF_0, NOC_CMD_CTRL));
    c668:	fe091ce3          	bnez	s2, c660 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0xc8>
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c66c:	01d82023          	sw	t4, 0(a6)
    c670:	01c82623          	sw	t3, 12(a6)
    c674:	01e4a023          	sw	t5, 0(s1)
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:996
                     data_send_chunk_size_bytes, curr_dram_output_stream_state, &dram_wrptr_byte, untilize_copy_iters, single_row_copy);
#if defined(PERF_DUMP) && PERF_DUMP_LEVEL > 1
    risc::record_timestamp(risc::perf_event::DRAM_WRITE_SENT | (stream_id << 16) | data_send_chunk_size_bytes);
#endif

    uint32_t log_2x_untilize_copy_iters = curr_dram_output_stream_state->stream_info->log_2x_untilize_copy_iters;  
    c678:	05c52e03          	lw	t3, 92(a0)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c67c:	0008a483          	lw	s1, 0(a7)
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:996
    c680:	085e4e03          	lbu	t3, 133(t3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:997
    stream_rd_ptr_byte = buf_ptr_inc_wrap(stream_rd_ptr_byte, data_send_chunk_size_bytes << log_2x_untilize_copy_iters, curr_dram_output_stream_state->stream_buf_size_bytes);
    c684:	01052e83          	lw	t4, 16(a0)
    c688:	01c71e33          	sll	t3, a4, t3
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
    c68c:	009e0e33          	add	t3, t3, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c690:	01de6463          	bltu	t3, t4, c698 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x100>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c694:	41de0e33          	sub	t3, t3, t4
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:997
    c698:	01c8a023          	sw	t3, 0(a7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1002

    enum move_ptr_along_t {COLUMN, ROW, ZCOLUMN, ZROW, BATCH} move_ptr_along; 

    move_ptr_along = COLUMN;
    uint32_t c_dim_count = curr_dram_output_stream_state->c_dim_count;
    c69c:	04655e03          	lhu	t3, 70(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1005
    c_dim_count++;
    curr_dram_output_stream_state->c_dim_count = c_dim_count;
    if (c_dim_count == curr_dram_output_stream_state->c_dim_size) {
    c6a0:	04455e83          	lhu	t4, 68(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1004
    curr_dram_output_stream_state->c_dim_count = c_dim_count;
    c6a4:	001e0e13          	addi	t3, t3, 1
    c6a8:	05c51323          	sh	t3, 70(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1005
    if (c_dim_count == curr_dram_output_stream_state->c_dim_size) {
    c6ac:	07de0a63          	beq	t3, t4, c720 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x188>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c6b0:	00d706b3          	add	a3, a4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c6b4:	1066f263          	bgeu	a3, t1, c7b8 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x220>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1064
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
      curr_dram_output_stream_state->prev_zc_ptr_bytes = dram_wrptr_byte;
      curr_dram_output_stream_state->prev_zr_ptr_bytes = dram_wrptr_byte;
      curr_dram_output_stream_state->prev_batch_ptr_bytes = dram_wrptr_byte;
    }
    next_dram_q_issue->dram_ptr_issued_byte = dram_wrptr_byte;
    c6b8:	00d5ac23          	sw	a3, 24(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:988
  for (uint32_t untilize_tiles = 0; untilize_tiles < data_send_chunk_size_tiles; untilize_tiles++) {
    c6bc:	00140413          	addi	s0, s0, 1
    c6c0:	f71ff06f          	j	c630 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x98>
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:292
  uint32_t skip_col_bytes_lw = curr_dram_output_stream_state->skip_col_bytes;
    c6c4:	02052a83          	lw	s5, 32(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:306
    for (uint32_t iter = 0; iter < untilize_copy_iters; iter++) {
    c6c8:	00000493          	li	s1, 0
    c6cc:	015e09b3          	add	s3, t3, s5
    c6d0:	01d70a33          	add	s4, a4, t4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:315
        while(NOC_CMD_BUF_READ_REG(NOC_ID, NCRISC_WR_CMD_BUF_0, NOC_CMD_CTRL));
    c6d4:	02091e63          	bnez	s2, c710 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x178>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c6d8:	42882903          	lw	s2, 1064(a6)
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c6dc:	01d82023          	sw	t4, 0(a6)
    c6e0:	01c82623          	sw	t3, 12(a6)
    c6e4:	03e82423          	sw	t5, 40(a6)
    c6e8:	01598e33          	add	t3, s3, s5
    c6ec:	00ea0eb3          	add	t4, s4, a4
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:333
        while (NOC_CMD_BUF_READ_REG(NOC_ID, NCRISC_WR_CMD_BUF_1, NOC_CMD_CTRL));
    c6f0:	02091463          	bnez	s2, c718 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x180>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c6f4:	02882903          	lw	s2, 40(a6)
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c6f8:	41482023          	sw	s4, 1024(a6)
    c6fc:	41382623          	sw	s3, 1036(a6)
    c700:	43e82423          	sw	t5, 1064(a6)
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/dram_stream_intf.h:306
    for (uint32_t iter = 0; iter < untilize_copy_iters; iter++) {
    c704:	00148493          	addi	s1, s1, 1
    c708:	fc9292e3          	bne	t0, s1, c6cc <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x134>
    c70c:	f6dff06f          	j	c678 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0xe0>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c710:	02882903          	lw	s2, 40(a6)
    c714:	fc1ff06f          	j	c6d4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x13c>
    c718:	42882903          	lw	s2, 1064(a6)
    c71c:	fd5ff06f          	j	c6f0 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x158>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1010
      uint32_t r_dim_count = curr_dram_output_stream_state->r_dim_count;
    c720:	04a55e03          	lhu	t3, 74(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1013
      if (r_dim_count == curr_dram_output_stream_state->r_dim_size) {
    c724:	04855e83          	lhu	t4, 72(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1012
      curr_dram_output_stream_state->r_dim_count = r_dim_count;
    c728:	001e0e13          	addi	t3, t3, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1006
      curr_dram_output_stream_state->c_dim_count = 0;
    c72c:	04051323          	sh	zero, 70(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1012
      curr_dram_output_stream_state->r_dim_count = r_dim_count;
    c730:	05c51523          	sh	t3, 74(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1009
      dram_wrptr_byte = curr_dram_output_stream_state->prev_row_ptr_bytes;
    c734:	03452683          	lw	a3, 52(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1013
      if (r_dim_count == curr_dram_output_stream_state->r_dim_size) {
    c738:	09de1463          	bne	t3, t4, c7c0 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x228>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1018
        uint32_t zc_dim_count = curr_dram_output_stream_state->zc_dim_count;
    c73c:	04e55e03          	lhu	t3, 78(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1021
        if (zc_dim_count == curr_dram_output_stream_state->zc_dim_size) {
    c740:	04c55e83          	lhu	t4, 76(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1020
        curr_dram_output_stream_state->zc_dim_count = zc_dim_count;
    c744:	001e0e13          	addi	t3, t3, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1014
        curr_dram_output_stream_state->r_dim_count = 0;
    c748:	04051523          	sh	zero, 74(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1020
        curr_dram_output_stream_state->zc_dim_count = zc_dim_count;
    c74c:	05c51723          	sh	t3, 78(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1017
        dram_wrptr_byte = curr_dram_output_stream_state->prev_zc_ptr_bytes;
    c750:	03852683          	lw	a3, 56(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1021
        if (zc_dim_count == curr_dram_output_stream_state->zc_dim_size) {
    c754:	09de1063          	bne	t3, t4, c7d4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1026
          uint32_t zr_dim_count = curr_dram_output_stream_state->zr_dim_count;
    c758:	05255e03          	lhu	t3, 82(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1029
          if (zr_dim_count == curr_dram_output_stream_state->zr_dim_size) {
    c75c:	05055e83          	lhu	t4, 80(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1028
          curr_dram_output_stream_state->zr_dim_count = zr_dim_count;
    c760:	001e0e13          	addi	t3, t3, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1022
          curr_dram_output_stream_state->zc_dim_count = 0;
    c764:	04051723          	sh	zero, 78(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1028
          curr_dram_output_stream_state->zr_dim_count = zr_dim_count;
    c768:	05c51923          	sh	t3, 82(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1025
          dram_wrptr_byte = curr_dram_output_stream_state->prev_zr_ptr_bytes;
    c76c:	03c52683          	lw	a3, 60(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1029
          if (zr_dim_count == curr_dram_output_stream_state->zr_dim_size) {
    c770:	09de1a63          	bne	t3, t4, c804 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x26c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1034
            uint32_t batch_dim_count = next_dram_q_issue->dram_num_partial_q_slot_issued_tiles;
    c774:	0105ae03          	lw	t3, 16(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1030
            curr_dram_output_stream_state->zr_dim_count = 0;
    c778:	04051923          	sh	zero, 82(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1033
            dram_wrptr_byte = curr_dram_output_stream_state->prev_batch_ptr_bytes;
    c77c:	04052683          	lw	a3, 64(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1035
            batch_dim_count++;
    c780:	001e0e93          	addi	t4, t3, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1037
            full_q_slot_sent = (batch_dim_count == curr_dram_output_stream_state->q_slot_size_tiles);
    c784:	05452e03          	lw	t3, 84(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1036
            next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = batch_dim_count;
    c788:	01d5a823          	sw	t4, 16(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1037
            full_q_slot_sent = (batch_dim_count == curr_dram_output_stream_state->q_slot_size_tiles);
    c78c:	41de0e33          	sub	t3, t3, t4
    c790:	001e3e13          	seqz	t3, t3
    c794:	01c38023          	sb	t3, 0(t2)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c798:	02852e03          	lw	t3, 40(a0)
    c79c:	01c686b3          	add	a3, a3, t3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c7a0:	0466fe63          	bgeu	a3, t1, c7fc <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x264>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1059
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
    c7a4:	02d52a23          	sw	a3, 52(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1060
      curr_dram_output_stream_state->prev_zc_ptr_bytes = dram_wrptr_byte;
    c7a8:	02d52c23          	sw	a3, 56(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1061
      curr_dram_output_stream_state->prev_zr_ptr_bytes = dram_wrptr_byte;
    c7ac:	02d52e23          	sw	a3, 60(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1062
      curr_dram_output_stream_state->prev_batch_ptr_bytes = dram_wrptr_byte;
    c7b0:	04d52023          	sw	a3, 64(a0)
    c7b4:	f05ff06f          	j	c6b8 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c7b8:	406686b3          	sub	a3, a3, t1
    c7bc:	efdff06f          	j	c6b8 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c7c0:	02452e03          	lw	t3, 36(a0)
    c7c4:	01c686b3          	add	a3, a3, t3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c7c8:	0266f263          	bgeu	a3, t1, c7ec <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x254>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1047
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
    c7cc:	02d52a23          	sw	a3, 52(a0)
    c7d0:	ee9ff06f          	j	c6b8 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c7d4:	02c52e03          	lw	t3, 44(a0)
    c7d8:	01c686b3          	add	a3, a3, t3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c7dc:	0066fc63          	bgeu	a3, t1, c7f4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x25c>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1050
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
    c7e0:	02d52a23          	sw	a3, 52(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1051
      curr_dram_output_stream_state->prev_zc_ptr_bytes = dram_wrptr_byte;
    c7e4:	02d52c23          	sw	a3, 56(a0)
    c7e8:	ed1ff06f          	j	c6b8 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c7ec:	406686b3          	sub	a3, a3, t1
    c7f0:	fddff06f          	j	c7cc <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x234>
    c7f4:	406686b3          	sub	a3, a3, t1
    c7f8:	fe9ff06f          	j	c7e0 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x248>
    c7fc:	406686b3          	sub	a3, a3, t1
    c800:	fa5ff06f          	j	c7a4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x20c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c804:	03052e03          	lw	t3, 48(a0)
    c808:	01c686b3          	add	a3, a3, t3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c80c:	0066e463          	bltu	a3, t1, c814 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x27c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c810:	406686b3          	sub	a3, a3, t1
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1054
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
    c814:	02d52a23          	sw	a3, 52(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1055
      curr_dram_output_stream_state->prev_zc_ptr_bytes = dram_wrptr_byte;
    c818:	02d52c23          	sw	a3, 56(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1056
      curr_dram_output_stream_state->prev_zr_ptr_bytes = dram_wrptr_byte;
    c81c:	02d52e23          	sw	a3, 60(a0)
    c820:	e99ff06f          	j	c6b8 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:1066
  }
}
    c824:	01c12403          	lw	s0, 28(sp)
    c828:	01812483          	lw	s1, 24(sp)
    c82c:	01412903          	lw	s2, 20(sp)
    c830:	01012983          	lw	s3, 16(sp)
    c834:	00c12a03          	lw	s4, 12(sp)
    c838:	00812a83          	lw	s5, 8(sp)
    c83c:	00412b03          	lw	s6, 4(sp)
    c840:	02010113          	addi	sp, sp, 32
    c844:	00008067          	ret
	...

0000c850 <context_restore>:
context_restore():
    c850:	ffaf4197          	auipc	gp, 0xffaf4
    c854:	fb018193          	addi	gp, gp, -80 # ffb00800 <TENSIX_MAILBOX_BASE+0xffc40800>
    c858:	7c01a303          	lw	t1, 1984(gp) # ffb00fc0 <pContext>
    c85c:	00032103          	lw	sp, 0(t1)
    c860:	00012083          	lw	ra, 0(sp)
    c864:	00412283          	lw	t0, 4(sp)
    c868:	00812303          	lw	t1, 8(sp)
    c86c:	00c12383          	lw	t2, 12(sp)
    c870:	01012403          	lw	s0, 16(sp)
    c874:	01412483          	lw	s1, 20(sp)
    c878:	01812503          	lw	a0, 24(sp)
    c87c:	01c12583          	lw	a1, 28(sp)
    c880:	02012603          	lw	a2, 32(sp)
    c884:	02412683          	lw	a3, 36(sp)
    c888:	02812703          	lw	a4, 40(sp)
    c88c:	02c12783          	lw	a5, 44(sp)
    c890:	03012803          	lw	a6, 48(sp)
    c894:	03412883          	lw	a7, 52(sp)
    c898:	03812903          	lw	s2, 56(sp)
    c89c:	03c12983          	lw	s3, 60(sp)
    c8a0:	04012a03          	lw	s4, 64(sp)
    c8a4:	04412a83          	lw	s5, 68(sp)
    c8a8:	04812b03          	lw	s6, 72(sp)
    c8ac:	04c12b83          	lw	s7, 76(sp)
    c8b0:	05012c03          	lw	s8, 80(sp)
    c8b4:	05412c83          	lw	s9, 84(sp)
    c8b8:	05812d03          	lw	s10, 88(sp)
    c8bc:	05c12d83          	lw	s11, 92(sp)
    c8c0:	06012e03          	lw	t3, 96(sp)
    c8c4:	06412e83          	lw	t4, 100(sp)
    c8c8:	06812f03          	lw	t5, 104(sp)
    c8cc:	06c12f83          	lw	t6, 108(sp)
    c8d0:	07010113          	addi	sp, sp, 112
    c8d4:	00050067          	jr	a0
