
/proj_sw/user_dev/jnie/budabackend/./tt_build/test_inference_8381574644216967368/brisc/brisc.elf:     file format elf32-littleriscv
/proj_sw/user_dev/jnie/budabackend/./tt_build/test_inference_8381574644216967368/brisc/brisc.elf
architecture: riscv:rv32, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000000

Program Header:
    LOAD off    0x000000a0 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00001f70 memsz 0x00001f70 flags r-x
    LOAD off    0x00002010 vaddr 0x00002100 paddr 0x00002100 align 2**4
         filesz 0x00000200 memsz 0x00000200 flags rw-
    LOAD off    0x00000000 vaddr 0xffb00000 paddr 0xffb00000 align 2**4
         filesz 0x00000000 memsz 0x00000fdc flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init         00000210  00000000  00000000  000000a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         00001d60  00000210  00000210  000002b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .sbss         0000003c  ffb00000  ffb00000  00002210  2**2
                  ALLOC
  3 .bss          0000000c  ffb0003c  ffb0003c  00002210  2**2
                  ALLOC
  4 .stack        00000408  ffb00048  ffb00048  00002210  2**0
                  ALLOC
  5 data_noinit   00000b8c  ffb00450  ffb00450  00002210  2**2
                  ALLOC
  6 data_l1_zeros 00000200  00002100  00002100  00002010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .comment      00000012  00000000  00000000  00002210  2**0
                  CONTENTS, READONLY
  8 .riscv.attributes 00000026  00000000  00000000  00002222  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000048  00000000  00000000  00002248  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_info   00011e01  00000000  00000000  00002290  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 000019d0  00000000  00000000  00014091  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line   00005969  00000000  00000000  00015a61  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_frame  00000150  00000000  00000000  0001b3cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str    000074fa  00000000  00000000  0001b51c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    0000462b  00000000  00000000  00022a16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00001850  00000000  00000000  00027041  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .init	00000000 .init
00000210 l    d  .text	00000000 .text
ffb00000 l    d  .sbss	00000000 .sbss
ffb0003c l    d  .bss	00000000 .bss
ffb00048 l    d  .stack	00000000 .stack
ffb00450 l    d  data_noinit	00000000 data_noinit
00002100 l    d  data_l1_zeros	00000000 data_l1_zeros
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 tmu-crt0.o
0000017c l       .init	00000000 CRT_START
00000000 l    df *ABS*	00000000 
00001950 l     F .text	00000054 risc_reset_check()
000019a4 l     F .text	0000003c get_operand_stream_id(int)
000019e0 l     F .text	00000038 stream_id_to_operand(unsigned long)
00001a18 l     F .text	00000030 is_input_operand_decoupled(int)
00001a48 l     F .text	00000048 perf::record_perf_value(unsigned long, unsigned long, unsigned long)
ffb0003a l     O .sbss	00000002 perf_index
ffb00038 l     O .sbss	00000002 perf_end
ffb00034 l     O .sbss	00000004 perf_buf_base
00001a90 l     F .text	00000030 perf::record_timestamp_64b(unsigned long)
ffb00030 l     O .sbss	00000004 local_mem_barrier
00001ac0 l     F .text	00000028 noc_set_cfg_reg(unsigned long, unsigned long)
ffb0000c l     O .sbss	00000004 active_noc_instance
00001ae8 l     F .text	00000028 noc_get_cfg_reg(unsigned long)
00001b10 l     F .text	00000058 bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]
00001b68 l     F .text	00000368 risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]
ffb00010 l     O .sbss	00000008 last_timestamp_recorded_input
ffb0002c l     O .sbss	00000002 perf_epoch_id
00001ed0 l     F .text	00000070 bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]
ffb00000 l     O .sbss	00000001 noc_trans_table_en
ffb00008 l     O .sbss	00000002 my_logical_x
ffb00004 l     O .sbss	00000002 my_logical_y
ffb00024 l     O .sbss	00000008 first_timestamp_recorded_input
ffb00020 l     O .sbss	00000001 first_timestamp_recorded_output
ffb0001c l     O .sbss	00000001 last_timestamp_recorded_output
ffb00021 l     O .sbss	00000001 output_decouple_mask
ffb00018 l     O .sbss	00000004 decoupled_output_num_tiles
ffb0003c l     O .bss	0000000c instrn_buf
ffb00450 l     O data_noinit	00000300 active_stream_info
ffb00750 l     O data_noinit	00000004 num_active_streams
ffb00754 l     O data_noinit	00000540 input_stream_state
ffb00c94 l     O data_noinit	00000340 output_stream_state
ffb00fd4 l     O data_noinit	00000004 num_input_streams
ffb00fd8 l     O data_noinit	00000004 num_output_streams
00000000 l    df *ABS*	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
0000393e l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00005632 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00008d99 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
0000c51f l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
0000cf5d l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
0000da36 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00011938 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
ffb00000 l       .text	00000000 __init_array_end
ffb00000 l       .text	00000000 __init_array_start
00002000 g       *ABS*	00000000 __trisc1_size
ffb00800 g       .text	00000000 __global_pointer$
ffb0003c g       .bss	00000000 __l1_bss_end
00000020 g       .init	00000000 FW_TEST_RESULT
00001f50 g     F .text	00000014 wzerorange
ffe40000 g       *ABS*	00000000 TENSIX_INSTRN_BUF_BASE
00005632  w      .debug_info	00000000 .hidden unpack_pack_stream_intf.cc.ac8782ec
00000000 g       *ABS*	00000000 TENSIX_L1_BASE
00008d99  w      .debug_info	00000000 .hidden brisc.cc.990fcbd3
0000cf5d  w      .debug_info	00000000 .hidden noc.c.a81389be
00000060 g       .init	00000000 WALL_CLOCK_MAILBOX
0000020c g     F .init	00000004 _init
0000393e  w      .debug_info	00000000 .hidden risc_common.cc.12a48366
00000170 g       .init	00000000 CQ_MAILBOX
ffb00450 g       .stack	00000000 __stack_top
0000da36  w      .debug_info	00000000 .hidden risc_chip_specific.cc.8dbb454f
0000c51f  w      .debug_info	00000000 .hidden tdma_xmov.c.7a41d34c
ffec0000 g       *ABS*	00000000 TENSIX_MAILBOX_BASE
ffb0003c g       .bss	00000000 __ldm_bss_start
00000000 g     F .init	0000020c _start
0000001c g       .init	00000000 FWEVENT_MAILBOX
00000000 g       *ABS*	00000000 __firmware_start
00000400 g       *ABS*	00000000 __firmware_stack_size
ffb10000 g       *ABS*	00000000 TENSIX_NIU_REG_BASE
00000210 g     F .text	00001734 main
00006c00 g       *ABS*	00000000 __trisc_base
ffb00000 g       .sbss	00000000 __l1_bss_start
ffc00000 g       *ABS*	00000000 TENSIX_NOCRISC_MEM_BASE
0000020c g     F .init	00000004 _fini
00000174 g       .init	00000000 FIRMWARE_VERSION
ffe00000 g       *ABS*	00000000 TENSIX_REGFILE_BASE
ffb00050 g       .stack	00000000 __stack_bottom
00005000 g       *ABS*	00000000 __trisc2_size
00004000 g       *ABS*	00000000 __trisc0_size
ffb00000 g       .sbss	00000000 _edata
ffb00048 g       .bss	00000000 _end
ffb00048 g       .bss	00000000 __ldm_bss_end
00000008 g       .init	00000000 FWLOG_MAILBOX
00001f40 g     F .text	00000004 exit
00000070 g       .init	00000000 DEBUG_MAILBOX
00000004 g       .init	00000000 TEST_MAILBOX
ffb00000 g       *ABS*	00000000 TENSIX_LOCAL_DATA_MEM_BASE
ffe80000 g       *ABS*	00000000 TENSIX_PC_BUF_BUF_BASE
00011938  w      .debug_info	00000000 .hidden substitutes.cpp.870a61b3



Disassembly of section .init:

00000000 <_start>:
_start():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:8
.type   _start, @function

_start:

# produce an empty word at a known location
  j 1f
   0:	17c0006f          	j	17c <CRT_START>

00000004 <TEST_MAILBOX>:
   4:	00000000          	0x0

00000008 <FWLOG_MAILBOX>:
	...

0000001c <FWEVENT_MAILBOX>:
  1c:	00000000          	0x0

00000020 <FW_TEST_RESULT>:
	...

00000060 <WALL_CLOCK_MAILBOX>:
	...

00000070 <DEBUG_MAILBOX>:
	...

00000170 <CQ_MAILBOX>:
 170:	00000000          	0x0

00000174 <FIRMWARE_VERSION>:
 174:	00000004          	0x1
 178:	5da30992          	0x9768c264

0000017c <CRT_START>:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:56

CRT_START:
  # Initialize global pointer
  .option push
  .option norelax
1:auipc gp, %pcrel_hi(__global_pointer$)
 17c:	ffb00197          	auipc	gp, 0xffb00
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:57
  addi  gp, gp, %pcrel_lo(1b)
 180:	68418193          	addi	gp, gp, 1668 # ffb00800 <TENSIX_MAILBOX_BASE+0xffc40800>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:60

/* set stack pointer */
la sp, __stack_top
 184:	ffb00117          	auipc	sp, 0xffb00
 188:	2cc10113          	addi	sp, sp, 716 # ffb00450 <TENSIX_MAILBOX_BASE+0xffc40450>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:63

  # Clear the bss segment
  la      a0, __l1_bss_start
 18c:	ffb00517          	auipc	a0, 0xffb00
 190:	e7450513          	addi	a0, a0, -396 # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:64
  la      a1, __l1_bss_end
 194:	ffb00597          	auipc	a1, 0xffb00
 198:	ea858593          	addi	a1, a1, -344 # ffb0003c <TENSIX_MAILBOX_BASE+0xffc4003c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:65
  call    wzerorange
 19c:	00002097          	auipc	ra, 0x2
 1a0:	db4080e7          	jalr	-588(ra) # 1f50 <wzerorange>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:67

  la      a0, __ldm_bss_start
 1a4:	ffb00517          	auipc	a0, 0xffb00
 1a8:	e9850513          	addi	a0, a0, -360 # ffb0003c <TENSIX_MAILBOX_BASE+0xffc4003c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:68
  la      a1, __ldm_bss_end
 1ac:	ffb00597          	auipc	a1, 0xffb00
 1b0:	e9c58593          	addi	a1, a1, -356 # ffb00048 <TENSIX_MAILBOX_BASE+0xffc40048>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:69
  call    wzerorange
 1b4:	00002097          	auipc	ra, 0x2
 1b8:	d9c080e7          	jalr	-612(ra) # 1f50 <wzerorange>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:71

  la      s2, __init_array_start
 1bc:	ffb00917          	auipc	s2, 0xffb00
 1c0:	e4490913          	addi	s2, s2, -444 # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:72
  la      s3, __init_array_end
 1c4:	ffb00997          	auipc	s3, 0xffb00
 1c8:	e3c98993          	addi	s3, s3, -452 # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:73
  j       2f
 1cc:	0100006f          	j	1dc <CRT_START+0x60>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:74
1:lw      a0, 0(s2)
 1d0:	00092503          	lw	a0, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:75
  jalr    a0
 1d4:	000500e7          	jalr	a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:76
  addi    s2, s2, 4
 1d8:	00490913          	addi	s2, s2, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:77
2:bne     s2, s3, 1b
 1dc:	ff391ae3          	bne	s2, s3, 1d0 <CRT_START+0x54>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:87
   * sp+0: argv[0] -> sp+8
   * sp+4: argv[1] = NULL
   * sp+8: s1
   * sp+c: 0
   */
  addi    sp, sp, -16 /* (stack is aligned to 16 bytes in riscv calling convention) */
 1e0:	ff010113          	addi	sp, sp, -16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:88
  addi    a0, sp, 8
 1e4:	00810513          	addi	a0, sp, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:89
  sw      a0, 0(sp)
 1e8:	00a12023          	sw	a0, 0(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:90
  sw      zero, 4(sp)
 1ec:	00012223          	sw	zero, 4(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:91
  sw      s1, 8(sp)
 1f0:	00912423          	sw	s1, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:92
  sw      zero, 12(sp)
 1f4:	00012623          	sw	zero, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:94

  li      a0, 1 # argc = 1
 1f8:	00100513          	li	a0, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:95
  mv      a1, sp
 1fc:	00010593          	mv	a1, sp
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:96
  mv      a2, zero
 200:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:98

  call    main
 204:	00c000ef          	jal	ra, 210 <main>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:99
  tail    exit
 208:	5390106f          	j	1f40 <exit>

0000020c <_fini>:
_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/tmu-crt0.S:109
  .global _fini
  .type   _fini, @function
_init:
_fini:
  # These don't have to do anything since we use init_array/fini_array.
  ret
 20c:	00008067          	ret

Disassembly of section .text:

00000210 <main>:
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:330
    curr_active_stream_info->epoch_iters_remaining = epoch_iters_remaining; 
    curr_active_stream_info->active_streams_idx = i;
  }
}

int main() {
     210:	f7010113          	addi	sp, sp, -144
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/risc.h:22
} active_stream_info_t;


inline void RISC_POST_STATUS(uint32_t status) {
  volatile uint32_t* ptr = (volatile uint32_t*)(NOC_CFG(ROUTER_CFG_2) + NOC_INSTANCE_OFFSET);
  ptr[0] = status;
     214:	ffb30837          	lui	a6, 0xffb30
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:330
     218:	08812423          	sw	s0, 136(sp)
     21c:	08112623          	sw	ra, 140(sp)
     220:	08912223          	sw	s1, 132(sp)
     224:	09212023          	sw	s2, 128(sp)
     228:	07312e23          	sw	s3, 124(sp)
     22c:	07412c23          	sw	s4, 120(sp)
     230:	07512a23          	sw	s5, 116(sp)
     234:	07612823          	sw	s6, 112(sp)
     238:	07712623          	sw	s7, 108(sp)
     23c:	07812423          	sw	s8, 104(sp)
     240:	07912223          	sw	s9, 100(sp)
     244:	07a12023          	sw	s10, 96(sp)
     248:	05b12e23          	sw	s11, 92(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/risc.h:22
     24c:	10080593          	addi	a1, a6, 256 # ffb30100 <TENSIX_MAILBOX_BASE+0xffc70100>
     250:	100007b7          	lui	a5, 0x10000
     254:	00f5a623          	sw	a5, 12(a1)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45


inline uint32_t NOC_CMD_BUF_READ_REG(uint32_t noc, uint32_t buf, uint32_t addr) {
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
  volatile uint32_t tt_reg_ptr * ptr = (volatile uint32_t tt_reg_ptr *)offset;
  return *ptr;
     258:	ffb206b7          	lui	a3, 0xffb20
     25c:	02c6a783          	lw	a5, 44(a3) # ffb2002c <TENSIX_MAILBOX_BASE+0xffc6002c>
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:79


inline uint32_t NOC_CFG_READ_REG(uint32_t noc, uint32_t reg_id) {
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_CFG(reg_id);
  volatile uint32_t tt_reg_ptr * ptr = (volatile uint32_t tt_reg_ptr *)offset;
  return *ptr;
     260:	1006a703          	lw	a4, 256(a3)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:66
  uint32_t y = NOC_UNICAST_ADDR_Y(dram_ptr_addr);
  return x == 0 && y == 3;
}

inline void set_noc_trans_table(uint32_t noc, uint8_t& noc_trans_table_en, uint8_t& my_logical_x, uint8_t& my_logical_y) {
  noc_trans_table_en = (NOC_CFG_READ_REG(noc, NIU_CFG_0) >> NIU_CFG_0_NOC_ID_TRANSLATE_EN) & 0x1;
     264:	ffb00537          	lui	a0, 0xffb00
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69

  uint32_t noc_id_logical_reg = NOC_CFG_READ_REG(noc, NOC_ID_LOGICAL);
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
     268:	ffb00637          	lui	a2, 0xffb00
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
     26c:	02c68893          	addi	a7, a3, 44
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:66
  noc_trans_table_en = (NOC_CFG_READ_REG(noc, NIU_CFG_0) >> NIU_CFG_0_NOC_ID_TRANSLATE_EN) & 0x1;
     270:	00e75713          	srli	a4, a4, 0xe
     274:	00177713          	andi	a4, a4, 1
     278:	00e50023          	sb	a4, 0(a0) # ffb00000 <TENSIX_MAILBOX_BASE+0xffc40000>
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:79
  return *ptr;
     27c:	1386a783          	lw	a5, 312(a3)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
     280:	ffb006b7          	lui	a3, 0xffb00
     284:	ffb00437          	lui	s0, 0xffb00
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
     288:	03f7f713          	andi	a4, a5, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
     28c:	0067d793          	srli	a5, a5, 0x6
     290:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
     294:	00e60423          	sb	a4, 8(a2) # ffb00008 <TENSIX_MAILBOX_BASE+0xffc40008>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
     298:	00f68223          	sb	a5, 4(a3) # ffb00004 <TENSIX_MAILBOX_BASE+0xffc40004>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
     29c:	02c82783          	lw	a5, 44(a6)
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:79
  return *ptr;
     2a0:	0005a703          	lw	a4, 0(a1)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
     2a4:	00860613          	addi	a2, a2, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
     2a8:	00468693          	addi	a3, a3, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:66
  noc_trans_table_en = (NOC_CFG_READ_REG(noc, NIU_CFG_0) >> NIU_CFG_0_NOC_ID_TRANSLATE_EN) & 0x1;
     2ac:	00e75713          	srli	a4, a4, 0xe
     2b0:	00177713          	andi	a4, a4, 1
     2b4:	00e50023          	sb	a4, 0(a0)
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc_nonblocking_api.h:79
     2b8:	0385a783          	lw	a5, 56(a1)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
     2bc:	03f7f713          	andi	a4, a5, 63
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
     2c0:	0067d793          	srli	a5, a5, 0x6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
     2c4:	00e600a3          	sb	a4, 1(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
     2c8:	03f7f793          	andi	a5, a5, 63
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:212
  instrn_buf[0] = core.instrn_buf_base(0);
     2cc:	83c18713          	addi	a4, gp, -1988 # ffb0003c <instrn_buf>
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:70
     2d0:	00f680a3          	sb	a5, 1(a3)
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:212
     2d4:	ffe407b7          	lui	a5, 0xffe40
     2d8:	00f72023          	sw	a5, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:213
  instrn_buf[1] = core.instrn_buf_base(1);
     2dc:	ffe507b7          	lui	a5, 0xffe50
     2e0:	00f72223          	sw	a5, 4(a4)
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
  ptr[0] = val;
}

inline uint32_t READ_REG(uint32_t addr) {
  volatile uint32_t tt_reg_ptr * ptr = (volatile uint32_t tt_reg_ptr *)addr;
  return ptr[0];
     2e4:	ffb12637          	lui	a2, 0xffb12
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:214
  instrn_buf[2] = core.instrn_buf_base(2);
     2e8:	ffe607b7          	lui	a5, 0xffe60
     2ec:	00f72423          	sw	a5, 8(a4)
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
     2f0:	1b062783          	lw	a5, 432(a2) # ffb121b0 <TENSIX_MAILBOX_BASE+0xffc521b0>
stagger_startup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:76
  if (staggered_start_enabled()) {
     2f4:	0607d463          	bgez	a5, 35c <main+0x14c>
noc_local_node_id():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:299
}

uint32_t noc_local_node_id() {
  uint32_t save_cmd_buf = noc_get_cmd_buf();
  noc_set_cmd_buf(0);
  uint32_t result = NOC_READ_REG(NOC_NODE_ID);
     2f8:	00c42783          	lw	a5, 12(s0) # ffb0000c <TENSIX_MAILBOX_BASE+0xffc4000c>
stagger_startup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:82
    uint32_t flat_id = (noc_id_y - 1) * 12 + (noc_id_x - 1);
     2fc:	00c00593          	li	a1, 12
noc_local_node_id():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:299
     300:	01079793          	slli	a5, a5, 0x10
     304:	011787b3          	add	a5, a5, a7
     308:	0007a703          	lw	a4, 0(a5) # ffe60000 <TENSIX_MAILBOX_BASE+0xfffa0000>
memory_read(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:381

inline uint memory_read(uint addr)
{
#ifndef MODELT
    volatile uint * buf = reinterpret_cast<volatile uint * >(addr);
    return buf[0];
     30c:	1f062683          	lw	a3, 496(a2)
stagger_startup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:80
    uint32_t noc_id_y = (noc_id >> NOC_ADDR_NODE_ID_BITS) & NOC_ID_MASK;
     310:	00675793          	srli	a5, a4, 0x6
     314:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:79
    uint32_t noc_id_x = noc_id & NOC_ID_MASK;
     318:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:82
    uint32_t flat_id = (noc_id_y - 1) * 12 + (noc_id_x - 1);
     31c:	ff370713          	addi	a4, a4, -13
     320:	02b787b3          	mul	a5, a5, a1
     324:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:85
    uint32_t delay = flat_id * ((1 << 12) | (1 << 11));
     328:	00002737          	lui	a4, 0x2
     32c:	80070713          	addi	a4, a4, -2048 # 1800 <__firmware_stack_size+0x1400>
     330:	02e787b3          	mul	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:87
    uint64_t end = core.read_wall_clock() + delay;
     334:	00d78733          	add	a4, a5, a3
memory_read(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:381
     338:	1f862603          	lw	a2, 504(a2)
stagger_startup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:87
     33c:	00f737b3          	sltu	a5, a4, a5
     340:	00c787b3          	add	a5, a5, a2
memory_read(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:381
     344:	ffb126b7          	lui	a3, 0xffb12
     348:	1f06a583          	lw	a1, 496(a3) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
     34c:	1f86a603          	lw	a2, 504(a3)
stagger_startup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:89
    while (core.read_wall_clock() < end) { /* empty */ }
     350:	fef66ce3          	bltu	a2, a5, 348 <main+0x138>
     354:	00c79463          	bne	a5, a2, 35c <main+0x14c>
     358:	fee5e8e3          	bltu	a1, a4, 348 <main+0x138>
c_tensix_core::write_stream_register(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/c_tensix_core.h:342
    return (id & 0xFFF);
}

inline void c_tensix_core::write_stream_register(uint32_t stream_id, uint32_t index, uint32_t value)
{
  NOC_STREAM_WRITE_REG(stream_id, index, value);
     35c:	000027b7          	lui	a5, 0x2
     360:	ffb40737          	lui	a4, 0xffb40
     364:	00478793          	addi	a5, a5, 4 # 2004 <__trisc1_size+0x4>
     368:	08f72a23          	sw	a5, 148(a4) # ffb40094 <TENSIX_MAILBOX_BASE+0xffc80094>
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:242
  uint32_t niu_cfg0 = noc_get_cfg_reg(NIU_CFG_0);
     36c:	00000513          	li	a0, 0
noc_set_active_instance(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:50
  active_noc_instance = noc_id;
     370:	00042623          	sw	zero, 12(s0)
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:242
     374:	774010ef          	jal	ra, 1ae8 <noc_get_cfg_reg(unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:243
  noc_set_cfg_reg(NIU_CFG_0, niu_cfg0 | 0x1);
     378:	00156593          	ori	a1, a0, 1
     37c:	00000513          	li	a0, 0
     380:	740010ef          	jal	ra, 1ac0 <noc_set_cfg_reg(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:244
  uint32_t router_cfg0 = noc_get_cfg_reg(ROUTER_CFG_0);
     384:	00100513          	li	a0, 1
     388:	760010ef          	jal	ra, 1ae8 <noc_get_cfg_reg(unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:245
  noc_set_cfg_reg(ROUTER_CFG_0, router_cfg0 | 0x1);
     38c:	00156593          	ori	a1, a0, 1
     390:	00100513          	li	a0, 1
     394:	72c010ef          	jal	ra, 1ac0 <noc_set_cfg_reg(unsigned long, unsigned long)>
noc_set_active_instance(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:50
     398:	00100493          	li	s1, 1
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:248
  uint32_t niu_cfg1 = noc_get_cfg_reg(NIU_CFG_0);
     39c:	00000513          	li	a0, 0
noc_set_active_instance(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:50
     3a0:	00942623          	sw	s1, 12(s0)
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:248
     3a4:	744010ef          	jal	ra, 1ae8 <noc_get_cfg_reg(unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:249
  noc_set_cfg_reg(NIU_CFG_0, niu_cfg1 | 0x1);
     3a8:	00156593          	ori	a1, a0, 1
     3ac:	00000513          	li	a0, 0
     3b0:	710010ef          	jal	ra, 1ac0 <noc_set_cfg_reg(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:250
  uint32_t router_cfg1 = noc_get_cfg_reg(ROUTER_CFG_0);
     3b4:	00100513          	li	a0, 1
     3b8:	730010ef          	jal	ra, 1ae8 <noc_get_cfg_reg(unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:251
  noc_set_cfg_reg(ROUTER_CFG_0, router_cfg1 | 0x1);
     3bc:	00156593          	ori	a1, a0, 1
     3c0:	00100513          	li	a0, 1
     3c4:	6fc010ef          	jal	ra, 1ac0 <noc_set_cfg_reg(unsigned long, unsigned long)>
set_trisc_address():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:164
  cfg_regs[NCRISC_RESET_PC_PC_ADDR32] = l1_mem::address_map::NCRISC_IRAM_MEM_BASE; //NCRISC IRAM
     3c8:	ffef07b7          	lui	a5, 0xffef0
noc_set_active_instance(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:50
     3cc:	00042623          	sw	zero, 12(s0)
set_trisc_address():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:164
     3d0:	28078713          	addi	a4, a5, 640 # ffef0280 <TENSIX_MAILBOX_BASE+0x30280>
     3d4:	ffc006b7          	lui	a3, 0xffc00
     3d8:	00d72423          	sw	a3, 8(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:165
  cfg_regs[TRISC_RESET_PC_SEC0_PC_ADDR32] = l1_mem::address_map::TRISC_BASE;
     3dc:	20078793          	addi	a5, a5, 512
     3e0:	0000d6b7          	lui	a3, 0xd
     3e4:	06d7ac23          	sw	a3, 120(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:166
  cfg_regs[TRISC_RESET_PC_SEC1_PC_ADDR32] = l1_mem::address_map::TRISC_BASE + l1_mem::address_map::TRISC0_SIZE;
     3e8:	000126b7          	lui	a3, 0x12
     3ec:	06d7ae23          	sw	a3, 124(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:167
  cfg_regs[TRISC_RESET_PC_SEC2_PC_ADDR32] = l1_mem::address_map::TRISC_BASE + l1_mem::address_map::TRISC0_SIZE + l1_mem::address_map::TRISC1_SIZE;
     3f0:	000167b7          	lui	a5, 0x16
     3f4:	00f72023          	sw	a5, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:168
  cfg_regs[TRISC_RESET_PC_OVERRIDE_Reset_PC_Override_en_ADDR32] = 0b111;
     3f8:	00700793          	li	a5, 7
     3fc:	00f72223          	sw	a5, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:169
  cfg_regs[NCRISC_RESET_PC_OVERRIDE_Reset_PC_Override_en_ADDR32] = 0x1;
     400:	00972623          	sw	s1, 12(a4)
l1_to_ncrisc_iram_copy():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:189
  RISC_EPOCH_INFO_PTR->all_streams_ready = 0;
     404:	000237b7          	lui	a5, 0x23
     408:	080786a3          	sb	zero, 141(a5) # 2308d <substitutes.cpp.870a61b3+0x11755>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:190
  RISC_EPOCH_INFO_PTR->end_program = 0;
     40c:	080787a3          	sb	zero, 143(a5)
memory_write(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:373
    buf[0] = value;
     410:	50000713          	li	a4, 1280
     414:	ffb117b7          	lui	a5, 0xffb11
     418:	00e7a023          	sw	a4, 0(a5) # ffb11000 <TENSIX_MAILBOX_BASE+0xffc51000>
     41c:	00004737          	lui	a4, 0x4
     420:	00e7a223          	sw	a4, 4(a5)
     424:	40000713          	li	a4, 1024
     428:	00e7a423          	sw	a4, 8(a5)
     42c:	0097a623          	sw	s1, 12(a5)
     430:	04000713          	li	a4, 64
     434:	00e7a823          	sw	a4, 16(a5)
memory_read(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:381
    return buf[0];
     438:	0147a783          	lw	a5, 20(a5)
     43c:	ffb116b7          	lui	a3, 0xffb11
wait_tdma_movers_done(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/tdma_xmov.c:34
}

void wait_tdma_movers_done(uint mover_busy_mask)
{
  uint volatile tdma_mover_status;
  tdma_mover_status = memory_read(RISCV_TDMA_REG_STATUS); // Dummy read to flush the pipe
     440:	04f12223          	sw	a5, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/tdma_xmov.c:40

  do {
    tdma_mover_status = memory_read(RISCV_TDMA_REG_STATUS);
  // Wait until both movers are not busy, and fifo is empty
  } while ( (tdma_mover_status & (mover_busy_mask | RISCV_TDMA_STATUS_FLAG_FIFO_EMPTY_MASK)) 
              != RISCV_TDMA_STATUS_FLAG_FIFO_EMPTY_MASK);
     444:	00800713          	li	a4, 8
memory_read(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:381
     448:	0146a783          	lw	a5, 20(a3) # ffb11014 <TENSIX_MAILBOX_BASE+0xffc51014>
wait_tdma_movers_done(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/tdma_xmov.c:37
    tdma_mover_status = memory_read(RISCV_TDMA_REG_STATUS);
     44c:	04f12223          	sw	a5, 68(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/tdma_xmov.c:39
  } while ( (tdma_mover_status & (mover_busy_mask | RISCV_TDMA_STATUS_FLAG_FIFO_EMPTY_MASK)) 
     450:	04412783          	lw	a5, 68(sp)
     454:	0097f793          	andi	a5, a5, 9
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/tdma_xmov.c:40
              != RISCV_TDMA_STATUS_FLAG_FIFO_EMPTY_MASK);
     458:	fee798e3          	bne	a5, a4, 448 <__firmware_stack_size+0x48>
WRITE_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:42
  ptr[0] = val;
     45c:	ffb127b7          	lui	a5, 0xffb12
     460:	00007737          	lui	a4, 0x7
     464:	1ae7a823          	sw	a4, 432(a5) # ffb121b0 <TENSIX_MAILBOX_BASE+0xffc521b0>
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:263
  cfg_regs[RISCV_IC_INVALIDATE_InvalidateAll_ADDR32] = 0xf;
     468:	ffef07b7          	lui	a5, 0xffef0
     46c:	20078713          	addi	a4, a5, 512 # ffef0200 <TENSIX_MAILBOX_BASE+0x30200>
     470:	00f00693          	li	a3, 15
     474:	06d72a23          	sw	a3, 116(a4) # 7074 <__trisc_base+0x474>
ex_push_insn(unsigned long volatile*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:54
  instrn_buffer[0] = instrn;
     478:	ffe406b7          	lui	a3, 0xffe40
     47c:	10180737          	lui	a4, 0x10180
     480:	00e6a023          	sw	a4, 0(a3) # ffe40000 <TENSIX_MAILBOX_BASE+0xfff80000>
     484:	8a003737          	lui	a4, 0x8a003
     488:	00a70713          	addi	a4, a4, 10 # 8a00300a <TENSIX_MAILBOX_BASE+0x8a14300a>
     48c:	00e6a023          	sw	a4, 0(a3)
     490:	02000737          	lui	a4, 0x2000
     494:	00e6a023          	sw	a4, 0(a3)
     498:	7100c737          	lui	a4, 0x7100c
     49c:	f8070713          	addi	a4, a4, -128 # 7100bf80 <substitutes.cpp.870a61b3+0x70ffa648>
     4a0:	00e6a023          	sw	a4, 0(a3)
     4a4:	91000737          	lui	a4, 0x91000
     4a8:	0b070713          	addi	a4, a4, 176 # 910000b0 <TENSIX_MAILBOX_BASE+0x911400b0>
     4ac:	00e6a023          	sw	a4, 0(a3)
ex_rmw_cfg(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long volatile*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:184
  uint32_t cfg_data = cfg_regs[addr];
     4b0:	00c7a703          	lw	a4, 12(a5)
rmw_cfg_value(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:176
  cfg_data |= wrdata;
     4b4:	00004637          	lui	a2, 0x4
     4b8:	00176713          	ori	a4, a4, 1
ex_rmw_cfg(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long volatile*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:185
  cfg_regs[addr] = rmw_cfg_value(cfg_shamt, cfg_mask, wr_val, cfg_data);
     4bc:	00e7a623          	sw	a4, 12(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:184
  uint32_t cfg_data = cfg_regs[addr];
     4c0:	00c7a703          	lw	a4, 12(a5)
rmw_cfg_value(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:176
  cfg_data |= wrdata;
     4c4:	ff860613          	addi	a2, a2, -8 # 3ff8 <risc_common.cc.12a48366+0x6ba>
     4c8:	00276713          	ori	a4, a4, 2
ex_rmw_cfg(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long volatile*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:185
  cfg_regs[addr] = rmw_cfg_value(cfg_shamt, cfg_mask, wr_val, cfg_data);
     4cc:	00e7a623          	sw	a4, 12(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:184
  uint32_t cfg_data = cfg_regs[addr];
     4d0:	00c7a583          	lw	a1, 12(a5)
rmw_cfg_value(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:176
  cfg_data |= wrdata;
     4d4:	00001737          	lui	a4, 0x1
     4d8:	80070713          	addi	a4, a4, -2048 # 800 <__firmware_stack_size+0x400>
     4dc:	00e5c733          	xor	a4, a1, a4
     4e0:	00c77733          	and	a4, a4, a2
     4e4:	00b74733          	xor	a4, a4, a1
ex_rmw_cfg(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long volatile*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:185
  cfg_regs[addr] = rmw_cfg_value(cfg_shamt, cfg_mask, wr_val, cfg_data);
     4e8:	00e7a623          	sw	a4, 12(a5)
ex_push_insn(unsigned long volatile*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/tensix_functions.h:54
  instrn_buffer[0] = instrn;
     4ec:	a3100737          	lui	a4, 0xa3100
     4f0:	00870613          	addi	a2, a4, 8 # a3100008 <TENSIX_MAILBOX_BASE+0xa3240008>
     4f4:	00c6a023          	sw	a2, 0(a3)
     4f8:	01070613          	addi	a2, a4, 16
     4fc:	00c6a023          	sw	a2, 0(a3)
     500:	20070713          	addi	a4, a4, 512
     504:	00e6a023          	sw	a4, 0(a3)
noc_local_node_id():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:299
  uint32_t result = NOC_READ_REG(NOC_NODE_ID);
     508:	00c42703          	lw	a4, 12(s0)
     50c:	ffb206b7          	lui	a3, 0xffb20
     510:	02c68693          	addi	a3, a3, 44 # ffb2002c <TENSIX_MAILBOX_BASE+0xffc6002c>
     514:	01071713          	slli	a4, a4, 0x10
     518:	00d70733          	add	a4, a4, a3
     51c:	00072683          	lw	a3, 0(a4)
set_tensix_prng_seed():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:206
    cfg_regs[PRNG_SEED_Seed_Val_ADDR32] = (noc_id_y << 16) | noc_id_x;
     520:	003f0637          	lui	a2, 0x3f0
     524:	00a69713          	slli	a4, a3, 0xa
     528:	00c77733          	and	a4, a4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:203
    uint32_t noc_id_x = noc_id & NOC_ID_MASK;
     52c:	03f6f693          	andi	a3, a3, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:206
    cfg_regs[PRNG_SEED_Seed_Val_ADDR32] = (noc_id_y << 16) | noc_id_x;
     530:	00d76733          	or	a4, a4, a3
     534:	28078793          	addi	a5, a5, 640
     538:	00e7a823          	sw	a4, 16(a5)
device_setup():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:303
  for (int i = 0; i < DEBUG_MAILBOX_SIZE; i++)
     53c:	07000793          	li	a5, 112
     540:	10078713          	addi	a4, a5, 256
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:304
      core.debug_mailbox()[i] = 0;
     544:	0007a023          	sw	zero, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:303
  for (int i = 0; i < DEBUG_MAILBOX_SIZE; i++)
     548:	00478793          	addi	a5, a5, 4
     54c:	fee79ce3          	bne	a5, a4, 544 <__firmware_stack_size+0x144>
perf::setup_perf_trace():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:122
  output_decouple_mask = (*PERF_RISC_MAILBOX_OUTPUT_DECOUPLE_MASK_PTR) & 0xff;
}
#endif

inline void setup_perf_trace() {
  perf_buf_base = reinterpret_cast<uint32_t *>(l1_mem::address_map::BRISC_PERF_BUF_BASE_ADDR);
     550:	000027b7          	lui	a5, 0x2
     554:	34078793          	addi	a5, a5, 832 # 2340 <__trisc1_size+0x340>
     558:	82f1aa23          	sw	a5, -1996(gp) # ffb00034 <perf_buf_base>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:123
  perf_end = l1_mem::address_map::BRISC_PERF_BUF_SIZE >> 2;
     55c:	0a000713          	li	a4, 160
     560:	82e19c23          	sh	a4, -1992(gp) # ffb00038 <perf_end>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:124
  perf_epoch_id = 0;
     564:	82019623          	sh	zero, -2004(gp) # ffb0002c <perf_epoch_id>
init_brisc_streams():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:309
  num_active_streams = RISC_EPOCH_INFO_PTR->num_active_streams;
     568:	c5018a93          	addi	s5, gp, -944 # ffb00450 <active_stream_info>
risc_unpack_pack_stream_handler_init(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:491

void risc_unpack_pack_stream_handler_init(
  uint32_t &num_input_streams, kernel_input_stream_state_t *input_stream_state,
  uint32_t &num_output_streams, kernel_output_stream_state_t *output_stream_state
) {
  num_input_streams = RISC_EPOCH_INFO_PTR->num_inputs;
     56c:	ffb017b7          	lui	a5, 0xffb01
     570:	45078793          	addi	a5, a5, 1104 # ffb01450 <TENSIX_MAILBOX_BASE+0xffc41450>
     574:	00f12a23          	sw	a5, 20(sp)
risc_get_next_epoch():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:114
  while (!ncrisc_noc_nonposted_writes_flushed_l1(header_buf_init_noc, NCRISC_WR_LOCAL_TRID));
}


void risc_get_next_epoch() {
  while (!RISC_EPOCH_INFO_PTR->all_streams_ready && !RISC_EPOCH_INFO_PTR->end_program)
     578:	00023437          	lui	s0, 0x23
     57c:	08d44703          	lbu	a4, 141(s0) # 2308d <substitutes.cpp.870a61b3+0x11755>
     580:	00071a63          	bnez	a4, 594 <__firmware_stack_size+0x194>
     584:	08f44783          	lbu	a5, 143(s0)
     588:	00079663          	bnez	a5, 594 <__firmware_stack_size+0x194>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:116
  {
    risc_reset_check();
     58c:	3c4010ef          	jal	ra, 1950 <risc_reset_check()>
     590:	fedff06f          	j	57c <__firmware_stack_size+0x17c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:120
  }

  // Detect case when core is not used for this epoch
  if (RISC_EPOCH_INFO_PTR->all_streams_ready == 0xba) {
     594:	000237b7          	lui	a5, 0x23
     598:	08d7c603          	lbu	a2, 141(a5) # 2308d <substitutes.cpp.870a61b3+0x11755>
     59c:	0ba00693          	li	a3, 186
     5a0:	08078713          	addi	a4, a5, 128
     5a4:	00d61c63          	bne	a2, a3, 5bc <__firmware_stack_size+0x1bc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:122
    volatile uint32_t* test_mailbox_ptr = (volatile uint32_t*)(l1_mem::address_map::FIRMWARE_BASE + TEST_MAILBOX_ADDRESS);
    test_mailbox_ptr[0] = 0xabcd1234;
     5a8:	abcd17b7          	lui	a5, 0xabcd1
     5ac:	23478793          	addi	a5, a5, 564 # abcd1234 <TENSIX_MAILBOX_BASE+0xabe11234>
     5b0:	00f02223          	sw	a5, 4(zero) # 4 <TEST_MAILBOX>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:124
    while(true) {
      risc_reset_check();
     5b4:	39c010ef          	jal	ra, 1950 <risc_reset_check()>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:123
    while(true) {
     5b8:	ffdff06f          	j	5b4 <__firmware_stack_size+0x1b4>
perf::initialize_perf_trace_for_epoch():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:130
}

inline void initialize_perf_trace_for_epoch() {

    volatile uint tt_l1_ptr * ncrisc_ack_addr = &EPOCH_INFO_PTR->perf_dram_copy_ack[thread_id];
    int32_t dram_dump_req_local = EPOCH_INFO_PTR->perf_dram_copy_req[thread_id];
     5bc:	22472683          	lw	a3, 548(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:131
    int32_t ack_local = *ncrisc_ack_addr;
     5c0:	2b87a783          	lw	a5, 696(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:133
    while (ack_local != dram_dump_req_local) {
        ack_local = *ncrisc_ack_addr;
     5c4:	00023737          	lui	a4, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:132
    while (ack_local != dram_dump_req_local) {
     5c8:	00f68663          	beq	a3, a5, 5d4 <__firmware_stack_size+0x1d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:133
        ack_local = *ncrisc_ack_addr;
     5cc:	2b872783          	lw	a5, 696(a4) # 232b8 <substitutes.cpp.870a61b3+0x11980>
     5d0:	ff9ff06f          	j	5c8 <__firmware_stack_size+0x1c8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:135
    }
    perf_buf_base[0] = PERF_DUMP_END_SIGNAL;
     5d4:	beeff7b7          	lui	a5, 0xbeeff
     5d8:	00002737          	lui	a4, 0x2
     5dc:	00d78793          	addi	a5, a5, 13 # beeff00d <TENSIX_MAILBOX_BASE+0xbf03f00d>
     5e0:	34f72023          	sw	a5, 832(a4) # 2340 <__trisc1_size+0x340>
     5e4:	34070693          	addi	a3, a4, 832
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:136
    perf_index = 2;
     5e8:	00200713          	li	a4, 2
     5ec:	82e19d23          	sh	a4, -1990(gp) # ffb0003a <perf_index>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:143
    volatile uint32_t* header_ptr = reinterpret_cast<volatile uint32_t *>(l1_mem::address_map::PERF_THREAD_HEADER);
    uint32_t header = header_ptr[0];
    header = (header & 0xfff8ffff) | ((thread_id & 0b111) << 16);
    perf_buf_base[1] = header;
#else
    perf_buf_base[1] = 0xffffffff;
     5f0:	fff00793          	li	a5, -1
     5f4:	00f6a223          	sw	a5, 4(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:146
#endif
    for (uint i = 0; i < PERF_MAX_NUM_INPUTS; i++) {
        first_timestamp_recorded_input[i] = false;
     5f8:	82418713          	addi	a4, gp, -2012 # ffb00024 <first_timestamp_recorded_input>
     5fc:	02e12823          	sw	a4, 48(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:147
        last_timestamp_recorded_input[i] = false;
     600:	ffb00737          	lui	a4, 0xffb00
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:145
    for (uint i = 0; i < PERF_MAX_NUM_INPUTS; i++) {
     604:	00000793          	li	a5, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:147
        last_timestamp_recorded_input[i] = false;
     608:	01070713          	addi	a4, a4, 16 # ffb00010 <TENSIX_MAILBOX_BASE+0xffc40010>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:145
    for (uint i = 0; i < PERF_MAX_NUM_INPUTS; i++) {
     60c:	00800693          	li	a3, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:146
        first_timestamp_recorded_input[i] = false;
     610:	03012603          	lw	a2, 48(sp)
     614:	00c78633          	add	a2, a5, a2
     618:	00060023          	sb	zero, 0(a2) # 3f0000 <substitutes.cpp.870a61b3+0x3de6c8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:147
        last_timestamp_recorded_input[i] = false;
     61c:	00e78633          	add	a2, a5, a4
     620:	00060023          	sb	zero, 0(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:145
    for (uint i = 0; i < PERF_MAX_NUM_INPUTS; i++) {
     624:	00178793          	addi	a5, a5, 1
     628:	fed794e3          	bne	a5, a3, 610 <__firmware_stack_size+0x210>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:150
    }
    for (uint i = 0; i < PERF_MAX_NUM_OUTPUTS; i++) {
        first_timestamp_recorded_output[i] = false;
     62c:	82018023          	sb	zero, -2016(gp) # ffb00020 <first_timestamp_recorded_output>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:151
        last_timestamp_recorded_output[i] = false;
     630:	80018e23          	sb	zero, -2020(gp) # ffb0001c <last_timestamp_recorded_output>
perf::get_overlay_decouple_mailbox():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:117
  output_decouple_mask = (*PERF_RISC_MAILBOX_OUTPUT_DECOUPLE_MASK_PTR) & 0xff;
     634:	000027b7          	lui	a5, 0x2
     638:	3147a903          	lw	s2, 788(a5) # 2314 <__trisc1_size+0x314>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:350
    
    risc_get_next_epoch();

#ifdef PERF_DUMP
    perf::initialize_perf_trace_for_epoch();
    perf::record_timestamp_64b(uint32_t(perf::BriscEventType::EPOCH));
     63c:	00600513          	li	a0, 6
perf::get_overlay_decouple_mailbox():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:117
     640:	0ff97913          	zext.b	s2, s2
     644:	832180a3          	sb	s2, -2015(gp) # ffb00021 <output_decouple_mask>
perf::initialize_perf_trace_for_epoch():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:155
    }
#if OVERLAY_DECOUPLE == 1
    get_overlay_decouple_mailbox();
    decoupled_output_num_tiles = 0;
     648:	8001ac23          	sw	zero, -2024(gp) # ffb00018 <decoupled_output_num_tiles>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:350
     64c:	444010ef          	jal	ra, 1a90 <perf::record_timestamp_64b(unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:353
#endif

    if (RISC_EPOCH_INFO_PTR->end_program == 1) {
     650:	000235b7          	lui	a1, 0x23
     654:	08f5c703          	lbu	a4, 143(a1) # 2308f <substitutes.cpp.870a61b3+0x11757>
     658:	00100793          	li	a5, 1
     65c:	08058613          	addi	a2, a1, 128
     660:	02f71663          	bne	a4, a5, 68c <__firmware_stack_size+0x28c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/risc.h:22
     664:	ffb307b7          	lui	a5, 0xffb30
     668:	220006b7          	lui	a3, 0x22000
     66c:	10d7a623          	sw	a3, 268(a5) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:380
    risc_signal_epoch_done();
    RISC_POST_STATUS(0x21000000 | (epoch_id&0xff));
  }

  volatile uint32_t * tt_l1_ptr test_mailbox_ptr = (volatile uint32_t tt_l1_ptr *)(l1_mem::address_map::FIRMWARE_BASE + TEST_MAILBOX_ADDRESS);
  if (test_mailbox_ptr[0] != RISC_DETECTED_STREAM_ASSERT)
     670:	00402683          	lw	a3, 4(zero) # 4 <TEST_MAILBOX>
     674:	deeeb7b7          	lui	a5, 0xdeeeb
     678:	aad78793          	addi	a5, a5, -1363 # deeeaaad <TENSIX_MAILBOX_BASE+0xdf02aaad>
     67c:	00f68463          	beq	a3, a5, 684 <__firmware_stack_size+0x284>
     680:	2940106f          	j	1914 <__firmware_stack_size+0x1514>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:385 (discriminator 1)
    test_mailbox_ptr[0] = 0x1;
  
  while (true)
  {
    risc_reset_check();
     684:	2cc010ef          	jal	ra, 1950 <risc_reset_check()>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:383 (discriminator 1)
  while (true)
     688:	ffdff06f          	j	684 <__firmware_stack_size+0x284>
init_brisc_streams():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:309
  num_active_streams = RISC_EPOCH_INFO_PTR->num_active_streams;
     68c:	00862503          	lw	a0, 8(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:312
  for (uint32_t i = 0;
     690:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:311
  active_stream_info_t* curr_active_stream_info = active_stream_info;
     694:	c5018793          	addi	a5, gp, -944 # ffb00450 <active_stream_info>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:309
  num_active_streams = RISC_EPOCH_INFO_PTR->num_active_streams;
     698:	30aaa023          	sw	a0, 768(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:313
       i < num_active_streams;
     69c:	04e50463          	beq	a0, a4, 6e4 <__firmware_stack_size+0x2e4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:315
    volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
     6a0:	04470693          	addi	a3, a4, 68
     6a4:	00269693          	slli	a3, a3, 0x2
     6a8:	00d606b3          	add	a3, a2, a3
     6ac:	0046a683          	lw	a3, 4(a3) # 22000004 <substitutes.cpp.870a61b3+0x21fee6cc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:316
    uint32_t stream_id = l1_stream_info->stream_id;
     6b0:	0006d303          	lhu	t1, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:317
    uint32_t start_phase_num_cfg_regs = l1_stream_info->start_phase_num_cfg_regs;
     6b4:	01e6c883          	lbu	a7, 30(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:318
    uint32_t flags = l1_stream_info->flags;
     6b8:	03c6a803          	lw	a6, 60(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:319
    uint32_t epoch_iters_remaining = l1_stream_info->epoch_iters_remaining;
     6bc:	0306a683          	lw	a3, 48(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:326
    curr_active_stream_info->active_streams_idx = i;
     6c0:	00e780a3          	sb	a4, 1(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:322
    curr_active_stream_info->dram_prefetch_stream_need_restart = 0;
     6c4:	000781a3          	sb	zero, 3(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:312
  for (uint32_t i = 0;
     6c8:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:321
    curr_active_stream_info->stream_id = stream_id;
     6cc:	00678023          	sb	t1, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:323
    curr_active_stream_info->start_phase_num_cfg_regs = start_phase_num_cfg_regs;
     6d0:	01178123          	sb	a7, 2(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:324
    curr_active_stream_info->flags = flags;
     6d4:	01079323          	sh	a6, 6(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:325
    curr_active_stream_info->epoch_iters_remaining = epoch_iters_remaining; 
     6d8:	00d7a423          	sw	a3, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:312
  for (uint32_t i = 0;
     6dc:	00c78793          	addi	a5, a5, 12
     6e0:	fbdff06f          	j	69c <__firmware_stack_size+0x29c>
risc_unpack_pack_stream_handler_init(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:491
     6e4:	0805aa03          	lw	s4, 128(a1)
     6e8:	01412783          	lw	a5, 20(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:492
  num_output_streams = RISC_EPOCH_INFO_PTR->num_outputs;
     6ec:	01412703          	lw	a4, 20(sp)
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:369
    volatile epoch_stream_info_t tt_l1_ptr * input_stream_info = RISC_EPOCH_INFO_PTR->inputs[input];
     6f0:	000239b7          	lui	s3, 0x23
     6f4:	00100437          	lui	s0, 0x100
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:368
    for (uint32_t input = 0; input < num_input_streams; input++) {
     6f8:	00000493          	li	s1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:369
    volatile epoch_stream_info_t tt_l1_ptr * input_stream_info = RISC_EPOCH_INFO_PTR->inputs[input];
     6fc:	08098993          	addi	s3, s3, 128 # 23080 <substitutes.cpp.870a61b3+0x11748>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:374
    curr_input_state_ptr->no_hw_clearing = ((input_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((input_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || ((input_stream_info->flags & STREAM_NCRISC_CLEAR) != 0) ||
     700:	00100b13          	li	s6, 1
     704:	00001bb7          	lui	s7, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:381
    if (stream_type == datacopy_stream_type_t::PACKER) {
     708:	00200c13          	li	s8, 2
     70c:	b4040413          	addi	s0, s0, -1216 # ffb40 <substitutes.cpp.870a61b3+0xee208>
risc_unpack_pack_stream_handler_init(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:491
  num_input_streams = RISC_EPOCH_INFO_PTR->num_inputs;
     710:	b947a223          	sw	s4, -1148(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:492
  num_output_streams = RISC_EPOCH_INFO_PTR->num_outputs;
     714:	00462783          	lw	a5, 4(a2)
     718:	b8f72423          	sw	a5, -1144(a4)
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:367
  kernel_input_stream_state_t* prev_input_state_ptr = curr_input_state_ptr;
     71c:	f5418713          	addi	a4, gp, -172 # ffb00754 <input_stream_state>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:366
  kernel_input_stream_state_t* curr_input_state_ptr = (kernel_input_stream_state_t*)input_stream_state;
     720:	f5418c93          	addi	s9, gp, -172 # ffb00754 <input_stream_state>
     724:	f5418793          	addi	a5, gp, -172 # ffb00754 <input_stream_state>
     728:	02f12423          	sw	a5, 40(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:368
    for (uint32_t input = 0; input < num_input_streams; input++) {
     72c:	169a0663          	beq	s4, s1, 898 <__firmware_stack_size+0x498>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:369
    volatile epoch_stream_info_t tt_l1_ptr * input_stream_info = RISC_EPOCH_INFO_PTR->inputs[input];
     730:	01448793          	addi	a5, s1, 20
     734:	00279793          	slli	a5, a5, 0x2
     738:	00f987b3          	add	a5, s3, a5
     73c:	0047ad03          	lw	s10, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:370
    curr_input_state_ptr->epoch_done = 0;
     740:	000c80a3          	sb	zero, 1(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:371
    curr_input_state_ptr->stream_id = input_stream_info->stream_id;
     744:	000d5503          	lhu	a0, 0(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:372
    curr_input_state_ptr->epoch_tiles_remaining_to_clear = input_stream_info->epoch_num_tiles;
     748:	008d2783          	lw	a5, 8(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:371
    curr_input_state_ptr->stream_id = input_stream_info->stream_id;
     74c:	00ac9123          	sh	a0, 2(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:372
    curr_input_state_ptr->epoch_tiles_remaining_to_clear = input_stream_info->epoch_num_tiles;
     750:	00fca423          	sw	a5, 8(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:373
    curr_input_state_ptr->num_iter_tiles = input_stream_info->num_iter_tiles;
     754:	058d2783          	lw	a5, 88(s10)
     758:	00fca823          	sw	a5, 16(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:374
    curr_input_state_ptr->no_hw_clearing = ((input_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((input_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || ((input_stream_info->flags & STREAM_NCRISC_CLEAR) != 0) ||
     75c:	03cd2703          	lw	a4, 60(s10)
     760:	00100793          	li	a5, 1
     764:	01077713          	andi	a4, a4, 16
     768:	02071463          	bnez	a4, 790 <__firmware_stack_size+0x390>
     76c:	03cd2703          	lw	a4, 60(s10)
     770:	04077713          	andi	a4, a4, 64
     774:	00071e63          	bnez	a4, 790 <__firmware_stack_size+0x390>
     778:	03cd2703          	lw	a4, 60(s10)
     77c:	01777733          	and	a4, a4, s7
     780:	00071863          	bnez	a4, 790 <__firmware_stack_size+0x390>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:375
                                           ((input_stream_info->flags & STREAM_DRAM_NO_PUSH) != 0);
     784:	03cd2783          	lw	a5, 60(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:374
    curr_input_state_ptr->no_hw_clearing = ((input_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((input_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || ((input_stream_info->flags & STREAM_NCRISC_CLEAR) != 0) ||
     788:	00b7d793          	srli	a5, a5, 0xb
     78c:	0017f793          	andi	a5, a5, 1
     790:	00fc8d23          	sb	a5, 26(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:376
    curr_input_state_ptr->epoch_tiles_cleared = 0;
     794:	000c9623          	sh	zero, 12(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:377
    curr_input_state_ptr->prev_phases_tiles_received = 0;
     798:	000c9723          	sh	zero, 14(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:378
    curr_input_state_ptr->tiles_to_clear = 0;
     79c:	000caa23          	sw	zero, 20(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:379
    uint32_t operand = stream_id_to_operand(curr_input_state_ptr->stream_id);
     7a0:	240010ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:380
    uint32_t stream_type = input_stream_info->datacopy_stream_type & 0x7;
     7a4:	006d4783          	lbu	a5, 6(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:379
    uint32_t operand = stream_id_to_operand(curr_input_state_ptr->stream_id);
     7a8:	00050d93          	mv	s11, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:381
    if (stream_type == datacopy_stream_type_t::PACKER) {
     7ac:	0077f793          	andi	a5, a5, 7
     7b0:	09879863          	bne	a5, s8, 840 <__firmware_stack_size+0x440>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:382
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_stream_tiles_received_ptr(input_stream_info->datacopy_stream_id);
     7b4:	007d4783          	lbu	a5, 7(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:384
      curr_input_state_ptr->eth_fw_stream = 1;
     7b8:	016c82a3          	sb	s6, 5(s9)
get_packer_stream_tiles_received_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:190
inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_operand_stream_tiles_acked_ptr(uint32_t stream_id) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
}

inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_packer_stream_tiles_received_ptr(uint32_t stream_id) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX));
     7bc:	008787b3          	add	a5, a5, s0
     7c0:	00c79793          	slli	a5, a5, 0xc
     7c4:	00478793          	addi	a5, a5, 4
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:382
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_stream_tiles_received_ptr(input_stream_info->datacopy_stream_id);
     7c8:	02fca623          	sw	a5, 44(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:383
      curr_input_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_stream_tiles_acked_ptr(curr_input_state_ptr->stream_id);
     7cc:	002cd783          	lhu	a5, 2(s9)
get_operand_stream_tiles_acked_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:186
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
     7d0:	008787b3          	add	a5, a5, s0
     7d4:	00c79793          	slli	a5, a5, 0xc
     7d8:	00c78793          	addi	a5, a5, 12
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:383
     7dc:	02fca823          	sw	a5, 48(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:391
    curr_input_state_ptr->input_idx = input;
     7e0:	009c8023          	sb	s1, 0(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:392
    curr_input_state_ptr->prev_ack_thresh = 0;
     7e4:	000c8223          	sb	zero, 4(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:394
    uint32_t num_fork_streams = input_stream_info->num_fork_streams;
     7e8:	08cd5683          	lhu	a3, 140(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:395
    curr_input_state_ptr->num_fork_streams = num_fork_streams;
     7ec:	00dc8da3          	sb	a3, 27(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:396
    if (num_fork_streams > 0) {
     7f0:	02068c63          	beqz	a3, 828 <__firmware_stack_size+0x428>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:397
      for (uint32_t k = 0; k < num_fork_streams; k++) {
     7f4:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:398
        uint8_t fork_stream_id = RISC_EPOCH_INFO_PTR->active_streams[input_stream_info->fork_idxs[k]]->stream_id;
     7f8:	00ed07b3          	add	a5, s10, a4
     7fc:	0907c783          	lbu	a5, 144(a5)
     800:	04478793          	addi	a5, a5, 68
     804:	00279793          	slli	a5, a5, 0x2
     808:	00f987b3          	add	a5, s3, a5
     80c:	0047a603          	lw	a2, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:399
        curr_input_state_ptr->fork_stream_ids[k] = fork_stream_id;
     810:	00ec87b3          	add	a5, s9, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:397
      for (uint32_t k = 0; k < num_fork_streams; k++) {
     814:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:398
        uint8_t fork_stream_id = RISC_EPOCH_INFO_PTR->active_streams[input_stream_info->fork_idxs[k]]->stream_id;
     818:	00065603          	lhu	a2, 0(a2)
     81c:	00c78e23          	sb	a2, 28(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:397
      for (uint32_t k = 0; k < num_fork_streams; k++) {
     820:	fcd76ce3          	bltu	a4, a3, 7f8 <__firmware_stack_size+0x3f8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:401
      curr_input_state_ptr->fork_prev_pushed_num_tiles = 0;
     824:	000c9c23          	sh	zero, 24(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:405
    curr_input_state_ptr->next = (curr_input_state_ptr + 1);
     828:	038c8793          	addi	a5, s9, 56
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:368
    for (uint32_t input = 0; input < num_input_streams; input++) {
     82c:	000c8713          	mv	a4, s9
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:405
    curr_input_state_ptr->next = (curr_input_state_ptr + 1);
     830:	fef7ae23          	sw	a5, -4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:368
    for (uint32_t input = 0; input < num_input_streams; input++) {
     834:	00148493          	addi	s1, s1, 1
     838:	00078c93          	mv	s9, a5
     83c:	ef1ff06f          	j	72c <__firmware_stack_size+0x32c>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
     840:	164010ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
     844:	008507b3          	add	a5, a0, s0
     848:	00c79793          	slli	a5, a5, 0xc
     84c:	01078793          	addi	a5, a5, 16
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:386
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_received_ptr(operand);
     850:	02fca623          	sw	a5, 44(s9)
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
     854:	000d8513          	mv	a0, s11
     858:	1c0010ef          	jal	ra, 1a18 <is_input_operand_decoupled(int)>
     85c:	02050263          	beqz	a0, 880 <__firmware_stack_size+0x480>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
     860:	000d8513          	mv	a0, s11
     864:	140010ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
     868:	00850533          	add	a0, a0, s0
     86c:	00c51513          	slli	a0, a0, 0xc
     870:	01050513          	addi	a0, a0, 16
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:387
      curr_input_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_acked_ptr(operand);
     874:	02aca823          	sw	a0, 48(s9)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:388
      curr_input_state_ptr->eth_fw_stream = 0;
     878:	000c82a3          	sb	zero, 5(s9)
     87c:	f65ff06f          	j	7e0 <__firmware_stack_size+0x3e0>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
     880:	000d8513          	mv	a0, s11
     884:	120010ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
     888:	00850533          	add	a0, a0, s0
     88c:	00c51513          	slli	a0, a0, 0xc
     890:	00c50513          	addi	a0, a0, 12
     894:	fe1ff06f          	j	874 <__firmware_stack_size+0x474>
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:409
  prev_input_state_ptr->next = input_stream_state;
     898:	02812783          	lw	a5, 40(sp)
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:417
    volatile epoch_stream_info_t tt_l1_ptr * output_stream_info = RISC_EPOCH_INFO_PTR->outputs[output];
     89c:	00023d37          	lui	s10, 0x23
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:409
  prev_input_state_ptr->next = input_stream_state;
     8a0:	02f72a23          	sw	a5, 52(a4)
risc_unpack_pack_stream_handler_init(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:495

  curr_input_state_init(num_input_streams, input_stream_state);
  curr_output_state_init(num_output_streams, output_stream_state);
     8a4:	01412783          	lw	a5, 20(sp)
get_packer_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:168
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_SRC_PHASE_REG_INDEX));
     8a8:	00100c37          	lui	s8, 0x100
risc_unpack_pack_stream_handler_init(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:495
     8ac:	b887a483          	lw	s1, -1144(a5)
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:415
  kernel_output_stream_state_t* prev_output_state_ptr = curr_output_state_ptr;
     8b0:	49418713          	addi	a4, gp, 1172 # ffb00c94 <output_stream_state>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:414
  kernel_output_stream_state_t* curr_output_state_ptr = (kernel_output_stream_state_t*)output_stream_state;
     8b4:	49418413          	addi	s0, gp, 1172 # ffb00c94 <output_stream_state>
     8b8:	49418793          	addi	a5, gp, 1172 # ffb00c94 <output_stream_state>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:416
  for (uint32_t output = 0; output < num_output_streams; output++) {
     8bc:	00000c93          	li	s9, 0
     8c0:	02f12a23          	sw	a5, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:417
    volatile epoch_stream_info_t tt_l1_ptr * output_stream_info = RISC_EPOCH_INFO_PTR->outputs[output];
     8c4:	080d0d13          	addi	s10, s10, 128 # 23080 <substitutes.cpp.870a61b3+0x11748>
get_packer_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:168
     8c8:	b40c0c13          	addi	s8, s8, -1216 # ffb40 <substitutes.cpp.870a61b3+0xee208>
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:442
    for (uint32_t active_streams_idx = 0; active_streams_idx < NOC_NUM_STREAMS; active_streams_idx++) {
     8cc:	04000993          	li	s3, 64
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:416
  for (uint32_t output = 0; output < num_output_streams; output++) {
     8d0:	1d948863          	beq	s1, s9, aa0 <__firmware_stack_size+0x6a0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:417
    volatile epoch_stream_info_t tt_l1_ptr * output_stream_info = RISC_EPOCH_INFO_PTR->outputs[output];
     8d4:	02cc8793          	addi	a5, s9, 44
     8d8:	00279793          	slli	a5, a5, 0x2
     8dc:	00fd07b3          	add	a5, s10, a5
     8e0:	0047aa03          	lw	s4, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:418
    curr_output_state_ptr->epoch_done = 0;
     8e4:	000402a3          	sb	zero, 5(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:421
    bool skip_processing = ((output_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((output_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0);
     8e8:	00100b13          	li	s6, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:419
    curr_output_state_ptr->stream_id = output_stream_info->stream_id;
     8ec:	000a5503          	lhu	a0, 0(s4)
     8f0:	00a41323          	sh	a0, 6(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:420
    uint32_t operand = stream_id_to_operand(curr_output_state_ptr->stream_id);
     8f4:	0ec010ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:421
    bool skip_processing = ((output_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((output_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0);
     8f8:	03ca2783          	lw	a5, 60(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:420
    uint32_t operand = stream_id_to_operand(curr_output_state_ptr->stream_id);
     8fc:	00050b93          	mv	s7, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:421
    bool skip_processing = ((output_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((output_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0);
     900:	0107f793          	andi	a5, a5, 16
     904:	00079863          	bnez	a5, 914 <__firmware_stack_size+0x514>
     908:	03ca2b03          	lw	s6, 60(s4)
     90c:	006b5b13          	srli	s6, s6, 0x6
     910:	001b7b13          	andi	s6, s6, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:423
    uint32_t stream_type = output_stream_info->datacopy_stream_type & 0x7;
     914:	006a4783          	lbu	a5, 6(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:424
    if (stream_type == datacopy_stream_type_t::UNPACKER) {
     918:	00100713          	li	a4, 1
     91c:	0077f793          	andi	a5, a5, 7
     920:	10e79e63          	bne	a5, a4, a3c <__firmware_stack_size+0x63c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:425
      curr_output_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_stream_tiles_received_ptr(curr_output_state_ptr->stream_id);
     924:	00645783          	lhu	a5, 6(s0)
get_packer_stream_tiles_received_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:190
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX));
     928:	018787b3          	add	a5, a5, s8
     92c:	00c79793          	slli	a5, a5, 0xc
     930:	00478793          	addi	a5, a5, 4
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:425
     934:	02f42423          	sw	a5, 40(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:426
      curr_output_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_stream_tiles_acked_ptr(output_stream_info->datacopy_stream_id);
     938:	007a4783          	lbu	a5, 7(s4)
get_operand_stream_tiles_acked_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:186
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
     93c:	018787b3          	add	a5, a5, s8
     940:	00c79793          	slli	a5, a5, 0xc
     944:	00c78793          	addi	a5, a5, 12
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:426
     948:	02f42623          	sw	a5, 44(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:427
      curr_output_state_ptr->eth_fw_stream = output_stream_info->legacy_pack;
     94c:	038a4783          	lbu	a5, 56(s4)
     950:	00f40023          	sb	a5, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:436
    curr_output_state_ptr->skip_processing = skip_processing;
     954:	01640b23          	sb	s6, 22(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:437
    curr_output_state_ptr->num_msgs_in_block = output_stream_info->num_msgs_in_block;
     958:	01ca5783          	lhu	a5, 28(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:443
      if (curr_output_state_ptr->stream_id == RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx]->stream_id) {
     95c:	00645683          	lhu	a3, 6(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:438
    curr_output_state_ptr->scatter_inner_loop_done = 0;
     960:	00042423          	sw	zero, 8(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:439
    curr_output_state_ptr->scatter_inner_loop_count = 0;
     964:	00042623          	sw	zero, 12(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:437
    curr_output_state_ptr->num_msgs_in_block = output_stream_info->num_msgs_in_block;
     968:	00f41a23          	sh	a5, 20(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:440
    curr_output_state_ptr->num_mblock_buffering = output_stream_info->num_mblock_buffering;
     96c:	03aa5783          	lhu	a5, 58(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:441
    curr_output_state_ptr->mblock_buffering_count = 0;
     970:	00041923          	sh	zero, 18(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:440
    curr_output_state_ptr->num_mblock_buffering = output_stream_info->num_mblock_buffering;
     974:	00f41823          	sh	a5, 16(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:442
    for (uint32_t active_streams_idx = 0; active_streams_idx < NOC_NUM_STREAMS; active_streams_idx++) {
     978:	00000793          	li	a5, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:443
      if (curr_output_state_ptr->stream_id == RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx]->stream_id) {
     97c:	04478713          	addi	a4, a5, 68
     980:	00271713          	slli	a4, a4, 0x2
     984:	00ed0733          	add	a4, s10, a4
     988:	00472703          	lw	a4, 4(a4)
     98c:	00075703          	lhu	a4, 0(a4)
     990:	0ed71663          	bne	a4, a3, a7c <__firmware_stack_size+0x67c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:444
        curr_output_state_ptr->active_streams_idx = active_streams_idx;
     994:	00f40223          	sb	a5, 4(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:449
    uint32_t num_fork_streams = output_stream_info->num_fork_streams;
     998:	08ca5783          	lhu	a5, 140(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:453
      for (uint32_t k = 0; k < total_fork_streams; k++) {
     99c:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:450
    curr_output_state_ptr->num_fork_streams = num_fork_streams;
     9a0:	00f40ba3          	sb	a5, 23(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:451
    uint32_t total_fork_streams = (num_fork_streams+1);
     9a4:	00178693          	addi	a3, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:454
        uint8_t fork_idx = output_stream_info->fork_idxs[k];
     9a8:	00ea07b3          	add	a5, s4, a4
     9ac:	0907c783          	lbu	a5, 144(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:455
        curr_output_state_ptr->fork_idxs[k] = fork_idx;
     9b0:	00e40633          	add	a2, s0, a4
     9b4:	00f60c23          	sb	a5, 24(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:456
        if (!fork_skip_processing && k >= 1) {
     9b8:	020b1863          	bnez	s6, 9e8 <__firmware_stack_size+0x5e8>
     9bc:	02070663          	beqz	a4, 9e8 <__firmware_stack_size+0x5e8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:457
          uint32_t fork_stream_id = RISC_EPOCH_INFO_PTR->active_streams[fork_idx]->stream_id;
     9c0:	04478793          	addi	a5, a5, 68
     9c4:	00279793          	slli	a5, a5, 0x2
     9c8:	00fd07b3          	add	a5, s10, a5
     9cc:	0047a783          	lw	a5, 4(a5)
     9d0:	0007d783          	lhu	a5, 0(a5)
set_fork_scatter_inner_loop_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:70
inline __attribute__((always_inline)) uint32_t stream_get_curr_phase(uint32_t stream_id) {
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
}

inline __attribute__((always_inline)) void set_fork_scatter_inner_loop_count(uint32_t stream_id, uint32_t val) {
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX, val);
     9d4:	018787b3          	add	a5, a5, s8
     9d8:	00c79793          	slli	a5, a5, 0xc
     9dc:	0007a023          	sw	zero, 0(a5)
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:459
          set_fork_num_msgs_in_block(fork_stream_id, output_stream_info->num_msgs_in_block);
     9e0:	01ca5603          	lhu	a2, 28(s4)
set_fork_num_msgs_in_block(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:78
inline __attribute__((always_inline)) uint32_t get_fork_scatter_inner_loop_count(uint32_t stream_id) {
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX);
}

inline __attribute__((always_inline)) void set_fork_num_msgs_in_block(uint32_t stream_id, uint32_t val) {
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, val);
     9e4:	00c7a223          	sw	a2, 4(a5)
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:453
      for (uint32_t k = 0; k < total_fork_streams; k++) {
     9e8:	00170713          	addi	a4, a4, 1
     9ec:	fad76ee3          	bltu	a4, a3, 9a8 <__firmware_stack_size+0x5a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:463
    curr_output_state_ptr->output_idx = output;
     9f0:	019400a3          	sb	s9, 1(s0)
is_output_operand_decoupled(int, unsigned char):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:136
    if (operand < OPERAND_OUTPUT_START_INDEX || operand >= OPERAND_INTERMEDIATES_START_INDEX) {
     9f4:	ff0b8b93          	addi	s7, s7, -16 # ff0 <__firmware_stack_size+0xbf0>
     9f8:	00700793          	li	a5, 7
     9fc:	0977e663          	bltu	a5, s7, a88 <__firmware_stack_size+0x688>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:139
    const uint8_t operand_mask = 1 << ((operand-OPERAND_OUTPUT_START_INDEX) & 0xff);
     a00:	00100513          	li	a0, 1
     a04:	01751bb3          	sll	s7, a0, s7
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:466
    if (is_output_operand_decoupled(operand, output_decouple_mask)) {
     a08:	01797bb3          	and	s7, s2, s7
     a0c:	060b8e63          	beqz	s7, a88 <__firmware_stack_size+0x688>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:468
      uint32_t stream_buf_size_bytes = output_stream_info->buf_full_size_bytes;
     a10:	014a2703          	lw	a4, 20(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:469
      uint32_t stream_buf_addr = output_stream_info->buf_base_addr;
     a14:	018a2783          	lw	a5, 24(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:470
      uint32_t stream_msg_info_buf_ptr = (output_stream_info->msg_info_buf_start)*MEM_WORD_WIDTH;
     a18:	020a2683          	lw	a3, 32(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:473
      for (uint32_t tile_header_ptr = stream_buf_addr; tile_header_ptr < stream_buf_addr + stream_buf_size_bytes; tile_header_ptr += tile_size_bytes) {
     a1c:	00f70733          	add	a4, a4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:470
      uint32_t stream_msg_info_buf_ptr = (output_stream_info->msg_info_buf_start)*MEM_WORD_WIDTH;
     a20:	00469693          	slli	a3, a3, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:471
      uint32_t tile_size_words = *(volatile uint32_t tt_l1_ptr *)(stream_msg_info_buf_ptr);
     a24:	0006a683          	lw	a3, 0(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:472
      uint32_t tile_size_bytes = tile_size_words*MEM_WORD_WIDTH;
     a28:	00469613          	slli	a2, a3, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:473
      for (uint32_t tile_header_ptr = stream_buf_addr; tile_header_ptr < stream_buf_addr + stream_buf_size_bytes; tile_header_ptr += tile_size_bytes) {
     a2c:	04e7fe63          	bgeu	a5, a4, a88 <__firmware_stack_size+0x688>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:474
        *((uint32_t *)(tile_header_ptr)) = tile_size_words;
     a30:	00d7a023          	sw	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:473
      for (uint32_t tile_header_ptr = stream_buf_addr; tile_header_ptr < stream_buf_addr + stream_buf_size_bytes; tile_header_ptr += tile_size_bytes) {
     a34:	00c787b3          	add	a5, a5, a2
     a38:	ff5ff06f          	j	a2c <__firmware_stack_size+0x62c>
get_packer_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:168
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_SRC_PHASE_REG_INDEX));
     a3c:	000b8513          	mv	a0, s7
     a40:	765000ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
     a44:	01850533          	add	a0, a0, s8
     a48:	00c51513          	slli	a0, a0, 0xc
     a4c:	00450513          	addi	a0, a0, 4
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:429
      curr_output_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_tiles_received_ptr(operand);
     a50:	02a42423          	sw	a0, 40(s0)
get_packer_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:172
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_SRC_REG_INDEX));
     a54:	000b8513          	mv	a0, s7
     a58:	74d000ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
     a5c:	01850533          	add	a0, a0, s8
     a60:	00c51513          	slli	a0, a0, 0xc
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:430
      curr_output_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_tiles_acked_ptr(operand);
     a64:	02a42623          	sw	a0, 44(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:431
      curr_output_state_ptr->eth_fw_stream = 0;
     a68:	00040023          	sb	zero, 0(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:432
      skip_processing = skip_processing || output_stream_info->legacy_pack;
     a6c:	ee0b14e3          	bnez	s6, 954 <__firmware_stack_size+0x554>
     a70:	038a4b03          	lbu	s6, 56(s4)
     a74:	01603b33          	snez	s6, s6
     a78:	eddff06f          	j	954 <__firmware_stack_size+0x554>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:442
    for (uint32_t active_streams_idx = 0; active_streams_idx < NOC_NUM_STREAMS; active_streams_idx++) {
     a7c:	00178793          	addi	a5, a5, 1
     a80:	ef379ee3          	bne	a5, s3, 97c <__firmware_stack_size+0x57c>
     a84:	f15ff06f          	j	998 <__firmware_stack_size+0x598>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:479
    curr_output_state_ptr->next = (curr_output_state_ptr + 1);
     a88:	03440793          	addi	a5, s0, 52
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:416
  for (uint32_t output = 0; output < num_output_streams; output++) {
     a8c:	00040713          	mv	a4, s0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:479
    curr_output_state_ptr->next = (curr_output_state_ptr + 1);
     a90:	fef7ae23          	sw	a5, -4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:416
  for (uint32_t output = 0; output < num_output_streams; output++) {
     a94:	001c8c93          	addi	s9, s9, 1
     a98:	00078413          	mv	s0, a5
     a9c:	e35ff06f          	j	8d0 <__firmware_stack_size+0x4d0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:483
  prev_output_state_ptr->next = output_stream_state;
     aa0:	03412783          	lw	a5, 52(sp)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
     aa4:	00100437          	lui	s0, 0x100
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:483
     aa8:	02f72823          	sw	a5, 48(a4)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:650
  uint32_t &num_output_streams, kernel_output_stream_state_t *output_stream_state,
  uint32_t &num_active_streams, active_stream_info_t *active_stream_info,
  bool erisc
) {
  
  uint32_t stream_restart_check_cnt = 1; // I.e. dont check immediately since streams most likely just started
     aac:	00100793          	li	a5, 1
     ab0:	04f12423          	sw	a5, 72(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:651
  bool skip_kernels = RISC_EPOCH_INFO_PTR->skip_kernels;
     ab4:	000237b7          	lui	a5, 0x23
     ab8:	08078793          	addi	a5, a5, 128 # 23080 <substitutes.cpp.870a61b3+0x11748>
     abc:	28a7d783          	lhu	a5, 650(a5)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
     ac0:	b4040413          	addi	s0, s0, -1216 # ffb40 <substitutes.cpp.870a61b3+0xee208>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:651
     ac4:	02f12c23          	sw	a5, 56(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:658
  while (true) {

    bool all_kernels_done;
    if (!erisc) {
      uint32_t trisc0_mailbox = trisc0_mailbox_ptr[0];
      uint32_t trisc1_mailbox = trisc1_mailbox_ptr[0];
     ac8:	00012737          	lui	a4, 0x12
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:657
      uint32_t trisc0_mailbox = trisc0_mailbox_ptr[0];
     acc:	0000d7b7          	lui	a5, 0xd
     ad0:	0047a783          	lw	a5, 4(a5) # d004 <noc.c.a81389be+0xa7>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:658
      uint32_t trisc1_mailbox = trisc1_mailbox_ptr[0];
     ad4:	00472683          	lw	a3, 4(a4) # 12004 <substitutes.cpp.870a61b3+0x6cc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:659
      uint32_t trisc2_mailbox = trisc2_mailbox_ptr[0];
     ad8:	00016737          	lui	a4, 0x16
     adc:	00472503          	lw	a0, 4(a4) # 16004 <substitutes.cpp.870a61b3+0x46cc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:660
      all_kernels_done = skip_kernels || (
     ae0:	03812703          	lw	a4, 56(sp)
     ae4:	00100c93          	li	s9, 1
     ae8:	00071e63          	bnez	a4, b04 <__firmware_stack_size+0x704>
     aec:	00100613          	li	a2, 1
     af0:	00000c93          	li	s9, 0
     af4:	00c79863          	bne	a5, a2, b04 <__firmware_stack_size+0x704>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:661
        (trisc0_mailbox == KERNEL_COMPLETE) &&
     af8:	00f69663          	bne	a3, a5, b04 <__firmware_stack_size+0x704>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:662
        (trisc1_mailbox == KERNEL_COMPLETE) &&
     afc:	fff50713          	addi	a4, a0, -1
     b00:	00173c93          	seqz	s9, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:665
        (trisc2_mailbox == KERNEL_COMPLETE));

      risc_reset_check();
     b04:	64d000ef          	jal	ra, 1950 <risc_reset_check()>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:667

      risc_stream_resart_check(stream_restart_check_cnt, num_active_streams, active_stream_info);
     b08:	04810513          	addi	a0, sp, 72
     b0c:	05c010ef          	jal	ra, 1b68 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
} active_stream_info_t;


inline void RISC_POST_STATUS(uint32_t status) {
  volatile uint32_t* ptr = (volatile uint32_t*)(NOC_CFG(ROUTER_CFG_2) + NOC_INSTANCE_OFFSET);
  ptr[0] = status;
     b10:	ffb307b7          	lui	a5, 0xffb30
     b14:	c00006b7          	lui	a3, 0xc0000
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:695
        uint8_t operand_idx = uint8_t(stream_id_to_operand(stream_id));
        if (!perf::first_bw_timestamp_recorded(operand_idx, true)) {
          if (is_input_operand_decoupled(operand_idx)) {
            volatile uint32_t tt_reg_ptr* epoch_tiles_received_ptr_tmp = curr_input_state->epoch_tiles_received_ptr;
            if (epoch_tiles_received_ptr_tmp[0] != 0) {
              volatile epoch_stream_info_t tt_l1_ptr * input_stream_info_tmp = RISC_EPOCH_INFO_PTR->inputs[input];
     b18:	000239b7          	lui	s3, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:676
    kernel_input_stream_state_t* curr_input_state = input_stream_state;
     b1c:	02812d03          	lw	s10, 40(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
     b20:	10d7a623          	sw	a3, 268(a5) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:680
    for (uint32_t input = 0; input < num_input_streams; input++) {
     b24:	00000913          	li	s2, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:674
    uint32_t streams_to_clear = 0;
     b28:	00000493          	li	s1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:695
              volatile epoch_stream_info_t tt_l1_ptr * input_stream_info_tmp = RISC_EPOCH_INFO_PTR->inputs[input];
     b2c:	08098993          	addi	s3, s3, 128 # 23080 <substitutes.cpp.870a61b3+0x11748>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:680
    for (uint32_t input = 0; input < num_input_streams; input++) {
     b30:	01412783          	lw	a5, 20(sp)
     b34:	b847a783          	lw	a5, -1148(a5)
     b38:	38f97c63          	bgeu	s2, a5, ed0 <__firmware_stack_size+0xad0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:682
      uint32_t stream_id = curr_input_state->stream_id;
     b3c:	002d5503          	lhu	a0, 2(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:684
      uint32_t no_hw_clearing = curr_input_state->no_hw_clearing;
     b40:	01ad4783          	lbu	a5, 26(s10)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
     b44:	00850db3          	add	s11, a0, s0
     b48:	00cd9d93          	slli	s11, s11, 0xc
     b4c:	08cda803          	lw	a6, 140(s11)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX) - msg_info_buf_start_addr;
}


inline __attribute__((always_inline)) uint32_t stream_rec_endpoint_get_phase_tiles_count(uint32_t stream_id) {
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
     b50:	008dab03          	lw	s6, 8(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:684
     b54:	00f12623          	sw	a5, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:683
      uint32_t epoch_tiles_remaining_to_clear = curr_input_state->epoch_tiles_remaining_to_clear;
     b58:	008d2a03          	lw	s4, 8(s10)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
     b5c:	00285813          	srli	a6, a6, 0x2
     b60:	00187c13          	andi	s8, a6, 1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:689
      if (phase_active) {
     b64:	0a0c0063          	beqz	s8, c04 <__firmware_stack_size+0x804>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:690
        uint8_t operand_idx = uint8_t(stream_id_to_operand(stream_id));
     b68:	679000ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
perf::first_bw_timestamp_recorded(unsigned char, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:161
#endif
}

inline __attribute__((always_inline)) bool first_bw_timestamp_recorded(uint8_t operand_idx, bool is_input) {
  if (is_input) {
    if (operand_idx >= PERF_MAX_NUM_INPUTS) {
     b6c:	00700793          	li	a5, 7
     b70:	0ff57693          	zext.b	a3, a0
     b74:	08d7e863          	bltu	a5, a3, c04 <__firmware_stack_size+0x804>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:164
      return true;
    } else {
      return first_timestamp_recorded_input[operand_idx];
     b78:	03012703          	lw	a4, 48(sp)
     b7c:	0ff57793          	zext.b	a5, a0
     b80:	00f70bb3          	add	s7, a4, a5
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:691
        if (!perf::first_bw_timestamp_recorded(operand_idx, true)) {
     b84:	000bc683          	lbu	a3, 0(s7)
     b88:	06069e63          	bnez	a3, c04 <__firmware_stack_size+0x804>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:692
          if (is_input_operand_decoupled(operand_idx)) {
     b8c:	00078513          	mv	a0, a5
     b90:	00f12823          	sw	a5, 16(sp)
     b94:	685000ef          	jal	ra, 1a18 <is_input_operand_decoupled(int)>
     b98:	06050663          	beqz	a0, c04 <__firmware_stack_size+0x804>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:693
            volatile uint32_t tt_reg_ptr* epoch_tiles_received_ptr_tmp = curr_input_state->epoch_tiles_received_ptr;
     b9c:	02cd2603          	lw	a2, 44(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:694
            if (epoch_tiles_received_ptr_tmp[0] != 0) {
     ba0:	00062683          	lw	a3, 0(a2)
     ba4:	06068063          	beqz	a3, c04 <__firmware_stack_size+0x804>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:695
              volatile epoch_stream_info_t tt_l1_ptr * input_stream_info_tmp = RISC_EPOCH_INFO_PTR->inputs[input];
     ba8:	01490693          	addi	a3, s2, 20
     bac:	00269693          	slli	a3, a3, 0x2
     bb0:	00d986b3          	add	a3, s3, a3
     bb4:	0046a683          	lw	a3, 4(a3) # c0000004 <TENSIX_MAILBOX_BASE+0xc0140004>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:696
              uint num_tiles_input = input_stream_info_tmp->epoch_num_tiles;
     bb8:	0086a503          	lw	a0, 8(a3)
perf::record_input_start_bw_timestamp(unsigned char, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:194
}

#if OVERLAY_DECOUPLE == 1
inline __attribute__((always_inline)) void record_input_start_bw_timestamp(uint8_t operand_idx, uint32_t total_num_tiles, uint32_t current_num_tiles) {
  if (!first_bw_timestamp_recorded(operand_idx, true)) {
    uint32_t event_id = get_event_id(BriscEventType::INPUT_NUM_TILES, perf_epoch_id, operand_idx);
     bbc:	82c1d683          	lhu	a3, -2004(gp) # ffb0002c <perf_epoch_id>
perf::get_event_id(perf::BriscEventType, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:56
   event_id |= ((operand_idx & 0xf) << 20);
     bc0:	01012783          	lw	a5, 16(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:697
              perf::record_input_start_bw_timestamp(operand_idx, num_tiles_input, epoch_tiles_received_ptr_tmp[0]);
     bc4:	00062583          	lw	a1, 0(a2)
perf::get_event_id(perf::BriscEventType, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:56
     bc8:	01479793          	slli	a5, a5, 0x14
     bcc:	00f00637          	lui	a2, 0xf00
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:55
   event_id |= ((epoch_id & 0xffff) << 4);
     bd0:	00469693          	slli	a3, a3, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:56
   event_id |= ((operand_idx & 0xf) << 20);
     bd4:	00c7f7b3          	and	a5, a5, a2
     bd8:	00f6e7b3          	or	a5, a3, a5
perf::record_input_start_bw_timestamp(unsigned char, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:195
    record_perf_value(event_id, total_num_tiles - current_num_tiles, 0);
     bdc:	00000613          	li	a2, 0
     be0:	00f12823          	sw	a5, 16(sp)
     be4:	40b505b3          	sub	a1, a0, a1
     be8:	0017e513          	ori	a0, a5, 1
     bec:	65d000ef          	jal	ra, 1a48 <perf::record_perf_value(unsigned long, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:197
    event_id = get_event_id(BriscEventType::INPUT_TILE_POP, perf_epoch_id, operand_idx);
    record_timestamp_64b(event_id);
     bf0:	01012783          	lw	a5, 16(sp)
     bf4:	0037e513          	ori	a0, a5, 3
     bf8:	699000ef          	jal	ra, 1a90 <perf::record_timestamp_64b(unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:198
    first_timestamp_recorded_input[operand_idx] = true;
     bfc:	00100793          	li	a5, 1
     c00:	00fb8023          	sb	a5, 0(s7)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:704
          }
        }
      }
#endif

      curr_input_state++;
     c04:	038d0d13          	addi	s10, s10, 56
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:706

      uint32_t stream_skip = (epoch_tiles_remaining_to_clear == 0) || (no_hw_clearing);
     c08:	2a0a0c63          	beqz	s4, ec0 <__firmware_stack_size+0xac0>
     c0c:	00c12783          	lw	a5, 12(sp)
     c10:	2a079863          	bnez	a5, ec0 <__firmware_stack_size+0xac0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:713
        continue;
      }

      all_kernels_done = false; // prevent breaking from outer loop

      stream_skip = (phase_active == 0) || (phase_tiles_remaining_to_clear == 0);
     c14:	2a0c0a63          	beqz	s8, ec8 <__firmware_stack_size+0xac8>
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
     c18:	010b1893          	slli	a7, s6, 0x10
     c1c:	0108d893          	srli	a7, a7, 0x10
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:713
     c20:	2a088463          	beqz	a7, ec8 <__firmware_stack_size+0xac8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:723
      kernel_input_stream_state_t* prev_input_state = curr_input_state - 1;
      volatile uint32_t tt_reg_ptr* epoch_tiles_acked_ptr = prev_input_state->epoch_tiles_acked_ptr;
      volatile uint32_t tt_reg_ptr* epoch_tiles_received_ptr = prev_input_state->epoch_tiles_received_ptr;
      uint16_t prev_phases_tiles_received = prev_input_state->prev_phases_tiles_received;
      uint16_t epoch_tiles_cleared = prev_input_state->epoch_tiles_cleared;
      uint32_t input_idx = prev_input_state->input_idx;
     c24:	fc8d4503          	lbu	a0, -56(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:719
      volatile uint32_t tt_reg_ptr* epoch_tiles_acked_ptr = prev_input_state->epoch_tiles_acked_ptr;
     c28:	ff8d2783          	lw	a5, -8(s10)
     c2c:	00251513          	slli	a0, a0, 0x2
     c30:	01350533          	add	a0, a0, s3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:724
      uint32_t msg_info_buf_addr = RISC_EPOCH_INFO_PTR->inputs[input_idx]->msg_info_buf_start;
     c34:	05452703          	lw	a4, 84(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:726

      uint16_t epoch_tiles_acked = epoch_tiles_acked_ptr[0];
     c38:	0007a683          	lw	a3, 0(a5)
stream_phase_tiles_received(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:154
  return NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX) - msg_info_buf_start_addr;
     c3c:	068da603          	lw	a2, 104(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:730
      uint32_t curr_phase_tiles_received = stream_phase_tiles_received(stream_id, msg_info_buf_addr);

      if (!erisc) {
        uint32_t num_fork_streams = prev_input_state->num_fork_streams;
     c40:	fe3d4e83          	lbu	t4, -29(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:720
      volatile uint32_t tt_reg_ptr* epoch_tiles_received_ptr = prev_input_state->epoch_tiles_received_ptr;
     c44:	ff4d2f03          	lw	t5, -12(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:726
      uint16_t epoch_tiles_acked = epoch_tiles_acked_ptr[0];
     c48:	01069693          	slli	a3, a3, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:721
      uint16_t prev_phases_tiles_received = prev_input_state->prev_phases_tiles_received;
     c4c:	fd6d5e03          	lhu	t3, -42(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:722
      uint16_t epoch_tiles_cleared = prev_input_state->epoch_tiles_cleared;
     c50:	fd4d5583          	lhu	a1, -44(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:726
      uint16_t epoch_tiles_acked = epoch_tiles_acked_ptr[0];
     c54:	0106d693          	srli	a3, a3, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:724
      uint32_t msg_info_buf_addr = RISC_EPOCH_INFO_PTR->inputs[input_idx]->msg_info_buf_start;
     c58:	02072303          	lw	t1, 32(a4)
stream_phase_tiles_received(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:154
     c5c:	40660633          	sub	a2, a2, t1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:731
        if (num_fork_streams > 0) {
     c60:	0c0e8663          	beqz	t4, d2c <__firmware_stack_size+0x92c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:732
          if (prev_input_state->fork_prev_pushed_num_tiles > curr_phase_tiles_received) {
     c64:	fe0d5783          	lhu	a5, -32(s10)
     c68:	00f67c63          	bgeu	a2, a5, c80 <__firmware_stack_size+0x880>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
     c6c:	dead07b7          	lui	a5, 0xdead0
     c70:	ffb30737          	lui	a4, 0xffb30
     c74:	00178793          	addi	a5, a5, 1 # dead0001 <TENSIX_MAILBOX_BASE+0xdec10001>
     c78:	10f72623          	sw	a5, 268(a4) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
     c7c:	0000006f          	j	c7c <__firmware_stack_size+0x87c>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:736
            RISC_POST_STATUS(0xDEAD0001);
            while(true);
          }
          uint32_t num_tiles_u = curr_phase_tiles_received - prev_input_state->fork_prev_pushed_num_tiles;
     c80:	40f60fb3          	sub	t6, a2, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:737
          if (num_tiles_u > 0) {
     c84:	0af60463          	beq	a2, a5, d2c <__firmware_stack_size+0x92c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:738
            for (uint32_t k = 0; k < num_fork_streams; k++) {
     c88:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:739
              uint32_t fork_stream_id = prev_input_state->fork_stream_ids[k];
     c8c:	00ed07b3          	add	a5, s10, a4
     c90:	fe47c783          	lbu	a5, -28(a5)
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:193
inline __attribute__((always_inline)) bool stream_is_dram_read_opt_enabled(uint32_t stream_id) {
  return !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE);
}

inline __attribute__((always_inline)) bool stream_next_phase_src_change(uint32_t stream_id) {
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE) || !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, PHASE_AUTO_CONFIG);
     c94:	00001837          	lui	a6, 0x1
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
     c98:	008787b3          	add	a5, a5, s0
     c9c:	00c79793          	slli	a5, a5, 0xc
     ca0:	08c7a283          	lw	t0, 140(a5)
     ca4:	0022d293          	srli	t0, t0, 0x2
     ca8:	005c7c33          	and	s8, s8, t0
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:193
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE) || !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, PHASE_AUTO_CONFIG);
     cac:	0287a283          	lw	t0, 40(a5)
     cb0:	0102f2b3          	and	t0, t0, a6
     cb4:	00029863          	bnez	t0, cc4 <__firmware_stack_size+0x8c4>
     cb8:	0287a283          	lw	t0, 40(a5)
     cbc:	2002f293          	andi	t0, t0, 512
     cc0:	02029063          	bnez	t0, ce0 <__firmware_stack_size+0x8e0>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
}

inline __attribute__((always_inline)) int stream_get_curr_phase_num_msgs(uint32_t stream_id) {
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
     cc4:	0907a783          	lw	a5, 144(a5)
     cc8:	00001837          	lui	a6, 0x1
     ccc:	fff80813          	addi	a6, a6, -1 # fff <__firmware_stack_size+0xbff>
     cd0:	00c7d793          	srli	a5, a5, 0xc
     cd4:	0107f7b3          	and	a5, a5, a6
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:743
              phase_active &= stream_phase_is_active(fork_stream_id);
              bool fork_next_phase_src_change = stream_next_phase_src_change(fork_stream_id);
              if (fork_next_phase_src_change)
                phase_active &= stream_get_curr_phase_num_msgs(fork_stream_id) > 0;
     cd8:	00f027b3          	sgtz	a5, a5
     cdc:	00fc7c33          	and	s8, s8, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:738
            for (uint32_t k = 0; k < num_fork_streams; k++) {
     ce0:	00170713          	addi	a4, a4, 1
     ce4:	fbd764e3          	bltu	a4, t4, c8c <__firmware_stack_size+0x88c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
     ce8:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:745
            }
            if (phase_active == 0) {
     cec:	1c0c0a63          	beqz	s8, ec0 <__firmware_stack_size+0xac0>
stream_phase_next_recved_tile_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:150
  return NOC_STREAM_READ_REG(stream_id, STREAM_NEXT_RECEIVED_MSG_SIZE_REG_INDEX);
     cf0:	050da783          	lw	a5, 80(s11)
special_mult(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:146
  uint32_t trisc_reset_mask = 0x7000;
  WRITE_REG(RISCV_DEBUG_REG_SOFT_RESET_0, soft_reset_0 & ~trisc_reset_mask);
}

inline uint32_t special_mult(uint32_t a, uint32_t special_b) {
  if (special_b == TILE_WORD_8_BIT)
     cf4:	04600713          	li	a4, 70
     cf8:	18e79663          	bne	a5, a4, e84 <__firmware_stack_size+0xa84>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:155
  else if (special_b == TILE_WORD_4_BIT)
    return a * TILE_WORD_4_BIT;
  else if (special_b == TILE_WORD_2_BIT)
    return a * TILE_WORD_2_BIT;
  else if (special_b == TILE_WORD_32_BIT)
    return a * TILE_WORD_32_BIT;
     cfc:	02ff87b3          	mul	a5, t6, a5
stream_relay_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:207
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, (rmw | (val << CURR_PHASE_NUM_MSGS)));
}

// used by unpacker fracture
inline __attribute__((always_inline)) void stream_relay_tiles(uint32_t stream_id, uint32_t num_tiles, uint32_t num_words) {
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
     d00:	00c79793          	slli	a5, a5, 0xc
     d04:	01f7e7b3          	or	a5, a5, t6
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:750
              continue;
            }

            uint32_t num_words = special_mult(num_tiles_u, stream_phase_next_recved_tile_size(stream_id));
            for (uint32_t k = 0; k < num_fork_streams; k++) {
     d08:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:751
              stream_relay_tiles(prev_input_state->fork_stream_ids[k], num_tiles_u, num_words);
     d0c:	010d0733          	add	a4, s10, a6
     d10:	fe474703          	lbu	a4, -28(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:750
            for (uint32_t k = 0; k < num_fork_streams; k++) {
     d14:	00180813          	addi	a6, a6, 1
stream_relay_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:207
     d18:	00870733          	add	a4, a4, s0
     d1c:	00c71713          	slli	a4, a4, 0xc
     d20:	06f72c23          	sw	a5, 120(a4)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:750
     d24:	ffd864e3          	bltu	a6, t4, d0c <__firmware_stack_size+0x90c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:753
            }
            prev_input_state->fork_prev_pushed_num_tiles = curr_phase_tiles_received;
     d28:	fecd1023          	sh	a2, -32(s10)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
     d2c:	00ce0633          	add	a2, t3, a2
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:762

      // It looks like we won't need words_acked but keep this in case we want to revert to
      // firmware-issued flow control remote reg writes.     
#ifndef ERISC
      uint16_t new_epoch_tiles_received = op_pack_tiles_ptr_add(curr_phase_tiles_received, prev_phases_tiles_received);
      epoch_tiles_received_ptr[0] = (uint32_t)new_epoch_tiles_received;
     d30:	01061613          	slli	a2, a2, 0x10
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:55
  return a - b;
     d34:	40b686b3          	sub	a3, a3, a1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:762
     d38:	01065613          	srli	a2, a2, 0x10
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:55
     d3c:	01069693          	slli	a3, a3, 0x10
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:762
     d40:	00cf2023          	sw	a2, 0(t5)
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:55
     d44:	0106d693          	srli	a3, a3, 0x10
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:800
      } else {
        epoch_tiles_received_ptr[0] = (uint32_t)new_epoch_tiles_received;
      }
#endif
      uint16_t tiles_to_clear = op_pack_tiles_ptr_sub(epoch_tiles_acked, epoch_tiles_cleared);
      if (tiles_to_clear > phase_tiles_remaining_to_clear)
     d48:	00d8f663          	bgeu	a7, a3, d54 <__firmware_stack_size+0x954>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:801
        tiles_to_clear = phase_tiles_remaining_to_clear;
     d4c:	010b1693          	slli	a3, s6, 0x10
     d50:	0106d693          	srli	a3, a3, 0x10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
     d54:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:802
      if (!tiles_to_clear) {
     d58:	16068463          	beqz	a3, ec0 <__firmware_stack_size+0xac0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:808
        continue;
      }
      
#ifdef USE_2K_TILE_HEADER_BUFFER_RESET
      uint32_t num_iter_tiles = prev_input_state->num_iter_tiles;
      uint32_t buf_size_tiles = RISC_EPOCH_INFO_PTR->inputs[input_idx]->buf_size_tiles;
     d5c:	05452803          	lw	a6, 84(a0)
should_stall_for_tile_header_buffer_reset(unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:378
    return false;
  }
}

inline bool should_stall_for_tile_header_buffer_reset(uint32_t stream_id, uint32_t msg_info_buf_addr, uint32_t buf_size_tiles, uint32_t &prev_ack_thresh) {
  uint32_t is_remote_src = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, REMOTE_SOURCE);
     d60:	028da783          	lw	a5, 40(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:379
  uint32_t msg_info_wr_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX);
     d64:	068da703          	lw	a4, 104(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:807
      uint32_t num_iter_tiles = prev_input_state->num_iter_tiles;
     d68:	fd8d2603          	lw	a2, -40(s10)
should_stall_for_tile_header_buffer_reset(unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:381

  if (is_remote_src && (msg_info_wr_ptr - msg_info_buf_addr >= MAX_TILES_MSG_INFO_BUF_PER_PHASE - 2*buf_size_tiles)) {
     d6c:	0207f793          	andi	a5, a5, 32
     d70:	08078a63          	beqz	a5, e04 <__firmware_stack_size+0xa04>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:808
      uint32_t buf_size_tiles = RISC_EPOCH_INFO_PTR->inputs[input_idx]->buf_size_tiles;
     d74:	01082f03          	lw	t5, 16(a6)
should_stall_for_tile_header_buffer_reset(unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:381
     d78:	40000793          	li	a5, 1024
     d7c:	40670733          	sub	a4, a4, t1
     d80:	41e787b3          	sub	a5, a5, t5
     d84:	00179793          	slli	a5, a5, 0x1
     d88:	06f76e63          	bltu	a4, a5, e04 <__firmware_stack_size+0xa04>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:382
    prev_ack_thresh = NOC_STREAM_READ_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX);
     d8c:	0a0da783          	lw	a5, 160(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:383
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX, 0);
     d90:	0a0da023          	sw	zero, 160(s11)
stream_receiver_endpoint_tile_clearing_finished(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:335
      return (NOC_STREAM_READ_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX) == 0);
     d94:	024da803          	lw	a6, 36(s11)
wait_till_tile_clear_done(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:16
  // we dont need to do this in wh
}

void wait_till_tile_clear_done(uint32_t stream_id) {
#ifdef RISC_B0_HW
  while(!stream_receiver_endpoint_tile_clearing_finished(stream_id));
     d98:	fe081ee3          	bnez	a6, d94 <__firmware_stack_size+0x994>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:812
      uint32_t prev_ack_thresh = 0;
      if (should_stall_for_tile_header_buffer_reset(stream_id, msg_info_buf_addr, buf_size_tiles, prev_ack_thresh)) {
        wait_till_tile_clear_done(stream_id);
        if (prev_ack_thresh != 0)
     d9c:	00078463          	beqz	a5, da4 <__firmware_stack_size+0x9a4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:813
          prev_input_state->prev_ack_thresh = prev_ack_thresh;
     da0:	fcfd0623          	sb	a5, -52(s10)
reset_tile_header_buffer(unsigned long, unsigned long, unsigned long, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:391

  return false;
}

inline bool reset_tile_header_buffer(uint32_t stream_id, uint32_t msg_info_buf_addr, uint32_t buf_size_tiles, uint32_t &prev_phases_tiles_received_inc, uint32_t &prev_ack_thresh, uint32_t num_iter_tiles) {
  uint32_t msg_info_full = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_FULL_REG_INDEX);
     da4:	09cda703          	lw	a4, 156(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:392
  uint32_t num_msgs_recv = NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
     da8:	048da783          	lw	a5, 72(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:814
        prev_ack_thresh = prev_input_state->prev_ack_thresh;
     dac:	fccd4e83          	lbu	t4, -52(s10)
reset_tile_header_buffer(unsigned long, unsigned long, unsigned long, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:394

  if (msg_info_full || (num_msgs_recv == buf_size_tiles)) {
     db0:	00071463          	bnez	a4, db8 <__firmware_stack_size+0x9b8>
     db4:	10ff1263          	bne	t5, a5, eb8 <__firmware_stack_size+0xab8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:395
    uint32_t buf_space_available = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
     db8:	070da783          	lw	a5, 112(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:397
    
    if (buf_space_available == 0) {
     dbc:	0e079e63          	bnez	a5, eb8 <__firmware_stack_size+0xab8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:398
      uint32_t msg_info_rd_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX);
     dc0:	020daf03          	lw	t5, 32(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:399
      uint32_t msg_info_wr_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX);
     dc4:	068da783          	lw	a5, 104(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:400
      num_msgs_recv = NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
     dc8:	048da703          	lw	a4, 72(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:403
      uint32_t msg_info_num_tiles = msg_info_wr_ptr - msg_info_rd_ptr + num_msgs_recv;
      prev_phases_tiles_received_inc = msg_info_rd_ptr - num_msgs_recv - msg_info_buf_addr;
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr);
     dcc:	066da423          	sw	t1, 104(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:402
      prev_phases_tiles_received_inc = msg_info_rd_ptr - num_msgs_recv - msg_info_buf_addr;
     dd0:	406f0833          	sub	a6, t5, t1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:405
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX, msg_info_buf_addr + num_msgs_recv);
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr + msg_info_num_tiles);
     dd4:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:404
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX, msg_info_buf_addr + num_msgs_recv);
     dd8:	00e30fb3          	add	t6, t1, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:405
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr + msg_info_num_tiles);
     ddc:	00678333          	add	t1, a5, t1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:404
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX, msg_info_buf_addr + num_msgs_recv);
     de0:	03fda023          	sw	t6, 32(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:405
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr + msg_info_num_tiles);
     de4:	41e30333          	sub	t1, t1, t5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:402
      prev_phases_tiles_received_inc = msg_info_rd_ptr - num_msgs_recv - msg_info_buf_addr;
     de8:	40e80833          	sub	a6, a6, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:405
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr + msg_info_num_tiles);
     dec:	066da423          	sw	t1, 104(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:413
    }
  }

  if (num_iter_tiles <= buf_size_tiles) {
    prev_phases_tiles_received_inc = 0;
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX, prev_ack_thresh);
     df0:	0bdda023          	sw	t4, 160(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:818
        uint32_t prev_phases_tiles_received_inc;
        bool tile_header_buffer_reset = reset_tile_header_buffer(stream_id, msg_info_buf_addr, buf_size_tiles, prev_phases_tiles_received_inc, prev_ack_thresh, num_iter_tiles); 
        if (tile_header_buffer_reset) {
          prev_input_state->prev_phases_tiles_received = prev_phases_tiles_received + prev_phases_tiles_received_inc;
     df4:	010e0e33          	add	t3, t3, a6
     df8:	fdcd1b23          	sh	t3, -42(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:819
          prev_input_state->fork_prev_pushed_num_tiles = 0;
     dfc:	fe0d1023          	sh	zero, -32(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:820
          prev_input_state->prev_ack_thresh = 0;
     e00:	fc0d0623          	sb	zero, -52(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:825
        } else {
          continue;
        }
      }
      num_iter_tiles -= tiles_to_clear;
     e04:	40d607b3          	sub	a5, a2, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:826
      if (num_iter_tiles == 0) {
     e08:	00d61663          	bne	a2, a3, e14 <__firmware_stack_size+0xa14>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:827
        num_iter_tiles = RISC_EPOCH_INFO_PTR->inputs[input_idx]->num_iter_tiles;
     e0c:	05452783          	lw	a5, 84(a0)
     e10:	0587a783          	lw	a5, 88(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:835
#endif
      streams_to_clear++;
      epoch_tiles_remaining_to_clear -= tiles_to_clear;
      phase_tiles_remaining_to_clear -= tiles_to_clear;
      epoch_tiles_cleared = op_pack_tiles_ptr_add(epoch_tiles_cleared, tiles_to_clear);
      prev_input_state->tiles_to_clear = tiles_to_clear;
     e14:	fcdd2e23          	sw	a3, -36(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:833
      phase_tiles_remaining_to_clear -= tiles_to_clear;
     e18:	40d888b3          	sub	a7, a7, a3
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
     e1c:	00d585b3          	add	a1, a1, a3
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:832
      epoch_tiles_remaining_to_clear -= tiles_to_clear;
     e20:	40da06b3          	sub	a3, s4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:829
      prev_input_state->num_iter_tiles = num_iter_tiles;
     e24:	fcfd2c23          	sw	a5, -40(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:837
      prev_input_state->epoch_tiles_cleared = epoch_tiles_cleared;
      prev_input_state->epoch_tiles_remaining_to_clear = epoch_tiles_remaining_to_clear;
     e28:	fcdd2823          	sw	a3, -48(s10)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:164
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & ~0xffff;
     e2c:	008da783          	lw	a5, 8(s11)
     e30:	ffff0737          	lui	a4, 0xffff0
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
     e34:	01059593          	slli	a1, a1, 0x10
     e38:	0105d593          	srli	a1, a1, 0x10
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:164
     e3c:	00e7f7b3          	and	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:165
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX, (rmw | val));  // used as scratch reg for receiver endpoint streams
     e40:	0117e7b3          	or	a5, a5, a7
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:836
      prev_input_state->epoch_tiles_cleared = epoch_tiles_cleared;
     e44:	fcbd1a23          	sh	a1, -44(s10)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:165
     e48:	00fda423          	sw	a5, 8(s11)
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:193
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE) || !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, PHASE_AUTO_CONFIG);
     e4c:	028da783          	lw	a5, 40(s11)
     e50:	00001737          	lui	a4, 0x1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:831
      streams_to_clear++;
     e54:	00148493          	addi	s1, s1, 1
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:193
     e58:	00e7f7b3          	and	a5, a5, a4
     e5c:	00079a63          	bnez	a5, e70 <__firmware_stack_size+0xa70>
     e60:	028da783          	lw	a5, 40(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
     e64:	00000c93          	li	s9, 0
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:193
     e68:	2007f793          	andi	a5, a5, 512
     e6c:	04079a63          	bnez	a5, ec0 <__firmware_stack_size+0xac0>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
     e70:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:840
      stream_rec_endpoint_set_phase_tiles_count(stream_id, phase_tiles_remaining_to_clear);
      bool next_phase_src_change = stream_next_phase_src_change(stream_id);
      if (next_phase_src_change && !phase_tiles_remaining_to_clear) {
     e74:	04089663          	bnez	a7, ec0 <__firmware_stack_size+0xac0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:841
        prev_input_state->prev_phases_tiles_received = epoch_tiles_cleared;
     e78:	fcbd1b23          	sh	a1, -42(s10)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:842
        prev_input_state->fork_prev_pushed_num_tiles = 0;
     e7c:	fe0d1023          	sh	zero, -32(s10)
     e80:	0400006f          	j	ec0 <__firmware_stack_size+0xac0>
special_mult(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:148
  else if (special_b == TILE_WORD_16_BIT)
     e84:	08200713          	li	a4, 130
     e88:	e6e78ae3          	beq	a5, a4, cfc <__firmware_stack_size+0x8fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:150
  else if (special_b == TILE_WORD_4_BIT)
     e8c:	02600713          	li	a4, 38
     e90:	e6e786e3          	beq	a5, a4, cfc <__firmware_stack_size+0x8fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:152
  else if (special_b == TILE_WORD_2_BIT)
     e94:	01600713          	li	a4, 22
     e98:	e6e782e3          	beq	a5, a4, cfc <__firmware_stack_size+0x8fc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:154
  else if (special_b == TILE_WORD_32_BIT)
     e9c:	10200713          	li	a4, 258
     ea0:	e4e78ee3          	beq	a5, a4, cfc <__firmware_stack_size+0x8fc>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
     ea4:	dead07b7          	lui	a5, 0xdead0
     ea8:	ffb30737          	lui	a4, 0xffb30
     eac:	00278793          	addi	a5, a5, 2 # dead0002 <TENSIX_MAILBOX_BASE+0xdec10002>
     eb0:	10f72623          	sw	a5, 268(a4) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
special_mult(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:158
  
  RISC_POST_STATUS(0xDEAD0002);
  while(true);
     eb4:	0000006f          	j	eb4 <__firmware_stack_size+0xab4>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
     eb8:	00000c93          	li	s9, 0
reset_tile_header_buffer(unsigned long, unsigned long, unsigned long, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:411
  if (num_iter_tiles <= buf_size_tiles) {
     ebc:	f2cf7ae3          	bgeu	t5, a2, df0 <__firmware_stack_size+0x9f0>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:680
    for (uint32_t input = 0; input < num_input_streams; input++) {
     ec0:	00190913          	addi	s2, s2, 1
     ec4:	c6dff06f          	j	b30 <__firmware_stack_size+0x730>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
     ec8:	00000c93          	li	s9, 0
     ecc:	ff5ff06f          	j	ec0 <__firmware_stack_size+0xac0>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
     ed0:	ffb307b7          	lui	a5, 0xffb30
     ed4:	d00006b7          	lui	a3, 0xd0000
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:22
#endif
}

#ifdef RISC_B0_HW
void process_tile_clearing(kernel_input_stream_state_t* input_stream_state, uint32_t streams_to_clear) {
  kernel_input_stream_state_t* curr_input_state = input_stream_state;
     ed8:	02812a03          	lw	s4, 40(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
     edc:	10d7a623          	sw	a3, 268(a5) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:23
  while (streams_to_clear) {
     ee0:	08048c63          	beqz	s1, f78 <__firmware_stack_size+0xb78>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:24
    curr_input_state = curr_input_state->next;
     ee4:	034a2a03          	lw	s4, 52(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:26

    int32_t tiles_to_clear = curr_input_state->tiles_to_clear;
     ee8:	014a2b03          	lw	s6, 20(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:27
    if (!tiles_to_clear) {
     eec:	fe0b0ae3          	beqz	s6, ee0 <__firmware_stack_size+0xae0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:31
      continue;
    }
        
    uint32_t stream_id = curr_input_state->stream_id;
     ef0:	002a5783          	lhu	a5, 2(s4)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
     ef4:	008787b3          	add	a5, a5, s0
     ef8:	00c79793          	slli	a5, a5, 0xc
     efc:	08c7a683          	lw	a3, 140(a5)
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:33
    uint32_t phase_active = stream_phase_is_active(stream_id);
    if (!phase_active) {
     f00:	0046f693          	andi	a3, a3, 4
     f04:	fc068ee3          	beqz	a3, ee0 <__firmware_stack_size+0xae0>
stream_receiver_endpoint_tile_clearing_finished(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:335
      return (NOC_STREAM_READ_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX) == 0);
     f08:	0247a983          	lw	s3, 36(a5)
     f0c:	02478c13          	addi	s8, a5, 36
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:37
      continue;
    }

    while(!stream_receiver_endpoint_tile_clearing_finished(stream_id));
     f10:	fe099ce3          	bnez	s3, f08 <__firmware_stack_size+0xb08>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
     f14:	0907a903          	lw	s2, 144(a5)
     f18:	000017b7          	lui	a5, 0x1
     f1c:	fff78793          	addi	a5, a5, -1 # fff <__firmware_stack_size+0xbff>
     f20:	00c95913          	srli	s2, s2, 0xc
     f24:	00f97933          	and	s2, s2, a5
     f28:	012b5463          	bge	s6, s2, f30 <__firmware_stack_size+0xb30>
     f2c:	000b0913          	mv	s2, s6
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:43

    int32_t tiles_to_clear_group = tiles_to_clear;
    int32_t num_msgs_left_in_phase = stream_get_curr_phase_num_msgs(stream_id);
    if (num_msgs_left_in_phase < tiles_to_clear_group)
      tiles_to_clear_group = num_msgs_left_in_phase;
    if (!tiles_to_clear_group) {
     f30:	fa0908e3          	beqz	s2, ee0 <__firmware_stack_size+0xae0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:47
      continue;
    }

    uint32_t num_fork_streams = curr_input_state->num_fork_streams;
     f34:	01ba4b83          	lbu	s7, 27(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:48
    if (num_fork_streams > 0) {
     f38:	020b9263          	bnez	s7, f5c <__firmware_stack_size+0xb5c>
stream_receiver_endpoint_tiles_clear_b0(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:340
    clr_val *= 2;
     f3c:	00191793          	slli	a5, s2, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:341
    clr_val = (~clr_val) + 1;
     f40:	40f007b3          	neg	a5, a5
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:62
      if (!fork_is_done)
        continue;
    }

    stream_receiver_endpoint_tiles_clear_b0(stream_id, tiles_to_clear_group);
    tiles_to_clear -= tiles_to_clear_group;
     f44:	412b0933          	sub	s2, s6, s2
stream_receiver_endpoint_tiles_clear_b0(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:342
    NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, clr_val);
     f48:	00fc2023          	sw	a5, 0(s8)
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:63
    curr_input_state->tiles_to_clear = tiles_to_clear;
     f4c:	012a2a23          	sw	s2, 20(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:64
    uint32_t tiles_to_clear_eq_0 = (tiles_to_clear == 0);
     f50:	00193913          	seqz	s2, s2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:65
    streams_to_clear -= tiles_to_clear_eq_0;
     f54:	412484b3          	sub	s1, s1, s2
     f58:	f89ff06f          	j	ee0 <__firmware_stack_size+0xae0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:51
        bool push_flushed = stream_get_push_flushed<true>(curr_input_state->fork_stream_ids[k]);
     f5c:	013a07b3          	add	a5, s4, s3
     f60:	01c7c503          	lbu	a0, 28(a5)
     f64:	3ad000ef          	jal	ra, 1b10 <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:52
        if (!push_flushed) {
     f68:	f6050ce3          	beqz	a0, ee0 <__firmware_stack_size+0xae0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.cc:50
      for (uint32_t k = 0; k < num_fork_streams; k++) {
     f6c:	00198993          	addi	s3, s3, 1
     f70:	ff79e6e3          	bltu	s3, s7, f5c <__firmware_stack_size+0xb5c>
     f74:	fc9ff06f          	j	f3c <__firmware_stack_size+0xb3c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
     f78:	ffb307b7          	lui	a5, 0xffb30
     f7c:	e00006b7          	lui	a3, 0xe0000
     f80:	10d7a623          	sw	a3, 268(a5) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:159
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
     f84:	ffff86b7          	lui	a3, 0xffff8
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:919
      }
#endif

      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
     f88:	000239b7          	lui	s3, 0x23
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:159
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
     f8c:	fff68793          	addi	a5, a3, -1 # ffff7fff <TENSIX_MAILBOX_BASE+0x137fff>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:857
    kernel_output_stream_state_t* curr_output_state = output_stream_state;
     f90:	03412d83          	lw	s11, 52(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:858
    for (uint32_t output = 0; output < num_output_streams; output++) {
     f94:	02012023          	sw	zero, 32(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:919
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
     f98:	08098993          	addi	s3, s3, 128 # 23080 <substitutes.cpp.870a61b3+0x11748>
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:159
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
     f9c:	02f12623          	sw	a5, 44(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:858
    for (uint32_t output = 0; output < num_output_streams; output++) {
     fa0:	01412783          	lw	a5, 20(sp)
     fa4:	b887a683          	lw	a3, -1144(a5)
     fa8:	02012783          	lw	a5, 32(sp)
     fac:	76d7f863          	bgeu	a5, a3, 171c <__firmware_stack_size+0x131c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:862
      uint32_t skip_processing = curr_output_state->skip_processing;
     fb0:	016dc683          	lbu	a3, 22(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:864
      curr_output_state++;
     fb4:	034d8d93          	addi	s11, s11, 52
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:867
      if (stream_skip) {
     fb8:	6c069263          	bnez	a3, 167c <__firmware_stack_size+0x127c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:860
      uint32_t stream_id = curr_output_state->stream_id;
     fbc:	fd2dd783          	lhu	a5, -46(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:875
      uint32_t scatter_inner_loop_done = prev_output_state->scatter_inner_loop_done;
     fc0:	fd4daa03          	lw	s4, -44(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:860
      uint32_t stream_id = curr_output_state->stream_id;
     fc4:	00f12623          	sw	a5, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:861
      uint32_t active_streams_idx = curr_output_state->active_streams_idx;
     fc8:	fd0dc783          	lbu	a5, -48(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:881
      if (is_output_operand_decoupled(stream_id_to_operand(stream_id), output_decouple_mask)) {
     fcc:	00c12503          	lw	a0, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:861
      uint32_t active_streams_idx = curr_output_state->active_streams_idx;
     fd0:	00f12823          	sw	a5, 16(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:872
      volatile uint32_t tt_reg_ptr* epoch_tiles_acked_ptr = prev_output_state->epoch_tiles_acked_ptr;
     fd4:	ff8da783          	lw	a5, -8(s11)
     fd8:	00f12c23          	sw	a5, 24(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:873
      volatile uint32_t tt_reg_ptr* epoch_tiles_received_ptr = prev_output_state->epoch_tiles_received_ptr;
     fdc:	ff4da783          	lw	a5, -12(s11)
     fe0:	00f12e23          	sw	a5, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:874
      uint32_t num_fork_streams = prev_output_state->num_fork_streams;
     fe4:	fe3dc783          	lbu	a5, -29(s11)
     fe8:	02f12223          	sw	a5, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:881
      if (is_output_operand_decoupled(stream_id_to_operand(stream_id), output_decouple_mask)) {
     fec:	1f5000ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
is_output_operand_decoupled(int, unsigned char):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:136
    if (operand < OPERAND_OUTPUT_START_INDEX || operand >= OPERAND_INTERMEDIATES_START_INDEX) {
     ff0:	00700613          	li	a2, 7
     ff4:	ff050693          	addi	a3, a0, -16
     ff8:	16d66863          	bltu	a2, a3, 1168 <__firmware_stack_size+0xd68>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:139
    const uint8_t operand_mask = 1 << ((operand-OPERAND_OUTPUT_START_INDEX) & 0xff);
     ffc:	00100513          	li	a0, 1
    1000:	00d51533          	sll	a0, a0, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:140
    return overlay_output_decouple_mask & operand_mask;
    1004:	8211c683          	lbu	a3, -2015(gp) # ffb00021 <output_decouple_mask>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:881
    1008:	00d57533          	and	a0, a0, a3
    100c:	14050e63          	beqz	a0, 1168 <__firmware_stack_size+0xd68>
    1010:	01012783          	lw	a5, 16(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:883
        if (!(((active_stream_info[active_streams_idx].flags & STREAM_MOVES_RAW_DATA) != 0) || l1_stream_info->legacy_pack)) {
    1014:	00c00693          	li	a3, 12
    1018:	00279613          	slli	a2, a5, 0x2
    101c:	01360633          	add	a2, a2, s3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:882
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    1020:	11462503          	lw	a0, 276(a2) # f00114 <substitutes.cpp.870a61b3+0xeee7dc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:883
        if (!(((active_stream_info[active_streams_idx].flags & STREAM_MOVES_RAW_DATA) != 0) || l1_stream_info->legacy_pack)) {
    1024:	02d786b3          	mul	a3, a5, a3
    1028:	00da86b3          	add	a3, s5, a3
    102c:	0066d583          	lhu	a1, 6(a3)
    1030:	0405f593          	andi	a1, a1, 64
    1034:	12059a63          	bnez	a1, 1168 <__firmware_stack_size+0xd68>
    1038:	03854583          	lbu	a1, 56(a0)
    103c:	12059663          	bnez	a1, 1168 <__firmware_stack_size+0xd68>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:884
          uint32_t epoch_iters_remaining = active_stream_info[active_streams_idx].epoch_iters_remaining;
    1040:	0086a583          	lw	a1, 8(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:885
          uint32_t total_num_tiles = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx]->epoch_num_tiles;
    1044:	11462683          	lw	a3, 276(a2)
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1048:	00c12783          	lw	a5, 12(sp)
    104c:	008784b3          	add	s1, a5, s0
    1050:	00c49493          	slli	s1, s1, 0xc
    1054:	08c4a603          	lw	a2, 140(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1058:	3a44a683          	lw	a3, 932(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    105c:	00167613          	andi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1060:	00060a63          	beqz	a2, 1074 <__firmware_stack_size+0xc74>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1064:	0116d693          	srli	a3, a3, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1068:	00b6e6b3          	or	a3, a3, a1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:889
              stream_done = (epoch_iters_remaining == 0);
    106c:	00100913          	li	s2, 1
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
    1070:	00068663          	beqz	a3, 107c <__firmware_stack_size+0xc7c>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:893
            all_kernels_done = false;
    1074:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:886
          bool stream_done = false;
    1078:	00000913          	li	s2, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:896
          uint8_t operand_idx = uint8_t(stream_id_to_operand(stream_id));
    107c:	00c12503          	lw	a0, 12(sp)
    1080:	161000ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
perf::first_bw_timestamp_recorded(unsigned char, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:167
    if (operand_idx >= PERF_MAX_NUM_OUTPUTS) {
    1084:	01000693          	li	a3, 16
    1088:	0ff57513          	zext.b	a0, a0
    108c:	04d51e63          	bne	a0, a3, 10e8 <__firmware_stack_size+0xce8>
perf::record_output_start_bw_timestamp(unsigned char):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:211
    last_timestamp_recorded_input[operand_idx] = true;
  }
}

inline __attribute__((always_inline)) void record_output_start_bw_timestamp(uint8_t operand_idx) {
  if (!first_bw_timestamp_recorded(operand_idx, false)) {
    1090:	8201c683          	lbu	a3, -2016(gp) # ffb00020 <first_timestamp_recorded_output>
    1094:	00069e63          	bnez	a3, 10b0 <__firmware_stack_size+0xcb0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:212
    uint32_t event_id = get_event_id(BriscEventType::OUTPUT_TILE_PUSH, perf_epoch_id, operand_idx);
    1098:	82c1d503          	lhu	a0, -2004(gp) # ffb0002c <perf_epoch_id>
perf::get_event_id(perf::BriscEventType, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:55
   event_id |= ((epoch_id & 0xffff) << 4);
    109c:	00451513          	slli	a0, a0, 0x4
perf::record_output_start_bw_timestamp(unsigned char):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:213
    record_timestamp_64b(event_id);
    10a0:	00456513          	ori	a0, a0, 4
    10a4:	1ed000ef          	jal	ra, 1a90 <perf::record_timestamp_64b(unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:214
    first_timestamp_recorded_output[operand_idx] = true;
    10a8:	00100693          	li	a3, 1
    10ac:	82d18023          	sb	a3, -2016(gp) # ffb00020 <first_timestamp_recorded_output>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:899
          if (stream_done) {
    10b0:	02090c63          	beqz	s2, 10e8 <__firmware_stack_size+0xce8>
perf::record_output_end_bw_timestamp(unsigned char):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:219
  }
}

inline __attribute__((always_inline)) void record_output_end_bw_timestamp(uint8_t operand_idx) {
  if (!last_bw_timestamp_recorded(operand_idx, false)) {
    10b4:	81c1c683          	lbu	a3, -2020(gp) # ffb0001c <last_timestamp_recorded_output>
    10b8:	02069863          	bnez	a3, 10e8 <__firmware_stack_size+0xce8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:220
    uint32_t event_id = get_event_id(BriscEventType::OUTPUT_NUM_TILES, perf_epoch_id, operand_idx);
    10bc:	82c1d903          	lhu	s2, -2004(gp) # ffb0002c <perf_epoch_id>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:221
    record_perf_value(event_id, decoupled_output_num_tiles, 0);
    10c0:	8181a583          	lw	a1, -2024(gp) # ffb00018 <decoupled_output_num_tiles>
perf::get_event_id(perf::BriscEventType, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:55
   event_id |= ((epoch_id & 0xffff) << 4);
    10c4:	00491913          	slli	s2, s2, 0x4
perf::record_output_end_bw_timestamp(unsigned char):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:221
    record_perf_value(event_id, decoupled_output_num_tiles, 0);
    10c8:	00000613          	li	a2, 0
    10cc:	00296513          	ori	a0, s2, 2
    10d0:	179000ef          	jal	ra, 1a48 <perf::record_perf_value(unsigned long, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:223
    event_id = get_event_id(BriscEventType::OUTPUT_TILE_PUSH, perf_epoch_id, operand_idx);
    record_timestamp_64b(event_id);
    10d4:	00496513          	ori	a0, s2, 4
    10d8:	1b9000ef          	jal	ra, 1a90 <perf::record_timestamp_64b(unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:224
    last_timestamp_recorded_output[operand_idx] = true;
    10dc:	00100693          	li	a3, 1
    10e0:	80d18e23          	sb	a3, -2020(gp) # ffb0001c <last_timestamp_recorded_output>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:225
    decoupled_output_num_tiles = 0;
    10e4:	8001ac23          	sw	zero, -2024(gp) # ffb00018 <decoupled_output_num_tiles>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    10e8:	08c4a603          	lw	a2, 140(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:903
          uint32_t phase_active = stream_phase_is_active(stream_id) && !is_dummy_phase(stream_id);
    10ec:	00000693          	li	a3, 0
    10f0:	00467613          	andi	a2, a2, 4
    10f4:	00060a63          	beqz	a2, 1108 <__firmware_stack_size+0xd08>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    10f8:	02c4a683          	lw	a3, 44(s1)
is_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:438
    }
  }
}

inline bool is_dummy_phase(uint32_t stream_id) {
  uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
    10fc:	00f6d693          	srli	a3, a3, 0xf
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:903
    1100:	fe168693          	addi	a3, a3, -31
    1104:	00d036b3          	snez	a3, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:904
          uint16_t epoch_tiles_received = *epoch_tiles_received_ptr;
    1108:	01c12783          	lw	a5, 28(sp)
    110c:	0007a583          	lw	a1, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:905
          uint16_t epoch_tiles_acked = *epoch_tiles_acked_ptr;
    1110:	01812783          	lw	a5, 24(sp)
    1114:	0007a603          	lw	a2, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:907
          if (phase_active && num_tiles_recv == 0) {
    1118:	04068863          	beqz	a3, 1168 <__firmware_stack_size+0xd68>
    111c:	01059593          	slli	a1, a1, 0x10
    1120:	01061693          	slli	a3, a2, 0x10
    1124:	0105d593          	srli	a1, a1, 0x10
    1128:	0106d693          	srli	a3, a3, 0x10
    112c:	02d59e63          	bne	a1, a3, 1168 <__firmware_stack_size+0xd68>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:908
            uint16_t operand_tiles_received = (uint16_t)epoch_tiles_received_ptr[0];
    1130:	01c12783          	lw	a5, 28(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:909
            uint16_t new_epoch_tiles_received = op_pack_tiles_ptr_add(operand_tiles_received, prev_output_state->num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS);
    1134:	fe0dd603          	lhu	a2, -32(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:908
            uint16_t operand_tiles_received = (uint16_t)epoch_tiles_received_ptr[0];
    1138:	0007a583          	lw	a1, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:909
            uint16_t new_epoch_tiles_received = op_pack_tiles_ptr_add(operand_tiles_received, prev_output_state->num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS);
    113c:	01161693          	slli	a3, a2, 0x11
    1140:	0116d693          	srli	a3, a3, 0x11
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
    1144:	00b686b3          	add	a3, a3, a1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:910
            epoch_tiles_received_ptr[0] = new_epoch_tiles_received;
    1148:	01069693          	slli	a3, a3, 0x10
    114c:	0106d693          	srli	a3, a3, 0x10
    1150:	00d7a023          	sw	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:911
            decoupled_output_num_tiles += (prev_output_state->num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS);
    1154:	02c12783          	lw	a5, 44(sp)
    1158:	8181a583          	lw	a1, -2024(gp) # ffb00018 <decoupled_output_num_tiles>
    115c:	00f67633          	and	a2, a2, a5
    1160:	00b60633          	add	a2, a2, a1
    1164:	80c1ac23          	sw	a2, -2024(gp) # ffb00018 <decoupled_output_num_tiles>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:903
          uint32_t phase_active = stream_phase_is_active(stream_id) && !is_dummy_phase(stream_id);
    1168:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:917
      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    116c:	02412783          	lw	a5, 36(sp)
    1170:	00178b93          	addi	s7, a5, 1
    1174:	177c7e63          	bgeu	s8, s7, 12f0 <__firmware_stack_size+0xef0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:918
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    1178:	7a0c0c63          	beqz	s8, 1930 <__firmware_stack_size+0x1530>
get_fork_idx(kernel_output_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:46
  return output_state->fork_idxs[fork_idx];
    117c:	018d86b3          	add	a3, s11, s8
    1180:	fe46c903          	lbu	s2, -28(a3)
    1184:	fffc0b13          	addi	s6, s8, -1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:919
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    1188:	04490693          	addi	a3, s2, 68
    118c:	00269693          	slli	a3, a3, 0x2
    1190:	00d986b3          	add	a3, s3, a3
    1194:	0046a683          	lw	a3, 4(a3)
    1198:	0006d483          	lhu	s1, 0(a3)
get_fork_num_msgs_in_block(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:82
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX);
    119c:	008486b3          	add	a3, s1, s0
    11a0:	00c69693          	slli	a3, a3, 0xc
    11a4:	0046ab83          	lw	s7, 4(a3)
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:159
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
    11a8:	000086b7          	lui	a3, 0x8
    11ac:	00dbf6b3          	and	a3, s7, a3
    11b0:	0e068c63          	beqz	a3, 12a8 <__firmware_stack_size+0xea8>
    11b4:	02c12783          	lw	a5, 44(sp)
    11b8:	00fbfbb3          	and	s7, s7, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:161
  if (num_tiles_sending) {
    11bc:	0e0b8663          	beqz	s7, 12a8 <__firmware_stack_size+0xea8>
get_scatter_flushed(unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:77
  uint32_t dram_output_no_push = ((active_stream_info[active_streams_idx].flags & STREAM_DRAM_NO_PUSH) != 0);
    11c0:	00c00713          	li	a4, 12
    11c4:	02e90733          	mul	a4, s2, a4
    11c8:	00ea8733          	add	a4, s5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:78
  if (dram_output_no_push) {
    11cc:	00675703          	lhu	a4, 6(a4)
    11d0:	000017b7          	lui	a5, 0x1
    11d4:	80078793          	addi	a5, a5, -2048 # 800 <__firmware_stack_size+0x400>
    11d8:	00e7f733          	and	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:79
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    11dc:	00048513          	mv	a0, s1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:78
  if (dram_output_no_push) {
    11e0:	0a070e63          	beqz	a4, 129c <__firmware_stack_size+0xe9c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:79
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    11e4:	7fc000ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    11e8:	7bc000ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
    11ec:	00850533          	add	a0, a0, s0
    11f0:	00c51513          	slli	a0, a0, 0xc
get_scatter_flushed(unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:79
    11f4:	01052d03          	lw	s10, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:80
    uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    11f8:	00048513          	mv	a0, s1
    11fc:	7e4000ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
    1200:	00050c93          	mv	s9, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:79
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    1204:	010d1d13          	slli	s10, s10, 0x10
    1208:	010d5d13          	srli	s10, s10, 0x10
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
    120c:	00d000ef          	jal	ra, 1a18 <is_input_operand_decoupled(int)>
    1210:	06050a63          	beqz	a0, 1284 <__firmware_stack_size+0xe84>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    1214:	000c8513          	mv	a0, s9
    1218:	78c000ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
    121c:	00850533          	add	a0, a0, s0
    1220:	00c51513          	slli	a0, a0, 0xc
    1224:	01050513          	addi	a0, a0, 16
get_scatter_flushed(unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:80
    uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    1228:	00052683          	lw	a3, 0(a0)
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:187
    all_kernels_done = false; // prevent breaking from outer loop
    122c:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:163
    if (push_flushed) {
    1230:	01069693          	slli	a3, a3, 0x10
    1234:	0106d693          	srli	a3, a3, 0x10
    1238:	06dd1863          	bne	s10, a3, 12a8 <__firmware_stack_size+0xea8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:164
      uint32_t scatter_inner_loop_count = fork_idx == ((uint32_t)-1) ? prev_output_state->scatter_inner_loop_count : get_fork_scatter_inner_loop_count(stream_id);
    123c:	fff00713          	li	a4, -1
    1240:	06eb1863          	bne	s6, a4, 12b0 <__firmware_stack_size+0xeb0>
    1244:	fd8da703          	lw	a4, -40(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:168
      uint32_t num_scatter_inner_loop = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx]->num_scatter_inner_loop;
    1248:	04490913          	addi	s2, s2, 68
    124c:	00291913          	slli	s2, s2, 0x2
    1250:	01298933          	add	s2, s3, s2
    1254:	00492683          	lw	a3, 4(s2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:166
      scatter_inner_loop_count++;
    1258:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:169
      if (scatter_inner_loop_count >= num_scatter_inner_loop) {
    125c:	0346a683          	lw	a3, 52(a3) # 8034 <__trisc_base+0x1434>
    1260:	08d76263          	bltu	a4, a3, 12e4 <__firmware_stack_size+0xee4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:170
        if (fork_idx == ((uint32_t)-1))
    1264:	fff00693          	li	a3, -1
    1268:	04db1c63          	bne	s6, a3, 12c0 <__firmware_stack_size+0xec0>
set_scatter_loop_done(unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:66
  scatter_loop_done |= (0x1 << 0);
    126c:	001a6a13          	ori	s4, s4, 1
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:178
        prev_output_state->num_msgs_in_block = num_msgs_in_block;
    1270:	ff7d9023          	sh	s7, -32(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:179
        prev_output_state->scatter_inner_loop_count = scatter_inner_loop_count;
    1274:	fcedac23          	sw	a4, -40(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:184
      prev_output_state->scatter_inner_loop_done = scatter_inner_loop_done;
    1278:	fd4daa23          	sw	s4, -44(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:187
    all_kernels_done = false; // prevent breaking from outer loop
    127c:	00000c93          	li	s9, 0
    1280:	0280006f          	j	12a8 <__firmware_stack_size+0xea8>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    1284:	000c8513          	mv	a0, s9
    1288:	71c000ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
    128c:	00850533          	add	a0, a0, s0
    1290:	00c51513          	slli	a0, a0, 0xc
    1294:	00c50513          	addi	a0, a0, 12
    1298:	f91ff06f          	j	1228 <__firmware_stack_size+0xe28>
get_scatter_flushed(unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:84
    return stream_get_push_flushed(stream_id);
    129c:	435000ef          	jal	ra, 1ed0 <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]>
    12a0:	00050c93          	mv	s9, a0
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:163
    if (push_flushed) {
    12a4:	f8051ce3          	bnez	a0, 123c <__firmware_stack_size+0xe3c>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:917
      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    12a8:	001c0c13          	addi	s8, s8, 1
    12ac:	ec1ff06f          	j	116c <__firmware_stack_size+0xd6c>
get_fork_scatter_inner_loop_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:74
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX);
    12b0:	00848733          	add	a4, s1, s0
    12b4:	00c71713          	slli	a4, a4, 0xc
    12b8:	00072703          	lw	a4, 0(a4)
    12bc:	f8dff06f          	j	1248 <__firmware_stack_size+0xe48>
set_fork_scatter_loop_done(unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:71
  fork_idx++;
    12c0:	001b0b13          	addi	s6, s6, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:73
  scatter_loop_done |= (0x1 << fork_idx);
    12c4:	00100693          	li	a3, 1
    12c8:	01669b33          	sll	s6, a3, s6
    12cc:	016a6a33          	or	s4, s4, s6
set_fork_num_msgs_in_block(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:78
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, val);
    12d0:	008484b3          	add	s1, s1, s0
    12d4:	00c49493          	slli	s1, s1, 0xc
    12d8:	0174a223          	sw	s7, 4(s1)
set_fork_scatter_inner_loop_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:70
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX, val);
    12dc:	00e4a023          	sw	a4, 0(s1)
    12e0:	f99ff06f          	j	1278 <__firmware_stack_size+0xe78>
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:177
      if (fork_idx == ((uint32_t)-1)) {
    12e4:	fff00693          	li	a3, -1
    12e8:	fedb14e3          	bne	s6, a3, 12d0 <__firmware_stack_size+0xed0>
    12ec:	f85ff06f          	j	1270 <__firmware_stack_size+0xe70>
is_all_fork_scatter_loop_done(unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:61
  uint32_t mask = (1 << (num_fork_streams+1)) - 1;
    12f0:	00100693          	li	a3, 1
    12f4:	017696b3          	sll	a3, a3, s7
    12f8:	fff68693          	addi	a3, a3, -1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:926
                              epoch_tiles_acked_ptr, epoch_tiles_received_ptr, all_kernels_done, k == 0 ? -1 : k-1,
                              scatter_inner_loop_done);
      }

      bool all_scatter_inner_loop_done = is_all_fork_scatter_loop_done(scatter_inner_loop_done, num_fork_streams);
      if (all_scatter_inner_loop_done) {
    12fc:	0b469863          	bne	a3, s4, 13ac <__firmware_stack_size+0xfac>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:928
        for (uint32_t k = 0; k < num_fork_streams+1; k++) {
          uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    1300:	01012683          	lw	a3, 16(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:927
        for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    1304:	00000593          	li	a1, 0
process_pipe_scatter_output_loop(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:138
  if (scatter_order_size > 1) {
    1308:	00100813          	li	a6, 1
    130c:	00c0006f          	j	1318 <__firmware_stack_size+0xf18>
get_fork_idx(kernel_output_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:46
  return output_state->fork_idxs[fork_idx];
    1310:	00bd86b3          	add	a3, s11, a1
    1314:	fe46c683          	lbu	a3, -28(a3)
process_pipe_scatter_output_loop(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:136
  volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    1318:	04468693          	addi	a3, a3, 68
    131c:	00269693          	slli	a3, a3, 0x2
    1320:	00d986b3          	add	a3, s3, a3
    1324:	0046a683          	lw	a3, 4(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:137
  uint32_t scatter_order_size = l1_stream_info->scatter_order_size;
    1328:	08e6d503          	lhu	a0, 142(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:138
  if (scatter_order_size > 1) {
    132c:	02a87863          	bgeu	a6, a0, 135c <__firmware_stack_size+0xf5c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:139
    uint32_t pipe_scatter_output_loop_size = l1_stream_info->pipe_scatter_output_loop_size;
    1330:	0486a883          	lw	a7, 72(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:140
    uint32_t pipe_scatter_output_loop_count = l1_stream_info->pipe_scatter_output_loop_count;
    1334:	0546a603          	lw	a2, 84(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:141
    pipe_scatter_output_loop_count++;
    1338:	00160613          	addi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:142
    if (pipe_scatter_output_loop_count >= pipe_scatter_output_loop_size) {
    133c:	01166e63          	bltu	a2, a7, 1358 <__firmware_stack_size+0xf58>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:143
      uint32_t scatter_idx = l1_stream_info->scatter_idx;
    1340:	0506a603          	lw	a2, 80(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:144
      scatter_idx++;
    1344:	00160613          	addi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:145
      if (scatter_idx >= scatter_order_size)
    1348:	00a66463          	bltu	a2, a0, 1350 <__firmware_stack_size+0xf50>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:146
        scatter_idx -= scatter_order_size;
    134c:	40a60633          	sub	a2, a2, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:147
      l1_stream_info->scatter_idx = scatter_idx;
    1350:	04c6a823          	sw	a2, 80(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:148
      pipe_scatter_output_loop_count = 0;
    1354:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:150
    l1_stream_info->pipe_scatter_output_loop_count = pipe_scatter_output_loop_count;
    1358:	04c6aa23          	sw	a2, 84(a3)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:927
        for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    135c:	00158593          	addi	a1, a1, 1
    1360:	fb75e8e3          	bltu	a1, s7, 1310 <__firmware_stack_size+0xf10>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:933
          process_pipe_scatter_output_loop(fork_active_streams_idx);
        }

        uint32_t num_msgs_in_block = prev_output_state->num_msgs_in_block;
        uint16_t prev_epoch_tiles_acked = *epoch_tiles_acked_ptr;
    1364:	01812783          	lw	a5, 24(sp)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
    1368:	fe0dd603          	lhu	a2, -32(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:933
    136c:	0007a683          	lw	a3, 0(a5)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
    1370:	00c686b3          	add	a3, a3, a2
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:935
        uint16_t new_epoch_tiles_acked = op_pack_tiles_ptr_add(prev_epoch_tiles_acked, num_msgs_in_block);
        *epoch_tiles_acked_ptr = (uint32_t)new_epoch_tiles_acked;
    1374:	01069693          	slli	a3, a3, 0x10
    1378:	0106d693          	srli	a3, a3, 0x10
    137c:	00d7a023          	sw	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:951
          uint32_t dest_addr = ((uint32_t) epoch_tiles_acked_ptr - (uint32_t) receiver_tiles_acked) & 0x7F;
          dest_addr += (uint32_t) sender_tiles_acked;
          eth_send_packet(0, (uint32_t) epoch_tiles_acked_ptr >> 4, dest_addr >> 4, 1);
      }
#endif
        uint32_t mblock_buffering_count = prev_output_state->mblock_buffering_count;
    1380:	fdedd683          	lhu	a3, -34(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:952
        uint32_t num_mblock_buffering = prev_output_state->num_mblock_buffering;
    1384:	fdcdd603          	lhu	a2, -36(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:953
        mblock_buffering_count++;
    1388:	00168693          	addi	a3, a3, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:954
        if (mblock_buffering_count >= num_mblock_buffering)
    138c:	00c6e463          	bltu	a3, a2, 1394 <__firmware_stack_size+0xf94>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:955
          mblock_buffering_count -= num_mblock_buffering;
    1390:	40c686b3          	sub	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:959
        prev_output_state->mblock_buffering_count = mblock_buffering_count;

        prev_output_state->scatter_inner_loop_count = 0;
        if (num_fork_streams > 0) {
    1394:	02412783          	lw	a5, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:956
        prev_output_state->mblock_buffering_count = mblock_buffering_count;
    1398:	fcdd9f23          	sh	a3, -34(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:958
        prev_output_state->scatter_inner_loop_count = 0;
    139c:	fc0dac23          	sw	zero, -40(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:959
        if (num_fork_streams > 0) {
    13a0:	10079a63          	bnez	a5, 14b4 <__firmware_stack_size+0x10b4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:968
            set_fork_scatter_inner_loop_count(fork_stream_id, 0);
          }
        }

        scatter_inner_loop_done = 0;
        prev_output_state->scatter_inner_loop_done = scatter_inner_loop_done;
    13a4:	fc0daa23          	sw	zero, -44(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:967
        scatter_inner_loop_done = 0;
    13a8:	00000a13          	li	s4, 0
is_scatter_loop_done(unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:50
  return ((scatter_loop_done >> 0) & 0x1);
    13ac:	001a7693          	andi	a3, s4, 1
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:198
  bool inner_loop_not_done = fork_idx == ((uint32_t)-1) ? !is_scatter_loop_done(scatter_inner_loop_done) : !is_fork_scatter_loop_done(scatter_inner_loop_done, fork_idx);
    13b0:	0016c793          	xori	a5, a3, 1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:967
        scatter_inner_loop_done = 0;
    13b4:	00000b13          	li	s6, 0
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:198
  bool inner_loop_not_done = fork_idx == ((uint32_t)-1) ? !is_scatter_loop_done(scatter_inner_loop_done) : !is_fork_scatter_loop_done(scatter_inner_loop_done, fork_idx);
    13b8:	02f12e23          	sw	a5, 60(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:972
      }

      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    13bc:	560b0063          	beqz	s6, 191c <__firmware_stack_size+0x151c>
get_fork_idx(kernel_output_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:46
  return output_state->fork_idxs[fork_idx];
    13c0:	016d86b3          	add	a3, s11, s6
    13c4:	fe46c603          	lbu	a2, -28(a3)
    13c8:	fffb0793          	addi	a5, s6, -1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:973
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    13cc:	04460693          	addi	a3, a2, 68
    13d0:	00269693          	slli	a3, a3, 0x2
    13d4:	00d986b3          	add	a3, s3, a3
    13d8:	0046a683          	lw	a3, 4(a3)
    13dc:	0006d503          	lhu	a0, 0(a3)
get_fork_num_msgs_in_block(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:82
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX);
    13e0:	008506b3          	add	a3, a0, s0
    13e4:	00c69693          	slli	a3, a3, 0xc
    13e8:	0046a903          	lw	s2, 4(a3)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:197
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
    13ec:	000086b7          	lui	a3, 0x8
    13f0:	00d976b3          	and	a3, s2, a3
    13f4:	00068663          	beqz	a3, 1400 <__firmware_stack_size+0x1000>
    13f8:	02c12703          	lw	a4, 44(sp)
    13fc:	00e976b3          	and	a3, s2, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:198
  bool inner_loop_not_done = fork_idx == ((uint32_t)-1) ? !is_scatter_loop_done(scatter_inner_loop_done) : !is_fork_scatter_loop_done(scatter_inner_loop_done, fork_idx);
    1400:	fff00713          	li	a4, -1
    1404:	0ee79663          	bne	a5, a4, 14f0 <__firmware_stack_size+0x10f0>
    1408:	03c12583          	lw	a1, 60(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:200
  if (inner_loop_not_done && !num_tiles_sending) {
    140c:	26058463          	beqz	a1, 1674 <__firmware_stack_size+0x1274>
    1410:	26069263          	bnez	a3, 1674 <__firmware_stack_size+0x1274>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1414:	008504b3          	add	s1, a0, s0
    1418:	00c49493          	slli	s1, s1, 0xc
    141c:	08c4a883          	lw	a7, 140(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1420:	3a44a583          	lw	a1, 932(s1)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1424:	00000813          	li	a6, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1428:	0018f893          	andi	a7, a7, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    142c:	00088663          	beqz	a7, 1438 <__firmware_stack_size+0x1038>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1430:	0115d593          	srli	a1, a1, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1434:	0015b813          	seqz	a6, a1
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:203
    uint32_t epoch_iters_remaining = active_stream_info[active_streams_idx].epoch_iters_remaining;
    1438:	00c00593          	li	a1, 12
    143c:	02b605b3          	mul	a1, a2, a1
    1440:	00ba85b3          	add	a1, s5, a1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:204
    if (advance_wait && epoch_iters_remaining > 0) {
    1444:	14080263          	beqz	a6, 1588 <__firmware_stack_size+0x1188>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:203
    uint32_t epoch_iters_remaining = active_stream_info[active_streams_idx].epoch_iters_remaining;
    1448:	0085af03          	lw	t5, 8(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:204
    if (advance_wait && epoch_iters_remaining > 0) {
    144c:	120f0e63          	beqz	t5, 1588 <__firmware_stack_size+0x1188>
    1450:	00261f93          	slli	t6, a2, 0x2
    1454:	013f8fb3          	add	t6, t6, s3
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:101
  volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    1458:	114fa703          	lw	a4, 276(t6)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:205
      epoch_iters_remaining--;
    145c:	ffff0f13          	addi	t5, t5, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:207
      active_stream_info[active_streams_idx].epoch_iters_remaining = epoch_iters_remaining;
    1460:	01e5a423          	sw	t5, 8(a1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:208
      uint32_t start_phase_num_cfg_regs = active_stream_info[active_streams_idx].start_phase_num_cfg_regs;
    1464:	0025ce03          	lbu	t3, 2(a1)
    1468:	fdedde83          	lhu	t4, -34(s11)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:102
  uint32_t blob_size = l1_stream_info->blob_size;
    146c:	02872283          	lw	t0, 40(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:103
  uint32_t blob_base_addr = l1_stream_info->blob_start_addr;
    1470:	02472c83          	lw	s9, 36(a4)
stream_get_auto_cfg_header(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:50
  return NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX);
    1474:	0904a803          	lw	a6, 144(s1)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:105
  bool is_scatter = l1_stream_info->scatter_pipe_state != ((scatter_pipe_state_t*)0);
    1478:	04c72383          	lw	t2, 76(a4)
stream_get_auto_cfg_header(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:50
    147c:	03012223          	sw	a6, 36(sp)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:110
  if (is_scatter) {
    1480:	08039263          	bnez	t2, 1504 <__firmware_stack_size+0x1104>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:108
  uint32_t blob_start_addr = blob_base_addr;
    1484:	000c8d13          	mv	s10, s9
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:107
  uint32_t scatter_idx = 0;
    1488:	00000313          	li	t1, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:106
  uint32_t curr_unroll = 0;
    148c:	00000893          	li	a7, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:164
  return 0;
}

inline __attribute__((always_inline)) unsigned int mulsi3 (unsigned int a, unsigned int b)
{
  unsigned int r = 0;
    1490:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:102
  uint32_t blob_size = l1_stream_info->blob_size;
    1494:	00028c13          	mv	s8, t0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
    1498:	0a0e8863          	beqz	t4, 1548 <__firmware_stack_size+0x1148>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
    {
      if (a & 1)
    149c:	001ef093          	andi	ra, t4, 1
    14a0:	00008463          	beqz	ra, 14a8 <__firmware_stack_size+0x10a8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
    14a4:	01880833          	add	a6, a6, s8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    14a8:	001ede93          	srli	t4, t4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    14ac:	001c1c13          	slli	s8, s8, 0x1
    14b0:	fe9ff06f          	j	1498 <__firmware_stack_size+0x1098>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:960
          for (uint32_t k = 0; k < num_fork_streams; k++) {
    14b4:	00000613          	li	a2, 0
get_fork_idx(kernel_output_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:44
  fork_idx++;
    14b8:	00160613          	addi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:46
  return output_state->fork_idxs[fork_idx];
    14bc:	00cd86b3          	add	a3, s11, a2
    14c0:	fe46c683          	lbu	a3, -28(a3) # 7fe4 <__trisc_base+0x13e4>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:960
          for (uint32_t k = 0; k < num_fork_streams; k++) {
    14c4:	02412783          	lw	a5, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:962
            uint32_t fork_stream_id = RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    14c8:	04468693          	addi	a3, a3, 68
    14cc:	00269693          	slli	a3, a3, 0x2
    14d0:	00d986b3          	add	a3, s3, a3
    14d4:	0046a683          	lw	a3, 4(a3)
    14d8:	0006d683          	lhu	a3, 0(a3)
set_fork_scatter_inner_loop_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:70
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX, val);
    14dc:	008686b3          	add	a3, a3, s0
    14e0:	00c69693          	slli	a3, a3, 0xc
    14e4:	0006a023          	sw	zero, 0(a3)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:960
          for (uint32_t k = 0; k < num_fork_streams; k++) {
    14e8:	fcf668e3          	bltu	a2, a5, 14b8 <__firmware_stack_size+0x10b8>
    14ec:	eb9ff06f          	j	13a4 <__firmware_stack_size+0xfa4>
is_fork_scatter_loop_done(unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:55
  fork_idx++;
    14f0:	00178593          	addi	a1, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:57
  return ((scatter_loop_done >> fork_idx) & 0x1);
    14f4:	00ba55b3          	srl	a1, s4, a1
    14f8:	0015f593          	andi	a1, a1, 1
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:198
  bool inner_loop_not_done = fork_idx == ((uint32_t)-1) ? !is_scatter_loop_done(scatter_inner_loop_done) : !is_fork_scatter_loop_done(scatter_inner_loop_done, fork_idx);
    14fc:	0015c593          	xori	a1, a1, 1
    1500:	f0dff06f          	j	140c <__firmware_stack_size+0x100c>
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:111
    scatter_idx = l1_stream_info->scatter_idx;
    1504:	05072303          	lw	t1, 80(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:112
    curr_unroll = l1_stream_info->scatter_pipe_state[scatter_idx].curr_unroll;
    1508:	04c72803          	lw	a6, 76(a4)
    150c:	00431e13          	slli	t3, t1, 0x4
    1510:	01c80833          	add	a6, a6, t3
    1514:	00082883          	lw	a7, 0(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:113
    blob_start_addr = l1_stream_info->scatter_pipe_state[scatter_idx].unroll_blobs[curr_unroll].scatter_blob_base_addr;
    1518:	04c72803          	lw	a6, 76(a4)
    151c:	00389093          	slli	ra, a7, 0x3
    1520:	01c80833          	add	a6, a6, t3
    1524:	00c82803          	lw	a6, 12(a6)
    1528:	00180833          	add	a6, a6, ra
    152c:	00082d03          	lw	s10, 0(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:114
    start_phase_num_cfg_regs = l1_stream_info->scatter_pipe_state[scatter_idx].unroll_blobs[curr_unroll].start_scatter_blob_num_cfg_regs;
    1530:	04c72803          	lw	a6, 76(a4)
    1534:	01c80833          	add	a6, a6, t3
    1538:	00c82803          	lw	a6, 12(a6)
    153c:	00180833          	add	a6, a6, ra
    1540:	00482e03          	lw	t3, 4(a6)
    1544:	f4dff06f          	j	1490 <__firmware_stack_size+0x1090>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:120
  if (auto_cfg_header == 0 || is_scatter) {
    1548:	02412e83          	lw	t4, 36(sp)
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    154c:	0204a223          	sw	zero, 36(s1)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:118
  blob_start_addr += mulsi3(mblock_buffering_count,blob_size);
    1550:	01a80833          	add	a6, a6, s10
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:120
  if (auto_cfg_header == 0 || is_scatter) {
    1554:	000e8463          	beqz	t4, 155c <__firmware_stack_size+0x115c>
    1558:	12038a63          	beqz	t2, 168c <__firmware_stack_size+0x128c>
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:28
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr);
    155c:	0304a823          	sw	a6, 48(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    1560:	018e1e13          	slli	t3, t3, 0x18
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    1564:	00003837          	lui	a6, 0x3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    1568:	09c4a823          	sw	t3, 144(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    156c:	20080813          	addi	a6, a6, 512 # 3200 <__trisc1_size+0x1200>
    1570:	0304a423          	sw	a6, 40(s1)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:126
  if (is_scatter) {
    1574:	14039263          	bnez	t2, 16b8 <__firmware_stack_size+0x12b8>
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:214
      all_kernels_done = false; // prevent breaking from outer loop
    1578:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:210
      if (epoch_iters_remaining == 0) {
    157c:	000f1663          	bnez	t5, 1588 <__firmware_stack_size+0x1188>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:211
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    1580:	114fa803          	lw	a6, 276(t6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:212
        l1_stream_info->epoch_iters_remaining = 0;
    1584:	02082823          	sw	zero, 48(a6)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    1588:	08c4a883          	lw	a7, 140(s1)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:217
    uint32_t phase_active = stream_phase_is_active(stream_id) && !is_dummy_phase(stream_id);
    158c:	00000813          	li	a6, 0
    1590:	0048f893          	andi	a7, a7, 4
    1594:	00088a63          	beqz	a7, 15a8 <__firmware_stack_size+0x11a8>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    1598:	02c4a803          	lw	a6, 44(s1)
is_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:438
  uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
    159c:	00f85813          	srli	a6, a6, 0xf
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:217
    15a0:	fe180813          	addi	a6, a6, -31
    15a4:	01003833          	snez	a6, a6
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:219
    uint16_t epoch_tiles_received = *epoch_tiles_received_ptr;
    15a8:	01c12703          	lw	a4, 28(sp)
    15ac:	00072c03          	lw	s8, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:220
    uint16_t epoch_tiles_acked = *epoch_tiles_acked_ptr;
    15b0:	01812703          	lw	a4, 24(sp)
    15b4:	00072883          	lw	a7, 0(a4)
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:55
  return a - b;
    15b8:	411c0c33          	sub	s8, s8, a7
    15bc:	010c1c13          	slli	s8, s8, 0x10
    15c0:	010c5c13          	srli	s8, s8, 0x10
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:223
    if (num_tiles_recv > 0 && num_tiles_recv >= num_msgs_in_block) {
    15c4:	0a0c0863          	beqz	s8, 1674 <__firmware_stack_size+0x1274>
    15c8:	0b2c6663          	bltu	s8, s2, 1674 <__firmware_stack_size+0x1274>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:241
      all_kernels_done = false; // prevent breaking from outer loop
    15cc:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:224
      if (phase_active) {
    15d0:	0a080263          	beqz	a6, 1674 <__firmware_stack_size+0x1274>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    15d4:	0904a703          	lw	a4, 144(s1)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    15d8:	01c4a803          	lw	a6, 28(s1)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:227
        if (prev_output_state->eth_fw_stream) {
    15dc:	fccdc883          	lbu	a7, -52(s11)
    15e0:	10088263          	beqz	a7, 16e4 <__firmware_stack_size+0x12e4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:228
          volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    15e4:	04460613          	addi	a2, a2, 68
    15e8:	00261613          	slli	a2, a2, 0x2
    15ec:	00c98633          	add	a2, s3, a2
    15f0:	00462703          	lw	a4, 4(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:229
          num_tiles = num_msgs_in_block == 0 ? num_tiles_recv : num_msgs_in_block;
    15f4:	00090463          	beqz	s2, 15fc <__firmware_stack_size+0x11fc>
    15f8:	00090c13          	mv	s8, s2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:230
          num_words = mulsi3(num_tiles, l1_stream_info->tile_size_words);
    15fc:	00c72603          	lw	a2, 12(a4)
    1600:	000c0713          	mv	a4, s8
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    1604:	00177813          	andi	a6, a4, 1
    1608:	00080463          	beqz	a6, 1610 <__firmware_stack_size+0x1210>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:168
        r += b;
    160c:	00c686b3          	add	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    1610:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    1614:	00161613          	slli	a2, a2, 0x1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:165
  while (a)
    1618:	fe0716e3          	bnez	a4, 1604 <__firmware_stack_size+0x1204>
send_scatter_tiles(unsigned long, unsigned long, unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:90
  if (dram_output_no_push) {
    161c:	0065d603          	lhu	a2, 6(a1)
    1620:	00001737          	lui	a4, 0x1
    1624:	80070713          	addi	a4, a4, -2048 # 800 <__firmware_stack_size+0x400>
    1628:	00c77733          	and	a4, a4, a2
    162c:	0c070863          	beqz	a4, 16fc <__firmware_stack_size+0x12fc>
    1630:	02f12223          	sw	a5, 36(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:91
    volatile uint32_t tt_reg_ptr* tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    1634:	3ac000ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    1638:	36c000ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
    163c:	00850533          	add	a0, a0, s0
    1640:	00c51513          	slli	a0, a0, 0xc
send_scatter_tiles(unsigned long, unsigned long, unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:92
    uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    1644:	01052703          	lw	a4, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:94
    tiles_received_ptr[0] = new_epoch_tiles_received;
    1648:	02412783          	lw	a5, 36(sp)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
    164c:	01870c33          	add	s8, a4, s8
send_scatter_tiles(unsigned long, unsigned long, unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:94
    1650:	010c1c13          	slli	s8, s8, 0x10
    1654:	010c5c13          	srli	s8, s8, 0x10
    1658:	01852823          	sw	s8, 16(a0)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:234
        if (fork_idx == ((uint32_t)-1)) {
    165c:	fff00713          	li	a4, -1
    1660:	0ae79663          	bne	a5, a4, 170c <__firmware_stack_size+0x130c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:235
          prev_output_state->num_msgs_in_block = num_msgs_in_block | BRISC_PACKER_SENDING_IN_PROGRESS;
    1664:	ffff8737          	lui	a4, 0xffff8
    1668:	00e96933          	or	s2, s2, a4
    166c:	ff2d9023          	sh	s2, -32(s11)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:241
      all_kernels_done = false; // prevent breaking from outer loop
    1670:	00000c93          	li	s9, 0
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:971
      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    1674:	001b0b13          	addi	s6, s6, 1
    1678:	d57b62e3          	bltu	s6, s7, 13bc <__firmware_stack_size+0xfbc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:858
    for (uint32_t output = 0; output < num_output_streams; output++) {
    167c:	02012783          	lw	a5, 32(sp)
    1680:	00178793          	addi	a5, a5, 1
    1684:	02f12023          	sw	a5, 32(sp)
    1688:	919ff06f          	j	fa0 <__firmware_stack_size+0xba0>
stream_phase_blob_run_offset(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:37
  uint32_t blob_offset = NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX) - blob_base_addr;
    168c:	0304ad03          	lw	s10, 48(s1)
    1690:	419d0d33          	sub	s10, s10, s9
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:38
  while (blob_offset >= blob_size)
    1694:	005d6663          	bltu	s10, t0, 16a0 <__firmware_stack_size+0x12a0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:39
    blob_offset -= blob_size;
    1698:	405d0d33          	sub	s10, s10, t0
    169c:	ff9ff06f          	j	1694 <__firmware_stack_size+0x1294>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:40
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr + blob_offset);
    16a0:	01a80d33          	add	s10, a6, s10
    16a4:	03a4a823          	sw	s10, 48(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:41
  uint32_t misc_cfg_reg = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    16a8:	0284a703          	lw	a4, 40(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:42
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | misc_cfg_reg);
    16ac:	20076713          	ori	a4, a4, 512
    16b0:	02e4a423          	sw	a4, 40(s1)
    16b4:	ec5ff06f          	j	1578 <__firmware_stack_size+0x1178>
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:128
    uint32_t max_unroll = l1_stream_info->scatter_pipe_state[scatter_idx].max_unroll;
    16b8:	04c72803          	lw	a6, 76(a4) # ffff804c <TENSIX_MAILBOX_BASE+0x13804c>
    16bc:	00431313          	slli	t1, t1, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:127
    curr_unroll = curr_unroll + 1;
    16c0:	00188893          	addi	a7, a7, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:128
    uint32_t max_unroll = l1_stream_info->scatter_pipe_state[scatter_idx].max_unroll;
    16c4:	00680833          	add	a6, a6, t1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:129
    if (curr_unroll >= max_unroll)
    16c8:	00482803          	lw	a6, 4(a6)
    16cc:	0108e463          	bltu	a7, a6, 16d4 <__firmware_stack_size+0x12d4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:130
      curr_unroll = 0;
    16d0:	00000893          	li	a7, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:131
    l1_stream_info->scatter_pipe_state[scatter_idx].curr_unroll = curr_unroll;
    16d4:	04c72703          	lw	a4, 76(a4)
    16d8:	00670333          	add	t1, a4, t1
    16dc:	01132023          	sw	a7, 0(t1)
    16e0:	e99ff06f          	j	1578 <__firmware_stack_size+0x1178>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    16e4:	00c75c13          	srli	s8, a4, 0xc
    16e8:	00001737          	lui	a4, 0x1
    16ec:	fff70713          	addi	a4, a4, -1 # fff <__firmware_stack_size+0xbff>
    16f0:	00ec7c33          	and	s8, s8, a4
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:226
        uint32_t num_words = stream_get_data_buf_size(stream_id);
    16f4:	00080693          	mv	a3, a6
    16f8:	f25ff06f          	j	161c <__firmware_stack_size+0x121c>
stream_relay_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:207
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    16fc:	00c69693          	slli	a3, a3, 0xc
    1700:	0186ec33          	or	s8, a3, s8
    1704:	0784ac23          	sw	s8, 120(s1)
    1708:	f55ff06f          	j	165c <__firmware_stack_size+0x125c>
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:237
          set_fork_num_msgs_in_block(stream_id, num_msgs_in_block | BRISC_PACKER_SENDING_IN_PROGRESS);
    170c:	00008737          	lui	a4, 0x8
    1710:	00e96933          	or	s2, s2, a4
set_fork_num_msgs_in_block(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:78
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, val);
    1714:	0124a223          	sw	s2, 4(s1)
    1718:	f59ff06f          	j	1670 <__firmware_stack_size+0x1270>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:986
        }
      }
    }
#ifndef ERISC
    // This is at the end such that if all kernels are done we want to do 1 more clear iteration to ensure all streams are cleared
    if (all_kernels_done) {
    171c:	ba0c8663          	beqz	s9, ac8 <__firmware_stack_size+0x6c8>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
    1720:	ffb307b7          	lui	a5, 0xffb30
    1724:	f00006b7          	lui	a3, 0xf0000
    1728:	10d7a623          	sw	a3, 268(a5) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    172c:	001009b7          	lui	s3, 0x100
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
    1730:	c5018493          	addi	s1, gp, -944 # ffb00450 <active_stream_info>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1000

  RISC_POST_STATUS(0xF0000000);

#ifndef ERISC
  // reset the last phase of intermediate streams that use infinite loop
  for (uint32_t s = 0; s < num_active_streams; s++) {
    1734:	00000913          	li	s2, 0
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
    1738:	b4098993          	addi	s3, s3, -1216 # ffb40 <substitutes.cpp.870a61b3+0xee208>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    173c:	00100a13          	li	s4, 1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1002
    uint32_t flags = active_stream_info[s].flags;
    if ((flags & STREAM_INTERMEDIATE) != 0 || ((flags & STREAM_MOVES_RAW_DATA) != 0 && (flags & STREAM_DRAM_OUTPUT) == 0)) {      
    1740:	04000b13          	li	s6, 64
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1000
  for (uint32_t s = 0; s < num_active_streams; s++) {
    1744:	300aa783          	lw	a5, 768(s5)
    1748:	0af96063          	bltu	s2, a5, 17e8 <__firmware_stack_size+0x13e8>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    174c:	00100437          	lui	s0, 0x100
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:626
            test_mailbox_ptr[0] = RISC_DETECTED_STREAM_ASSERT;
    1750:	deeeb4b7          	lui	s1, 0xdeeeb
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:619
            volatile epoch_stream_info_t tt_l1_ptr * stream_info = RISC_EPOCH_INFO_PTR->active_streams[s];
    1754:	00023937          	lui	s2, 0x23
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
    1758:	b4040413          	addi	s0, s0, -1216 # ffb40 <substitutes.cpp.870a61b3+0xee208>
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:626
            test_mailbox_ptr[0] = RISC_DETECTED_STREAM_ASSERT;
    175c:	aad48493          	addi	s1, s1, -1363 # deeeaaad <TENSIX_MAILBOX_BASE+0xdf02aaad>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:619
            volatile epoch_stream_info_t tt_l1_ptr * stream_info = RISC_EPOCH_INFO_PTR->active_streams[s];
    1760:	08090913          	addi	s2, s2, 128 # 23080 <substitutes.cpp.870a61b3+0x11748>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:602
    risc_reset_check();
    1764:	1ec000ef          	jal	ra, 1950 <risc_reset_check()>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:608
    risc_stream_resart_check(stream_restart_check_cnt, num_active_streams, active_stream_info);
    1768:	04c10513          	addi	a0, sp, 76
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:607
    stream_restart_check_cnt = 0;
    176c:	04012623          	sw	zero, 76(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:608
    risc_stream_resart_check(stream_restart_check_cnt, num_active_streams, active_stream_info);
    1770:	3f8000ef          	jal	ra, 1b68 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]>
    1774:	000a8813          	mv	a6, s5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:610
    for (uint32_t s = 0; s < num_active_streams; s++) {
    1778:	00000893          	li	a7, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:605
    all_streams_done = true;
    177c:	000c8e93          	mv	t4, s9
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:612
      if ((flags & STREAM_INTERMEDIATE) == 0 && ((flags & STREAM_MOVES_RAW_DATA) == 0 || (flags & STREAM_DRAM_OUTPUT) != 0)) {
    1780:	04000313          	li	t1, 64
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    1784:	00100e13          	li	t3, 1
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:610
    for (uint32_t s = 0; s < num_active_streams; s++) {
    1788:	300aa783          	lw	a5, 768(s5)
    178c:	0af8e863          	bltu	a7, a5, 183c <__firmware_stack_size+0x143c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:600
  while (!all_streams_done) {
    1790:	fc0e8ae3          	beqz	t4, 1764 <__firmware_stack_size+0x1364>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:370
    perf::record_timestamp_64b(uint32_t(perf::BriscEventType::EPOCH));
    1794:	00600513          	li	a0, 6
    1798:	2f8000ef          	jal	ra, 1a90 <perf::record_timestamp_64b(unsigned long)>
perf::record_perf_dump_end():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:71
   if (perf_index < perf_end) {
    179c:	83a1d783          	lhu	a5, -1990(gp) # ffb0003a <perf_index>
    17a0:	09f00713          	li	a4, 159
    17a4:	02f76463          	bltu	a4, a5, 17cc <__firmware_stack_size+0x13cc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:72
      perf_buf_base[perf_index] = PERF_DUMP_END_SIGNAL;
    17a8:	000026b7          	lui	a3, 0x2
    17ac:	00279713          	slli	a4, a5, 0x2
    17b0:	34068693          	addi	a3, a3, 832 # 2340 <__trisc1_size+0x340>
    17b4:	00d70733          	add	a4, a4, a3
    17b8:	beeff6b7          	lui	a3, 0xbeeff
    17bc:	00d68693          	addi	a3, a3, 13 # beeff00d <TENSIX_MAILBOX_BASE+0xbf03f00d>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:73
      perf_index += 1;      
    17c0:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:72
      perf_buf_base[perf_index] = PERF_DUMP_END_SIGNAL;
    17c4:	00d72023          	sw	a3, 0(a4) # 8000 <__trisc_base+0x1400>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:73
      perf_index += 1;      
    17c8:	82f19d23          	sh	a5, -1990(gp) # ffb0003a <perf_index>
perf::last_trisc_perf_dump_to_dram():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:90
      int32_t dram_dump_req_local = EPOCH_INFO_PTR->perf_dram_copy_req[thread_id];
    17cc:	00023737          	lui	a4, 0x23
    17d0:	2a472783          	lw	a5, 676(a4) # 232a4 <substitutes.cpp.870a61b3+0x1196c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:91
      int32_t ack_local = *ncrisc_ack_addr;
    17d4:	2b872703          	lw	a4, 696(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:93
         ack_local = *ncrisc_ack_addr;
    17d8:	000236b7          	lui	a3, 0x23
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:92
      while (ack_local <= dram_dump_req_local - 1) {
    17dc:	0ef75863          	bge	a4, a5, 18cc <__firmware_stack_size+0x14cc>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:93
         ack_local = *ncrisc_ack_addr;
    17e0:	2b86a703          	lw	a4, 696(a3) # 232b8 <substitutes.cpp.870a61b3+0x11980>
    17e4:	ff9ff06f          	j	17dc <__firmware_stack_size+0x13dc>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1001
    uint32_t flags = active_stream_info[s].flags;
    17e8:	0064d783          	lhu	a5, 6(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1002
    if ((flags & STREAM_INTERMEDIATE) != 0 || ((flags & STREAM_MOVES_RAW_DATA) != 0 && (flags & STREAM_DRAM_OUTPUT) == 0)) {      
    17ec:	0107f693          	andi	a3, a5, 16
    17f0:	00069663          	bnez	a3, 17fc <__firmware_stack_size+0x13fc>
    17f4:	0487f793          	andi	a5, a5, 72
    17f8:	03679c63          	bne	a5, s6, 1830 <__firmware_stack_size+0x1430>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1003
      uint32_t stream_id = active_stream_info[s].stream_id;
    17fc:	0004c403          	lbu	s0, 0(s1)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    1800:	01340433          	add	s0, s0, s3
    1804:	00c41413          	slli	s0, s0, 0xc
    1808:	08c40b93          	addi	s7, s0, 140
    180c:	000ba783          	lw	a5, 0(s7)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1004
      while (!stream_phase_is_active(stream_id)) { // This is needed for cases where the while loop above finishes fast, we want to guard against streams that havent been init yet
    1810:	0047f793          	andi	a5, a5, 4
    1814:	00079663          	bnez	a5, 1820 <__firmware_stack_size+0x1420>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1005
        risc_reset_check();
    1818:	138000ef          	jal	ra, 1950 <risc_reset_check()>
    181c:	ff1ff06f          	j	180c <__firmware_stack_size+0x140c>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    1820:	02842783          	lw	a5, 40(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    1824:	dff7f793          	andi	a5, a5, -513
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    1828:	02f42423          	sw	a5, 40(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    182c:	07442e23          	sw	s4, 124(s0)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:1000
  for (uint32_t s = 0; s < num_active_streams; s++) {
    1830:	00190913          	addi	s2, s2, 1
    1834:	00c48493          	addi	s1, s1, 12
    1838:	f0dff06f          	j	1744 <__firmware_stack_size+0x1344>
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:611
      uint32_t flags = active_stream_info[s].flags;
    183c:	00685783          	lhu	a5, 6(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:612
      if ((flags & STREAM_INTERMEDIATE) == 0 && ((flags & STREAM_MOVES_RAW_DATA) == 0 || (flags & STREAM_DRAM_OUTPUT) != 0)) {
    1840:	0107f693          	andi	a3, a5, 16
    1844:	06069e63          	bnez	a3, 18c0 <__firmware_stack_size+0x14c0>
    1848:	0487f693          	andi	a3, a5, 72
    184c:	06668a63          	beq	a3, t1, 18c0 <__firmware_stack_size+0x14c0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:613
        uint32_t stream_id = active_stream_info[s].stream_id;
    1850:	00084603          	lbu	a2, 0(a6)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:614
        bool stream_done = false;
    1854:	00000693          	li	a3, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1858:	00860633          	add	a2, a2, s0
    185c:	00c61613          	slli	a2, a2, 0xc
    1860:	08c62503          	lw	a0, 140(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1864:	3a462583          	lw	a1, 932(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1868:	00157513          	andi	a0, a0, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    186c:	04050663          	beqz	a0, 18b8 <__firmware_stack_size+0x14b8>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1870:	0115d593          	srli	a1, a1, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1874:	04059263          	bnez	a1, 18b8 <__firmware_stack_size+0x14b8>
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:616
          if ((flags & STREAM_MOVES_RAW_DATA) != 0) {
    1878:	0407f793          	andi	a5, a5, 64
    187c:	00079e63          	bnez	a5, 1898 <__firmware_stack_size+0x1498>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:619
            volatile epoch_stream_info_t tt_l1_ptr * stream_info = RISC_EPOCH_INFO_PTR->active_streams[s];
    1880:	04488793          	addi	a5, a7, 68
    1884:	00279793          	slli	a5, a5, 0x2
    1888:	00f907b3          	add	a5, s2, a5
    188c:	0047a783          	lw	a5, 4(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:620
            stream_done = (stream_info->epoch_iters_remaining == 0);
    1890:	0307a783          	lw	a5, 48(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:623
        if (stream_done) {
    1894:	02079263          	bnez	a5, 18b8 <__firmware_stack_size+0x14b8>
assert_check(unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:359
  uint32_t debug_assert = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_ASSERTIONS_REG_INDEX);
    1898:	0b862783          	lw	a5, 184(a2)
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:624
          if (assert_check(stream_id, false)) {
    189c:	00078463          	beqz	a5, 18a4 <__firmware_stack_size+0x14a4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:626
            test_mailbox_ptr[0] = RISC_DETECTED_STREAM_ASSERT;
    18a0:	00902223          	sw	s1, 4(zero) # 4 <TEST_MAILBOX>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    18a4:	02862783          	lw	a5, 40(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    18a8:	000c8693          	mv	a3, s9
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    18ac:	dff7f793          	andi	a5, a5, -513
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    18b0:	02f62423          	sw	a5, 40(a2)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    18b4:	07c62e23          	sw	t3, 124(a2)
    18b8:	00def6b3          	and	a3, t4, a3
    18bc:	0ff6fe93          	zext.b	t4, a3
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:610
    for (uint32_t s = 0; s < num_active_streams; s++) {
    18c0:	00188893          	addi	a7, a7, 1
    18c4:	00c80813          	addi	a6, a6, 12
    18c8:	ec1ff06f          	j	1788 <__firmware_stack_size+0x1388>
perf::last_trisc_perf_dump_to_dram():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:106
      dram_dump_req_local += 2;
    18cc:	00278713          	addi	a4, a5, 2
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:108
      EPOCH_INFO_PTR->perf_dram_copy_req[thread_id] = dram_dump_req_local;
    18d0:	000237b7          	lui	a5, 0x23
    18d4:	2ae7a223          	sw	a4, 676(a5) # 232a4 <substitutes.cpp.870a61b3+0x1196c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:110
   perf_epoch_id++;
    18d8:	82c1d703          	lhu	a4, -2004(gp) # ffb0002c <perf_epoch_id>
risc_signal_epoch_done():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:134

void risc_signal_epoch_done() {
  RISC_EPOCH_INFO_PTR->all_streams_and_kernels_done = 1;

  // Wait for ncrisc to "accept" kernel completion
  while (RISC_EPOCH_INFO_PTR->all_streams_ready == 1)
    18dc:	00023437          	lui	s0, 0x23
perf::last_trisc_perf_dump_to_dram():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:110
    18e0:	00170713          	addi	a4, a4, 1
    18e4:	82e19623          	sh	a4, -2004(gp) # ffb0002c <perf_epoch_id>
risc_signal_epoch_done():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:131
  RISC_EPOCH_INFO_PTR->all_streams_and_kernels_done = 1;
    18e8:	00100713          	li	a4, 1
    18ec:	08e78723          	sb	a4, 142(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:134
  while (RISC_EPOCH_INFO_PTR->all_streams_ready == 1)
    18f0:	00100493          	li	s1, 1
    18f4:	08d44783          	lbu	a5, 141(s0) # 2308d <substitutes.cpp.870a61b3+0x11755>
    18f8:	00979663          	bne	a5, s1, 1904 <__firmware_stack_size+0x1504>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:136
  {
    risc_reset_check();
    18fc:	054000ef          	jal	ra, 1950 <risc_reset_check()>
    1900:	ff5ff06f          	j	18f4 <__firmware_stack_size+0x14f4>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/risc.h:22
    1904:	ffb307b7          	lui	a5, 0xffb30
    1908:	21000737          	lui	a4, 0x21000
    190c:	10e7a623          	sw	a4, 268(a5) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
    1910:	c69fe06f          	j	578 <__firmware_stack_size+0x178>
main():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:381
    test_mailbox_ptr[0] = 0x1;
    1914:	00e02223          	sw	a4, 4(zero) # 4 <TEST_MAILBOX>
    1918:	d6dfe06f          	j	684 <__firmware_stack_size+0x284>
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:196
  uint32_t num_msgs_in_block = fork_idx == ((uint32_t)-1) ? prev_output_state->num_msgs_in_block : get_fork_num_msgs_in_block(stream_id);
    191c:	fe0dd903          	lhu	s2, -32(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:973
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    1920:	00c12503          	lw	a0, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:972
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    1924:	01012603          	lw	a2, 16(sp)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:196
  uint32_t num_msgs_in_block = fork_idx == ((uint32_t)-1) ? prev_output_state->num_msgs_in_block : get_fork_num_msgs_in_block(stream_id);
    1928:	fff00793          	li	a5, -1
    192c:	ac1ff06f          	j	13ec <__firmware_stack_size+0xfec>
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:158
  uint32_t num_msgs_in_block = fork_idx == ((uint32_t)-1) ? prev_output_state->num_msgs_in_block : get_fork_num_msgs_in_block(stream_id);
    1930:	fe0ddb83          	lhu	s7, -32(s11)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:919
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    1934:	00c12483          	lw	s1, 12(sp)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:918
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    1938:	01012903          	lw	s2, 16(sp)
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:158
  uint32_t num_msgs_in_block = fork_idx == ((uint32_t)-1) ? prev_output_state->num_msgs_in_block : get_fork_num_msgs_in_block(stream_id);
    193c:	fff00b13          	li	s6, -1
    1940:	869ff06f          	j	11a8 <__firmware_stack_size+0xda8>
	...

00001950 <risc_reset_check()>:
risc_reset_check():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:55
  if (risc_reset_req[0] == 1)
    1950:	00005737          	lui	a4, 0x5
    1954:	02072603          	lw	a2, 32(a4) # 5020 <__trisc2_size+0x20>
    1958:	00100793          	li	a5, 1
    195c:	04f61263          	bne	a2, a5, 19a0 <risc_reset_check()+0x50>
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
  return ptr[0];
    1960:	ffb127b7          	lui	a5, 0xffb12
risc_reset_check():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:57
    risc_reset_req[0] = 0;
    1964:	02072023          	sw	zero, 32(a4)
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
    1968:	18078793          	addi	a5, a5, 384 # ffb12180 <TENSIX_MAILBOX_BASE+0xffc52180>
    196c:	0307a683          	lw	a3, 48(a5)
risc_reset_check():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:60
    temp |= 0x40000;
    1970:	000405b7          	lui	a1, 0x40
    1974:	00b6e6b3          	or	a3, a3, a1
WRITE_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:42
  ptr[0] = val;
    1978:	02d7a823          	sw	a3, 48(a5)
set_risc_reset_vector():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:181
  cfg_regs[NCRISC_RESET_PC_PC_ADDR32] = risc_reset_req[1];
    197c:	02472683          	lw	a3, 36(a4)
    1980:	ffef0737          	lui	a4, 0xffef0
    1984:	28d72423          	sw	a3, 648(a4) # ffef0288 <TENSIX_MAILBOX_BASE+0x30288>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/brisc.cc:182
  cfg_regs[NCRISC_RESET_PC_OVERRIDE_Reset_PC_Override_en_ADDR32] = 0x1;
    1988:	28c72623          	sw	a2, 652(a4)
READ_REG(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:47
  return ptr[0];
    198c:	0307a703          	lw	a4, 48(a5)
risc_reset_check():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:66
    temp &= 0xFFFBFFFF;
    1990:	fffc06b7          	lui	a3, 0xfffc0
    1994:	fff68693          	addi	a3, a3, -1 # fffbffff <TENSIX_MAILBOX_BASE+0xfffff>
    1998:	00d77733          	and	a4, a4, a3
WRITE_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:42
  ptr[0] = val;
    199c:	02e7a823          	sw	a4, 48(a5)
risc_reset_check():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.cc:69
}
    19a0:	00008067          	ret

000019a4 <get_operand_stream_id(int)>:
get_operand_stream_id(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:43
  if (*MCAST_PACKER_OPT_EN && operand >= OPERAND_OUTPUT_START_INDEX && operand < OPERAND_INTERMEDIATES_START_INDEX) {
    19a4:	ffb43737          	lui	a4, 0xffb43
    19a8:	3f472703          	lw	a4, 1012(a4) # ffb433f4 <TENSIX_MAILBOX_BASE+0xffc833f4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:41
inline uint32_t get_operand_stream_id(int operand) {
    19ac:	00050793          	mv	a5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:43
  if (*MCAST_PACKER_OPT_EN && operand >= OPERAND_OUTPUT_START_INDEX && operand < OPERAND_INTERMEDIATES_START_INDEX) {
    19b0:	00070e63          	beqz	a4, 19cc <get_operand_stream_id(int)+0x28>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:43 (discriminator 1)
    19b4:	ff050713          	addi	a4, a0, -16
    19b8:	00700693          	li	a3, 7
    19bc:	00e6e863          	bltu	a3, a4, 19cc <get_operand_stream_id(int)+0x28>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:44
    return MCAST_END_STREAM - (operand - OPERAND_OUTPUT_START_INDEX);
    19c0:	01300513          	li	a0, 19
    19c4:	40f50533          	sub	a0, a0, a5
    19c8:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:48
  return ((uint32_t)operand) >= INPUT_START_STREAM_1_SIZE ? INPUT_START_STREAM_2 + operand - INPUT_START_STREAM_1_SIZE : OPERAND_START_STREAM + operand;
    19cc:	00100713          	li	a4, 1
    19d0:	00478513          	addi	a0, a5, 4
    19d4:	00f77463          	bgeu	a4, a5, 19dc <get_operand_stream_id(int)+0x38>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:48 (discriminator 1)
    19d8:	00878513          	addi	a0, a5, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:49
}
    19dc:	00008067          	ret

000019e0 <stream_id_to_operand(unsigned long)>:
stream_id_to_operand(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:53
  if (*MCAST_PACKER_OPT_EN && stream_id >= MCAST_START_STREAM && stream_id <= MCAST_END_STREAM) {
    19e0:	ffb43737          	lui	a4, 0xffb43
    19e4:	3f472703          	lw	a4, 1012(a4) # ffb433f4 <TENSIX_MAILBOX_BASE+0xffc833f4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:51
inline int stream_id_to_operand(uint32_t stream_id) {
    19e8:	00050793          	mv	a5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:53
  if (*MCAST_PACKER_OPT_EN && stream_id >= MCAST_START_STREAM && stream_id <= MCAST_END_STREAM) {
    19ec:	00070c63          	beqz	a4, 1a04 <stream_id_to_operand(unsigned long)+0x24>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:53 (discriminator 1)
    19f0:	00300713          	li	a4, 3
    19f4:	00a76863          	bltu	a4, a0, 1a04 <stream_id_to_operand(unsigned long)+0x24>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:54
    return OPERAND_OUTPUT_START_INDEX + (MCAST_END_STREAM - stream_id);
    19f8:	01300513          	li	a0, 19
    19fc:	40f50533          	sub	a0, a0, a5
    1a00:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:58
  return stream_id >= INPUT_START_STREAM_2 ? (stream_id - INPUT_START_STREAM_2 + INPUT_START_STREAM_1_SIZE) : (stream_id - OPERAND_START_STREAM);
    1a04:	00900713          	li	a4, 9
    1a08:	ffc78513          	addi	a0, a5, -4
    1a0c:	00f77463          	bgeu	a4, a5, 1a14 <stream_id_to_operand(unsigned long)+0x34>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:58 (discriminator 1)
    1a10:	ff878513          	addi	a0, a5, -8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:59
}
    1a14:	00008067          	ret

00001a18 <is_input_operand_decoupled(int)>:
is_input_operand_decoupled(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:128
    if (operand >= OPERAND_INPUT_PARAMS_START_INDEX) {
    1a18:	00700793          	li	a5, 7
    1a1c:	02a7c263          	blt	a5, a0, 1a40 <is_input_operand_decoupled(int)+0x28>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:131
    uint32_t overlay_input_decouple_mask = *PERF_RISC_MAILBOX_INPUT_DECOUPLE_MASK_PTR;
    1a20:	000027b7          	lui	a5, 0x2
    1a24:	3107a703          	lw	a4, 784(a5) # 2310 <__trisc1_size+0x310>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:132
    const uint8_t operand_mask = 1 << (operand & 0xff);
    1a28:	00100793          	li	a5, 1
    1a2c:	00a79533          	sll	a0, a5, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:133
    return (overlay_input_decouple_mask & 0xff) & operand_mask;
    1a30:	0ff57513          	zext.b	a0, a0
    1a34:	00e57533          	and	a0, a0, a4
    1a38:	00a03533          	snez	a0, a0
    1a3c:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:129
        return false;
    1a40:	00000513          	li	a0, 0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:134
  }
    1a44:	00008067          	ret

00001a48 <perf::record_perf_value(unsigned long, unsigned long, unsigned long)>:
perf::record_perf_value(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:62
   if (perf_index + 2 < perf_end - 1) {
    1a48:	83a1d783          	lhu	a5, -1990(gp) # ffb0003a <perf_index>
    1a4c:	8381d703          	lhu	a4, -1992(gp) # ffb00038 <perf_end>
    1a50:	00278693          	addi	a3, a5, 2
    1a54:	fff70713          	addi	a4, a4, -1
    1a58:	02e6da63          	bge	a3, a4, 1a8c <perf::record_perf_value(unsigned long, unsigned long, unsigned long)+0x44>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:63
    perf_buf_base[perf_index] = event_id;
    1a5c:	8341a703          	lw	a4, -1996(gp) # ffb00034 <perf_buf_base>
    1a60:	00279693          	slli	a3, a5, 0x2
    1a64:	00d708b3          	add	a7, a4, a3
    1a68:	00a8a023          	sw	a0, 0(a7)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:64
    perf_buf_base[perf_index + 1] = event_value_hi_32b;
    1a6c:	00468513          	addi	a0, a3, 4
    1a70:	00a70533          	add	a0, a4, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:65
    perf_buf_base[perf_index + 2] = event_value_lo_32b;
    1a74:	00868693          	addi	a3, a3, 8
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:64
    perf_buf_base[perf_index + 1] = event_value_hi_32b;
    1a78:	00c52023          	sw	a2, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:65
    perf_buf_base[perf_index + 2] = event_value_lo_32b;
    1a7c:	00d70733          	add	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:66
    perf_index += 3;
    1a80:	00378793          	addi	a5, a5, 3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:65
    perf_buf_base[perf_index + 2] = event_value_lo_32b;
    1a84:	00b72023          	sw	a1, 0(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:66
    perf_index += 3;
    1a88:	82f19d23          	sh	a5, -1990(gp) # ffb0003a <perf_index>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:68
}
    1a8c:	00008067          	ret

00001a90 <perf::record_timestamp_64b(unsigned long)>:
perf::record_timestamp_64b(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:78
   if (perf_index + 2 < perf_end - 1) {
    1a90:	83a1d703          	lhu	a4, -1990(gp) # ffb0003a <perf_index>
    1a94:	8381d783          	lhu	a5, -1992(gp) # ffb00038 <perf_end>
    1a98:	00270713          	addi	a4, a4, 2
    1a9c:	fff78793          	addi	a5, a5, -1
    1aa0:	00f75e63          	bge	a4, a5, 1abc <perf::record_timestamp_64b(unsigned long)+0x2c>
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
    1aa4:	ffb12737          	lui	a4, 0xffb12
    1aa8:	1f072583          	lw	a1, 496(a4) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
    1aac:	82b1a823          	sw	a1, -2000(gp) # ffb00030 <local_mem_barrier>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
    1ab0:	1f872603          	lw	a2, 504(a4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
    1ab4:	82c1a823          	sw	a2, -2000(gp) # ffb00030 <local_mem_barrier>
perf::record_timestamp_64b(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:81
      record_perf_value(event_id, timestamp_low, timestamp_high);
    1ab8:	f91ff06f          	j	1a48 <perf::record_perf_value(unsigned long, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:83
}
    1abc:	00008067          	ret

00001ac0 <noc_set_cfg_reg(unsigned long, unsigned long)>:
noc_get_active_instance():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:58
  return active_noc_instance;
    1ac0:	ffb007b7          	lui	a5, 0xffb00
noc_set_cfg_reg(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:315
}

void noc_set_cfg_reg(uint32_t cfg_reg_id, uint32_t val) {
  uint32_t save_cmd_buf = noc_get_cmd_buf();
  noc_set_cmd_buf(0);
  NOC_WRITE_REG(NOC_CFG(cfg_reg_id), val);
    1ac4:	00c7a783          	lw	a5, 12(a5) # ffb0000c <TENSIX_MAILBOX_BASE+0xffc4000c>
    1ac8:	3fec8737          	lui	a4, 0x3fec8
    1acc:	00e79793          	slli	a5, a5, 0xe
    1ad0:	04070713          	addi	a4, a4, 64 # 3fec8040 <substitutes.cpp.870a61b3+0x3feb6708>
    1ad4:	00e787b3          	add	a5, a5, a4
    1ad8:	00a787b3          	add	a5, a5, a0
    1adc:	00279793          	slli	a5, a5, 0x2
    1ae0:	00b7a023          	sw	a1, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:317
  noc_set_cmd_buf(save_cmd_buf);
}
    1ae4:	00008067          	ret

00001ae8 <noc_get_cfg_reg(unsigned long)>:
noc_get_active_instance():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:58
  return active_noc_instance;
    1ae8:	ffb007b7          	lui	a5, 0xffb00
noc_get_cfg_reg(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:323


uint32_t noc_get_cfg_reg(uint32_t cfg_reg_id) {
  uint32_t save_cmd_buf = noc_get_cmd_buf();
  noc_set_cmd_buf(0);
  uint32_t result = NOC_READ_REG(NOC_CFG(cfg_reg_id));
    1aec:	00c7a783          	lw	a5, 12(a5) # ffb0000c <TENSIX_MAILBOX_BASE+0xffc4000c>
    1af0:	3fec8737          	lui	a4, 0x3fec8
    1af4:	04070713          	addi	a4, a4, 64 # 3fec8040 <substitutes.cpp.870a61b3+0x3feb6708>
    1af8:	00e79793          	slli	a5, a5, 0xe
    1afc:	00e787b3          	add	a5, a5, a4
    1b00:	00a787b3          	add	a5, a5, a0
    1b04:	00279793          	slli	a5, a5, 0x2
    1b08:	0007a503          	lw	a0, 0(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/noc/noc.c:326
  noc_set_cmd_buf(save_cmd_buf);
  return result;
}
    1b0c:	00008067          	ret

00001b10 <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]>:
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    1b10:	001007b7          	lui	a5, 0x100
    1b14:	b4078793          	addi	a5, a5, -1216 # ffb40 <substitutes.cpp.870a61b3+0xee208>
    1b18:	00f50533          	add	a0, a0, a5
    1b1c:	00c51513          	slli	a0, a0, 0xc
    1b20:	02c52603          	lw	a2, 44(a0)
bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:245
  uint32_t wait_status = NOC_STREAM_READ_REG(stream_id, STREAM_WAIT_STATUS_REG_INDEX);
    1b24:	08c52783          	lw	a5, 140(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:246
  wait_status &= (0x1 << MSG_FWD_ONGOING);
    1b28:	0047f793          	andi	a5, a5, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:248
  if (wait_status) {
    1b2c:	02078063          	beqz	a5, 1b4c <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]+0x3c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:249
    uint32_t buf_size = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    1b30:	01c52783          	lw	a5, 28(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:250
    uint32_t buf_space_available = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
    1b34:	07052703          	lw	a4, 112(a0)
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    1b38:	02c52683          	lw	a3, 44(a0)
bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:260
    if (cur_phase == prev_phase) {
    1b3c:	00d61863          	bne	a2, a3, 1b4c <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]+0x3c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:264
        return buf_size == buf_space_available; // We dont need num_tiles > 0 as there is no resend concept for fracture
    1b40:	40e78533          	sub	a0, a5, a4
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1b44:	00153513          	seqz	a0, a0
bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:271
}
    1b48:	00008067          	ret
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1b4c:	08c52703          	lw	a4, 140(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1b50:	3a452783          	lw	a5, 932(a0)
bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1b54:	00000513          	li	a0, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1b58:	00177713          	andi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1b5c:	fe0706e3          	beqz	a4, 1b48 <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]+0x38>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1b60:	0117d513          	srli	a0, a5, 0x11
    1b64:	fe1ff06f          	j	1b44 <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]+0x34>

00001b68 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]>:
stream_done_hint():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:367
  uint32_t stream_done = NOC_STREAM_READ_REG(0, STREAM_BLOB_AUTO_CFG_DONE_REG_INDEX) | NOC_STREAM_READ_REG(0, STREAM_BLOB_AUTO_CFG_DONE_REG_INDEX + 1);
    1b68:	ffb407b7          	lui	a5, 0xffb40
    1b6c:	3a87a703          	lw	a4, 936(a5) # ffb403a8 <TENSIX_MAILBOX_BASE+0xffc803a8>
    1b70:	3ac7a683          	lw	a3, 940(a5)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:501
void risc_stream_resart_check(
    1b74:	fb010113          	addi	sp, sp, -80
    1b78:	03412c23          	sw	s4, 56(sp)
    1b7c:	04112623          	sw	ra, 76(sp)
    1b80:	04812423          	sw	s0, 72(sp)
    1b84:	04912223          	sw	s1, 68(sp)
    1b88:	05212023          	sw	s2, 64(sp)
    1b8c:	03312e23          	sw	s3, 60(sp)
    1b90:	03512a23          	sw	s5, 52(sp)
    1b94:	03612823          	sw	s6, 48(sp)
    1b98:	03712623          	sw	s7, 44(sp)
    1b9c:	03812423          	sw	s8, 40(sp)
    1ba0:	03912223          	sw	s9, 36(sp)
    1ba4:	03a12023          	sw	s10, 32(sp)
    1ba8:	01b12e23          	sw	s11, 28(sp)
stream_done_hint():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:367
    1bac:	00d76733          	or	a4, a4, a3
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:501
    1bb0:	00050a13          	mv	s4, a0
stream_done_hint():
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:368
  if (stream_done) {
    1bb4:	00070a63          	beqz	a4, 1bc8 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x60>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:369
    NOC_STREAM_WRITE_REG(0, STREAM_BLOB_AUTO_CFG_DONE_REG_INDEX, 0xFFFFFFFF);
    1bb8:	fff00713          	li	a4, -1
    1bbc:	3ae7a423          	sw	a4, 936(a5)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:370
    NOC_STREAM_WRITE_REG(0, STREAM_BLOB_AUTO_CFG_DONE_REG_INDEX + 1, 0xFFFFFFFF);
    1bc0:	3ae7a623          	sw	a4, 940(a5)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:506
    stream_restart_check_cnt = 0;
    1bc4:	00052023          	sw	zero, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:508
  bool check_stream_restart = (stream_restart_check_cnt == 0);
    1bc8:	000a2983          	lw	s3, 0(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:509
  stream_restart_check_cnt = (stream_restart_check_cnt + 1) & STREAM_RESTART_CHECK_MASK;
    1bcc:	00198793          	addi	a5, s3, 1
    1bd0:	0077f793          	andi	a5, a5, 7
    1bd4:	00fa2023          	sw	a5, 0(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:511
  if (check_stream_restart) {
    1bd8:	2a099e63          	bnez	s3, 1e94 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x32c>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    1bdc:	00100937          	lui	s2, 0x100
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    1be0:	00010c37          	lui	s8, 0x10
perf::last_bw_timestamp_recorded(unsigned char, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:180
      return last_timestamp_recorded_input[operand_idx];
    1be4:	ffb00cb7          	lui	s9, 0xffb00
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:512
    active_stream_info_t * curr_active_stream_info = active_stream_info;
    1be8:	c5018493          	addi	s1, gp, -944 # ffb00450 <active_stream_info>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    1bec:	b4090913          	addi	s2, s2, -1216 # ffb40 <substitutes.cpp.870a61b3+0xee208>
    1bf0:	c5018b93          	addi	s7, gp, -944 # ffb00450 <active_stream_info>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    1bf4:	00001d37          	lui	s10, 0x1
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    1bf8:	fffc0c13          	addi	s8, s8, -1 # ffff <risc_chip_specific.cc.8dbb454f+0x25c9>
perf::last_bw_timestamp_recorded(unsigned char, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:180
    1bfc:	010c8c93          	addi	s9, s9, 16 # ffb00010 <TENSIX_MAILBOX_BASE+0xffc40010>
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:514
        i < num_active_streams;
    1c00:	300ba783          	lw	a5, 768(s7)
    1c04:	28f9f863          	bgeu	s3, a5, 1e94 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x32c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:517
      uint32_t stream_id = curr_active_stream_info->stream_id;
    1c08:	0004ca83          	lbu	s5, 0(s1)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
    1c0c:	ffb30737          	lui	a4, 0xffb30
    1c10:	b00006b7          	lui	a3, 0xb0000
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    1c14:	012a8433          	add	s0, s5, s2
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:518
      uint32_t flags = curr_active_stream_info->flags;
    1c18:	0064dd83          	lhu	s11, 6(s1)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
    1c1c:	00c41413          	slli	s0, s0, 0xc
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/brisc/./risc.h:22
    1c20:	10d72623          	sw	a3, 268(a4) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
    1c24:	08c42703          	lw	a4, 140(s0)
check_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:421
  if (stream_phase_is_active(stream_id)) {
    1c28:	00477713          	andi	a4, a4, 4
    1c2c:	04070663          	beqz	a4, 1c78 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x110>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    1c30:	02c42703          	lw	a4, 44(s0)
check_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:423
    if (cur_phase == 0x1F) {
    1c34:	01f00693          	li	a3, 31
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:422
    uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
    1c38:	00f75713          	srli	a4, a4, 0xf
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:423
    if (cur_phase == 0x1F) {
    1c3c:	02d71e63          	bne	a4, a3, 1c78 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x110>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:424
      if (NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, SOURCE_ENDPOINT)) {
    1c40:	02842703          	lw	a4, 40(s0)
    1c44:	01077713          	andi	a4, a4, 16
    1c48:	02070863          	beqz	a4, 1c78 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x110>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:425
        uint32_t buf_size = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    1c4c:	01c42603          	lw	a2, 28(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:426
        uint32_t buf_space_available = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
    1c50:	07042683          	lw	a3, 112(s0)
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    1c54:	09042703          	lw	a4, 144(s0)
check_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:429
        if (buf_space_available == buf_size && num_tiles > 0) {
    1c58:	02d61063          	bne	a2, a3, 1c78 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x110>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    1c5c:	000017b7          	lui	a5, 0x1
    1c60:	00c75713          	srli	a4, a4, 0xc
    1c64:	fff78793          	addi	a5, a5, -1 # fff <__firmware_stack_size+0xbff>
    1c68:	00f77733          	and	a4, a4, a5
check_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:429
        if (buf_space_available == buf_size && num_tiles > 0) {
    1c6c:	00070663          	beqz	a4, 1c78 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x110>
stream_relay_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:207
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    1c70:	001d0713          	addi	a4, s10, 1 # 1001 <__firmware_stack_size+0xc01>
    1c74:	06e42c23          	sw	a4, 120(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:523
      if ((flags & STREAM_OUTPUT_PARK) != 0) {
    1c78:	080df713          	andi	a4, s11, 128
    1c7c:	04070c63          	beqz	a4, 1cd4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x16c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:524
        if ((flags & STREAM_INTERMEDIATE) != 0 || (flags & STREAM_MOVES_RAW_DATA) != 0) {
    1c80:	050df713          	andi	a4, s11, 80
stream_receiver_endpoint_single_clear_op(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:311
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_CLEAR_REG_INDEX, num_tiles);
    1c84:	00100693          	li	a3, 1
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:524
    1c88:	14070063          	beqz	a4, 1dc8 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x260>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:525
          volatile uint32_t tt_reg_ptr* tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    1c8c:	000a8513          	mv	a0, s5
    1c90:	d51ff0ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    1c94:	d11ff0ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
    1c98:	01250b33          	add	s6, a0, s2
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:526
          volatile uint32_t tt_reg_ptr* tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    1c9c:	000a8513          	mv	a0, s5
    1ca0:	d41ff0ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
    1ca4:	00a12623          	sw	a0, 12(sp)
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
    1ca8:	d71ff0ef          	jal	ra, 1a18 <is_input_operand_decoupled(int)>
    1cac:	00c12703          	lw	a4, 12(sp)
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    1cb0:	00cb1b13          	slli	s6, s6, 0xc
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:152
  if (is_input_operand_decoupled(operand)) {
    1cb4:	0e050e63          	beqz	a0, 1db0 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x248>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:153
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    1cb8:	00070513          	mv	a0, a4
    1cbc:	ce9ff0ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
    1cc0:	01250533          	add	a0, a0, s2
    1cc4:	00c51513          	slli	a0, a0, 0xc
    1cc8:	01050513          	addi	a0, a0, 16
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:527
          tiles_acked_ptr[0] = tiles_received_ptr[0];
    1ccc:	010b2703          	lw	a4, 16(s6)
    1cd0:	00e52023          	sw	a4, 0(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:537
                                      ((flags & STREAM_MOVES_RAW_DATA) == 0) &&
    1cd4:	440df693          	andi	a3, s11, 1088
    1cd8:	00000713          	li	a4, 0
    1cdc:	00069e63          	bnez	a3, 1cf8 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x190>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1ce0:	08c42603          	lw	a2, 140(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1ce4:	3a442683          	lw	a3, 932(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1ce8:	00167613          	andi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1cec:	00060663          	beqz	a2, 1cf8 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x190>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1cf0:	0116d713          	srli	a4, a3, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1cf4:	00173713          	seqz	a4, a4
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:539
      if ((flags & STREAM_DRAM_INPUT) != 0 && ((flags & STREAM_DRAM_IO) != 0 || (flags & STREAM_DRAM_STREAMING) != 0)) {
    1cf8:	004df693          	andi	a3, s11, 4
    1cfc:	00068e63          	beqz	a3, 1d18 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x1b0>
    1d00:	022df693          	andi	a3, s11, 34
    1d04:	00068a63          	beqz	a3, 1d18 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x1b0>
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    1d08:	00442683          	lw	a3, 4(s0)
    1d0c:	0186f6b3          	and	a3, a3, s8
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:540
        stream_curr_iter_done &= stream_src_endpoint_get_phase_tiles_count(stream_id) == 0;
    1d10:	0016b693          	seqz	a3, a3
    1d14:	00d77733          	and	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:543
      if (stream_curr_iter_done) {
    1d18:	12070a63          	beqz	a4, 1e4c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x2e4>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:535
      uint32_t epoch_iters_remaining = curr_active_stream_info->epoch_iters_remaining;
    1d1c:	0084a703          	lw	a4, 8(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:544
        if (epoch_iters_remaining == 0) {
    1d20:	08070263          	beqz	a4, 1da4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:548
          volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    1d24:	04498693          	addi	a3, s3, 68
    1d28:	00269613          	slli	a2, a3, 0x2
    1d2c:	000236b7          	lui	a3, 0x23
    1d30:	08068693          	addi	a3, a3, 128 # 23080 <substitutes.cpp.870a61b3+0x11748>
    1d34:	00c686b3          	add	a3, a3, a2
    1d38:	0046a683          	lw	a3, 4(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:549
          epoch_iters_remaining--;
    1d3c:	fff70713          	addi	a4, a4, -1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:550
          curr_active_stream_info->epoch_iters_remaining = epoch_iters_remaining;
    1d40:	00e4a423          	sw	a4, 8(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:551
          if (epoch_iters_remaining > 0) {
    1d44:	0a070463          	beqz	a4, 1dec <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x284>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    1d48:	02842703          	lw	a4, 40(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:560
                ((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) &&
    1d4c:	00400613          	li	a2, 4
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    1d50:	dff77713          	andi	a4, a4, -513
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    1d54:	02e42423          	sw	a4, 40(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    1d58:	00100713          	li	a4, 1
    1d5c:	06e42e23          	sw	a4, 124(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:554
            uint32_t blob_start_addr = l1_stream_info->blob_start_addr;
    1d60:	0246a683          	lw	a3, 36(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:555
            uint32_t start_phase_num_cfg_regs = curr_active_stream_info->start_phase_num_cfg_regs;
    1d64:	0024c703          	lbu	a4, 2(s1)
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    1d68:	02042223          	sw	zero, 36(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    1d6c:	01871713          	slli	a4, a4, 0x18
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:28
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr);
    1d70:	02d42823          	sw	a3, 48(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    1d74:	08e42823          	sw	a4, 144(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    1d78:	00003737          	lui	a4, 0x3
    1d7c:	20070713          	addi	a4, a4, 512 # 3200 <__trisc1_size+0x1200>
    1d80:	02e42423          	sw	a4, 40(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:560
                ((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) &&
    1d84:	026df693          	andi	a3, s11, 38
    1d88:	00000713          	li	a4, 0
    1d8c:	00c69663          	bne	a3, a2, 1d98 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x230>
    1d90:	050df793          	andi	a5, s11, 80
    1d94:	00f03733          	snez	a4, a5
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:562
            curr_active_stream_info->dram_prefetch_stream_need_restart = need_restart;
    1d98:	00e481a3          	sb	a4, 3(s1)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:563
            stream_restart_check_cnt = !need_restart;
    1d9c:	00174793          	xori	a5, a4, 1
    1da0:	00fa2023          	sw	a5, 0(s4)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:513
    for (uint32_t i = 0;
    1da4:	00198993          	addi	s3, s3, 1
    1da8:	00c48493          	addi	s1, s1, 12
    1dac:	e55ff06f          	j	1c00 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x98>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:155
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    1db0:	00070513          	mv	a0, a4
    1db4:	bf1ff0ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
    1db8:	01250533          	add	a0, a0, s2
    1dbc:	00c51513          	slli	a0, a0, 0xc
    1dc0:	00c50513          	addi	a0, a0, 12
    1dc4:	f09ff06f          	j	1ccc <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x164>
stream_clear_all_tiles(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:516
  uint32_t msg_info_wr_ptr;
  uint32_t msg_info_rd_ptr;
  uint32_t num_msgs_recv;
  uint32_t num_msgs_recv_in_bufs_and_mem;
  do {
    msg_info_rd_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX);
    1dc8:	02042583          	lw	a1, 32(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:517
    num_msgs_recv = NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
    1dcc:	04842603          	lw	a2, 72(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:518
    msg_info_wr_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX);
    1dd0:	06842703          	lw	a4, 104(s0)
    1dd4:	00e60733          	add	a4, a2, a4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:520
    num_msgs_recv_in_bufs_and_mem = msg_info_wr_ptr - msg_info_rd_ptr + num_msgs_recv;
    if (num_msgs_recv > 0) {
    1dd8:	00060663          	beqz	a2, 1de4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x27c>
stream_receiver_endpoint_single_clear_op(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:311
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_CLEAR_REG_INDEX, num_tiles);
    1ddc:	04d42a23          	sw	a3, 84(s0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:312
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_DATA_CLEAR_REG_INDEX, num_tiles);
    1de0:	04d42c23          	sw	a3, 88(s0)
stream_clear_all_tiles(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:523
      stream_receiver_endpoint_single_clear_op(stream_id, 1);
    }
  } while (num_msgs_recv_in_bufs_and_mem > 0);
    1de4:	feb712e3          	bne	a4, a1, 1dc8 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x260>
    1de8:	eedff06f          	j	1cd4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x16c>
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:566
            l1_stream_info->epoch_iters_remaining = 0;
    1dec:	0206a823          	sw	zero, 48(a3)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:568
            uint8_t operand_idx = uint8_t(stream_id_to_operand(stream_id));
    1df0:	000a8513          	mv	a0, s5
    1df4:	bedff0ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
perf::last_bw_timestamp_recorded(unsigned char, bool):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:177
    if (operand_idx >= PERF_MAX_NUM_INPUTS) {
    1df8:	00700793          	li	a5, 7
    1dfc:	0ff57713          	zext.b	a4, a0
    1e00:	fae7e2e3          	bltu	a5, a4, 1da4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
    1e04:	0ff57413          	zext.b	s0, a0
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:180
      return last_timestamp_recorded_input[operand_idx];
    1e08:	008c8ab3          	add	s5, s9, s0
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:569
            if (!perf::last_bw_timestamp_recorded(operand_idx, true)) {
    1e0c:	000ac783          	lbu	a5, 0(s5)
    1e10:	f8079ae3          	bnez	a5, 1da4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:570
              if (is_input_operand_decoupled(operand_idx)) {
    1e14:	00040513          	mv	a0, s0
    1e18:	c01ff0ef          	jal	ra, 1a18 <is_input_operand_decoupled(int)>
    1e1c:	f80504e3          	beqz	a0, 1da4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
perf::record_input_end_bw_timestamp(unsigned char):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:204
    uint32_t event_id = get_event_id(BriscEventType::INPUT_TILE_POP, perf_epoch_id, operand_idx);
    1e20:	82c1d503          	lhu	a0, -2004(gp) # ffb0002c <perf_epoch_id>
perf::get_event_id(perf::BriscEventType, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:56
   event_id |= ((operand_idx & 0xf) << 20);
    1e24:	01441413          	slli	s0, s0, 0x14
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:55
   event_id |= ((epoch_id & 0xffff) << 4);
    1e28:	00451793          	slli	a5, a0, 0x4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:56
   event_id |= ((operand_idx & 0xf) << 20);
    1e2c:	00f00537          	lui	a0, 0xf00
    1e30:	00a47533          	and	a0, s0, a0
    1e34:	00a7e533          	or	a0, a5, a0
perf::record_input_end_bw_timestamp(unsigned char):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:205
    record_timestamp_64b(event_id);
    1e38:	00356513          	ori	a0, a0, 3
    1e3c:	c55ff0ef          	jal	ra, 1a90 <perf::record_timestamp_64b(unsigned long)>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/brisc_perf.h:206
    last_timestamp_recorded_input[operand_idx] = true;
    1e40:	00100793          	li	a5, 1
    1e44:	00fa8023          	sb	a5, 0(s5)
    1e48:	f5dff06f          	j	1da4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:578
      else if (curr_active_stream_info->dram_prefetch_stream_need_restart) {
    1e4c:	0034c783          	lbu	a5, 3(s1)
    1e50:	f4078ae3          	beqz	a5, 1da4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    1e54:	08c42783          	lw	a5, 140(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:580
        if (stream_restarted) {                     
    1e58:	0047f793          	andi	a5, a5, 4
    1e5c:	f40784e3          	beqz	a5, 1da4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:582
          volatile uint32_t tt_reg_ptr* tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    1e60:	000a8513          	mv	a0, s5
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    1e64:	00442403          	lw	s0, 4(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:582
    1e68:	b79ff0ef          	jal	ra, 19e0 <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    1e6c:	b39ff0ef          	jal	ra, 19a4 <get_operand_stream_id(int)>
    1e70:	01250533          	add	a0, a0, s2
    1e74:	00c51513          	slli	a0, a0, 0xc
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:583
          uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    1e78:	01052783          	lw	a5, 16(a0) # f00010 <substitutes.cpp.870a61b3+0xeee6d8>
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/risc_chip_specific.h:47
    1e7c:	008787b3          	add	a5, a5, s0
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:585
          tiles_received_ptr[0] = new_epoch_tiles_received;
    1e80:	01079793          	slli	a5, a5, 0x10
    1e84:	0107d793          	srli	a5, a5, 0x10
    1e88:	00f52823          	sw	a5, 16(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:586
          curr_active_stream_info->dram_prefetch_stream_need_restart = 0;
    1e8c:	000481a3          	sb	zero, 3(s1)
    1e90:	f15ff06f          	j	1da4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/common/unpack_pack_stream_intf.cc:591
}
    1e94:	04c12083          	lw	ra, 76(sp)
    1e98:	04812403          	lw	s0, 72(sp)
    1e9c:	04412483          	lw	s1, 68(sp)
    1ea0:	04012903          	lw	s2, 64(sp)
    1ea4:	03c12983          	lw	s3, 60(sp)
    1ea8:	03812a03          	lw	s4, 56(sp)
    1eac:	03412a83          	lw	s5, 52(sp)
    1eb0:	03012b03          	lw	s6, 48(sp)
    1eb4:	02c12b83          	lw	s7, 44(sp)
    1eb8:	02812c03          	lw	s8, 40(sp)
    1ebc:	02412c83          	lw	s9, 36(sp)
    1ec0:	02012d03          	lw	s10, 32(sp)
    1ec4:	01c12d83          	lw	s11, 28(sp)
    1ec8:	05010113          	addi	sp, sp, 80
    1ecc:	00008067          	ret

00001ed0 <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]>:
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    1ed0:	001007b7          	lui	a5, 0x100
    1ed4:	b4078793          	addi	a5, a5, -1216 # ffb40 <substitutes.cpp.870a61b3+0xee208>
    1ed8:	00f50533          	add	a0, a0, a5
    1edc:	00c51513          	slli	a0, a0, 0xc
    1ee0:	02c52583          	lw	a1, 44(a0)
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:245
  uint32_t wait_status = NOC_STREAM_READ_REG(stream_id, STREAM_WAIT_STATUS_REG_INDEX);
    1ee4:	08c52783          	lw	a5, 140(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:246
  wait_status &= (0x1 << MSG_FWD_ONGOING);
    1ee8:	0047f793          	andi	a5, a5, 4
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:248
  if (wait_status) {
    1eec:	02078a63          	beqz	a5, 1f20 <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]+0x50>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    1ef0:	08050793          	addi	a5, a0, 128
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:249
    uint32_t buf_size = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    1ef4:	01c52683          	lw	a3, 28(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:250
    uint32_t buf_space_available = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
    1ef8:	07052703          	lw	a4, 112(a0)
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    1efc:	0107a783          	lw	a5, 16(a5)
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    1f00:	02c52603          	lw	a2, 44(a0)
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:260
    if (cur_phase == prev_phase) {
    1f04:	00c59e63          	bne	a1, a2, 1f20 <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]+0x50>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:266
        return buf_size == buf_space_available && num_tiles > 0; // For this case we might be resending next phase so we need the num_tiles > 0 check
    1f08:	00000513          	li	a0, 0
    1f0c:	02e69863          	bne	a3, a4, 1f3c <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]+0x6c>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    1f10:	00879513          	slli	a0, a5, 0x8
    1f14:	01455513          	srli	a0, a0, 0x14
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:266
        return buf_size == buf_space_available && num_tiles > 0; // For this case we might be resending next phase so we need the num_tiles > 0 check
    1f18:	00a03533          	snez	a0, a0
    1f1c:	00008067          	ret
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1f20:	08c52703          	lw	a4, 140(a0)
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1f24:	3a452783          	lw	a5, 932(a0)
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:266
        return buf_size == buf_space_available && num_tiles > 0; // For this case we might be resending next phase so we need the num_tiles > 0 check
    1f28:	00000513          	li	a0, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    1f2c:	00177713          	andi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1f30:	00070663          	beqz	a4, 1f3c <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]+0x6c>
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    1f34:	0117d513          	srli	a0, a5, 0x11
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    1f38:	00153513          	seqz	a0, a0
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend//src/firmware/riscv/wormhole/stream_interface.h:271
}
    1f3c:	00008067          	ret

00001f40 <exit>:
exit():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:13 (discriminator 1)
    return 0;
}

extern "C" void exit(int ec)
{
    while (1) { asm volatile ("" ::: "memory"); }
    1f40:	0000006f          	j	1f40 <exit>
    1f44:	00000013          	nop
    1f48:	00000013          	nop
    1f4c:	00000013          	nop

00001f50 <wzerorange>:
wzerorange():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:20 (discriminator 2)

extern "C" void wzerorange(uint32_t *start, uint32_t *end) __attribute__((aligned(16)));

extern "C" void wzerorange(uint32_t *start, uint32_t *end)
{
    for (; start != end; start++)
    1f50:	00b50863          	beq	a0, a1, 1f60 <wzerorange+0x10>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:22 (discriminator 1)
    {
        *start = 0;
    1f54:	00052023          	sw	zero, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:20 (discriminator 1)
    for (; start != end; start++)
    1f58:	00450513          	addi	a0, a0, 4
    1f5c:	ff5ff06f          	j	1f50 <wzerorange>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/toolchain/substitutes.cpp:24
    }
}
    1f60:	00008067          	ret
	...
