
/proj_sw/user_dev/jnie/budabackend/build/src/firmware/riscv/targets/erisc_app/out/erisc_app.elf:     file format elf32-littleriscv
/proj_sw/user_dev/jnie/budabackend/build/src/firmware/riscv/targets/erisc_app/out/erisc_app.elf
architecture: riscv:rv32, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00009040

Program Header:
    LOAD off    0x000000c0 vaddr 0x00009040 paddr 0x00009040 align 2**4
         filesz 0x000060c8 memsz 0x000060c8 flags r-x
    LOAD off    0x00000000 vaddr 0x0000f400 paddr 0x0000f400 align 2**4
         filesz 0x00000000 memsz 0x00001ac8 flags rw-
    LOAD off    0x00006190 vaddr 0xffc00000 paddr 0x00018000 align 2**4
         filesz 0x00001658 memsz 0x00001658 flags r-x
    LOAD off    0x00000000 vaddr 0xffb00000 paddr 0xffb00000 align 2**4
         filesz 0x00000000 memsz 0x00000404 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 erisc_l1_code 0000087c  00009040  00009040  000000c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 code_l1       0000584c  000098bc  000098bc  0000093c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00001658  ffc00000  00018000  00006190  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .sbss         00000038  0000f400  0000f400  000061a0  2**3
                  ALLOC
  4 .bss          00000080  0000f440  0000f440  000061a0  2**5
                  ALLOC
  5 .stack        00000404  ffb00000  ffb00000  000077f0  2**0
                  ALLOC
  6 data_noinit   00001a08  0000f4c0  0000f4c0  000061a0  2**5
                  ALLOC
  7 .comment      00000012  00000000  00000000  000077e8  2**0
                  CONTENTS, READONLY
  8 .riscv.attributes 00000026  00000000  00000000  000077fa  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000098  00000000  00000000  00007820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_info   000232c1  00000000  00000000  000078b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 000020d4  00000000  00000000  0002ab79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line   0000cee3  00000000  00000000  0002cc4d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000a971  00000000  00000000  00039b30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001171c  00000000  00000000  000444a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000043a8  00000000  00000000  00055bbd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00009040 l    d  erisc_l1_code	00000000 erisc_l1_code
000098bc l    d  code_l1	00000000 code_l1
ffc00000 l    d  .text	00000000 .text
0000f400 l    d  .sbss	00000000 .sbss
0000f440 l    d  .bss	00000000 .bss
ffb00000 l    d  .stack	00000000 .stack
0000f4c0 l    d  data_noinit	00000000 data_noinit
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 
ffc00000 l     F .text	00000024 ncrisc_noc_reads_flushed(unsigned long, unsigned long)
ffc00000 l     F .text	00000024 ncrisc_noc_nonposted_writes_flushed(unsigned long, unsigned long)
ffc00024 l     F .text	00000024 ncrisc_noc_fast_read_ok(unsigned long, unsigned long)
ffc00024 l     F .text	00000024 ncrisc_noc_fast_write_ok(unsigned long, unsigned long)
000098bc l     F code_l1	00000074 init_erisc_streams(void*, unsigned long)
00009930 l     F code_l1	0000005c risc_context_switch()
0000f434 l     O .sbss	00000004 rtos_context_switch_ptr
ffc00048 l     F .text	0000003c get_operand_stream_id(int)
ffc00084 l     F .text	00000038 stream_id_to_operand(unsigned long)
ffc000bc l     F .text	00000048 stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)
ffc00104 l     F .text	000000c4 read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)
ffc001c8 l     F .text	00000128 push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)
0000998c l     F code_l1	000001d0 dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)
0000f404 l     O .sbss	00000008 noc_xy_local_addr
ffc002f0 l     F .text	00000034 stream_dram_write_ok(unsigned long)
ffc002f0 l     F .text	00000034 stream_dram_writes_sent(unsigned long)
ffc00324 l     F .text	00000058 bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]
ffc0037c l     F .text	00000070 bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]
ffc003ec l     F .text	00000058 eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
ffc00444 l     F .text	00000068 clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]
ffc004ac l     F .text	000002fc poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]
00009b5c l     F code_l1	000002f4 risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]
00009e50 l     F code_l1	00000084 ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
00009ed4 l     F code_l1	0000001c ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
00009ef0 l     F code_l1	00000084 ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]
00009f74 l     F code_l1	000000c0 replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0000a034 l     F code_l1	000011a8 risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]
0000f42a l     O .sbss	00000001 loading_noc
0000f428 l     O .sbss	00000002 my_y
0000f42c l     O .sbss	00000002 my_x
0000b1dc l     F code_l1	00000408 risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]
0000b5e4 l     F code_l1	0000030c run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]
ffc007a8 l     F .text	000000ec ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
ffc00894 l     F .text	00000064 risc_epoch_load(unsigned long long)
ffc008f8 l     F .text	0000005c risc_extra_overlay_blob_load(unsigned long long, unsigned long)
ffc00954 l     F .text	00000080 ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]
ffc009d4 l     F .text	00000360 dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)
ffc00d34 l     F .text	00000350 dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)
ffc01084 l     F .text	0000017c update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]
0000b8f0 l     F code_l1	000009e4 run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]
0000f420 l     O .sbss	00000008 my_q_table_offset
0000f417 l     O .sbss	00000001 noc_size_y
0000f416 l     O .sbss	00000001 noc_size_x
ffc01200 l     F .text	000001e8 risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]
ffc013e8 l     F .text	00000194 dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0000c2d4 l     F code_l1	000002b0 process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]
0000c584 l     F code_l1	00002b84 run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]
0000f400 l     O .sbss	00000004 local_mem_barrier
0000f430 l     O .sbss	00000004 epoch_empty_check_cnt
0000f40c l     O .sbss	00000001 noc_trans_table_en
0000f414 l     O .sbss	00000002 my_logical_x
0000f410 l     O .sbss	00000002 my_logical_y
0000f41c l     O .sbss	00000004 my_q_rd_ptr
0000f418 l     O .sbss	00000004 my_q_wr_ptr
0000f440 l     O .bss	00000080 noc_read_scratch_buf
0000f4c0 l     O data_noinit	00000180 active_stream_info
0000f640 l     O data_noinit	00000004 num_active_streams
0000f644 l     O data_noinit	000005a0 dram_q_state
0000fbe4 l     O data_noinit	00000004 num_active_dram_queues
0000fbe8 l     O data_noinit	000002a0 dram_output_stream_state
0000fe88 l     O data_noinit	0000024c dram_input_stream_state
000100d4 l     O data_noinit	00000004 num_dram_input_streams
000100d8 l     O data_noinit	00000004 num_dram_output_streams
000100e0 l     O data_noinit	00000010 epoch_id_to_send
000100f0 l     O data_noinit	00000010 other_chip_epoch_id
00010100 l     O data_noinit	00000080 sender_tiles_received
00010180 l     O data_noinit	00000080 sender_tiles_acked
00010200 l     O data_noinit	00000080 receiver_tiles_received
00010280 l     O data_noinit	00000080 receiver_tiles_acked
00010300 l     O data_noinit	00000004 num_dram_prefetch_streams
00010320 l     O data_noinit	00000060 dram_prefetch_epoch_stream_info
00010380 l     O data_noinit	00000060 dram_prefetch_active_stream_info
000103e0 l     O data_noinit	00000600 input_stream_state
000109e0 l     O data_noinit	000004e0 output_stream_state
00010ec0 l     O data_noinit	00000004 num_input_streams
00010ec4 l     O data_noinit	00000004 num_output_streams
00000000 l    df *ABS*	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
0000ba73 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
0000f47f l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00011c86 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00011ef0 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00017254 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
0001a5d2 l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
0001c2ac l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
0001efdc l       .debug_info	00000000 
00000000 l    df *ABS*	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00022d84 l       .debug_info	00000000 
00002000 g       *ABS*	00000000 __trisc1_size
0001c2ac  w      .debug_info	00000000 .hidden risc_epoch.cc.55f664fb
0000f438 g       .bss	00000000 __l1_bss_end
ffc01658 g       .text	00000000 _etext
00009040 g     F erisc_l1_code	0000087c ApplicationHandler
ffe40000 g       *ABS*	00000000 TENSIX_INSTRN_BUF_BASE
00000000 g       *ABS*	00000000 TENSIX_L1_BASE
ffb00400 g       .stack	00000000 __freertos_irq_stack_top
0001a5d2  w      .debug_info	00000000 .hidden risc_common.cc.86fbc55b
00011c86  w      .debug_info	00000000 .hidden eth_ss.cpp.50e7627c
00022d84  w      .debug_info	00000000 .hidden noc_nonblocking_api.cc.88b5909b
ffb00400 g       .stack	00000000 __stack_top
ffec0000 g       *ABS*	00000000 TENSIX_MAILBOX_BASE
0000f440 g       .bss	00000000 __ldm_bss_start
00009400 g       erisc_l1_code	00000000 __firmware_global_pointer
00002000 g       erisc_l1_code	00000000 __firmware_start
00000400 g       *ABS*	00000000 __firmware_stack_size
ffb10000 g       *ABS*	00000000 TENSIX_NIU_REG_BASE
ffc0157c g     F .text	000000dc memset
00006c00 g       *ABS*	00000000 __trisc_base
0000ba73  w      .debug_info	00000000 .hidden erisc.cc.d3d9c141
ffc01668 g       .sbss	00000000 __l1_bss_start
ffc00000 g       *ABS*	00000000 TENSIX_NOCRISC_MEM_BASE
ffe00000 g       *ABS*	00000000 TENSIX_REGFILE_BASE
ffb00000 g       .stack	00000000 __stack_bottom
0001efdc  w      .debug_info	00000000 .hidden risc_chip_specific.cc.5b7d4a1c
00005000 g       *ABS*	00000000 __trisc2_size
00011ef0  w      .debug_info	00000000 .hidden dram_stream_intf.cc.867c4858
00004000 g       *ABS*	00000000 __trisc0_size
ffc01668 g       .sbss	00000000 _edata
0000f4c0 g       .bss	00000000 _end
0000f4c0 g       .bss	00000000 __ldm_bss_end
ffb00000 g       *ABS*	00000000 TENSIX_LOCAL_DATA_MEM_BASE
0000f47f  w      .debug_info	00000000 .hidden eth_init.cpp.d69cde7c
ffe80000 g       *ABS*	00000000 TENSIX_PC_BUF_BUF_BASE
00009020 g       erisc_l1_code	00000000 __erisc_jump_table
00017254  w      .debug_info	00000000 .hidden unpack_pack_stream_intf.cc.c35841a9



Disassembly of section erisc_l1_code:

00009040 <ApplicationHandler>:
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:220
  }
}

void __attribute__((section("erisc_l1_code"))) ApplicationHandler(void)
{
  rtos_context_switch_ptr = (void (*)())RtosTable[0];
    9040:	000097b7          	lui	a5, 0x9
    9044:	0207a703          	lw	a4, 32(a5) # 9020 <__erisc_jump_table>
    9048:	0000f7b7          	lui	a5, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:219
{
    904c:	f6010113          	addi	sp, sp, -160
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:220
  rtos_context_switch_ptr = (void (*)())RtosTable[0];
    9050:	42e7aa23          	sw	a4, 1076(a5) # f434 <rtos_context_switch_ptr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:229
  uint64_t dram_next_epoch_ptr;
  uint16_t epoch_command_count = 0;

  epoch_empty_check_cnt = 0;

  epoch_id_to_send[0] = 0;
    9054:	000107b7          	lui	a5, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:219
{
    9058:	08812c23          	sw	s0, 152(sp)
    905c:	08912a23          	sw	s1, 148(sp)
    9060:	09512223          	sw	s5, 132(sp)
    9064:	09612023          	sw	s6, 128(sp)
    9068:	07712e23          	sw	s7, 124(sp)
    906c:	08112e23          	sw	ra, 156(sp)
    9070:	09212823          	sw	s2, 144(sp)
    9074:	09312623          	sw	s3, 140(sp)
    9078:	09412423          	sw	s4, 136(sp)
    907c:	07812c23          	sw	s8, 120(sp)
    9080:	07912a23          	sw	s9, 116(sp)
    9084:	07a12823          	sw	s10, 112(sp)
    9088:	07b12623          	sw	s11, 108(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:229
  epoch_id_to_send[0] = 0;
    908c:	4c078793          	addi	a5, a5, 1216 # 104c0 <input_stream_state+0xe0>
    9090:	c207a023          	sw	zero, -992(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:227
  epoch_empty_check_cnt = 0;
    9094:	0000fab7          	lui	s5, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:230
  other_chip_epoch_id[0] = 0;
    9098:	c207a823          	sw	zero, -976(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:227
  epoch_empty_check_cnt = 0;
    909c:	420aa823          	sw	zero, 1072(s5) # f430 <epoch_empty_check_cnt>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45


inline uint32_t NOC_CMD_BUF_READ_REG(uint32_t noc, uint32_t buf, uint32_t addr) {
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
  volatile uint32_t tt_reg_ptr * ptr = (volatile uint32_t tt_reg_ptr *)offset;
  return *ptr;
    90a0:	ffb206b7          	lui	a3, 0xffb20
    90a4:	02c6a703          	lw	a4, 44(a3) # ffb2002c <TENSIX_MAILBOX_BASE+0xffc6002c>
ncrisc_noc_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:300
  for (int noc = 0; noc < NUM_NOCS; noc++) {
    uint32_t noc_id_reg = NOC_CMD_BUF_READ_REG(noc, 0, NOC_NODE_ID);
    uint32_t my_x = noc_id_reg & NOC_NODE_ID_MASK;
    uint32_t my_y = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    uint64_t xy_local_addr = NOC_XY_ADDR(my_x, my_y, 0);
    noc_xy_local_addr[noc] = (uint32_t)(xy_local_addr >> 32);
    90a8:	0000f637          	lui	a2, 0xf
    90ac:	40460613          	addi	a2, a2, 1028 # f404 <noc_xy_local_addr>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    90b0:	ffb30537          	lui	a0, 0xffb30
ncrisc_noc_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:298
    uint32_t my_y = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    90b4:	00675793          	srli	a5, a4, 0x6
    90b8:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:297
    uint32_t my_x = noc_id_reg & NOC_NODE_ID_MASK;
    90bc:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:299
    uint64_t xy_local_addr = NOC_XY_ADDR(my_x, my_y, 0);
    90c0:	00471713          	slli	a4, a4, 0x4
    90c4:	00a79793          	slli	a5, a5, 0xa
    90c8:	00e7e7b3          	or	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:300
    noc_xy_local_addr[noc] = (uint32_t)(xy_local_addr >> 32);
    90cc:	00f62023          	sw	a5, 0(a2)
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    90d0:	00f6a223          	sw	a5, 4(a3)
    90d4:	40068713          	addi	a4, a3, 1024
    90d8:	00f72223          	sw	a5, 4(a4)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    90dc:	02c52703          	lw	a4, 44(a0) # ffb3002c <TENSIX_MAILBOX_BASE+0xffc7002c>
risc_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:74
}

void risc_init() {
  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    uint32_t noc_id_reg = NOC_CMD_BUF_READ_REG(n, 0, NOC_NODE_ID);
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
    90e0:	0000f437          	lui	s0, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:75
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    90e4:	0000f4b7          	lui	s1, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:77
    if (n == 0) {
      noc_size_x = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS)) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
    90e8:	0000fb37          	lui	s6, 0xf
ncrisc_noc_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:298
    uint32_t my_y = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    90ec:	00675793          	srli	a5, a4, 0x6
    90f0:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:297
    uint32_t my_x = noc_id_reg & NOC_NODE_ID_MASK;
    90f4:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:299
    uint64_t xy_local_addr = NOC_XY_ADDR(my_x, my_y, 0);
    90f8:	00471713          	slli	a4, a4, 0x4
    90fc:	00a79793          	slli	a5, a5, 0xa
    9100:	00e7e7b3          	or	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:300
    noc_xy_local_addr[noc] = (uint32_t)(xy_local_addr >> 32);
    9104:	00f62223          	sw	a5, 4(a2)
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    9108:	00f52223          	sw	a5, 4(a0)
    910c:	40050713          	addi	a4, a0, 1024
    9110:	00f72223          	sw	a5, 4(a4)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    9114:	02c6a603          	lw	a2, 44(a3)
risc_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:78
      noc_size_y = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS+(NOC_ADDR_NODE_ID_BITS+1))) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
    9118:	0000fbb7          	lui	s7, 0xf
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:79
  return *ptr;
    911c:	10068693          	addi	a3, a3, 256
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:66
  uint32_t y = NOC_UNICAST_ADDR_Y(dram_ptr_addr);
  return x == 0 && y == 3;
}

inline void set_noc_trans_table(uint32_t noc, uint8_t& noc_trans_table_en, uint8_t& my_logical_x, uint8_t& my_logical_y) {
  noc_trans_table_en = (NOC_CFG_READ_REG(noc, NIU_CFG_0) >> NIU_CFG_0_NOC_ID_TRANSLATE_EN) & 0x1;
    9120:	0000f8b7          	lui	a7, 0xf
risc_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:75
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    9124:	00665713          	srli	a4, a2, 0x6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:74
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
    9128:	03f67813          	andi	a6, a2, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:77
      noc_size_x = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS)) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
    912c:	00c65793          	srli	a5, a2, 0xc
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:78
      noc_size_y = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS+(NOC_ADDR_NODE_ID_BITS+1))) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
    9130:	01365613          	srli	a2, a2, 0x13
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:75
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    9134:	03f77593          	andi	a1, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:77
      noc_size_x = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS)) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
    9138:	07f7f793          	andi	a5, a5, 127
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:78
      noc_size_y = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS+(NOC_ADDR_NODE_ID_BITS+1))) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
    913c:	07f67613          	andi	a2, a2, 127
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:77
      noc_size_x = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS)) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
    9140:	40fb0b23          	sb	a5, 1046(s6) # f416 <noc_size_x>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:78
      noc_size_y = (noc_id_reg >> (NOC_ADDR_NODE_ID_BITS+NOC_ADDR_NODE_ID_BITS+(NOC_ADDR_NODE_ID_BITS+1))) & ((((uint64_t)0x1) << (NOC_ADDR_NODE_ID_BITS+1)) - 1);
    9144:	40cb8ba3          	sb	a2, 1047(s7) # f417 <noc_size_y>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:74
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
    9148:	43040623          	sb	a6, 1068(s0) # f42c <my_x>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:75
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    914c:	42b48423          	sb	a1, 1064(s1) # f428 <my_y>
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:79
    9150:	0006a703          	lw	a4, 0(a3)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:69

  uint32_t noc_id_logical_reg = NOC_CFG_READ_REG(noc, NOC_ID_LOGICAL);
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
    9154:	0000f637          	lui	a2, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:66
  noc_trans_table_en = (NOC_CFG_READ_REG(noc, NIU_CFG_0) >> NIU_CFG_0_NOC_ID_TRANSLATE_EN) & 0x1;
    9158:	00e75713          	srli	a4, a4, 0xe
    915c:	00177713          	andi	a4, a4, 1
    9160:	40e88623          	sb	a4, 1036(a7) # f40c <noc_trans_table_en>
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:79
    9164:	0386a703          	lw	a4, 56(a3)
risc_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:74
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
    9168:	42c40693          	addi	a3, s0, 1068
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
    916c:	03f77793          	andi	a5, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    9170:	00675713          	srli	a4, a4, 0x6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
    9174:	40f60a23          	sb	a5, 1044(a2) # f414 <my_logical_x>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    9178:	03f77713          	andi	a4, a4, 63
    917c:	0000f7b7          	lui	a5, 0xf
    9180:	40e78823          	sb	a4, 1040(a5) # f410 <my_logical_y>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    9184:	02c52703          	lw	a4, 44(a0)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:70
    9188:	41078793          	addi	a5, a5, 1040
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
    918c:	41460613          	addi	a2, a2, 1044
risc_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:74
    9190:	03f77313          	andi	t1, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:75
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    9194:	00675713          	srli	a4, a4, 0x6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:74
    my_x[n] = noc_id_reg & NOC_NODE_ID_MASK;
    9198:	006680a3          	sb	t1, 1(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:75
    my_y[n] = (noc_id_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    919c:	03f77713          	andi	a4, a4, 63
    91a0:	42848693          	addi	a3, s1, 1064
    91a4:	00e680a3          	sb	a4, 1(a3)
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:79
  return *ptr;
    91a8:	10050713          	addi	a4, a0, 256
    91ac:	00072683          	lw	a3, 0(a4)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:66
  noc_trans_table_en = (NOC_CFG_READ_REG(noc, NIU_CFG_0) >> NIU_CFG_0_NOC_ID_TRANSLATE_EN) & 0x1;
    91b0:	00e6d693          	srli	a3, a3, 0xe
    91b4:	0016f693          	andi	a3, a3, 1
    91b8:	40d88623          	sb	a3, 1036(a7)
NOC_CFG_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:79
    91bc:	03872703          	lw	a4, 56(a4)
set_noc_trans_table(unsigned long, unsigned char&, unsigned char&, unsigned char&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
    91c0:	03f77693          	andi	a3, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:70
  my_logical_y = (noc_id_logical_reg >> NOC_ADDR_NODE_ID_BITS) & NOC_NODE_ID_MASK;
    91c4:	00675713          	srli	a4, a4, 0x6
    91c8:	03f77713          	andi	a4, a4, 63
    91cc:	00e780a3          	sb	a4, 1(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:69
  my_logical_x = noc_id_logical_reg & NOC_NODE_ID_MASK;
    91d0:	00d600a3          	sb	a3, 1(a2)
risc_iram_load():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:166
  if (my_x[0] < 5) {
    91d4:	00400793          	li	a5, 4
    91d8:	0d07ee63          	bltu	a5, a6, 92b4 <ApplicationHandler+0x274>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:167
    my_eth_id = (my_x[0] * 2 - 1) + (my_y[0] == 0 ? 0 : 8);
    91dc:	00181793          	slli	a5, a6, 0x1
    91e0:	fff78793          	addi	a5, a5, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:169
    my_eth_id = (9 - my_x[0]) * 2 + (my_y[0] == 0 ? 0 : 8);
    91e4:	00b03733          	snez	a4, a1
    91e8:	00371713          	slli	a4, a4, 0x3
    91ec:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:172
  bool connected = sys_connections->eth_conn_info[my_eth_id] > ETH_UNCONNECTED;
    91f0:	00001737          	lui	a4, 0x1
    91f4:	20070713          	addi	a4, a4, 512 # 1200 <__firmware_stack_size+0xe00>
    91f8:	00279793          	slli	a5, a5, 0x2
    91fc:	00f707b3          	add	a5, a4, a5
    9200:	0007a703          	lw	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:173
  if (connected) {
    9204:	00100793          	li	a5, 1
    9208:	00e7dc63          	bge	a5, a4, 9220 <ApplicationHandler+0x1e0>
eth_mac_reg_write(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:280
uint32_t eth_risc_reg_read(uint32_t offset) {
  return ETH_READ_REG(ETH_RISC_REGS_START+offset);
}

void eth_mac_reg_write(uint32_t offset, uint32_t val)  {
  ETH_WRITE_REG(ETH_MAC_REGS_START+offset, val);
    920c:	ffba07b7          	lui	a5, 0xffba0
    9210:	300006b7          	lui	a3, 0x30000
    9214:	00d7a023          	sw	a3, 0(a5) # ffba0000 <TENSIX_MAILBOX_BASE+0xffce0000>
    9218:	00600693          	li	a3, 6
    921c:	00d7a223          	sw	a3, 4(a5)
risc_iram_load():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:180
  *iram_load_reg = eth_l1_mem::address_map::TILE_HEADER_BUFFER_BASE >> 4;
    9220:	000027b7          	lui	a5, 0x2
    9224:	ffb946b7          	lui	a3, 0xffb94
    9228:	80078793          	addi	a5, a5, -2048 # 1800 <__firmware_stack_size+0x1400>
    922c:	08f6ac23          	sw	a5, 152(a3) # ffb94098 <TENSIX_MAILBOX_BASE+0xffcd4098>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
  ptr[0] = status;
}

inline void RISC_POST_STATUS(uint32_t status) {
  volatile uint32_t* ptr = (volatile uint32_t*)(NOC_CFG(ROUTER_CFG_2));
  ptr[0] = status;
    9230:	100006b7          	lui	a3, 0x10000
    9234:	ffb207b7          	lui	a5, 0xffb20
    9238:	10d7a623          	sw	a3, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_iram_load():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:183
  while (*iram_load_reg & 0x1);
    923c:	ffb946b7          	lui	a3, 0xffb94
    9240:	0986a783          	lw	a5, 152(a3) # ffb94098 <TENSIX_MAILBOX_BASE+0xffcd4098>
    9244:	0017f793          	andi	a5, a5, 1
    9248:	fe079ce3          	bnez	a5, 9240 <ApplicationHandler+0x200>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:185
  if (connected) {
    924c:	00100793          	li	a5, 1
    9250:	0ce7d263          	bge	a5, a4, 9314 <ApplicationHandler+0x2d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:186
    uint32_t aiclk_ps = config_buf->aiclk_ps;
    9254:	000017b7          	lui	a5, 0x1
    9258:	0487a703          	lw	a4, 72(a5) # 1048 <__firmware_stack_size+0xc48>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:188
    uint8_t clk_scalar = BOOT_REFCLK_PERIOD_PS / (aiclk_ps);
    925c:	00071463          	bnez	a4, 9264 <ApplicationHandler+0x224>
    9260:	00100713          	li	a4, 1
    9264:	000097b7          	lui	a5, 0x9
    9268:	08878793          	addi	a5, a5, 136 # 9088 <ApplicationHandler+0x48>
    926c:	02e7d7b3          	divu	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:189
    uint32_t wait_cycles_1us = 27 * clk_scalar; //~1us
    9270:	0ff7f793          	zext.b	a5, a5
    9274:	01b00713          	li	a4, 27
    9278:	02e787b3          	mul	a5, a5, a4
    927c:	06400513          	li	a0, 100
eth_risc_reg_read(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:276
  return ETH_READ_REG(ETH_RISC_REGS_START+offset);
    9280:	ffb12637          	lui	a2, 0xffb12
eth_wait_cycles(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:171
  if (wait_cycles == 0) {
    9284:	04078063          	beqz	a5, 92c4 <ApplicationHandler+0x284>
eth_risc_reg_read(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:276
  return ETH_READ_REG(ETH_RISC_REGS_START+offset);
    9288:	1f062683          	lw	a3, 496(a2) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
    928c:	1f862703          	lw	a4, 504(a2)
eth_wait_cycles(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:175
  uint64_t end_timer = curr_timer + wait_cycles;
    9290:	00d78833          	add	a6, a5, a3
    9294:	00f835b3          	sltu	a1, a6, a5
    9298:	00e585b3          	add	a1, a1, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:176
  while (curr_timer < end_timer) {
    929c:	00b76663          	bltu	a4, a1, 92a8 <ApplicationHandler+0x268>
    92a0:	02e59263          	bne	a1, a4, 92c4 <ApplicationHandler+0x284>
    92a4:	0306f063          	bgeu	a3, a6, 92c4 <ApplicationHandler+0x284>
eth_risc_reg_read(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:276
  return ETH_READ_REG(ETH_RISC_REGS_START+offset);
    92a8:	1f062683          	lw	a3, 496(a2)
    92ac:	1f862703          	lw	a4, 504(a2)
eth_read_wall_clock():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:166
  return (((uint64_t)wall_clock_high) << 32) | wall_clock_low;
    92b0:	fedff06f          	j	929c <ApplicationHandler+0x25c>
risc_iram_load():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:169
    my_eth_id = (9 - my_x[0]) * 2 + (my_y[0] == 0 ? 0 : 8);
    92b4:	00900793          	li	a5, 9
    92b8:	410787b3          	sub	a5, a5, a6
    92bc:	00179793          	slli	a5, a5, 0x1
    92c0:	f25ff06f          	j	91e4 <ApplicationHandler+0x1a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:190
    for (int i = 0; i < 100; i++) {
    92c4:	fff50513          	addi	a0, a0, -1
    92c8:	fa051ee3          	bnez	a0, 9284 <ApplicationHandler+0x244>
eth_pcs_dir_reg_write(unsigned char, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:288
uint32_t eth_mac_reg_read(uint32_t offset) {
  return ETH_READ_REG(ETH_MAC_REGS_START+offset);
}

void eth_pcs_dir_reg_write(uint8_t reg_id, uint16_t val) {
  ETH_WRITE_REG(ETH_PCS_REGS_START+(((uint32_t)reg_id) << 2), val);
    92cc:	ffbb09b7          	lui	s3, 0xffbb0
    92d0:	3fc98913          	addi	s2, s3, 1020 # ffbb03fc <TENSIX_MAILBOX_BASE+0xffcf03fc>
    92d4:	30000c13          	li	s8, 768
risc_iram_load():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:196
      if (pcs_status != 0x6) {
    92d8:	00600a13          	li	s4, 6
eth_pcs_dir_reg_write(unsigned char, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:288
    92dc:	01892023          	sw	s8, 0(s2)
eth_pcs_dir_reg_read(unsigned char):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:292
}

uint16_t eth_pcs_dir_reg_read(uint8_t reg_id) {
  return (uint16_t)(ETH_READ_REG(ETH_PCS_REGS_START+(((uint32_t)reg_id) << 2)));
    92e0:	00092783          	lw	a5, 0(s2)
    92e4:	0049a783          	lw	a5, 4(s3)
risc_iram_load():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:196
    92e8:	01079793          	slli	a5, a5, 0x10
    92ec:	0107d793          	srli	a5, a5, 0x10
    92f0:	01478663          	beq	a5, s4, 92fc <ApplicationHandler+0x2bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:197
        risc_context_switch();
    92f4:	63c000ef          	jal	ra, 9930 <risc_context_switch()>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:194
    while (1) {
    92f8:	fe5ff06f          	j	92dc <ApplicationHandler+0x29c>
eth_mac_reg_write(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:280
  ETH_WRITE_REG(ETH_MAC_REGS_START+offset, val);
    92fc:	300007b7          	lui	a5, 0x30000
    9300:	ffba0737          	lui	a4, 0xffba0
    9304:	00178793          	addi	a5, a5, 1 # 30000001 <noc_nonblocking_api.cc.88b5909b+0x2ffdd27d>
    9308:	00f72023          	sw	a5, 0(a4) # ffba0000 <TENSIX_MAILBOX_BASE+0xffce0000>
    930c:	00700793          	li	a5, 7
    9310:	00f72223          	sw	a5, 4(a4)
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:241
#ifdef RISC_B0_HW
  //copy code from temporary L1 location to erisc iram.
  risc_iram_load();
#endif

  loading_noc = my_x[0] % NUM_NOCS;
    9314:	42c44983          	lbu	s3, 1068(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:244

  // Global loop stack
  LoopStack<4> loopstack;
    9318:	03000613          	li	a2, 48
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:241
  loading_noc = my_x[0] % NUM_NOCS;
    931c:	0019f913          	andi	s2, s3, 1
    9320:	0000f437          	lui	s0, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:244
  LoopStack<4> loopstack;
    9324:	00000593          	li	a1, 0
    9328:	02c10513          	addi	a0, sp, 44
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:241
  loading_noc = my_x[0] % NUM_NOCS;
    932c:	43240523          	sb	s2, 1066(s0) # f42a <loading_noc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:244
  LoopStack<4> loopstack;
    9330:	ffbf8097          	auipc	ra, 0xffbf8
    9334:	24c080e7          	jalr	588(ra) # ffc0157c <TENSIX_MAILBOX_BASE+0xffd4157c>
    9338:	fff00793          	li	a5, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:250

  uint8_t x = my_x[0];
  uint8_t y = my_y[0];


  bool skip_initial_epoch_dram_load = RISC_EPOCH_INFO_PTR->epoch_valid;
    933c:	00020737          	lui	a4, 0x20
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:244
  LoopStack<4> loopstack;
    9340:	04f12e23          	sw	a5, 92(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:250
  bool skip_initial_epoch_dram_load = RISC_EPOCH_INFO_PTR->epoch_valid;
    9344:	08c74783          	lbu	a5, 140(a4) # 2008c <risc_chip_specific.cc.5b7d4a1c+0x10b0>
get_epoch_index_x(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:163
  return my_y;
#endif
}

int get_epoch_index_x(int my_x) {
  if (my_x >= 18 && my_x <= 21)
    9348:	fee98693          	addi	a3, s3, -18
    934c:	00300713          	li	a4, 3
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:247
  uint8_t y = my_y[0];
    9350:	4284c603          	lbu	a2, 1064(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:250
  bool skip_initial_epoch_dram_load = RISC_EPOCH_INFO_PTR->epoch_valid;
    9354:	00f037b3          	snez	a5, a5
    9358:	00f12023          	sw	a5, 0(sp)
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:116
  ncrisc_noc_fast_write(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, noc_write_dest_buf_ptr_addr, q_rd_ptr_addr, 4,
                        DRAM_PTR_UPDATE_VC, false, false, 1, NCRISC_WR_DEF_TRID);
}

inline uint64_t risc_get_epoch_q_dram_ptr(uint32_t my_x, uint32_t my_y) {
  my_x = get_epoch_index_x(my_x);
    935c:	00098793          	mv	a5, s3
get_epoch_index_x(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:163
    9360:	3ed76663          	bltu	a4, a3, 974c <__firmware_global_pointer+0x34c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:164
    my_x -= 17;
    9364:	fef98793          	addi	a5, s3, -17
get_epoch_index_y(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:172

  return my_x;
}

int get_epoch_index_y(int my_y) {
  if (my_y == 16)
    9368:	01000713          	li	a4, 16
    936c:	40e60063          	beq	a2, a4, 976c <__firmware_global_pointer+0x36c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:174
    my_y = 0;
  else if (my_y == 17)
    9370:	01100713          	li	a4, 17
    9374:	40e60063          	beq	a2, a4, 9774 <__firmware_global_pointer+0x374>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:176
    my_y = 6;
  else if (my_y <= 22 && my_y > 17)
    9378:	fee60713          	addi	a4, a2, -18
    937c:	00400693          	li	a3, 4
    9380:	3ce6ee63          	bltu	a3, a4, 975c <__firmware_global_pointer+0x35c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:177
    my_y = (my_y - 17);
    9384:	fef60613          	addi	a2, a2, -17
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:117
  my_y = get_epoch_index_y(my_y);
    9388:	00060593          	mv	a1, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:118
  const uint64_t INITIAL_EPOCH_VECTOR_TABLE_ADDR = NOC_XY_ADDR(NOC_X(get_epoch_table_x(my_x, my_y)), NOC_Y(get_epoch_table_y(my_x, my_y)), EPOCH_TABLE_DRAM_ADDRESS);
    938c:	00090863          	beqz	s2, 939c <ApplicationHandler+0x35c>
    9390:	417bc703          	lbu	a4, 1047(s7)
    9394:	fff70713          	addi	a4, a4, -1
    9398:	40c70633          	sub	a2, a4, a2
    939c:	00a61613          	slli	a2, a2, 0xa
    93a0:	3c091e63          	bnez	s2, 977c <__firmware_global_pointer+0x37c>
get_epoch_table_x(int, int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:134
  if (my_x <= 4) {
    93a4:	00400693          	li	a3, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:135
    epoch_x = 0;
    93a8:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:134
  if (my_x <= 4) {
    93ac:	00f6d463          	bge	a3, a5, 93b4 <ApplicationHandler+0x374>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:137
    epoch_x = 5;
    93b0:	00500713          	li	a4, 5
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:119
  uint64_t q_table_offset = INITIAL_EPOCH_VECTOR_TABLE_ADDR + ((my_y * epoch_queue::GridSizeCol) + my_x) * EPOCH_ENTRY_SIZE_BYTES;
    93b4:	00a00693          	li	a3, 10
    93b8:	02d585b3          	mul	a1, a1, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:118
  const uint64_t INITIAL_EPOCH_VECTOR_TABLE_ADDR = NOC_XY_ADDR(NOC_X(get_epoch_table_x(my_x, my_y)), NOC_Y(get_epoch_table_y(my_x, my_y)), EPOCH_TABLE_DRAM_ADDRESS);
    93bc:	00471713          	slli	a4, a4, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:119
  uint64_t q_table_offset = INITIAL_EPOCH_VECTOR_TABLE_ADDR + ((my_y * epoch_queue::GridSizeCol) + my_x) * EPOCH_ENTRY_SIZE_BYTES;
    93c0:	00f585b3          	add	a1, a1, a5
    93c4:	000027b7          	lui	a5, 0x2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:118
  const uint64_t INITIAL_EPOCH_VECTOR_TABLE_ADDR = NOC_XY_ADDR(NOC_X(get_epoch_table_x(my_x, my_y)), NOC_Y(get_epoch_table_y(my_x, my_y)), EPOCH_TABLE_DRAM_ADDRESS);
    93c8:	00c76633          	or	a2, a4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:119
  uint64_t q_table_offset = INITIAL_EPOCH_VECTOR_TABLE_ADDR + ((my_y * epoch_queue::GridSizeCol) + my_x) * EPOCH_ENTRY_SIZE_BYTES;
    93cc:	02078793          	addi	a5, a5, 32 # 2020 <__firmware_start+0x20>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:118
  const uint64_t INITIAL_EPOCH_VECTOR_TABLE_ADDR = NOC_XY_ADDR(NOC_X(get_epoch_table_x(my_x, my_y)), NOC_Y(get_epoch_table_y(my_x, my_y)), EPOCH_TABLE_DRAM_ADDRESS);
    93d0:	0070f737          	lui	a4, 0x70f
    93d4:	10070713          	addi	a4, a4, 256 # 70f100 <noc_nonblocking_api.cc.88b5909b+0x6ec37c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:119
  uint64_t q_table_offset = INITIAL_EPOCH_VECTOR_TABLE_ADDR + ((my_y * epoch_queue::GridSizeCol) + my_x) * EPOCH_ENTRY_SIZE_BYTES;
    93d8:	02f585b3          	mul	a1, a1, a5
    93dc:	00b705b3          	add	a1, a4, a1
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:253
  my_q_table_offset = risc_get_epoch_q_dram_ptr(x, y);

  noc_read_scratch_buf[30] = my_q_table_offset >> 32;
    93e0:	0000f9b7          	lui	s3, 0xf
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:119
    93e4:	00e5b733          	sltu	a4, a1, a4
    93e8:	00c70633          	add	a2, a4, a2
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:253
    93ec:	44098793          	addi	a5, s3, 1088 # f440 <noc_read_scratch_buf>
    93f0:	06c7ac23          	sw	a2, 120(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:251
  my_q_table_offset = risc_get_epoch_q_dram_ptr(x, y);
    93f4:	0000f4b7          	lui	s1, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:254
  noc_read_scratch_buf[31] = my_q_table_offset & 0xFFFFFFFF;
    93f8:	06b7ae23          	sw	a1, 124(a5)
risc_epoch_q_get_ptr(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:128
inline void risc_epoch_q_get_ptr(volatile uint32_t *noc_read_scratch_buf, uint64_t &my_q_table_offset, uint32_t &my_q_rd_ptr, uint32_t &my_q_wr_ptr) {

  uint32_t noc_read_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
  uint32_t noc_read_dest_buf_addr = (uint32_t)(noc_read_scratch_buf);
  uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF,
    93fc:	44098693          	addi	a3, s3, 1088

00009400 <__firmware_global_pointer>:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:126
  uint32_t noc_read_dest_buf_addr = (uint32_t)(noc_read_scratch_buf);
    9400:	44098d93          	addi	s11, s3, 1088
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:128
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF,
    9404:	00200793          	li	a5, 2
    9408:	00800713          	li	a4, 8
    940c:	00090513          	mv	a0, s2
    9410:	44098993          	addi	s3, s3, 1088
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:251
  my_q_table_offset = risc_get_epoch_q_dram_ptr(x, y);
    9414:	42b4a023          	sw	a1, 1056(s1) # f420 <my_q_table_offset>
    9418:	42c4a223          	sw	a2, 1060(s1)
risc_epoch_q_get_ptr(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:128
    941c:	ffbf7097          	auipc	ra, 0xffbf7
    9420:	38c080e7          	jalr	908(ra) # ffc007a8 <TENSIX_MAILBOX_BASE+0xffd407a8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:132
                               my_q_table_offset,
                               noc_read_dest_buf_ptr_addr,
                               8, NCRISC_RD_DEF_TRID);
  while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
    9424:	42a44503          	lbu	a0, 1066(s0)
    9428:	00200593          	li	a1, 2
    942c:	ffbf7097          	auipc	ra, 0xffbf7
    9430:	bd4080e7          	jalr	-1068(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    9434:	00050c93          	mv	s9, a0
    9438:	fe0506e3          	beqz	a0, 9424 <__firmware_global_pointer+0x24>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:134
  volatile uint32_t *noc_read_dest_buf_ptr = (volatile uint32_t *)(noc_read_dest_buf_ptr_addr); 
  my_q_rd_ptr = noc_read_dest_buf_ptr[0];
    943c:	0009a783          	lw	a5, 0(s3)
    9440:	0000f937          	lui	s2, 0xf
    9444:	40f92e23          	sw	a5, 1052(s2) # f41c <my_q_rd_ptr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:135
  my_q_wr_ptr = noc_read_dest_buf_ptr[1];
    9448:	0049a783          	lw	a5, 4(s3)
    944c:	0000fc37          	lui	s8, 0xf
    9450:	40fc2c23          	sw	a5, 1048(s8) # f418 <my_q_wr_ptr>
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:143
inline bool risc_is_epoch_q_empty(volatile uint32_t *noc_read_scratch_buf, uint64_t &my_q_table_offset, uint32_t &my_q_rd_ptr, uint32_t &my_q_wr_ptr, uint32_t &epoch_empty_check_cnt) {

  bool is_empty;

  if (dram_io_empty(my_q_rd_ptr, my_q_wr_ptr)) {
    if (risc_get_l1_epoch_q_wrptr() == epoch_queue::POLLING_EPOCH_QUEUE_TAG ? epoch_empty_check_cnt == 0 : !risc_is_l1_epoch_q_empty(my_q_rd_ptr)) {
    9454:	aca0d7b7          	lui	a5, 0xaca0d
    9458:	afe78793          	addi	a5, a5, -1282 # aca0cafe <TENSIX_MAILBOX_BASE+0xacb4cafe>
    945c:	00f12423          	sw	a5, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:162
    }
  } else {
    is_empty = false;
  }

  epoch_empty_check_cnt = (epoch_empty_check_cnt + 1) & EPOCH_EMPTY_CHECK_MASK;
    9460:	000017b7          	lui	a5, 0x1
    9464:	fff78793          	addi	a5, a5, -1 # fff <__firmware_stack_size+0xbff>
    9468:	00f12223          	sw	a5, 4(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    946c:	1bc2e7b7          	lui	a5, 0x1bc2e
    9470:	ead78793          	addi	a5, a5, -339 # 1bc2dead <noc_nonblocking_api.cc.88b5909b+0x1bc0b129>
    9474:	00f12623          	sw	a5, 12(sp)
risc_epoch_q_rdptr_update(unsigned long, unsigned long volatile*, unsigned long long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:99
  uint32_t noc_write_dest_buf_addr = (uint32_t)(&(noc_read_scratch_buf[SCRATCH_PAD_DRAM_WRITE_IDX]));
    9478:	04098793          	addi	a5, s3, 64
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    947c:	10000d37          	lui	s10, 0x10000
risc_epoch_q_rdptr_update(unsigned long, unsigned long volatile*, unsigned long long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:99
    9480:	00f12823          	sw	a5, 16(sp)
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:142
  if (dram_io_empty(my_q_rd_ptr, my_q_wr_ptr)) {
    9484:	41c92783          	lw	a5, 1052(s2)
    9488:	418c2683          	lw	a3, 1048(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:159
    is_empty = false;
    948c:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:142
  if (dram_io_empty(my_q_rd_ptr, my_q_wr_ptr)) {
    9490:	06d79a63          	bne	a5, a3, 9504 <__firmware_global_pointer+0x104>
risc_get_l1_epoch_q_wrptr():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:68
  return RISC_L1_EPOCH_Q_PTR->wr_ptr;
    9494:	00009737          	lui	a4, 0x9
    9498:	00472683          	lw	a3, 4(a4) # 9004 <__trisc_base+0x2404>
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:143
    if (risc_get_l1_epoch_q_wrptr() == epoch_queue::POLLING_EPOCH_QUEUE_TAG ? epoch_empty_check_cnt == 0 : !risc_is_l1_epoch_q_empty(my_q_rd_ptr)) {
    949c:	00812603          	lw	a2, 8(sp)
    94a0:	2ec69e63          	bne	a3, a2, 979c <__firmware_global_pointer+0x39c>
    94a4:	430aa783          	lw	a5, 1072(s5)
    94a8:	0017b793          	seqz	a5, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:156
      is_empty = true;
    94ac:	000c8713          	mv	a4, s9
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:143
    if (risc_get_l1_epoch_q_wrptr() == epoch_queue::POLLING_EPOCH_QUEUE_TAG ? epoch_empty_check_cnt == 0 : !risc_is_l1_epoch_q_empty(my_q_rd_ptr)) {
    94b0:	04078a63          	beqz	a5, 9504 <__firmware_global_pointer+0x104>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:144
      uint32_t noc_read_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
    94b4:	4204a583          	lw	a1, 1056(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:147
      ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF,
    94b8:	4244a603          	lw	a2, 1060(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:144
      uint32_t noc_read_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
    94bc:	01f5fa13          	andi	s4, a1, 31
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:146
      uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
    94c0:	01ba0a33          	add	s4, s4, s11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:147
      ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF,
    94c4:	42a44503          	lbu	a0, 1066(s0)
    94c8:	00200793          	li	a5, 2
    94cc:	00800713          	li	a4, 8
    94d0:	000a0693          	mv	a3, s4
    94d4:	ffbf7097          	auipc	ra, 0xffbf7
    94d8:	2d4080e7          	jalr	724(ra) # ffc007a8 <TENSIX_MAILBOX_BASE+0xffd407a8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:151
      while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
    94dc:	42a44503          	lbu	a0, 1066(s0)
    94e0:	00200593          	li	a1, 2
    94e4:	ffbf7097          	auipc	ra, 0xffbf7
    94e8:	b1c080e7          	jalr	-1252(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    94ec:	fe0508e3          	beqz	a0, 94dc <__firmware_global_pointer+0xdc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:153
      my_q_wr_ptr = noc_read_dest_buf_ptr[1];
    94f0:	004a2783          	lw	a5, 4(s4)
dram_io_empty(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:71
  }
  return next_ptr;
}

inline __attribute__((always_inline)) uint32_t dram_io_empty(uint32_t rd_ptr, uint32_t wr_ptr) {
  return (rd_ptr == wr_ptr);
    94f4:	41c92703          	lw	a4, 1052(s2)
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:153
    94f8:	40fc2c23          	sw	a5, 1048(s8)
dram_io_empty(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:71
    94fc:	40f70733          	sub	a4, a4, a5
    9500:	00173713          	seqz	a4, a4
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:162
  epoch_empty_check_cnt = (epoch_empty_check_cnt + 1) & EPOCH_EMPTY_CHECK_MASK;
    9504:	430aa783          	lw	a5, 1072(s5)
    9508:	00412683          	lw	a3, 4(sp)
    950c:	00178793          	addi	a5, a5, 1
    9510:	00d7f7b3          	and	a5, a5, a3
    9514:	42faa823          	sw	a5, 1072(s5)
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:260

  risc_epoch_q_get_ptr(noc_read_scratch_buf, my_q_table_offset, my_q_rd_ptr, my_q_wr_ptr);
  int exec_iteration = NUM_EXEC_LOOP_ITERATIONS;

  do {
    if (!risc_is_epoch_q_empty(noc_read_scratch_buf, my_q_table_offset, my_q_rd_ptr, my_q_wr_ptr, epoch_empty_check_cnt) || exec_iteration < NUM_EXEC_LOOP_ITERATIONS) {
    9518:	2a071063          	bnez	a4, 97b8 <__firmware_global_pointer+0x3b8>
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:193
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
}

inline uint64_t risc_get_epoch_dram_ptr(uint32_t &epoch_command, uint32_t &dram_decouple_mask, volatile uint32_t *noc_read_scratch_buf, uint64_t &my_q_table_offset, uint32_t &my_q_rd_ptr, uint32_t &num_loops) {

  uint64_t my_q_entry_offset = (my_q_rd_ptr & (EPOCH_QUEUE_NUM_SLOTS-1)) * epoch_queue::EPOCH_Q_SLOT_SIZE + epoch_queue::EPOCH_Q_SLOTS_OFFSET + my_q_table_offset;
    951c:	41c94783          	lbu	a5, 1052(s2)
    9520:	4204a583          	lw	a1, 1056(s1)
    9524:	00178793          	addi	a5, a5, 1
    9528:	00579793          	slli	a5, a5, 0x5
    952c:	00b785b3          	add	a1, a5, a1
    9530:	4244a503          	lw	a0, 1060(s1)
    9534:	00f5b633          	sltu	a2, a1, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:194
  uint32_t noc_read_dest_buf_offset = my_q_entry_offset % (NOC_WORD_BYTES);
    9538:	01f5f693          	andi	a3, a1, 31
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:196
  uint32_t noc_read_dest_buf_addr = (uint32_t)(noc_read_scratch_buf);
  uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
    953c:	01b689b3          	add	s3, a3, s11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:197
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF,
    9540:	00a60633          	add	a2, a2, a0
    9544:	42a44503          	lbu	a0, 1066(s0)
    9548:	00200793          	li	a5, 2
    954c:	02000713          	li	a4, 32
    9550:	00098693          	mv	a3, s3
    9554:	ffbf7097          	auipc	ra, 0xffbf7
    9558:	254080e7          	jalr	596(ra) # ffc007a8 <TENSIX_MAILBOX_BASE+0xffd407a8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:201
                               my_q_entry_offset,
                               noc_read_dest_buf_ptr_addr,
                               32, NCRISC_RD_DEF_TRID);
  while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
    955c:	42a44503          	lbu	a0, 1066(s0)
    9560:	00200593          	li	a1, 2
    9564:	ffbf7097          	auipc	ra, 0xffbf7
    9568:	a9c080e7          	jalr	-1380(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    956c:	fe0508e3          	beqz	a0, 955c <__firmware_global_pointer+0x15c>
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:168
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    9570:	0009a583          	lw	a1, 0(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:169
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    9574:	0049a803          	lw	a6, 4(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    9578:	0049a783          	lw	a5, 4(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    957c:	0049a603          	lw	a2, 4(s3)
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:207
  volatile uint32_t *noc_read_dest_buf_ptr = (uint32_t *)(noc_read_dest_buf_ptr_addr); 
  uint64_t dram_addr_offset;
  uint32_t dram_coord_x;
  uint32_t dram_coord_y;
  risc_get_noc_addr_from_dram_ptr(noc_read_dest_buf_ptr, dram_addr_offset, dram_coord_x, dram_coord_y);
  epoch_command = (noc_read_dest_buf_ptr[1] >> 28) & 0xF;
    9580:	0049aa03          	lw	s4, 4(s3)
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    9584:	0107d793          	srli	a5, a5, 0x10
    9588:	03f7f893          	andi	a7, a5, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    958c:	01665613          	srli	a2, a2, 0x16
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:207
  epoch_command = (noc_read_dest_buf_ptr[1] >> 28) & 0xF;
    9590:	01ca5a13          	srli	s4, s4, 0x1c
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:208
  num_loops = (epoch_command == epoch_queue::EpochCmdLoopStart) ? noc_read_dest_buf_ptr[1] & 0xFFFFFFF : 1;
    9594:	00500793          	li	a5, 5
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    9598:	03f67613          	andi	a2, a2, 63
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:208
  num_loops = (epoch_command == epoch_queue::EpochCmdLoopStart) ? noc_read_dest_buf_ptr[1] & 0xFFFFFFF : 1;
    959c:	00100513          	li	a0, 1
    95a0:	00fa1863          	bne	s4, a5, 95b0 <__firmware_global_pointer+0x1b0>
    95a4:	0049a503          	lw	a0, 4(s3)
    95a8:	fffd0793          	addi	a5, s10, -1 # fffffff <noc_nonblocking_api.cc.88b5909b+0xffdd27b>
    95ac:	00f57533          	and	a0, a0, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:221
#else
  PERF_RISC_MAILBOX_INPUT_DECOUPLE_MASK_PTR[0] = 0;
  PERF_RISC_MAILBOX_OUTPUT_DECOUPLE_MASK_PTR[0] = 0;
#endif
#endif
  return NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    95b0:	42a44783          	lbu	a5, 1066(s0)
    95b4:	1e078c63          	beqz	a5, 97ac <__firmware_global_pointer+0x3ac>
    95b8:	417bc703          	lbu	a4, 1047(s7)
    95bc:	416b4783          	lbu	a5, 1046(s6)
    95c0:	fff70713          	addi	a4, a4, -1
    95c4:	fff78793          	addi	a5, a5, -1
    95c8:	40c70633          	sub	a2, a4, a2
    95cc:	411787b3          	sub	a5, a5, a7
    95d0:	00a61613          	slli	a2, a2, 0xa
    95d4:	00479893          	slli	a7, a5, 0x4
LoopStack<4>::is_empty():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:54
      return ptr < 0 ? true : false;
    95d8:	05c12783          	lw	a5, 92(sp)
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:277
        }
      } else if (epoch_queue::EpochCmdValid == epoch_command) {
        exec_iteration++;
      }

      uint32_t loop_iteration = loopstack.is_empty() ? 0 : loopstack.top()->curr_iter;
    95dc:	00000713          	li	a4, 0
    95e0:	0207c063          	bltz	a5, 9600 <__firmware_global_pointer+0x200>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:41
        if (ptr < 0) return nullptr;
    95e4:	00000713          	li	a4, 0
LoopStack<4>::top():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:41
    95e8:	0007ca63          	bltz	a5, 95fc <__firmware_global_pointer+0x1fc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:42
        return &table[ptr];
    95ec:	00c00713          	li	a4, 12
    95f0:	02e78733          	mul	a4, a5, a4
    95f4:	02c10693          	addi	a3, sp, 44
    95f8:	00e68733          	add	a4, a3, a4
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:277
    95fc:	00072703          	lw	a4, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:277 (discriminator 4)
    9600:	02e12423          	sw	a4, 40(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:279 (discriminator 4)

      if (epoch_queue::EpochCmdValid == epoch_command) {
    9604:	00100713          	li	a4, 1
    9608:	1cea1263          	bne	s4, a4, 97cc <__firmware_global_pointer+0x3cc>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    960c:	101d0713          	addi	a4, s10, 257
    9610:	ffb207b7          	lui	a5, 0xffb20
    9614:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:169
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    9618:	01081793          	slli	a5, a6, 0x10
    961c:	0107d793          	srli	a5, a5, 0x10
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:221
  return NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    9620:	00c7e633          	or	a2, a5, a2
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:282
        RISC_POST_STATUS(0x10000100 | exec_iteration);
        bool skip_kernels = true;
        run_epoch(
    9624:	00012503          	lw	a0, 0(sp)
    9628:	00000693          	li	a3, 0
    962c:	01166633          	or	a2, a2, a7
    9630:	755020ef          	jal	ra, c584 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:295
            num_output_streams, output_stream_state,
            num_dram_input_streams, num_dram_output_streams, num_active_streams, num_active_dram_queues, num_dram_prefetch_streams,
            dram_q_state, dram_input_stream_state, dram_output_stream_state, active_stream_info,
            dram_prefetch_epoch_stream_info, dram_prefetch_active_stream_info, dram_decouple_mask
        );
        RISC_EPOCH_INFO_PTR->all_streams_and_kernels_done = 0;
    9634:	000207b7          	lui	a5, 0x20
    9638:	08078723          	sb	zero, 142(a5) # 2008e <risc_chip_specific.cc.5b7d4a1c+0x10b2>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:327
      epoch_empty_check_cnt = 0;

      RISC_POST_DEBUG(0x10000005 | (exec_iteration << 12));

      if (exec_iteration == NUM_EXEC_LOOP_ITERATIONS) {
        my_q_rd_ptr = dram_io_incr_ptr(my_q_rd_ptr, 1, EPOCH_QUEUE_NUM_SLOTS);
    963c:	41c92703          	lw	a4, 1052(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:322
      epoch_empty_check_cnt = 0;
    9640:	420aa823          	sw	zero, 1072(s5)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
    9644:	00170793          	addi	a5, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
    9648:	1ff00693          	li	a3, 511
    964c:	00f6f463          	bgeu	a3, a5, 9654 <__firmware_global_pointer+0x254>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
    9650:	e0170793          	addi	a5, a4, -511
LoopStack<4>::is_empty():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:54
      return ptr < 0 ? true : false;
    9654:	05c12703          	lw	a4, 92(sp)
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:327
        my_q_rd_ptr = dram_io_incr_ptr(my_q_rd_ptr, 1, EPOCH_QUEUE_NUM_SLOTS);
    9658:	40f92e23          	sw	a5, 1052(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:329
        // Only update rdptr in L1 and DRAM when all generic-looping-on-device loops have been exited.
        if (loopstack.is_empty()){
    965c:	06075663          	bgez	a4, 96c8 <__firmware_global_pointer+0x2c8>
risc_epoch_q_rdptr_update(unsigned long, unsigned long volatile*, unsigned long long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:98
  uint32_t noc_write_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
    9660:	4204a683          	lw	a3, 1056(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:100
  uint32_t noc_write_dest_buf_ptr_addr = noc_write_dest_buf_addr+noc_write_dest_buf_offset;
    9664:	01012583          	lw	a1, 16(sp)
risc_l1_epoch_q_rdptr_update(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:72
  RISC_L1_EPOCH_Q_PTR->rd_ptr = rd_ptr;
    9668:	00009737          	lui	a4, 0x9
risc_epoch_q_rdptr_update(unsigned long, unsigned long volatile*, unsigned long long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:98
  uint32_t noc_write_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
    966c:	01f6f613          	andi	a2, a3, 31
risc_l1_epoch_q_rdptr_update(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:72
  RISC_L1_EPOCH_Q_PTR->rd_ptr = rd_ptr;
    9670:	00f72023          	sw	a5, 0(a4) # 9000 <__trisc_base+0x2400>
risc_epoch_q_rdptr_update(unsigned long, unsigned long volatile*, unsigned long long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:100
  uint32_t noc_write_dest_buf_ptr_addr = noc_write_dest_buf_addr+noc_write_dest_buf_offset;
    9674:	00b60633          	add	a2, a2, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:98
  uint32_t noc_write_dest_buf_offset = my_q_table_offset % (NOC_WORD_BYTES);
    9678:	4244a703          	lw	a4, 1060(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:102
  *noc_write_dest_buf_ptr = rd_ptr;
    967c:	00f62023          	sw	a5, 0(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:110
  while (!ncrisc_noc_fast_write_ok(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    9680:	42a44503          	lbu	a0, 1066(s0)
    9684:	00300593          	li	a1, 3
    9688:	00e12e23          	sw	a4, 28(sp)
    968c:	00d12c23          	sw	a3, 24(sp)
    9690:	00c12a23          	sw	a2, 20(sp)
    9694:	ffbf7097          	auipc	ra, 0xffbf7
    9698:	990080e7          	jalr	-1648(ra) # ffc00024 <TENSIX_MAILBOX_BASE+0xffd40024>
    969c:	01412603          	lw	a2, 20(sp)
    96a0:	01812683          	lw	a3, 24(sp)
    96a4:	01c12703          	lw	a4, 28(sp)
    96a8:	fc050ce3          	beqz	a0, 9680 <__firmware_global_pointer+0x280>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:111
  ncrisc_noc_fast_write(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, noc_write_dest_buf_ptr_addr, q_rd_ptr_addr, 4,
    96ac:	42a44503          	lbu	a0, 1066(s0)
    96b0:	00000893          	li	a7, 0
    96b4:	00100813          	li	a6, 1
    96b8:	00400793          	li	a5, 4
    96bc:	00300593          	li	a1, 3
    96c0:	ffbf7097          	auipc	ra, 0xffbf7
    96c4:	294080e7          	jalr	660(ra) # ffc00954 <TENSIX_MAILBOX_BASE+0xffd40954>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    96c8:	10000737          	lui	a4, 0x10000
    96cc:	ffb207b7          	lui	a5, 0xffb20
    96d0:	00670713          	addi	a4, a4, 6 # 10000006 <noc_nonblocking_api.cc.88b5909b+0xffdd282>
    96d4:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:336
          risc_epoch_q_rdptr_update(my_q_rd_ptr, noc_read_scratch_buf, my_q_table_offset);
        }
        RISC_POST_STATUS(0x10000006);
      }

      if (epoch_queue::EpochCmdEndProgram == epoch_command) {
    96d8:	00f00793          	li	a5, 15
    96dc:	dafa14e3          	bne	s4, a5, 9484 <__firmware_global_pointer+0x84>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:339
        // Make sure all pending NOC writes, particularly my_q_rd_ptr update
        // above have been flushed before signaling end of program.
        while (!ncrisc_noc_nonposted_writes_flushed(loading_noc, NCRISC_WR_DEF_TRID));
    96e0:	42a44503          	lbu	a0, 1066(s0)
    96e4:	00000593          	li	a1, 0
    96e8:	ffbf7097          	auipc	ra, 0xffbf7
    96ec:	918080e7          	jalr	-1768(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    96f0:	fe0508e3          	beqz	a0, 96e0 <__firmware_global_pointer+0x2e0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:340
        RISC_EPOCH_INFO_PTR->end_program = 1;
    96f4:	000207b7          	lui	a5, 0x20
    96f8:	00100713          	li	a4, 1
    96fc:	08e787a3          	sb	a4, 143(a5) # 2008f <risc_chip_specific.cc.5b7d4a1c+0x10b3>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    9700:	200007b7          	lui	a5, 0x20000
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:349
    } else {
      RISC_POST_STATUS(0x1BC2DEAD);
      risc_context_switch();
    }
  } while (true);
}
    9704:	09c12083          	lw	ra, 156(sp)
    9708:	09812403          	lw	s0, 152(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    970c:	ffb20737          	lui	a4, 0xffb20
    9710:	ff178793          	addi	a5, a5, -15 # 1ffffff1 <noc_nonblocking_api.cc.88b5909b+0x1ffdd26d>
    9714:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:349
    9718:	09412483          	lw	s1, 148(sp)
    971c:	09012903          	lw	s2, 144(sp)
    9720:	08c12983          	lw	s3, 140(sp)
    9724:	08812a03          	lw	s4, 136(sp)
    9728:	08412a83          	lw	s5, 132(sp)
    972c:	08012b03          	lw	s6, 128(sp)
    9730:	07c12b83          	lw	s7, 124(sp)
    9734:	07812c03          	lw	s8, 120(sp)
    9738:	07412c83          	lw	s9, 116(sp)
    973c:	07012d03          	lw	s10, 112(sp)
    9740:	06c12d83          	lw	s11, 108(sp)
    9744:	0a010113          	addi	sp, sp, 160
    9748:	00008067          	ret
get_epoch_index_x(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:165
  else if (my_x > 21)
    974c:	01500713          	li	a4, 21
    9750:	c1375ce3          	bge	a4, s3, 9368 <ApplicationHandler+0x328>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:166
    my_x -= 16;
    9754:	ff098793          	addi	a5, s3, -16
    9758:	c11ff06f          	j	9368 <ApplicationHandler+0x328>
get_epoch_index_y(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:178
  else if (my_y > 22)
    975c:	01600713          	li	a4, 22
    9760:	c2c754e3          	bge	a4, a2, 9388 <ApplicationHandler+0x348>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:179
    my_y = (my_y - 16);
    9764:	ff060613          	addi	a2, a2, -16
    9768:	c21ff06f          	j	9388 <ApplicationHandler+0x348>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:173
    my_y = 0;
    976c:	00000613          	li	a2, 0
    9770:	c19ff06f          	j	9388 <ApplicationHandler+0x348>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:175
    my_y = 6;
    9774:	00600613          	li	a2, 6
    9778:	c11ff06f          	j	9388 <ApplicationHandler+0x348>
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:118
  const uint64_t INITIAL_EPOCH_VECTOR_TABLE_ADDR = NOC_XY_ADDR(NOC_X(get_epoch_table_x(my_x, my_y)), NOC_Y(get_epoch_table_y(my_x, my_y)), EPOCH_TABLE_DRAM_ADDRESS);
    977c:	416b4703          	lbu	a4, 1046(s6)
get_epoch_table_x(int, int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:134
  if (my_x <= 4) {
    9780:	00400513          	li	a0, 4
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:118
    9784:	fff70713          	addi	a4, a4, -1
get_epoch_table_x(int, int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:135
    epoch_x = 0;
    9788:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:134
  if (my_x <= 4) {
    978c:	00f55463          	bge	a0, a5, 9794 <__firmware_global_pointer+0x394>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:137
    epoch_x = 5;
    9790:	00500693          	li	a3, 5
risc_get_epoch_q_dram_ptr(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:118
    9794:	40d70733          	sub	a4, a4, a3
    9798:	c1dff06f          	j	93b4 <ApplicationHandler+0x374>
risc_is_l1_epoch_q_empty(unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:76
  bool is_empty = my_q_rd_ptr == RISC_L1_EPOCH_Q_PTR->wr_ptr;
    979c:	00472703          	lw	a4, 4(a4)
risc_is_epoch_q_empty(unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:143
    if (risc_get_l1_epoch_q_wrptr() == epoch_queue::POLLING_EPOCH_QUEUE_TAG ? epoch_empty_check_cnt == 0 : !risc_is_l1_epoch_q_empty(my_q_rd_ptr)) {
    97a0:	40e787b3          	sub	a5, a5, a4
    97a4:	00f037b3          	snez	a5, a5
    97a8:	d05ff06f          	j	94ac <__firmware_global_pointer+0xac>
risc_get_epoch_dram_ptr(unsigned long&, unsigned long&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:221
  return NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    97ac:	00a61613          	slli	a2, a2, 0xa
    97b0:	00489893          	slli	a7, a7, 0x4
    97b4:	e25ff06f          	j	95d8 <__firmware_global_pointer+0x1d8>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    97b8:	00c12703          	lw	a4, 12(sp)
    97bc:	ffb207b7          	lui	a5, 0xffb20
    97c0:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:346
      risc_context_switch();
    97c4:	16c000ef          	jal	ra, 9930 <risc_context_switch()>
    97c8:	cbdff06f          	j	9484 <__firmware_global_pointer+0x84>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:296
      } else if (epoch_queue::EpochCmdIOQueueUpdate == epoch_command) {
    97cc:	00300693          	li	a3, 3
    97d0:	02da1263          	bne	s4, a3, 97f4 <__firmware_global_pointer+0x3f4>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    97d4:	101d0713          	addi	a4, s10, 257
    97d8:	ffb207b7          	lui	a5, 0xffb20
    97dc:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:298
          bool varinst_cmd = false;
    97e0:	020103a3          	sb	zero, 39(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:303
          run_dram_queue_update(0, noc_read_scratch_buf, my_q_table_offset, my_q_rd_ptr, dram_next_epoch_ptr, loading_noc, varinst_cmd, loop_iteration); // Need to ensure we don't need ifdefs here for A0 vs B0 HW
    97e4:	02810593          	addi	a1, sp, 40
    97e8:	02710513          	addi	a0, sp, 39
    97ec:	104020ef          	jal	ra, b8f0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]>
    97f0:	e4dff06f          	j	963c <__firmware_global_pointer+0x23c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:300
      } else if (epoch_queue::EpochCmdVarinst == epoch_command) {
    97f4:	00400693          	li	a3, 4
    97f8:	00da1e63          	bne	s4, a3, 9814 <__firmware_global_pointer+0x414>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    97fc:	110007b7          	lui	a5, 0x11000
    9800:	ffb206b7          	lui	a3, 0xffb20
    9804:	10178793          	addi	a5, a5, 257 # 11000101 <noc_nonblocking_api.cc.88b5909b+0x10fdd37d>
    9808:	10f6a623          	sw	a5, 268(a3) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:302
          bool varinst_cmd = true;
    980c:	02e103a3          	sb	a4, 39(sp)
    9810:	fd5ff06f          	j	97e4 <__firmware_global_pointer+0x3e4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:304
        } else if (epoch_queue::EpochCmdLoopStart == epoch_command) {
    9814:	00500713          	li	a4, 5
    9818:	04ea1263          	bne	s4, a4, 985c <__firmware_global_pointer+0x45c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:306
        uint32_t loop_start_rd_ptr = dram_io_incr_ptr(my_q_rd_ptr, 1, EPOCH_QUEUE_NUM_SLOTS);
    981c:	41c92683          	lw	a3, 1052(s2)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
    9820:	1ff00613          	li	a2, 511
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
    9824:	00168713          	addi	a4, a3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
    9828:	00e67463          	bgeu	a2, a4, 9830 <__firmware_global_pointer+0x430>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
    982c:	e0168713          	addi	a4, a3, -511
LoopStack<4>::push(LoopInfo const&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:45
        ptr++;
    9830:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:46
        table[ptr] = info;
    9834:	00c00693          	li	a3, 12
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:45
        ptr++;
    9838:	04f12e23          	sw	a5, 92(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:46
        table[ptr] = info;
    983c:	02d787b3          	mul	a5, a5, a3
    9840:	06010693          	addi	a3, sp, 96
    9844:	00f687b3          	add	a5, a3, a5
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:307
        loopstack.push({.last_iter = num_loops_cmd-1, .epoch_ptr = loop_start_rd_ptr});
    9848:	fff50513          	addi	a0, a0, -1
LoopStack<4>::push(LoopInfo const&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:46
    984c:	fc07a623          	sw	zero, -52(a5)
    9850:	fca7a823          	sw	a0, -48(a5)
    9854:	fce7aa23          	sw	a4, -44(a5)
    9858:	de5ff06f          	j	963c <__firmware_global_pointer+0x23c>
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:308
      } else if (epoch_queue::EpochCmdLoopEnd == epoch_command) {
    985c:	00600713          	li	a4, 6
    9860:	dcea1ee3          	bne	s4, a4, 963c <__firmware_global_pointer+0x23c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:41
        if (ptr < 0) return nullptr;
    9864:	00000713          	li	a4, 0
LoopStack<4>::top():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:41
    9868:	0007ca63          	bltz	a5, 987c <__firmware_global_pointer+0x47c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:42
        return &table[ptr];
    986c:	00c00713          	li	a4, 12
    9870:	02e78733          	mul	a4, a5, a4
    9874:	02c10693          	addi	a3, sp, 44
    9878:	00e68733          	add	a4, a3, a4
ApplicationHandler():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:311
          if (curr_loop->curr_iter < curr_loop->last_iter) {
    987c:	00072683          	lw	a3, 0(a4)
    9880:	00472603          	lw	a2, 4(a4)
    9884:	02c6f663          	bgeu	a3, a2, 98b0 <__firmware_global_pointer+0x4b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:313
              my_q_rd_ptr = curr_loop->epoch_ptr;
    9888:	00872783          	lw	a5, 8(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:312
              curr_loop->curr_iter++;
    988c:	00168693          	addi	a3, a3, 1
    9890:	00d72023          	sw	a3, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:313
              my_q_rd_ptr = curr_loop->epoch_ptr;
    9894:	40f92e23          	sw	a5, 1052(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:315
              while (!ncrisc_noc_nonposted_writes_flushed(loading_noc, NCRISC_WR_DEF_TRID));
    9898:	42a44503          	lbu	a0, 1066(s0)
    989c:	00000593          	li	a1, 0
    98a0:	ffbf6097          	auipc	ra, 0xffbf6
    98a4:	760080e7          	jalr	1888(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    98a8:	fe0508e3          	beqz	a0, 9898 <__firmware_global_pointer+0x498>
    98ac:	bd9ff06f          	j	9484 <__firmware_global_pointer+0x84>
LoopStack<4>::pop():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:50
        ptr--;
    98b0:	fff78793          	addi	a5, a5, -1
    98b4:	04f12e23          	sw	a5, 92(sp)
    98b8:	d85ff06f          	j	963c <__firmware_global_pointer+0x23c>

Disassembly of section code_l1:

000098bc <init_erisc_streams(void*, unsigned long)>:
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    98bc:	ffb207b7          	lui	a5, 0xffb20
init_erisc_streams(void*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:82
  num_active_streams = RISC_EPOCH_INFO_PTR->num_active_streams;
    98c0:	00020637          	lui	a2, 0x20
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    98c4:	10a7a623          	sw	a0, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
init_erisc_streams(void*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:82
    98c8:	08060613          	addi	a2, a2, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
    98cc:	00862583          	lw	a1, 8(a2)
    98d0:	0000f7b7          	lui	a5, 0xf
    98d4:	4c078713          	addi	a4, a5, 1216 # f4c0 <active_stream_info>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:84
  volatile active_stream_info_t* curr_active_stream_info = active_stream_info;
    98d8:	4c078793          	addi	a5, a5, 1216
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:82
  num_active_streams = RISC_EPOCH_INFO_PTR->num_active_streams;
    98dc:	18b72023          	sw	a1, 384(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:85
  for (uint32_t i = 0;
    98e0:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:86
       i < num_active_streams;
    98e4:	04e58463          	beq	a1, a4, 992c <init_erisc_streams(void*, unsigned long)+0x70>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:88
    epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    98e8:	04470693          	addi	a3, a4, 68
    98ec:	00269693          	slli	a3, a3, 0x2
    98f0:	00d606b3          	add	a3, a2, a3
    98f4:	0046a683          	lw	a3, 4(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:90
    uint32_t start_phase_num_cfg_regs = l1_stream_info->start_phase_num_cfg_regs;
    98f8:	01e6c883          	lbu	a7, 30(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:91
    uint32_t flags = l1_stream_info->flags;
    98fc:	03c6a803          	lw	a6, 60(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:92
    uint32_t epoch_iters_remaining = l1_stream_info->epoch_iters_remaining;
    9900:	0306a503          	lw	a0, 48(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:94
    curr_active_stream_info->stream_id = stream_id;
    9904:	0006c683          	lbu	a3, 0(a3)
    9908:	00d78023          	sb	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:95
    curr_active_stream_info->dram_prefetch_stream_need_restart = 0;
    990c:	000781a3          	sb	zero, 3(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:96
    curr_active_stream_info->start_phase_num_cfg_regs = start_phase_num_cfg_regs;
    9910:	01178123          	sb	a7, 2(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:97
    curr_active_stream_info->flags = flags;
    9914:	01079323          	sh	a6, 6(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:98
    curr_active_stream_info->epoch_iters_remaining = epoch_iters_remaining; 
    9918:	00a7a423          	sw	a0, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:99
    curr_active_stream_info->active_streams_idx = i;
    991c:	00e780a3          	sb	a4, 1(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:85
  for (uint32_t i = 0;
    9920:	00170713          	addi	a4, a4, 1
    9924:	00c78793          	addi	a5, a5, 12
    9928:	fbdff06f          	j	98e4 <init_erisc_streams(void*, unsigned long)+0x28>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:105
}
    992c:	00008067          	ret

00009930 <risc_context_switch()>:
risc_context_switch():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:137
{
    9930:	ffb20637          	lui	a2, 0xffb20
ncrisc_noc_all_flushed(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:315
inline void ncrisc_noc_counters_init() {
}

inline bool ncrisc_noc_all_flushed(uint32_t noc) {
  bool all_flushed = true;
  for (uint32_t id = 0; id <= NOC_MAX_TRANSACTION_ID; id++) {
    9934:	28060593          	addi	a1, a2, 640 # ffb20280 <TENSIX_MAILBOX_BASE+0xffc60280>
risc_context_switch():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:137
    9938:	24060713          	addi	a4, a2, 576
ncrisc_noc_all_flushed(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:314
  bool all_flushed = true;
    993c:	00100793          	li	a5, 1
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
    9940:	00072683          	lw	a3, 0(a4)
ncrisc_noc_all_flushed(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:315
  for (uint32_t id = 0; id <= NOC_MAX_TRANSACTION_ID; id++) {
    9944:	00470713          	addi	a4, a4, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:316
    all_flushed &= NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(id)) == 0;
    9948:	0016b693          	seqz	a3, a3
    994c:	00d7f7b3          	and	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:315
  for (uint32_t id = 0; id <= NOC_MAX_TRANSACTION_ID; id++) {
    9950:	feb718e3          	bne	a4, a1, 9940 <risc_context_switch()+0x10>
ncrisc_noc_full_sync():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:323
  return all_flushed;
}

inline void ncrisc_noc_full_sync() {
  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    while (!ncrisc_noc_all_flushed(n));
    9954:	fe0782e3          	beqz	a5, 9938 <risc_context_switch()+0x8>
ncrisc_noc_all_flushed(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:314
  bool all_flushed = true;
    9958:	ffb305b7          	lui	a1, 0xffb30
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:315
  for (uint32_t id = 0; id <= NOC_MAX_TRANSACTION_ID; id++) {
    995c:	28058513          	addi	a0, a1, 640 # ffb30280 <TENSIX_MAILBOX_BASE+0xffc70280>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:314
  bool all_flushed = true;
    9960:	00078693          	mv	a3, a5
    9964:	24058713          	addi	a4, a1, 576
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
    9968:	00072603          	lw	a2, 0(a4)
ncrisc_noc_all_flushed(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:315
  for (uint32_t id = 0; id <= NOC_MAX_TRANSACTION_ID; id++) {
    996c:	00470713          	addi	a4, a4, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:316
    all_flushed &= NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(id)) == 0;
    9970:	00163613          	seqz	a2, a2
    9974:	00c6f6b3          	and	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:315
  for (uint32_t id = 0; id <= NOC_MAX_TRANSACTION_ID; id++) {
    9978:	fea718e3          	bne	a4, a0, 9968 <risc_context_switch()+0x38>
ncrisc_noc_full_sync():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:323
    while (!ncrisc_noc_all_flushed(n));
    997c:	fe0682e3          	beqz	a3, 9960 <risc_context_switch()+0x30>
risc_context_switch():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:139
    rtos_context_switch_ptr();
    9980:	0000f7b7          	lui	a5, 0xf
    9984:	4347a783          	lw	a5, 1076(a5) # f434 <rtos_context_switch_ptr>
    9988:	00078067          	jr	a5

0000998c <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)>:
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:323
#else
void __attribute__ ((noinline)) dram_input_stream_issue_scatter_read(uint32_t input_noc, uint32_t dram_data_buf_fetch_rdptr_byte, uint32_t data_rec_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_tiles,
#endif
                                                                      uint32_t dram_io_scatter_chunk_size_bytes, uint32_t stream_dest_addr, volatile tt_uint64_t tt_l1_ptr * scatter_offsets, uint32_t& scatter_idx,
                                                                      uint32_t& scatter_loop_index, uint32_t& scatter_loop_inc, uint32_t transaction_id
                                                                      ) {
    998c:	fd010113          	addi	sp, sp, -48
    9990:	03812383          	lw	t2, 56(sp)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    9994:	3fec8e37          	lui	t3, 0x3fec8
    9998:	090e0e13          	addi	t3, t3, 144 # 3fec8090 <noc_nonblocking_api.cc.88b5909b+0x3fea530c>
    999c:	01c38e33          	add	t3, t2, t3
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    99a0:	00001337          	lui	t1, 0x1
    99a4:	ffb21fb7          	lui	t6, 0xffb21
    99a8:	01051e93          	slli	t4, a0, 0x10
    99ac:	c0030313          	addi	t1, t1, -1024 # c00 <__firmware_stack_size+0x800>
    99b0:	c28f8f93          	addi	t6, t6, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    99b4:	002e1e13          	slli	t3, t3, 0x2
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    99b8:	0000f2b7          	lui	t0, 0xf
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    99bc:	006e8333          	add	t1, t4, t1
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:323
    99c0:	02812623          	sw	s0, 44(sp)
    99c4:	03212223          	sw	s2, 36(sp)
    99c8:	03312023          	sw	s3, 32(sp)
    99cc:	01412e23          	sw	s4, 28(sp)
    99d0:	01512c23          	sw	s5, 24(sp)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
    99d4:	01fe8fb3          	add	t6, t4, t6
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    99d8:	01de0e33          	add	t3, t3, t4
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:329
  uint32_t addr_with_offset = dram_data_buf_fetch_rdptr_byte + DRAM_BUF_DATA_OFFSET;
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
    // Note: keep () around the 32 bit addition to add before promotion to 64 bit
    uint64_t dram_src_addr_w_offset = tt_l1_load(&scatter_offsets[scatter_idx]);
    bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    99dc:	c00009b7          	lui	s3, 0xc0000
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:111
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
    99e0:	ffb20eb7          	lui	t4, 0xffb20
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    99e4:	00251513          	slli	a0, a0, 0x2
    99e8:	40428293          	addi	t0, t0, 1028 # f404 <noc_xy_local_addr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:113
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    99ec:	00002a37          	lui	s4, 0x2
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:282
    num_iter = num_iter & ~DRAM_IO_IS_SCATTER_LOOP;
    99f0:	80000ab7          	lui	s5, 0x80000
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:323
                                                                      ) {
    99f4:	03012903          	lw	s2, 48(sp)
    99f8:	03412403          	lw	s0, 52(sp)
    99fc:	02912423          	sw	s1, 40(sp)
    9a00:	01712823          	sw	s7, 16(sp)
    9a04:	01812623          	sw	s8, 12(sp)
    9a08:	01912423          	sw	s9, 8(sp)
    9a0c:	01612a23          	sw	s6, 20(sp)
    9a10:	01a12223          	sw	s10, 4(sp)
    9a14:	01b12023          	sw	s11, 0(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:324
  uint32_t addr_with_offset = dram_data_buf_fetch_rdptr_byte + DRAM_BUF_DATA_OFFSET;
    9a18:	02058593          	addi	a1, a1, 32
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:116
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9a1c:	00a39393          	slli	t2, t2, 0xa
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:325
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
    9a20:	00000493          	li	s1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:329
    dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    9a24:	fff98993          	addi	s3, s3, -1 # bfffffff <TENSIX_MAILBOX_BASE+0xc013ffff>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:328
    bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    9a28:	40000bb7          	lui	s7, 0x40000
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:103
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
    9a2c:	08000c13          	li	s8, 128
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:111
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
    9a30:	01d30333          	add	t1, t1, t4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9a34:	00a282b3          	add	t0, t0, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:113
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    9a38:	090a0a13          	addi	s4, s4, 144 # 2090 <__firmware_start+0x90>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:118
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
    9a3c:	00100c93          	li	s9, 1
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:282
    num_iter = num_iter & ~DRAM_IO_IS_SCATTER_LOOP;
    9a40:	fffaca93          	not	s5, s5
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:325 (discriminator 1)
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
    9a44:	0ec4f063          	bgeu	s1, a2, 9b24 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x198>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:327
    uint64_t dram_src_addr_w_offset = tt_l1_load(&scatter_offsets[scatter_idx]);
    9a48:	0008ad03          	lw	s10, 0(a7)
    9a4c:	003d1513          	slli	a0, s10, 0x3
    9a50:	00a80f33          	add	t5, a6, a0
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30

inline __attribute__((always_inline)) uint64_t tt_l1_load(volatile tt_uint64_t * tt_l1_ptr p)
{
    tt_uint64_t v;

    v.hi = p->hi;
    9a54:	000f2e83          	lw	t4, 0(t5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    9a58:	004f2f03          	lw	t5, 4(t5)
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:329
    dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    9a5c:	013f7b33          	and	s6, t5, s3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:328
    bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    9a60:	01ebff33          	and	t5, s7, t5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:330
    if (!is_padding_set)
    9a64:	000f1e63          	bnez	t5, 9a80 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0xf4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:331
      dram_src_addr_w_offset += (addr_with_offset + scatter_loop_inc);
    9a68:	00042f03          	lw	t5, 0(s0)
    9a6c:	01e58f33          	add	t5, a1, t5
    9a70:	01ee8f33          	add	t5, t4, t5
    9a74:	01df3db3          	sltu	s11, t5, t4
    9a78:	016d8b33          	add	s6, s11, s6
    9a7c:	000f0e93          	mv	t4, t5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:332 (discriminator 2)
    scatter_idx++;
    9a80:	001d0d13          	addi	s10, s10, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:333 (discriminator 2)
    volatile dram_scatter_loop_t tt_l1_ptr * dram_scatter_loop = (volatile dram_scatter_loop_t tt_l1_ptr *)&scatter_offsets[scatter_idx];
    9a84:	00850513          	addi	a0, a0, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:332 (discriminator 2)
    scatter_idx++;
    9a88:	01a8a023          	sw	s10, 0(a7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:333 (discriminator 2)
    volatile dram_scatter_loop_t tt_l1_ptr * dram_scatter_loop = (volatile dram_scatter_loop_t tt_l1_ptr *)&scatter_offsets[scatter_idx];
    9a8c:	00a80533          	add	a0, a6, a0
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    9a90:	000faf03          	lw	t5, 0(t6)
ncrisc_noc_fast_read_any_len_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:334
  while (!ncrisc_noc_fast_read_ok(noc, cmd_buf));
  ncrisc_noc_fast_read(noc, cmd_buf, src_addr, dest_addr, len_bytes, transaction_id); 
}

inline __attribute__((always_inline)) void ncrisc_noc_fast_read_any_len_scatter(uint32_t noc, uint32_t cmd_buf, uint64_t src_addr, uint32_t dest_addr, uint32_t len_bytes, uint32_t transaction_id) {
  while (NOC_CMD_BUF_READ_REG(noc, cmd_buf, NOC_CMD_CTRL) != NOC_CTRL_STATUS_READY);   //while (!ncrisc_noc_fast_read_ok(noc, cmd_buf));
    9a94:	fe0f1ee3          	bnez	t5, 9a90 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x104>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
    9a98:	000e2f03          	lw	t5, 0(t3)
ncrisc_noc_fast_read_scatter(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:103
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
    9a9c:	ffec6ee3          	bltu	s8, t5, 9a98 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x10c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:105
  if (len_bytes > 0) {
    9aa0:	02070463          	beqz	a4, 9ac8 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x13c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9aa4:	0002af03          	lw	t5, 0(t0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:111
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
    9aa8:	00f32623          	sw	a5, 12(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:112
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9aac:	01e32823          	sw	t5, 16(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:113
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    9ab0:	01432e23          	sw	s4, 28(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:114
    ptr[NOC_TARG_ADDR_LO >> 2] = (uint32_t)src_addr;
    9ab4:	01d32023          	sw	t4, 0(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:115
    ptr[NOC_TARG_ADDR_MID >> 2] = src_addr >> 32;
    9ab8:	01632223          	sw	s6, 4(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:116
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9abc:	00732c23          	sw	t2, 24(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:117
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
    9ac0:	02e32023          	sw	a4, 32(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:118
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
    9ac4:	03932423          	sw	s9, 40(t1)
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:279
  uint32_t num_iter = dram_scatter_loop->num_iter;
    9ac8:	00452f03          	lw	t5, 4(a0)
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:336
    ncrisc_noc_fast_read_any_len_scatter(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_dest_addr, dram_io_scatter_chunk_size_bytes, transaction_id);

    stream_dest_addr += dram_io_scatter_chunk_size_bytes;
    9acc:	00e787b3          	add	a5, a5, a4
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:281
  if (magic_number) {
    9ad0:	020f5c63          	bgez	t5, 9b08 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x17c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:283
    if (scatter_loop_index < num_iter) {
    9ad4:	00092e83          	lw	t4, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:282
    num_iter = num_iter & ~DRAM_IO_IS_SCATTER_LOOP;
    9ad8:	015f7f33          	and	t5, t5, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:283
    if (scatter_loop_index < num_iter) {
    9adc:	03eefa63          	bgeu	t4, t5, 9b10 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x184>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:284
      uint32_t inc = dram_scatter_loop->inc;
    9ae0:	00852b03          	lw	s6, 8(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:285
      uint32_t num_index_back = dram_scatter_loop->num_index_back;
    9ae4:	00052f03          	lw	t5, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:286
      scatter_loop_index++;
    9ae8:	001e8e93          	addi	t4, t4, 1 # ffb20001 <TENSIX_MAILBOX_BASE+0xffc60001>
    9aec:	01d92023          	sw	t4, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:287
      scatter_loop_inc += inc;
    9af0:	00042e83          	lw	t4, 0(s0)
    9af4:	016e8eb3          	add	t4, t4, s6
    9af8:	01d42023          	sw	t4, 0(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:288
      scatter_idx -= num_index_back;
    9afc:	0008a503          	lw	a0, 0(a7)
    9b00:	41e50533          	sub	a0, a0, t5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:292
      scatter_idx += DRAM_IO_IS_SCATTER_LOOP_SIZE;
    9b04:	00a8a023          	sw	a0, 0(a7)
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:325
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
    9b08:	00d484b3          	add	s1, s1, a3
    9b0c:	f39ff06f          	j	9a44 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0xb8>
decompress_scatter_offsets(tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, dram_scatter_loop_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:290
      scatter_loop_index = 0;
    9b10:	00092023          	sw	zero, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:291
      scatter_loop_inc = 0;
    9b14:	00042023          	sw	zero, 0(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:292
      scatter_idx += DRAM_IO_IS_SCATTER_LOOP_SIZE;
    9b18:	0008a503          	lw	a0, 0(a7)
    9b1c:	00250513          	addi	a0, a0, 2
    9b20:	fe5ff06f          	j	9b04 <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)+0x178>
dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:340

    decompress_scatter_offsets(scatter_offsets, scatter_idx, scatter_loop_index, scatter_loop_inc, dram_scatter_loop);
  }
}
    9b24:	02c12403          	lw	s0, 44(sp)
    9b28:	02812483          	lw	s1, 40(sp)
    9b2c:	02412903          	lw	s2, 36(sp)
    9b30:	02012983          	lw	s3, 32(sp)
    9b34:	01c12a03          	lw	s4, 28(sp)
    9b38:	01812a83          	lw	s5, 24(sp)
    9b3c:	01412b03          	lw	s6, 20(sp)
    9b40:	01012b83          	lw	s7, 16(sp)
    9b44:	00c12c03          	lw	s8, 12(sp)
    9b48:	00812c83          	lw	s9, 8(sp)
    9b4c:	00412d03          	lw	s10, 4(sp)
    9b50:	00012d83          	lw	s11, 0(sp)
    9b54:	03010113          	addi	sp, sp, 48
    9b58:	00008067          	ret

00009b5c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]>:
stream_done_hint():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:367
  }
  return debug_assert > 0;
}

inline bool stream_done_hint() {
  uint32_t stream_done = NOC_STREAM_READ_REG(0, STREAM_BLOB_AUTO_CFG_DONE_REG_INDEX) | NOC_STREAM_READ_REG(0, STREAM_BLOB_AUTO_CFG_DONE_REG_INDEX + 1);
    9b5c:	ffb407b7          	lui	a5, 0xffb40
    9b60:	3a87a703          	lw	a4, 936(a5) # ffb403a8 <TENSIX_MAILBOX_BASE+0xffc803a8>
    9b64:	3ac7a683          	lw	a3, 940(a5)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:501

  init_tile_clear();
}


void risc_stream_resart_check(
    9b68:	fc010113          	addi	sp, sp, -64
    9b6c:	03412423          	sw	s4, 40(sp)
    9b70:	02112e23          	sw	ra, 60(sp)
    9b74:	02812c23          	sw	s0, 56(sp)
    9b78:	02912a23          	sw	s1, 52(sp)
    9b7c:	03212823          	sw	s2, 48(sp)
    9b80:	03312623          	sw	s3, 44(sp)
    9b84:	03512223          	sw	s5, 36(sp)
    9b88:	03612023          	sw	s6, 32(sp)
    9b8c:	01712e23          	sw	s7, 28(sp)
    9b90:	01812c23          	sw	s8, 24(sp)
    9b94:	01912a23          	sw	s9, 20(sp)
    9b98:	01a12823          	sw	s10, 16(sp)
    9b9c:	01b12623          	sw	s11, 12(sp)
stream_done_hint():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:367
    9ba0:	00d76733          	or	a4, a4, a3
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:501
    9ba4:	00050a13          	mv	s4, a0
stream_done_hint():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:368
  if (stream_done) {
    9ba8:	00070a63          	beqz	a4, 9bbc <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x60>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:369
    NOC_STREAM_WRITE_REG(0, STREAM_BLOB_AUTO_CFG_DONE_REG_INDEX, 0xFFFFFFFF);
    9bac:	fff00713          	li	a4, -1
    9bb0:	3ae7a423          	sw	a4, 936(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:370
    NOC_STREAM_WRITE_REG(0, STREAM_BLOB_AUTO_CFG_DONE_REG_INDEX + 1, 0xFFFFFFFF);
    9bb4:	3ae7a623          	sw	a4, 940(a5)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:506
  uint32_t &stream_restart_check_cnt,
  uint32_t &num_active_streams, active_stream_info_t *active_stream_info
  ) {
  if (stream_done_hint())
    stream_restart_check_cnt = 0;
    9bb8:	00052023          	sw	zero, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:508

  bool check_stream_restart = (stream_restart_check_cnt == 0);
    9bbc:	000a2983          	lw	s3, 0(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:509
  stream_restart_check_cnt = (stream_restart_check_cnt + 1) & STREAM_RESTART_CHECK_MASK;
    9bc0:	00198793          	addi	a5, s3, 1
    9bc4:	0077f793          	andi	a5, a5, 7
    9bc8:	00fa2023          	sw	a5, 0(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:511

  if (check_stream_restart) {
    9bcc:	24099463          	bnez	s3, 9e14 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x2b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:512
    active_stream_info_t * curr_active_stream_info = active_stream_info;
    9bd0:	0000fb37          	lui	s6, 0xf
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    9bd4:	00100ab7          	lui	s5, 0x100
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    9bd8:	00010bb7          	lui	s7, 0x10
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:548
      if (stream_curr_iter_done) {
        if (epoch_iters_remaining == 0) {
          continue;
        }
        else {
          volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    9bdc:	00020c37          	lui	s8, 0x20
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:512
    active_stream_info_t * curr_active_stream_info = active_stream_info;
    9be0:	4c0b0493          	addi	s1, s6, 1216 # f4c0 <active_stream_info>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    9be4:	b40a8a93          	addi	s5, s5, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
    9be8:	4c0b0b13          	addi	s6, s6, 1216
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    9bec:	00001cb7          	lui	s9, 0x1
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    9bf0:	fffb8b93          	addi	s7, s7, -1 # ffff <dram_input_stream_state+0x177>
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:548
          volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    9bf4:	080c0c13          	addi	s8, s8, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:514
        i < num_active_streams;
    9bf8:	180b2783          	lw	a5, 384(s6)
    9bfc:	20f9fc63          	bgeu	s3, a5, 9e14 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x2b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:517
      uint32_t stream_id = curr_active_stream_info->stream_id;
    9c00:	0004cd03          	lbu	s10, 0(s1)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    9c04:	ffb207b7          	lui	a5, 0xffb20
    9c08:	b0000737          	lui	a4, 0xb0000
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    9c0c:	015d0433          	add	s0, s10, s5
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:518
      uint32_t flags = curr_active_stream_info->flags;
    9c10:	0064d903          	lhu	s2, 6(s1)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
    9c14:	00c41413          	slli	s0, s0, 0xc
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    9c18:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
    9c1c:	08c42783          	lw	a5, 140(s0)
check_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:421

  return false;
}

inline void check_dummy_phase(uint32_t stream_id) {
  if (stream_phase_is_active(stream_id)) {
    9c20:	0047f793          	andi	a5, a5, 4
    9c24:	04078663          	beqz	a5, 9c70 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x114>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    9c28:	02c42783          	lw	a5, 44(s0)
check_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:423
    uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
    if (cur_phase == 0x1F) {
    9c2c:	01f00713          	li	a4, 31
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:422
    uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
    9c30:	00f7d793          	srli	a5, a5, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:423
    if (cur_phase == 0x1F) {
    9c34:	02e79e63          	bne	a5, a4, 9c70 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x114>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:424
      if (NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, SOURCE_ENDPOINT)) {
    9c38:	02842783          	lw	a5, 40(s0)
    9c3c:	0107f793          	andi	a5, a5, 16
    9c40:	02078863          	beqz	a5, 9c70 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x114>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:425
        uint32_t buf_size = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    9c44:	01c42603          	lw	a2, 28(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:426
        uint32_t buf_space_available = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
    9c48:	07042703          	lw	a4, 112(s0)
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    9c4c:	09042783          	lw	a5, 144(s0)
check_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:429
        uint32_t num_tiles = stream_get_curr_phase_num_msgs(stream_id);
    
        if (buf_space_available == buf_size && num_tiles > 0) {
    9c50:	02e61063          	bne	a2, a4, 9c70 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x114>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    9c54:	00001737          	lui	a4, 0x1
    9c58:	00c7d793          	srli	a5, a5, 0xc
    9c5c:	fff70713          	addi	a4, a4, -1 # fff <__firmware_stack_size+0xbff>
    9c60:	00e7f7b3          	and	a5, a5, a4
check_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:429
        if (buf_space_available == buf_size && num_tiles > 0) {
    9c64:	00078663          	beqz	a5, 9c70 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x114>
stream_relay_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:207
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    9c68:	001c8793          	addi	a5, s9, 1 # 1001 <__firmware_stack_size+0xc01>
    9c6c:	06f42c23          	sw	a5, 120(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:523
      if ((flags & STREAM_OUTPUT_PARK) != 0) {
    9c70:	08097793          	andi	a5, s2, 128
    9c74:	04078863          	beqz	a5, 9cc4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x168>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:524
        if ((flags & STREAM_INTERMEDIATE) != 0 || (flags & STREAM_MOVES_RAW_DATA) != 0) {
    9c78:	05097793          	andi	a5, s2, 80
stream_receiver_endpoint_single_clear_op(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:311
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_CLEAR_REG_INDEX, num_tiles);
    9c7c:	00100713          	li	a4, 1
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:524
    9c80:	10078c63          	beqz	a5, 9d98 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:525
          volatile uint32_t tt_reg_ptr* tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    9c84:	000d0513          	mv	a0, s10
    9c88:	ffbf6097          	auipc	ra, 0xffbf6
    9c8c:	3fc080e7          	jalr	1020(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147

  #endif
#endif

inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_operand_tiles_received_ptr(int operand) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    9c90:	ffbf6097          	auipc	ra, 0xffbf6
    9c94:	3b8080e7          	jalr	952(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    9c98:	01550db3          	add	s11, a0, s5
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:526
          volatile uint32_t tt_reg_ptr* tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    9c9c:	000d0513          	mv	a0, s10
    9ca0:	ffbf6097          	auipc	ra, 0xffbf6
    9ca4:	3e4080e7          	jalr	996(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
    9ca8:	00cd9d93          	slli	s11, s11, 0xc
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  } else {
    return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
  }
#else
inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_operand_tiles_acked_ptr(int operand) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    9cac:	ffbf6097          	auipc	ra, 0xffbf6
    9cb0:	39c080e7          	jalr	924(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:527
          tiles_acked_ptr[0] = tiles_received_ptr[0];
    9cb4:	010da783          	lw	a5, 16(s11)
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
    9cb8:	01550533          	add	a0, a0, s5
    9cbc:	00c51513          	slli	a0, a0, 0xc
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:527
    9cc0:	00f52623          	sw	a5, 12(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:537
                                      ((flags & STREAM_MOVES_RAW_DATA) == 0) &&
    9cc4:	44097713          	andi	a4, s2, 1088
    9cc8:	00000793          	li	a5, 0
    9ccc:	00071e63          	bnez	a4, 9ce8 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x18c>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    9cd0:	08c42603          	lw	a2, 140(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    9cd4:	3a442703          	lw	a4, 932(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    9cd8:	00167613          	andi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    9cdc:	00060663          	beqz	a2, 9ce8 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x18c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    9ce0:	01175793          	srli	a5, a4, 0x11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    9ce4:	0017b793          	seqz	a5, a5
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:539
      if ((flags & STREAM_DRAM_INPUT) != 0 && ((flags & STREAM_DRAM_IO) != 0 || (flags & STREAM_DRAM_STREAMING) != 0)) {
    9ce8:	00497713          	andi	a4, s2, 4
    9cec:	00070e63          	beqz	a4, 9d08 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x1ac>
    9cf0:	02297713          	andi	a4, s2, 34
    9cf4:	00070a63          	beqz	a4, 9d08 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x1ac>
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    9cf8:	00442703          	lw	a4, 4(s0)
    9cfc:	01777733          	and	a4, a4, s7
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:540
        stream_curr_iter_done &= stream_src_endpoint_get_phase_tiles_count(stream_id) == 0;
    9d00:	00173713          	seqz	a4, a4
    9d04:	00e7f7b3          	and	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:543
      if (stream_curr_iter_done) {
    9d08:	0a078e63          	beqz	a5, 9dc4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x268>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:535
      uint32_t epoch_iters_remaining = curr_active_stream_info->epoch_iters_remaining;
    9d0c:	0084a783          	lw	a5, 8(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:544
        if (epoch_iters_remaining == 0) {
    9d10:	06078e63          	beqz	a5, 9d8c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x230>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:548
          volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    9d14:	04498713          	addi	a4, s3, 68
    9d18:	00271713          	slli	a4, a4, 0x2
    9d1c:	00ec0733          	add	a4, s8, a4
    9d20:	00472703          	lw	a4, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:549
          epoch_iters_remaining--;
    9d24:	fff78793          	addi	a5, a5, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:550
          curr_active_stream_info->epoch_iters_remaining = epoch_iters_remaining;
    9d28:	00f4a423          	sw	a5, 8(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:551
          if (epoch_iters_remaining > 0) {
    9d2c:	08078863          	beqz	a5, 9dbc <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x260>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    9d30:	02842783          	lw	a5, 40(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:560
            uint32_t start_phase_num_cfg_regs = curr_active_stream_info->start_phase_num_cfg_regs;

            stream_phase_blob_run(stream_id, blob_start_addr, start_phase_num_cfg_regs);

            bool need_restart =
                ((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) &&
    9d34:	00400693          	li	a3, 4
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    9d38:	dff7f793          	andi	a5, a5, -513
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    9d3c:	02f42423          	sw	a5, 40(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    9d40:	00100793          	li	a5, 1
    9d44:	06f42e23          	sw	a5, 124(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:554
            uint32_t blob_start_addr = l1_stream_info->blob_start_addr;
    9d48:	02472703          	lw	a4, 36(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:555
            uint32_t start_phase_num_cfg_regs = curr_active_stream_info->start_phase_num_cfg_regs;
    9d4c:	0024c783          	lbu	a5, 2(s1)
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    9d50:	02042223          	sw	zero, 36(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    9d54:	01879793          	slli	a5, a5, 0x18
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:28
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr);
    9d58:	02e42823          	sw	a4, 48(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    9d5c:	08f42823          	sw	a5, 144(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    9d60:	000037b7          	lui	a5, 0x3
    9d64:	20078793          	addi	a5, a5, 512 # 3200 <__firmware_start+0x1200>
    9d68:	02f42423          	sw	a5, 40(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:560
                ((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) &&
    9d6c:	02697713          	andi	a4, s2, 38
    9d70:	00000793          	li	a5, 0
    9d74:	00d71663          	bne	a4, a3, 9d80 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x224>
    9d78:	05097913          	andi	s2, s2, 80
    9d7c:	012037b3          	snez	a5, s2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:562
                ((flags & STREAM_INTERMEDIATE) != 0 || (flags & STREAM_MOVES_RAW_DATA) != 0);
            curr_active_stream_info->dram_prefetch_stream_need_restart = need_restart;
    9d80:	00f481a3          	sb	a5, 3(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:563
            stream_restart_check_cnt = !need_restart;
    9d84:	0017c913          	xori	s2, a5, 1
    9d88:	012a2023          	sw	s2, 0(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:513
    for (uint32_t i = 0;
    9d8c:	00198993          	addi	s3, s3, 1
    9d90:	00c48493          	addi	s1, s1, 12
    9d94:	e65ff06f          	j	9bf8 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x9c>
stream_clear_all_tiles(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:516
  uint32_t msg_info_wr_ptr;
  uint32_t msg_info_rd_ptr;
  uint32_t num_msgs_recv;
  uint32_t num_msgs_recv_in_bufs_and_mem;
  do {
    msg_info_rd_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX);
    9d98:	02042583          	lw	a1, 32(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:517
    num_msgs_recv = NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
    9d9c:	04842603          	lw	a2, 72(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:518
    msg_info_wr_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX);
    9da0:	06842783          	lw	a5, 104(s0)
    9da4:	00f607b3          	add	a5, a2, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:520
    num_msgs_recv_in_bufs_and_mem = msg_info_wr_ptr - msg_info_rd_ptr + num_msgs_recv;
    if (num_msgs_recv > 0) {
    9da8:	00060663          	beqz	a2, 9db4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x258>
stream_receiver_endpoint_single_clear_op(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:311
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_CLEAR_REG_INDEX, num_tiles);
    9dac:	04e42a23          	sw	a4, 84(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:312
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_DATA_CLEAR_REG_INDEX, num_tiles);
    9db0:	04e42c23          	sw	a4, 88(s0)
stream_clear_all_tiles(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:523
      stream_receiver_endpoint_single_clear_op(stream_id, 1);
    }
  } while (num_msgs_recv_in_bufs_and_mem > 0);
    9db4:	feb792e3          	bne	a5, a1, 9d98 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x23c>
    9db8:	f0dff06f          	j	9cc4 <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x168>
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:566
          }
          else {
            l1_stream_info->epoch_iters_remaining = 0;
    9dbc:	02072823          	sw	zero, 48(a4)
    9dc0:	fcdff06f          	j	9d8c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x230>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:578
            }
#endif
          }
        }
      }
      else if (curr_active_stream_info->dram_prefetch_stream_need_restart) {
    9dc4:	0034c783          	lbu	a5, 3(s1)
    9dc8:	fc0782e3          	beqz	a5, 9d8c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x230>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    9dcc:	08c42783          	lw	a5, 140(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:580
        uint32_t stream_restarted = stream_phase_is_active(stream_id);
        if (stream_restarted) {                     
    9dd0:	0047f793          	andi	a5, a5, 4
    9dd4:	fa078ce3          	beqz	a5, 9d8c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x230>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:582
          uint32_t stream_phase_tiles = stream_src_endpoint_get_phase_tiles_count(stream_id);
          volatile uint32_t tt_reg_ptr* tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    9dd8:	000d0513          	mv	a0, s10
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    9ddc:	00442403          	lw	s0, 4(s0)
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:582
    9de0:	ffbf6097          	auipc	ra, 0xffbf6
    9de4:	2a4080e7          	jalr	676(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    9de8:	ffbf6097          	auipc	ra, 0xffbf6
    9dec:	260080e7          	jalr	608(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    9df0:	01550533          	add	a0, a0, s5
    9df4:	00c51513          	slli	a0, a0, 0xc
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:583
          uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    9df8:	01052783          	lw	a5, 16(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
    9dfc:	008787b3          	add	a5, a5, s0
risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:585
          uint16_t new_epoch_tiles_received = op_pack_tiles_ptr_add(operand_tiles_received, stream_phase_tiles);
          tiles_received_ptr[0] = new_epoch_tiles_received;
    9e00:	01079793          	slli	a5, a5, 0x10
    9e04:	0107d793          	srli	a5, a5, 0x10
    9e08:	00f52823          	sw	a5, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:586
          curr_active_stream_info->dram_prefetch_stream_need_restart = 0;
    9e0c:	000481a3          	sb	zero, 3(s1)
    9e10:	f7dff06f          	j	9d8c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]+0x230>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:591
        }
      }
    }
  }
}
    9e14:	03c12083          	lw	ra, 60(sp)
    9e18:	03812403          	lw	s0, 56(sp)
    9e1c:	03412483          	lw	s1, 52(sp)
    9e20:	03012903          	lw	s2, 48(sp)
    9e24:	02c12983          	lw	s3, 44(sp)
    9e28:	02812a03          	lw	s4, 40(sp)
    9e2c:	02412a83          	lw	s5, 36(sp)
    9e30:	02012b03          	lw	s6, 32(sp)
    9e34:	01c12b83          	lw	s7, 28(sp)
    9e38:	01812c03          	lw	s8, 24(sp)
    9e3c:	01412c83          	lw	s9, 20(sp)
    9e40:	01012d03          	lw	s10, 16(sp)
    9e44:	00c12d83          	lw	s11, 12(sp)
    9e48:	04010113          	addi	sp, sp, 64
    9e4c:	00008067          	ret

00009e50 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    9e50:	3fec88b7          	lui	a7, 0x3fec8
    9e54:	09088893          	addi	a7, a7, 144 # 3fec8090 <noc_nonblocking_api.cc.88b5909b+0x3fea530c>
    9e58:	011788b3          	add	a7, a5, a7
    9e5c:	01051813          	slli	a6, a0, 0x10
    9e60:	00289893          	slli	a7, a7, 0x2
    9e64:	010888b3          	add	a7, a7, a6
ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:4
#include "noc_nonblocking_api.h"

void ncrisc_noc_fast_read_l1(uint32_t noc, uint32_t cmd_buf, uint64_t src_addr, uint32_t dest_addr, uint32_t len_bytes, uint32_t transaction_id) {
  while (NOC_STATUS_READ_REG_L1(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
    9e68:	08000313          	li	t1, 128
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    9e6c:	0008ae03          	lw	t3, 0(a7)
ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:4
    9e70:	ffc36ee3          	bltu	t1, t3, 9e6c <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x1c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:6

  if (len_bytes > 0) {
    9e74:	04070e63          	beqz	a4, 9ed0 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x80>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:9
    //word offset noc cmd interface
    uint32_t noc_rd_cmd_field = NOC_CMD_CPY | NOC_CMD_RD | NOC_CMD_RESP_MARKED | NOC_CMD_VC_STATIC | NOC_CMD_STATIC_VC(1);
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
    9e78:	000018b7          	lui	a7, 0x1
    9e7c:	c0088893          	addi	a7, a7, -1024 # c00 <__firmware_stack_size+0x800>
    9e80:	01180833          	add	a6, a6, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:12
    volatile uint32_t* ptr = (volatile uint32_t*)offset;

    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
    9e84:	ffb208b7          	lui	a7, 0xffb20
    9e88:	01180333          	add	t1, a6, a7
    9e8c:	00d32623          	sw	a3, 12(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:13
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9e90:	0000f6b7          	lui	a3, 0xf
    9e94:	40468693          	addi	a3, a3, 1028 # f404 <noc_xy_local_addr>
    9e98:	00251513          	slli	a0, a0, 0x2
    9e9c:	00a68533          	add	a0, a3, a0
    9ea0:	00052683          	lw	a3, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:17
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    ptr[NOC_TARG_ADDR_LO >> 2] = (uint32_t)src_addr;
    ptr[NOC_TARG_ADDR_MID >> 2] = src_addr >> 32;
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9ea4:	00a79793          	slli	a5, a5, 0xa
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:13
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9ea8:	00d32823          	sw	a3, 16(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:14
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
    9eac:	000026b7          	lui	a3, 0x2
    9eb0:	09068693          	addi	a3, a3, 144 # 2090 <__firmware_start+0x90>
    9eb4:	00d32e23          	sw	a3, 28(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:15
    ptr[NOC_TARG_ADDR_LO >> 2] = (uint32_t)src_addr;
    9eb8:	00b32023          	sw	a1, 0(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:16
    ptr[NOC_TARG_ADDR_MID >> 2] = src_addr >> 32;
    9ebc:	00c32223          	sw	a2, 4(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:17
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9ec0:	00f32c23          	sw	a5, 24(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:18
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
    9ec4:	02e32023          	sw	a4, 32(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:19
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
    9ec8:	00100793          	li	a5, 1
    9ecc:	02f32423          	sw	a5, 40(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:21
  }
}
    9ed0:	00008067          	ret

00009ed4 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    9ed4:	ffb218b7          	lui	a7, 0xffb21
    9ed8:	01051813          	slli	a6, a0, 0x10
    9edc:	c2888893          	addi	a7, a7, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    9ee0:	01180833          	add	a6, a6, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    9ee4:	00082883          	lw	a7, 0(a6)
ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:51
  }
}

#ifdef RISC_B0_HW
void ncrisc_noc_fast_read_any_len_l1(uint32_t noc, uint32_t cmd_buf, uint64_t src_addr, uint32_t dest_addr, uint32_t len_bytes, uint32_t transaction_id) {
  while (!ncrisc_noc_fast_read_ok_l1(noc, cmd_buf));
    9ee8:	fe089ee3          	bnez	a7, 9ee4 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x10>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:52
  ncrisc_noc_fast_read_l1(noc, cmd_buf, src_addr, dest_addr, len_bytes, transaction_id); 
    9eec:	f65ff06f          	j	9e50 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>

00009ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>:
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    9ef0:	3fec8337          	lui	t1, 0x3fec8
    9ef4:	09030313          	addi	t1, t1, 144 # 3fec8090 <noc_nonblocking_api.cc.88b5909b+0x3fea530c>
    9ef8:	00680333          	add	t1, a6, t1
    9efc:	01051893          	slli	a7, a0, 0x10
    9f00:	00231313          	slli	t1, t1, 0x2
    9f04:	01130333          	add	t1, t1, a7
ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:24
  while (NOC_STATUS_READ_REG_L1(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
    9f08:	08000e13          	li	t3, 128
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    9f0c:	00032e83          	lw	t4, 0(t1)
ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:24
    9f10:	ffde6ee3          	bltu	t3, t4, 9f0c <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x1c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:26
  if (len_bytes > 0) {
    9f14:	04070e63          	beqz	a4, 9f70 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x80>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:30
      NOC_CMD_STATIC_VC(vc) |
    9f18:	00d79793          	slli	a5, a5, 0xd
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:27
    uint32_t noc_cmd_field =
    9f1c:	0927e313          	ori	t1, a5, 146
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:36
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
    9f20:	000017b7          	lui	a5, 0x1
    9f24:	c0078793          	addi	a5, a5, -1024 # c00 <__firmware_stack_size+0x800>
    9f28:	00f887b3          	add	a5, a7, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:38
    ptr[NOC_CTRL >> 2] = noc_cmd_field;
    9f2c:	ffb208b7          	lui	a7, 0xffb20
    9f30:	01178e33          	add	t3, a5, a7
    9f34:	006e2e23          	sw	t1, 28(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:39
    ptr[NOC_TARG_ADDR_LO >> 2] = src_addr;
    9f38:	00be2023          	sw	a1, 0(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:40
    ptr[NOC_TARG_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9f3c:	0000f5b7          	lui	a1, 0xf
    9f40:	00251893          	slli	a7, a0, 0x2
    9f44:	40458513          	addi	a0, a1, 1028 # f404 <noc_xy_local_addr>
    9f48:	01150533          	add	a0, a0, a7
    9f4c:	00052583          	lw	a1, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:43
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9f50:	00a81813          	slli	a6, a6, 0xa
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:40
    ptr[NOC_TARG_ADDR_MID >> 2] = noc_xy_local_addr[noc];
    9f54:	00be2223          	sw	a1, 4(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:41
    ptr[NOC_RET_ADDR_LO >> 2] = (uint32_t)dest_addr;
    9f58:	00ce2623          	sw	a2, 12(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:42
    ptr[NOC_RET_ADDR_MID >> 2] = dest_addr >> 32;
    9f5c:	00de2823          	sw	a3, 16(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:43
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
    9f60:	010e2c23          	sw	a6, 24(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:44
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
    9f64:	02ee2023          	sw	a4, 32(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:45
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
    9f68:	00100713          	li	a4, 1
    9f6c:	02ee2423          	sw	a4, 40(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.cc:47
}
    9f70:	00008067          	ret

00009f74 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:260
                          REPLICATE_VC, false, false, 1, transaction_id);
    dest_addr += chunk_size_bytes;
  }
}

void replicate_l1(uint32_t noc_id, uint32_t src_addr, uint64_t dest_addr, uint32_t chunk_size_bytes, uint32_t times_to_replicate, uint32_t transaction_id) {
    9f74:	fd010113          	addi	sp, sp, -48
    9f78:	01712623          	sw	s7, 12(sp)
    9f7c:	00078b93          	mv	s7, a5
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    9f80:	ffb217b7          	lui	a5, 0xffb21
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:260
    9f84:	01612823          	sw	s6, 16(sp)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    9f88:	c2878793          	addi	a5, a5, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    9f8c:	01051b13          	slli	s6, a0, 0x10
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:260
    9f90:	02812423          	sw	s0, 40(sp)
    9f94:	02912223          	sw	s1, 36(sp)
    9f98:	03212023          	sw	s2, 32(sp)
    9f9c:	01312e23          	sw	s3, 28(sp)
    9fa0:	01412c23          	sw	s4, 24(sp)
    9fa4:	01512a23          	sw	s5, 20(sp)
    9fa8:	02112623          	sw	ra, 44(sp)
    9fac:	00050993          	mv	s3, a0
    9fb0:	00058a93          	mv	s5, a1
    9fb4:	00060413          	mv	s0, a2
    9fb8:	00068493          	mv	s1, a3
    9fbc:	00070913          	mv	s2, a4
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    9fc0:	00fb0b33          	add	s6, s6, a5
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:267
#ifdef RISC_B0_HW
  uint32_t replicate_cmd_buf = NCRISC_SMALL_TXN_CMD_BUF;
#else
  uint32_t replicate_cmd_buf = NCRISC_WR_CMD_BUF;
#endif
  for (uint32_t j = 0; j < times_to_replicate; j++) {
    9fc4:	00000a13          	li	s4, 0
    9fc8:	057a0063          	beq	s4, s7, a008 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x94>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    9fcc:	000b2783          	lw	a5, 0(s6)
replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:268
    while (!ncrisc_noc_fast_write_ok_l1(noc_id, replicate_cmd_buf));
    9fd0:	fe079ee3          	bnez	a5, 9fcc <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x58>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:269
    ncrisc_noc_fast_write_l1(noc_id, replicate_cmd_buf,
    9fd4:	00090713          	mv	a4, s2
    9fd8:	00040613          	mv	a2, s0
    9fdc:	00048693          	mv	a3, s1
    9fe0:	00100813          	li	a6, 1
    9fe4:	000a8593          	mv	a1, s5
    9fe8:	00098513          	mv	a0, s3
    9fec:	f05ff0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:274
                          src_addr,
                          dest_addr,
                          chunk_size_bytes,
                          REPLICATE_VC, false, false, 1, transaction_id);
    dest_addr += chunk_size_bytes;
    9ff0:	012407b3          	add	a5, s0, s2
    9ff4:	0087b733          	sltu	a4, a5, s0
    9ff8:	009704b3          	add	s1, a4, s1
    9ffc:	00078413          	mv	s0, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:267
  for (uint32_t j = 0; j < times_to_replicate; j++) {
    a000:	001a0a13          	addi	s4, s4, 1
    a004:	fc5ff06f          	j	9fc8 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x54>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:276
  }
}
    a008:	02c12083          	lw	ra, 44(sp)
    a00c:	02812403          	lw	s0, 40(sp)
    a010:	02412483          	lw	s1, 36(sp)
    a014:	02012903          	lw	s2, 32(sp)
    a018:	01c12983          	lw	s3, 28(sp)
    a01c:	01812a03          	lw	s4, 24(sp)
    a020:	01412a83          	lw	s5, 20(sp)
    a024:	01012b03          	lw	s6, 16(sp)
    a028:	00c12b83          	lw	s7, 12(sp)
    a02c:	03010113          	addi	sp, sp, 48
    a030:	00008067          	ret

0000a034 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]>:
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1050
    }
  }
}
#endif

void risc_dram_stream_handler_init_l1(
    a034:	f7010113          	addi	sp, sp, -144
    a038:	08812423          	sw	s0, 136(sp)
    a03c:	08912223          	sw	s1, 132(sp)
    a040:	09212023          	sw	s2, 128(sp)
    a044:	07312e23          	sw	s3, 124(sp)
    a048:	07412c23          	sw	s4, 120(sp)
    a04c:	07512a23          	sw	s5, 116(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a050:	ffb207b7          	lui	a5, 0xffb20
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1050
    a054:	08112623          	sw	ra, 140(sp)
    a058:	07612823          	sw	s6, 112(sp)
    a05c:	07712623          	sw	s7, 108(sp)
    a060:	07812423          	sw	s8, 104(sp)
    a064:	07912223          	sw	s9, 100(sp)
    a068:	07a12023          	sw	s10, 96(sp)
    a06c:	05b12e23          	sw	s11, 92(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a070:	1007a623          	sw	zero, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
    a074:	a0000737          	lui	a4, 0xa0000
    a078:	10e7a623          	sw	a4, 268(a5)
tile_header_buffer_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:94
  const uint32_t NUM_TILE_HEADER_BUF_CHUNKS = MAX_TILES_PER_PHASE / TILE_HEADER_BUF_INIT_CHUNK_WORDS;
  uint32_t header_buf_init_noc = NUM_NOCS-1-loading_noc;
  volatile uint32_t * tt_l1_ptr l1_tile_size_words_ptr = &(RISC_EPOCH_INFO_PTR->tile_size_words[0]);
  volatile uint32_t * tt_l1_ptr l1_tile_size_header_buf_addr_ptr = &(RISC_EPOCH_INFO_PTR->tile_size_header_buf_addr[0]);
  // L1 reads flushed by immediate usage
  uint32_t num_tile_sizes = RISC_EPOCH_INFO_PTR->num_tile_sizes;
    a07c:	000204b7          	lui	s1, 0x20
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:90
  uint32_t header_buf_init_noc = NUM_NOCS-1-loading_noc;
    a080:	0000f7b7          	lui	a5, 0xf
    a084:	42a7c503          	lbu	a0, 1066(a5) # f42a <loading_noc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:94
  uint32_t num_tile_sizes = RISC_EPOCH_INFO_PTR->num_tile_sizes;
    a088:	08048793          	addi	a5, s1, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
    a08c:	0107aa83          	lw	s5, 16(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:90
  uint32_t header_buf_init_noc = NUM_NOCS-1-loading_noc;
    a090:	00100413          	li	s0, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:106
    for (uint32_t j = 0; j < TILE_HEADER_BUF_INIT_CHUNK_WORDS; j++) {
      l1_header_buf_tile_size_ptr[0] = tile_size_words;
      l1_header_buf_tile_size_ptr += 4;
    }

    uint64_t tile_size_header_buf_curr_dest_addr = NOC_XY_ADDR(my_x[header_buf_init_noc], my_y[header_buf_init_noc], (tile_size_header_buf_addr + TILE_HEADER_BUF_INIT_CHUNK_BYTES));
    a094:	0000f9b7          	lui	s3, 0xf
    a098:	0000f937          	lui	s2, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:90
  uint32_t header_buf_init_noc = NUM_NOCS-1-loading_noc;
    a09c:	40a40433          	sub	s0, s0, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:106
    uint64_t tile_size_header_buf_curr_dest_addr = NOC_XY_ADDR(my_x[header_buf_init_noc], my_y[header_buf_init_noc], (tile_size_header_buf_addr + TILE_HEADER_BUF_INIT_CHUNK_BYTES));
    a0a0:	42898993          	addi	s3, s3, 1064 # f428 <my_y>
    a0a4:	42c90913          	addi	s2, s2, 1068 # f42c <my_x>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:95
  for (uint32_t i = 0; i < num_tile_sizes; i++) {
    a0a8:	00000a13          	li	s4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:91
  volatile uint32_t * tt_l1_ptr l1_tile_size_words_ptr = &(RISC_EPOCH_INFO_PTR->tile_size_words[0]);
    a0ac:	09448493          	addi	s1, s1, 148
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:106
    uint64_t tile_size_header_buf_curr_dest_addr = NOC_XY_ADDR(my_x[header_buf_init_noc], my_y[header_buf_init_noc], (tile_size_header_buf_addr + TILE_HEADER_BUF_INIT_CHUNK_BYTES));
    a0b0:	013409b3          	add	s3, s0, s3
    a0b4:	01240933          	add	s2, s0, s2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:95
  for (uint32_t i = 0; i < num_tile_sizes; i++) {
    a0b8:	054a8863          	beq	s5, s4, a108 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:96
    uint32_t tile_size_words = *l1_tile_size_words_ptr;
    a0bc:	0004a703          	lw	a4, 0(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:97
    uint32_t tile_size_header_buf_addr = *l1_tile_size_header_buf_addr_ptr;
    a0c0:	0204a583          	lw	a1, 32(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:98
    l1_tile_size_words_ptr++;
    a0c4:	00448493          	addi	s1, s1, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:100
    volatile uint32_t* l1_header_buf_tile_size_ptr = (volatile uint32_t*)tile_size_header_buf_addr;
    a0c8:	00058613          	mv	a2, a1
    a0cc:	40058793          	addi	a5, a1, 1024
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:102
      l1_header_buf_tile_size_ptr[0] = tile_size_words;
    a0d0:	00e62023          	sw	a4, 0(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:103
      l1_header_buf_tile_size_ptr += 4;
    a0d4:	01060613          	addi	a2, a2, 16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:101
    for (uint32_t j = 0; j < TILE_HEADER_BUF_INIT_CHUNK_WORDS; j++) {
    a0d8:	fef61ce3          	bne	a2, a5, a0d0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:106
    uint64_t tile_size_header_buf_curr_dest_addr = NOC_XY_ADDR(my_x[header_buf_init_noc], my_y[header_buf_init_noc], (tile_size_header_buf_addr + TILE_HEADER_BUF_INIT_CHUNK_BYTES));
    a0dc:	0009c503          	lbu	a0, 0(s3)
    a0e0:	00094683          	lbu	a3, 0(s2)
    a0e4:	00a51513          	slli	a0, a0, 0xa
    a0e8:	00469693          	slli	a3, a3, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:107
    replicate_l1(header_buf_init_noc, tile_size_header_buf_addr, tile_size_header_buf_curr_dest_addr, TILE_HEADER_BUF_INIT_CHUNK_BYTES, NUM_TILE_HEADER_BUF_CHUNKS-1, NCRISC_WR_LOCAL_TRID);
    a0ec:	00d566b3          	or	a3, a0, a3
    a0f0:	01f00793          	li	a5, 31
    a0f4:	40000713          	li	a4, 1024
    a0f8:	00040513          	mv	a0, s0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:95
  for (uint32_t i = 0; i < num_tile_sizes; i++) {
    a0fc:	001a0a13          	addi	s4, s4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:107
    replicate_l1(header_buf_init_noc, tile_size_header_buf_addr, tile_size_header_buf_curr_dest_addr, TILE_HEADER_BUF_INIT_CHUNK_BYTES, NUM_TILE_HEADER_BUF_CHUNKS-1, NCRISC_WR_LOCAL_TRID);
    a100:	e75ff0ef          	jal	ra, 9f74 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
    a104:	fb5ff06f          	j	a0b8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x84>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    a108:	ffb20537          	lui	a0, 0xffb20
    a10c:	01041413          	slli	s0, s0, 0x10
    a110:	24450513          	addi	a0, a0, 580 # ffb20244 <TENSIX_MAILBOX_BASE+0xffc60244>
    a114:	00a40433          	add	s0, s0, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    a118:	00042783          	lw	a5, 0(s0)
    a11c:	00f12623          	sw	a5, 12(sp)
tile_header_buffer_init():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.cc:109
  }
  while (!ncrisc_noc_nonposted_writes_flushed_l1(header_buf_init_noc, NCRISC_WR_LOCAL_TRID));
    a120:	fe079ce3          	bnez	a5, a118 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe4>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a124:	ffb207b7          	lui	a5, 0xffb20
    a128:	b0000737          	lui	a4, 0xb0000
    a12c:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1076
  tile_header_buffer_init();
  
#ifndef PERF_DUMP
  RISC_POST_STATUS(0xB0000000);
#endif
  uint32_t num_kernel_inputs = RISC_EPOCH_INFO_PTR->num_inputs;
    a130:	00020737          	lui	a4, 0x20
    a134:	08070793          	addi	a5, a4, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
    a138:	08072703          	lw	a4, 128(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1077
  uint32_t num_kernel_outputs =RISC_EPOCH_INFO_PTR->num_outputs;
    a13c:	0047a703          	lw	a4, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1079
  
  num_dram_input_streams = 0;
    a140:	00010437          	lui	s0, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1081
  num_dram_output_streams = 0;
  num_active_dram_queues = 0;
    a144:	0000f4b7          	lui	s1, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1079
  num_dram_input_streams = 0;
    a148:	4c040713          	addi	a4, s0, 1216 # 104c0 <input_stream_state+0xe0>
    a14c:	c0072a23          	sw	zero, -1004(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1080
  num_dram_output_streams = 0;
    a150:	c0072c23          	sw	zero, -1000(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1081
  num_active_dram_queues = 0;
    a154:	4c048713          	addi	a4, s1, 1216 # f4c0 <active_stream_info>
    a158:	72072223          	sw	zero, 1828(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1092
#endif
  global_sync(gsync_epoch, epochs_in_progress);
#endif

#ifdef ERISC
  uint32_t epoch_id = RISC_EPOCH_INFO_PTR->epoch_id;
    a15c:	28c7aa03          	lw	s4, 652(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1093
  bool has_eth_stream_trans = RISC_EPOCH_INFO_PTR->has_eth_stream_trans;
    a160:	2867ca83          	lbu	s5, 646(a5)
eth_epoch_sync(unsigned long, bool, unsigned long volatile&, unsigned long volatile&, void (*)()):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:795

void eth_epoch_sync(uint32_t epoch_id, bool has_eth_stream_trans, volatile uint32_t &epoch_id_to_send, volatile uint32_t &other_chip_epoch_id, void (*risc_context_switch)()) {
  node_info_t* const my_node_info = (node_info_t*)(NODE_INFO_ADDR);
  volatile eth_conn_info_t* const eth_conn_info = (volatile eth_conn_info_t*)(ETH_CONN_INFO_ADDR);

  if (eth_conn_info[my_node_info->my_eth_id] > ETH_UNCONNECTED)
    a164:	00001737          	lui	a4, 0x1
    a168:	10e74783          	lbu	a5, 270(a4) # 110e <__firmware_stack_size+0xd0e>
    a16c:	20070713          	addi	a4, a4, 512
    a170:	00279793          	slli	a5, a5, 0x2
    a174:	00e787b3          	add	a5, a5, a4
    a178:	0007a703          	lw	a4, 0(a5)
    a17c:	00100793          	li	a5, 1
    a180:	4c040413          	addi	s0, s0, 1216
    a184:	4c048493          	addi	s1, s1, 1216
    a188:	06e7d463          	bge	a5, a4, a1f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:798
  {
    epoch_id_to_send = epoch_id;
    eth_send_packet(0, ((uint32_t)(&epoch_id_to_send))>>4, ((uint32_t)(&other_chip_epoch_id))>>4, 1);
    a18c:	c2040993          	addi	s3, s0, -992
    a190:	c3040913          	addi	s2, s0, -976
    a194:	0049d993          	srli	s3, s3, 0x4
    a198:	00495913          	srli	s2, s2, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:797
    epoch_id_to_send = epoch_id;
    a19c:	c3442023          	sw	s4, -992(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:798
    eth_send_packet(0, ((uint32_t)(&epoch_id_to_send))>>4, ((uint32_t)(&other_chip_epoch_id))>>4, 1);
    a1a0:	00100613          	li	a2, 1
    a1a4:	00090593          	mv	a1, s2
    a1a8:	00098513          	mv	a0, s3
    a1ac:	ffbf6097          	auipc	ra, 0xffbf6
    a1b0:	240080e7          	jalr	576(ra) # ffc003ec <TENSIX_MAILBOX_BASE+0xffd403ec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:800

    if (has_eth_stream_trans) {
    a1b4:	020a8e63          	beqz	s5, a1f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:808
        if (epoch_id > other_chip_epoch_id)
          epoch_id_diff = epoch_id - other_chip_epoch_id;
        else
          epoch_id_diff = 0;

        if (epoch_id_diff < EPOCH_MAX_DIFF)
    a1b8:	00e00a93          	li	s5, 14
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:803
        if (epoch_id > other_chip_epoch_id)
    a1bc:	c3042783          	lw	a5, -976(s0)
    a1c0:	0347f863          	bgeu	a5, s4, a1f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:804
          epoch_id_diff = epoch_id - other_chip_epoch_id;
    a1c4:	c3042783          	lw	a5, -976(s0)
    a1c8:	40fa07b3          	sub	a5, s4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:808
        if (epoch_id_diff < EPOCH_MAX_DIFF)
    a1cc:	02faf263          	bgeu	s5, a5, a1f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:812
          break;

        epoch_id_to_send = epoch_id;
        eth_send_packet(0, ((uint32_t)(&epoch_id_to_send))>>4, ((uint32_t)(&other_chip_epoch_id))>>4, 1);
    a1d0:	00100613          	li	a2, 1
    a1d4:	00090593          	mv	a1, s2
    a1d8:	00098513          	mv	a0, s3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:811
        epoch_id_to_send = epoch_id;
    a1dc:	c3442023          	sw	s4, -992(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:812
        eth_send_packet(0, ((uint32_t)(&epoch_id_to_send))>>4, ((uint32_t)(&other_chip_epoch_id))>>4, 1);
    a1e0:	ffbf6097          	auipc	ra, 0xffbf6
    a1e4:	20c080e7          	jalr	524(ra) # ffc003ec <TENSIX_MAILBOX_BASE+0xffd403ec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:814

        risc_context_switch();
    a1e8:	f48ff0ef          	jal	ra, 9930 <risc_context_switch()>
    a1ec:	fd1ff06f          	j	a1bc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x188>
stream_dram_write_init(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:443
  NOC_STREAM_WRITE_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX, 0);
    a1f0:	ffb487b7          	lui	a5, 0xffb48
    a1f4:	0207a623          	sw	zero, 44(a5) # ffb4802c <TENSIX_MAILBOX_BASE+0xffc8802c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:444
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_MSG_INFO_WR_PTR_HI_REG_INDEX, tile_header_buffer_addr >> 21); // todo remove this when noc0/noc1 NIU_CFG_0_TILE_HEADER_STORE_OFF is set for all dram cores
    a1f8:	38078693          	addi	a3, a5, 896
    a1fc:	00300713          	li	a4, 3
    a200:	04e6a623          	sw	a4, 76(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:445
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_MSG_INFO_WR_PTR_REG_INDEX, tile_header_buffer_addr >> 4); // todo remove this when noc0/noc1 NIU_CFG_0_TILE_HEADER_STORE_OFF is set for all dram cores
    a204:	00070737          	lui	a4, 0x70
    a208:	80070713          	addi	a4, a4, -2048 # 6f800 <noc_nonblocking_api.cc.88b5909b+0x4ca7c>
    a20c:	02e7a223          	sw	a4, 36(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:446
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MCAST_DEST_REG_INDEX, 0);
    a210:	0207aa23          	sw	zero, 52(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:447
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MCAST_DEST_NUM_REG_INDEX, 1);
    a214:	00100713          	li	a4, 1
    a218:	02e7ac23          	sw	a4, 56(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:448
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX, (1 << 0) | (1 << 2));
    a21c:	00500713          	li	a4, 5
    a220:	06e6a023          	sw	a4, 96(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:449
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_1_REG_INDEX, 0);
    a224:	3e07a223          	sw	zero, 996(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:450
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_2_REG_INDEX, 0);
    a228:	3e07a423          	sw	zero, 1000(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:451
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_3_REG_INDEX, 0);
    a22c:	3e07a623          	sw	zero, 1004(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:452
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_4_REG_INDEX, 0);
    a230:	3e07a823          	sw	zero, 1008(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:453
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_5_REG_INDEX, 0);
    a234:	3e07aa23          	sw	zero, 1012(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:454
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_TRAFFIC_PRIORITY_REG_INDEX, 0);
    a238:	0a07a823          	sw	zero, 176(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:455
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX, 0);
    a23c:	0a07a023          	sw	zero, 160(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1110

  for (uint32_t i = 0;
       i < num_active_streams;
       i++, curr_active_stream_info++) {

    volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    a240:	000209b7          	lui	s3, 0x20
stream_set_auto_cfg_header(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:58
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, val);
    a244:	00100937          	lui	s2, 0x100
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    a248:	00003a37          	lui	s4, 0x3
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1129
    } else {
      stream_set_auto_cfg_header(stream_id, 0); // Reset this back to zero since thats default value for successfully finished streams
    }

    uint32_t operand = stream_id_to_operand(stream_id);
    if ((flags & STREAM_MOVES_RAW_DATA) != 0 || ((flags & STREAM_DRAM_NO_PUSH) != 0)) {
    a24c:	00001ab7          	lui	s5, 0x1
stream_dram_write_init(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:456
  NOC_STREAM_WRITE_REG(stream_id, STREAM_GATHER_REG_INDEX, 0);
    a250:	0207ae23          	sw	zero, 60(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1106
  for (uint32_t i = 0;
    a254:	00000b93          	li	s7, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1110
    volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    a258:	08098993          	addi	s3, s3, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
stream_set_auto_cfg_header(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:58
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, val);
    a25c:	b4090913          	addi	s2, s2, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    a260:	200a0a13          	addi	s4, s4, 512 # 3200 <__firmware_start+0x1200>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1129
    if ((flags & STREAM_MOVES_RAW_DATA) != 0 || ((flags & STREAM_DRAM_NO_PUSH) != 0)) {
    a264:	840a8a93          	addi	s5, s5, -1984 # 840 <__firmware_stack_size+0x440>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1107
       i < num_active_streams;
    a268:	1804a783          	lw	a5, 384(s1)
    a26c:	0afbfe63          	bgeu	s7, a5, a328 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1110
    volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    a270:	044b8793          	addi	a5, s7, 68
    a274:	00279793          	slli	a5, a5, 0x2
    a278:	00f987b3          	add	a5, s3, a5
    a27c:	0047a783          	lw	a5, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1111
    uint32_t stream_id = l1_stream_info->stream_id;
    a280:	0007d503          	lhu	a0, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1112
    uint32_t blob_start_addr = l1_stream_info->blob_start_addr;
    a284:	0247a603          	lw	a2, 36(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1113
    uint32_t start_phase_num_cfg_regs = l1_stream_info->start_phase_num_cfg_regs;
    a288:	01e7c703          	lbu	a4, 30(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1114
    uint32_t flags = l1_stream_info->flags;
    a28c:	03c7ab03          	lw	s6, 60(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1119
    if ((flags & STREAM_BRISC_PACK) == 0 && !is_dram_prefetch_streaming) {
    a290:	400b7793          	andi	a5, s6, 1024
    a294:	08079263          	bnez	a5, a318 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2e4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1117
                                      ((flags & STREAM_INTERMEDIATE) == 0) && ((flags & STREAM_MOVES_RAW_DATA) == 0);
    a298:	076b7693          	andi	a3, s6, 118
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1119
    if ((flags & STREAM_BRISC_PACK) == 0 && !is_dram_prefetch_streaming) {
    a29c:	00400793          	li	a5, 4
    a2a0:	06f68c63          	beq	a3, a5, a318 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2e4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1121
      RISC_POST_STATUS(0xA1000000 | stream_id);
    a2a4:	a10006b7          	lui	a3, 0xa1000
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    a2a8:	012507b3          	add	a5, a0, s2
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1121
    a2ac:	00d566b3          	or	a3, a0, a3
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a2b0:	ffb205b7          	lui	a1, 0xffb20
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:26
    a2b4:	00c79793          	slli	a5, a5, 0xc
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a2b8:	10d5a623          	sw	a3, 268(a1) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:26
    a2bc:	0207a223          	sw	zero, 36(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:28
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr);
    a2c0:	02c7a823          	sw	a2, 48(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    a2c4:	01871713          	slli	a4, a4, 0x18
    a2c8:	08e7a823          	sw	a4, 144(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    a2cc:	0347a423          	sw	s4, 40(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1128
    uint32_t operand = stream_id_to_operand(stream_id);
    a2d0:	ffbf6097          	auipc	ra, 0xffbf6
    a2d4:	db4080e7          	jalr	-588(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1129
    if ((flags & STREAM_MOVES_RAW_DATA) != 0 || ((flags & STREAM_DRAM_NO_PUSH) != 0)) {
    a2d8:	015b77b3          	and	a5, s6, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1128
    uint32_t operand = stream_id_to_operand(stream_id);
    a2dc:	00050c13          	mv	s8, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1129
    if ((flags & STREAM_MOVES_RAW_DATA) != 0 || ((flags & STREAM_DRAM_NO_PUSH) != 0)) {
    a2e0:	02078863          	beqz	a5, a310 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2dc>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
    a2e4:	ffbf6097          	auipc	ra, 0xffbf6
    a2e8:	d64080e7          	jalr	-668(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    a2ec:	01250b33          	add	s6, a0, s2
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    a2f0:	000c0513          	mv	a0, s8
    a2f4:	ffbf6097          	auipc	ra, 0xffbf6
    a2f8:	d54080e7          	jalr	-684(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    a2fc:	00cb1b13          	slli	s6, s6, 0xc
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    a300:	01250533          	add	a0, a0, s2
    a304:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1132
      volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(operand);
      volatile uint32_t tt_reg_ptr * tiles_acked_ptr = get_operand_tiles_acked_ptr(operand);
      tiles_received_ptr[0] = 0;
    a308:	000b2823          	sw	zero, 16(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1133
      tiles_acked_ptr[0] = 0;
    a30c:	00052623          	sw	zero, 12(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1106
  for (uint32_t i = 0;
    a310:	001b8b93          	addi	s7, s7, 1
    a314:	f55ff06f          	j	a268 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x234>
stream_set_auto_cfg_header(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:58
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, val);
    a318:	01250733          	add	a4, a0, s2
    a31c:	00c71713          	slli	a4, a4, 0xc
    a320:	08072823          	sw	zero, 144(a4)
    a324:	fadff06f          	j	a2d0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x29c>
risc_initialize_tile_counters(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:211
    sender_tiles_received[i] = 0;
    a328:	08000613          	li	a2, 128
    a32c:	00000593          	li	a1, 0
    a330:	c4040513          	addi	a0, s0, -960
    a334:	ffbf7097          	auipc	ra, 0xffbf7
    a338:	248080e7          	jalr	584(ra) # ffc0157c <TENSIX_MAILBOX_BASE+0xffd4157c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:212
    sender_tiles_acked[i] = 0;
    a33c:	08000613          	li	a2, 128
    a340:	00000593          	li	a1, 0
    a344:	cc040513          	addi	a0, s0, -832
    a348:	ffbf7097          	auipc	ra, 0xffbf7
    a34c:	234080e7          	jalr	564(ra) # ffc0157c <TENSIX_MAILBOX_BASE+0xffd4157c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:213
    receiver_tiles_received[i] = 0;
    a350:	08000613          	li	a2, 128
    a354:	00000593          	li	a1, 0
    a358:	d4040513          	addi	a0, s0, -704
    a35c:	ffbf7097          	auipc	ra, 0xffbf7
    a360:	220080e7          	jalr	544(ra) # ffc0157c <TENSIX_MAILBOX_BASE+0xffd4157c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:214
    receiver_tiles_acked[i] = 0;
    a364:	08000613          	li	a2, 128
    a368:	00000593          	li	a1, 0
    a36c:	dc040513          	addi	a0, s0, -576
    a370:	ffbf7097          	auipc	ra, 0xffbf7
    a374:	20c080e7          	jalr	524(ra) # ffc0157c <TENSIX_MAILBOX_BASE+0xffd4157c>
    a378:	0000f7b7          	lui	a5, 0xf
    a37c:	64478793          	addi	a5, a5, 1604 # f644 <dram_q_state>
    a380:	00f12823          	sw	a5, 16(sp)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    a384:	001007b7          	lui	a5, 0x100
    a388:	b4078c93          	addi	s9, a5, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
stream_push_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:281
  uint32_t tiles_left_in_phase = rmw & 0xffff;
    a38c:	000107b7          	lui	a5, 0x10
    a390:	fff78793          	addi	a5, a5, -1 # ffff <dram_input_stream_state+0x177>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1277
        // We dont do this for writes as the stream may not be started by ncrisc but packer instead
        //while (!stream_phase_is_active(stream_id));

        RISC_POST_STATUS(0xA6000000 | stream_id);

        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    a394:	00020ab7          	lui	s5, 0x20
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1147
  for (uint32_t i = 0;
    a398:	00000b13          	li	s6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1143
  dram_q_state_t tt_l1_ptr * curr_dram_q_state = dram_q_state;
    a39c:	18448a13          	addi	s4, s1, 388
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1142
  dram_output_stream_state_t* curr_dram_output_stream_state_init = dram_output_stream_state;
    a3a0:	72848913          	addi	s2, s1, 1832
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1141
  dram_input_stream_state_t* curr_dram_input_stream_state_init = dram_input_stream_state;
    a3a4:	9c840993          	addi	s3, s0, -1592
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1146
  curr_active_stream_info = active_stream_info;
    a3a8:	00048c13          	mv	s8, s1
stream_push_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:281
    a3ac:	02f12623          	sw	a5, 44(sp)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1277
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    a3b0:	080a8a93          	addi	s5, s5, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1148
       i < num_active_streams;
    a3b4:	1804a503          	lw	a0, 384(s1)
    a3b8:	4eab7c63          	bgeu	s6, a0, a8b0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x87c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1152
    uint32_t stream_id = curr_active_stream_info->stream_id;
    a3bc:	000c4503          	lbu	a0, 0(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1153
    uint32_t flags = curr_active_stream_info->flags;
    a3c0:	006c5783          	lhu	a5, 6(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1155
    RISC_POST_STATUS(0xA3000000 | stream_id);
    a3c4:	a3000737          	lui	a4, 0xa3000
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a3c8:	ffb206b7          	lui	a3, 0xffb20
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1155
    a3cc:	00e56733          	or	a4, a0, a4
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a3d0:	10e6a623          	sw	a4, 268(a3) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1158
    if ((flags & STREAM_DRAM_INPUT) != 0) {
    a3d4:	0047f713          	andi	a4, a5, 4
    a3d8:	22070263          	beqz	a4, a5fc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5c8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1160
      if ((flags & STREAM_DRAM_IO) != 0 || (flags & STREAM_DRAM_STREAMING) != 0) {
    a3dc:	0227f713          	andi	a4, a5, 34
    a3e0:	20070863          	beqz	a4, a5f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1162
        RISC_POST_STATUS(0xA4000000 | stream_id);
    a3e4:	a4000737          	lui	a4, 0xa4000
    a3e8:	00e56733          	or	a4, a0, a4
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a3ec:	10e6a623          	sw	a4, 268(a3)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    a3f0:	01950733          	add	a4, a0, s9
    a3f4:	00c71713          	slli	a4, a4, 0xc
    a3f8:	08c70613          	addi	a2, a4, 140 # a400008c <TENSIX_MAILBOX_BASE+0xa414008c>
    a3fc:	00062683          	lw	a3, 0(a2)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1165
        while (!stream_phase_is_active(stream_id)); 
    a400:	0046f693          	andi	a3, a3, 4
    a404:	fe068ce3          	beqz	a3, a3fc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x3c8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1167
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    a408:	044b0693          	addi	a3, s6, 68
    a40c:	00269693          	slli	a3, a3, 0x2
    a410:	00da86b3          	add	a3, s5, a3
    a414:	0046a683          	lw	a3, 4(a3)
    a418:	03898813          	addi	a6, s3, 56
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1170
        for (uint32_t k = 0; k < EPOCH_MAX_OUTPUT_FORKS; k++) {
    a41c:	00000593          	li	a1, 0
    a420:	01000893          	li	a7, 16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1169
        uint32_t num_fork_streams = l1_stream_info->num_fork_streams;
    a424:	08c6d303          	lhu	t1, 140(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1171
          fork_stream_ids_ptr[k] = RISC_EPOCH_INFO_PTR->active_streams[l1_stream_info->fork_idxs[k]]->stream_id;
    a428:	00b68633          	add	a2, a3, a1
    a42c:	09064603          	lbu	a2, 144(a2)
    a430:	04460613          	addi	a2, a2, 68
    a434:	00261613          	slli	a2, a2, 0x2
    a438:	00ca8633          	add	a2, s5, a2
    a43c:	00462603          	lw	a2, 4(a2)
    a440:	00065603          	lhu	a2, 0(a2)
    a444:	00c80023          	sb	a2, 0(a6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1172
          if (k == num_fork_streams) {
    a448:	04b31863          	bne	t1, a1, a498 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x464>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1173
            fork_stream_ids_ptr[k] = NULL_STREAM;
    a44c:	fff00613          	li	a2, -1
    a450:	00c80023          	sb	a2, 0(a6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1178
        epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    a454:	0886a583          	lw	a1, 136(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1180
        uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    a458:	0866d303          	lhu	t1, 134(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1181
        uint32_t c_dim_size = l1_stream_info->c_dim_size;
    a45c:	05c6df83          	lhu	t6, 92(a3)
stream_get_data_buf_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:126
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_START_REG_INDEX);
    a460:	01872e03          	lw	t3, 24(a4)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    a464:	01c72283          	lw	t0, 28(a4)
stream_get_input_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:98
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, INCOMING_DATA_NOC);
    a468:	02872703          	lw	a4, 40(a4)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1188
        uint32_t transaction_id = NCRISC_RD_START_TRID + num_dram_input_streams;
    a46c:	c1442883          	lw	a7, -1004(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1184
        uint32_t stream_buf_addr_byte = stream_get_data_buf_addr(stream_id) * MEM_WORD_WIDTH;
    a470:	004e1e13          	slli	t3, t3, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1189
        while (transaction_id > NCRISC_RD_END_TRID)
    a474:	00d00813          	li	a6, 13
stream_get_input_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:98
    a478:	00177713          	andi	a4, a4, 1
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1179
        volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a47c:	01c5a603          	lw	a2, 28(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1182
        uint32_t q_slot_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    a480:	0005ae83          	lw	t4, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1183
        uint32_t epoch_q_slots_remaining = l1_dram_io_info->epoch_q_slots_remaining;
    a484:	0145af03          	lw	t5, 20(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1188
        uint32_t transaction_id = NCRISC_RD_START_TRID + num_dram_input_streams;
    a488:	00488593          	addi	a1, a7, 4 # ffb20004 <TENSIX_MAILBOX_BASE+0xffc60004>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1189
        while (transaction_id > NCRISC_RD_END_TRID)
    a48c:	00b87e63          	bgeu	a6, a1, a4a8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x474>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1190
          transaction_id -= NCRISC_RD_END_TRID-NCRISC_RD_START_TRID+1;
    a490:	ff658593          	addi	a1, a1, -10
    a494:	ff9ff06f          	j	a48c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x458>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1170
        for (uint32_t k = 0; k < EPOCH_MAX_OUTPUT_FORKS; k++) {
    a498:	00158593          	addi	a1, a1, 1
    a49c:	00180813          	addi	a6, a6, 1
    a4a0:	f91594e3          	bne	a1, a7, a428 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x3f4>
    a4a4:	fb1ff06f          	j	a454 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x420>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1192
        curr_dram_input_stream_state_init->moves_raw_data = (flags & STREAM_MOVES_RAW_DATA) != 0 || (flags & STREAM_DRAM_NO_PUSH) != 0;
    a4a8:	00001837          	lui	a6, 0x1
    a4ac:	84080813          	addi	a6, a6, -1984 # 840 <__firmware_stack_size+0x440>
    a4b0:	0107f833          	and	a6, a5, a6
    a4b4:	01003833          	snez	a6, a6
    a4b8:	01098823          	sb	a6, 16(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1193
        curr_dram_input_stream_state_init->stream_info = l1_stream_info;
    a4bc:	04d9a823          	sw	a3, 80(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1195
        curr_dram_input_stream_state_init->in_flight_data_rec_chunks = 0;
    a4c0:	0009a223          	sw	zero, 4(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1197
        if ((flags & STREAM_DRAM_STREAMING) != 0)
    a4c4:	0207f693          	andi	a3, a5, 32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1200
          curr_dram_input_stream_state_init->stream_flushed_ptr_byte = 0;
    a4c8:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1197
        if ((flags & STREAM_DRAM_STREAMING) != 0)
    a4cc:	00068463          	beqz	a3, a4d4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x4a0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1185
        uint32_t stream_buf_size_bytes = stream_get_data_buf_size(stream_id) * MEM_WORD_WIDTH;
    a4d0:	00429813          	slli	a6, t0, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1205
        curr_dram_input_stream_state_init->io_q_empty = 1;
    a4d4:	00100693          	li	a3, 1
    a4d8:	00d989a3          	sb	a3, 19(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a4dc:	0097d693          	srli	a3, a5, 0x9
    a4e0:	0027d793          	srli	a5, a5, 0x2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1221
        curr_dram_input_stream_state_init->input_noc = input_noc;
    a4e4:	0ff77713          	zext.b	a4, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a4e8:	0087f793          	andi	a5, a5, 8
    a4ec:	0016f693          	andi	a3, a3, 1
    a4f0:	00f6e6b3          	or	a3, a3, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1221
        curr_dram_input_stream_state_init->input_noc = input_noc;
    a4f4:	00e980a3          	sb	a4, 1(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1222
        curr_dram_input_stream_state_init->stream_buf_addr_byte = stream_buf_addr_byte;
    a4f8:	01c9a423          	sw	t3, 8(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a4fc:	00171713          	slli	a4, a4, 0x1
    a500:	7244ae03          	lw	t3, 1828(s1)
    a504:	00e6e7b3          	or	a5, a3, a4
    a508:	0109a623          	sw	a6, 12(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1211
        curr_dram_input_stream_state_init->transaction_id_issued = transaction_id;
    a50c:	02b98823          	sb	a1, 48(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1212
        curr_dram_input_stream_state_init->transaction_id_flushed = transaction_id;
    a510:	02b988a3          	sb	a1, 49(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1215
        curr_dram_input_stream_state_init->c_dim_size = c_dim_size;
    a514:	03f99023          	sh	t6, 32(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1201
        curr_dram_input_stream_state_init->in_flight_bytes = 0;
    a518:	0009aa23          	sw	zero, 20(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1202
        curr_dram_input_stream_state_init->scatter_loop_index = 0;
    a51c:	0209a423          	sw	zero, 40(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1203
        curr_dram_input_stream_state_init->scatter_loop_inc = 0;
    a520:	0209a623          	sw	zero, 44(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1204
        curr_dram_input_stream_state_init->active_stream_id = i;
    a524:	01698923          	sb	s6, 18(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1206
        curr_dram_input_stream_state_init->stream_buf_available = 0;
    a528:	000988a3          	sb	zero, 17(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1207
        curr_dram_input_stream_state_init->q_ptr_update_pending = false;
    a52c:	00099123          	sh	zero, 2(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1209
        curr_dram_input_stream_state_init->scatter_list_input_index = 0;
    a530:	0009ae23          	sw	zero, 28(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1214
        curr_dram_input_stream_state_init->c_dim_count = 0;
    a534:	02099123          	sh	zero, 34(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1216
        curr_dram_input_stream_state_init->col_offset_bytes = 0;
    a538:	0209a223          	sw	zero, 36(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1218
        curr_dram_input_stream_state_init->epoch_q_slots_remaining = epoch_q_slots_remaining;
    a53c:	01e9ac23          	sw	t5, 24(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1220
        curr_dram_input_stream_state_init->stream_id = stream_id;
    a540:	00a98023          	sb	a0, 0(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1223
        curr_dram_input_stream_state_init->prev_rd_data_word_recv = 0;
    a544:	0209aa23          	sw	zero, 52(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1225
        curr_dram_input_stream_state_init->next_dram_q_issue = curr_dram_q_state;
    a548:	0549a423          	sw	s4, 72(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1226
        curr_dram_input_stream_state_init->next_dram_q_in_flight = curr_dram_q_state;
    a54c:	0549a623          	sw	s4, 76(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1230
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a550:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1229
        dram_q_state_t tt_l1_ptr * prev_dram_q_state = curr_dram_q_state;
    a554:	000a0813          	mv	a6, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a558:	000a0713          	mv	a4, s4
    a55c:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1234
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a560:	02700293          	li	t0, 39
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1251
          curr_dram_q_state->l1_dram_incoming_ptr_index = 1;
    a564:	00100f93          	li	t6, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1230
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a568:	0666f463          	bgeu	a3, t1, a5d0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x59c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1231
          uint32_t dram_buf_size_q_slots = l1_dram_io_state->dram_buf_size_q_slots;
    a56c:	04462f03          	lw	t5, 68(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1234
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a570:	01c68833          	add	a6, a3, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1237
            next_dram_q_state = curr_dram_q_state + 1;
    a574:	02470593          	addi	a1, a4, 36
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1234
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a578:	00581463          	bne	a6, t0, a580 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x54c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1235
            next_dram_q_state = (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr;
    a57c:	278aa583          	lw	a1, 632(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1240
          uint16_t reader_index = l1_dram_io_state->reader_index;
    a580:	05464803          	lbu	a6, 84(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1242
          curr_dram_q_state->dram_q_stream_id = stream_id;
    a584:	00a70723          	sb	a0, 14(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1250
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (input_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a588:	00f70223          	sb	a5, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1251
          curr_dram_q_state->l1_dram_incoming_ptr_index = 1;
    a58c:	01f702a3          	sb	t6, 5(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1253
          curr_dram_q_state->next = next_dram_q_state;
    a590:	02b72023          	sw	a1, 32(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1254
          curr_dram_q_state->l1_dram_ptrs = (volatile uint32_t tt_l1_ptr *)l1_dram_io_state;
    a594:	00c72023          	sw	a2, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1246
          curr_dram_q_state->dram_ptr_issued_byte = q_slot_size_bytes; // temp, changed when loading dram pointers
    a598:	01d72c23          	sw	t4, 24(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1247
          curr_dram_q_state->dram_num_partial_q_slot_issued_tiles = 0; // temp, changed when loading dram pointers
    a59c:	00072823          	sw	zero, 16(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1248
          curr_dram_q_state->flushed_partial_q_slot_tiles = 0;
    a5a0:	00072a23          	sw	zero, 20(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1249
          curr_dram_q_state->scatter_offsets_index = 0;
    a5a4:	00072e23          	sw	zero, 28(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1243
          curr_dram_q_state->dram_ptr_issued_q_slots = 0; // temp, changed when loading dram pointers
    a5a8:	00071323          	sh	zero, 6(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1244
          curr_dram_q_state->dram_ptr_flushed_q_slots = 0; // temp, changed when loading dram pointers
    a5ac:	00072423          	sw	zero, 8(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1241
          curr_dram_q_state->temp0 = reader_index;
    a5b0:	010707a3          	sb	a6, 15(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1252
          curr_dram_q_state->dram_buf_size_q_slots = dram_buf_size_q_slots;
    a5b4:	01e71623          	sh	t5, 12(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1230
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a5b8:	00070813          	mv	a6, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1260
          l1_dram_io_state = l1_dram_io_state->next;
    a5bc:	05c62603          	lw	a2, 92(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1259
          curr_dram_q_state = next_dram_q_state;
    a5c0:	00058713          	mv	a4, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1230
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a5c4:	00168693          	addi	a3, a3, 1
    a5c8:	00100593          	li	a1, 1
    a5cc:	f9dff06f          	j	a568 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x534>
    a5d0:	01c30333          	add	t1, t1, t3
    a5d4:	00058463          	beqz	a1, a5dc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5a8>
    a5d8:	7264a223          	sw	t1, 1828(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1264
        num_dram_input_streams++;
    a5dc:	00188893          	addi	a7, a7, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1263
        prev_dram_q_state->next = start_dram_q_state;
    a5e0:	03482023          	sw	s4, 32(a6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1264
        num_dram_input_streams++;
    a5e4:	c1142a23          	sw	a7, -1004(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1265
        curr_dram_input_stream_state_init++;
    a5e8:	05498993          	addi	s3, s3, 84
    a5ec:	00070a13          	mv	s4, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1147
  for (uint32_t i = 0;
    a5f0:	001b0b13          	addi	s6, s6, 1
    a5f4:	00cc0c13          	addi	s8, s8, 12
    a5f8:	dbdff06f          	j	a3b4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x380>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1268
    else if ((flags & STREAM_DRAM_OUTPUT) != 0) {
    a5fc:	0087f713          	andi	a4, a5, 8
    a600:	20070463          	beqz	a4, a808 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x7d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1270
      if ((flags & STREAM_DRAM_IO) != 0 || (flags & STREAM_DRAM_STREAMING) != 0) {
    a604:	0227f713          	andi	a4, a5, 34
    a608:	fe0704e3          	beqz	a4, a5f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1275
        RISC_POST_STATUS(0xA6000000 | stream_id);
    a60c:	a6000737          	lui	a4, 0xa6000
    a610:	00e56733          	or	a4, a0, a4
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a614:	10e6a623          	sw	a4, 268(a3)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1277
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    a618:	044b0713          	addi	a4, s6, 68
    a61c:	00271713          	slli	a4, a4, 0x2
    a620:	00ea8733          	add	a4, s5, a4
    a624:	00472703          	lw	a4, 4(a4) # a6000004 <TENSIX_MAILBOX_BASE+0xa6140004>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1278
        volatile epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    a628:	08070693          	addi	a3, a4, 128
    a62c:	0086a603          	lw	a2, 8(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1279
        volatile dram_io_state_t tt_l1_ptr* l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a630:	01c62683          	lw	a3, 28(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1280
        uint32_t q_slot_size_tiles = l1_dram_io_state->dram_q_slot_size_tiles;
    a634:	0506a303          	lw	t1, 80(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1281
        uint32_t q_slot_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    a638:	00062803          	lw	a6, 0(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1282
        uint32_t epoch_q_slots_remaining = l1_dram_io_info->epoch_q_slots_remaining;
    a63c:	01462883          	lw	a7, 20(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1283
        uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    a640:	08675383          	lhu	t2, 134(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1284
        uint32_t epoch_id = RISC_EPOCH_INFO_PTR->epoch_id;
    a644:	28caab83          	lw	s7, 652(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1285
        uint16_t write_stride = l1_stream_info->stride;
    a648:	04075d83          	lhu	s11, 64(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1286
        uint16_t total_write_strides = l1_stream_info->total_strides;
    a64c:	04275583          	lhu	a1, 66(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1287
        uint32_t stride_offset_size_bytes = l1_stream_info->stride_offset_size_bytes;
    a650:	04472f03          	lw	t5, 68(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1288
        uint32_t skip_col_bytes = l1_stream_info->skip_col_bytes;
    a654:	04872e03          	lw	t3, 72(a4)
    a658:	01c12a23          	sw	t3, 20(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1289
        uint32_t skip_col_tile_row_bytes = l1_stream_info->skip_col_tile_row_bytes;
    a65c:	04c72e03          	lw	t3, 76(a4)
    a660:	01c12c23          	sw	t3, 24(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1290
        uint32_t skip_col_row_bytes = l1_stream_info->skip_col_row_bytes;
    a664:	05072e03          	lw	t3, 80(a4)
    a668:	01c12e23          	sw	t3, 28(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1291
        uint32_t skip_zcol_bytes = l1_stream_info->skip_zcol_bytes;
    a66c:	05472e03          	lw	t3, 84(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1292
        uint32_t skip_col_zrow_bytes = l1_stream_info->skip_col_zrow_bytes;
    a670:	05872283          	lw	t0, 88(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1293
        uint32_t c_dim_size = l1_stream_info->c_dim_size;
    a674:	05c75f83          	lhu	t6, 92(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1291
        uint32_t skip_zcol_bytes = l1_stream_info->skip_zcol_bytes;
    a678:	03c12023          	sw	t3, 32(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1294
        uint32_t r_dim_size = l1_stream_info->r_dim_size;
    a67c:	05e75e03          	lhu	t3, 94(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1295
        uint32_t zc_dim_size = l1_stream_info->zc_dim_size;
    a680:	06075e83          	lhu	t4, 96(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1294
        uint32_t r_dim_size = l1_stream_info->r_dim_size;
    a684:	03c11523          	sh	t3, 42(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1296
        uint32_t zr_dim_size = l1_stream_info->zr_dim_size;
    a688:	06275e03          	lhu	t3, 98(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1297
        uint32_t stream_buf_addr_byte = l1_stream_info->buf_base_addr;
    a68c:	01872d03          	lw	s10, 24(a4)
    a690:	03a12223          	sw	s10, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1298
        uint32_t stream_buf_size_bytes = l1_stream_info->buf_full_size_bytes;
    a694:	01472d03          	lw	s10, 20(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1299
        uint32_t output_noc = l1_dram_io_info->output_noc;
    a698:	00564603          	lbu	a2, 5(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1301
        
        curr_dram_output_stream_state_init->stream_info = l1_stream_info;
    a69c:	04e92e23          	sw	a4, 92(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1303

        curr_dram_output_stream_state_init->stream_buf_addr_byte = stream_buf_addr_byte;
    a6a0:	02412703          	lw	a4, 36(sp)
    a6a4:	00e92a23          	sw	a4, 20(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1305
        curr_dram_output_stream_state_init->stream_buf_size_bytes = stream_buf_size_bytes;
        curr_dram_output_stream_state_init->moves_raw_data = (flags & STREAM_MOVES_RAW_DATA) != 0;
    a6a8:	0067d713          	srli	a4, a5, 0x6
    a6ac:	00177713          	andi	a4, a4, 1
    a6b0:	00e90123          	sb	a4, 2(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1306
        curr_dram_output_stream_state_init->epoch_id = epoch_id & 0x7FFF;
    a6b4:	011b9713          	slli	a4, s7, 0x11
    a6b8:	01175713          	srli	a4, a4, 0x11
    a6bc:	00e91223          	sh	a4, 4(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1310
        curr_dram_output_stream_state_init->write_stride = write_stride;
        curr_dram_output_stream_state_init->total_write_strides = total_write_strides;

        curr_dram_output_stream_state_init->skip_col_bytes = skip_col_bytes;
    a6c0:	01412703          	lw	a4, 20(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1317
        curr_dram_output_stream_state_init->skip_col_row_bytes = skip_col_row_bytes;
        curr_dram_output_stream_state_init->skip_zcol_bytes = skip_zcol_bytes;
        curr_dram_output_stream_state_init->skip_col_zrow_bytes = skip_col_zrow_bytes;
        curr_dram_output_stream_state_init->c_dim_size = c_dim_size;
        curr_dram_output_stream_state_init->r_dim_size = r_dim_size;
        curr_dram_output_stream_state_init->zc_dim_size = zc_dim_size;
    a6c4:	05d91623          	sh	t4, 76(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1310
        curr_dram_output_stream_state_init->skip_col_bytes = skip_col_bytes;
    a6c8:	02e92023          	sw	a4, 32(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1311
        curr_dram_output_stream_state_init->skip_col_tile_row_bytes = skip_col_tile_row_bytes;
    a6cc:	01812703          	lw	a4, 24(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1304
        curr_dram_output_stream_state_init->stream_buf_size_bytes = stream_buf_size_bytes;
    a6d0:	01a92823          	sw	s10, 16(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1311
        curr_dram_output_stream_state_init->skip_col_tile_row_bytes = skip_col_tile_row_bytes;
    a6d4:	02e92223          	sw	a4, 36(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1312
        curr_dram_output_stream_state_init->skip_col_row_bytes = skip_col_row_bytes;
    a6d8:	01c12703          	lw	a4, 28(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1307
        curr_dram_output_stream_state_init->write_stride = write_stride;
    a6dc:	01b91e23          	sh	s11, 28(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1312
        curr_dram_output_stream_state_init->skip_col_row_bytes = skip_col_row_bytes;
    a6e0:	02e92423          	sw	a4, 40(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1313
        curr_dram_output_stream_state_init->skip_zcol_bytes = skip_zcol_bytes;
    a6e4:	02012703          	lw	a4, 32(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1308
        curr_dram_output_stream_state_init->total_write_strides = total_write_strides;
    a6e8:	00b91f23          	sh	a1, 30(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1313
        curr_dram_output_stream_state_init->skip_zcol_bytes = skip_zcol_bytes;
    a6ec:	02e92623          	sw	a4, 44(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1316
        curr_dram_output_stream_state_init->r_dim_size = r_dim_size;
    a6f0:	02a15703          	lhu	a4, 42(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1314
        curr_dram_output_stream_state_init->skip_col_zrow_bytes = skip_col_zrow_bytes;
    a6f4:	02592823          	sw	t0, 48(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1316
        curr_dram_output_stream_state_init->r_dim_size = r_dim_size;
    a6f8:	04e91423          	sh	a4, 72(s2)
    a6fc:	00100713          	li	a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1315
        curr_dram_output_stream_state_init->c_dim_size = c_dim_size;
    a700:	05f91223          	sh	t6, 68(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1318
        curr_dram_output_stream_state_init->zr_dim_size = zr_dim_size;
    a704:	05c91823          	sh	t3, 80(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1320

        curr_dram_output_stream_state_init->c_dim_count = 0;
    a708:	04091323          	sh	zero, 70(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1321
        curr_dram_output_stream_state_init->r_dim_count = 0;
    a70c:	04091523          	sh	zero, 74(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1322
        curr_dram_output_stream_state_init->zc_dim_count = 0;
    a710:	04091723          	sh	zero, 78(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1323
        curr_dram_output_stream_state_init->zr_dim_count = 0;
    a714:	04091923          	sh	zero, 82(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1325

        curr_dram_output_stream_state_init->in_flight_q_slots = 0;
    a718:	000900a3          	sb	zero, 1(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1326
        curr_dram_output_stream_state_init->tiles_to_clear = 0;
    a71c:	00091323          	sh	zero, 6(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1327
        curr_dram_output_stream_state_init->in_flight_tiles = 0;
    a720:	00092423          	sw	zero, 8(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1328
        curr_dram_output_stream_state_init->stream_rd_ptr_byte = 0;
    a724:	00092623          	sw	zero, 12(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1331
        curr_dram_output_stream_state_init->curr_phase_tiles_sent = 0;

        curr_dram_output_stream_state_init->q_slot_size_tiles = q_slot_size_tiles;
    a728:	04692a23          	sw	t1, 84(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1332
        curr_dram_output_stream_state_init->epoch_q_slots_remaining = epoch_q_slots_remaining;
    a72c:	01192c23          	sw	a7, 24(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1334

        curr_dram_output_stream_state_init->stream_id = stream_id;
    a730:	00a90023          	sb	a0, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1335
        curr_dram_output_stream_state_init->dram_q_available = 0;
    a734:	000901a3          	sb	zero, 3(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1337

        curr_dram_output_stream_state_init->next_dram_q_issue = curr_dram_q_state;
    a738:	05492c23          	sw	s4, 88(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1356

          curr_dram_q_state->temp0 = write_stride;
          curr_dram_q_state->dram_q_stream_id = stream_id;
          curr_dram_q_state->dram_ptr_issued_q_slots = q_slot_size_bytes & 0xffff; // temp, changed when loading dram pointers
          curr_dram_q_state->dram_ptr_flushed_q_slots = total_write_strides; // temp, changed when loading dram pointers
          curr_dram_q_state->dram_ptr_incoming_q_slots = (q_slot_size_bytes >> 16) & 0xffff; // temp, changed when loading dram pointers
    a73c:	01085e93          	srli	t4, a6, 0x10
    a740:	7244ae03          	lw	t3, 1828(s1)
    a744:	00b76463          	bltu	a4, a1, a74c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x718>
    a748:	00080f13          	mv	t5, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1359
          curr_dram_q_state->dram_ptr_issued_byte = total_write_strides > 1 ? stride_offset_size_bytes : q_slot_size_bytes; // temp, changed when loading dram pointers
          curr_dram_q_state->dram_num_partial_q_slot_issued_tiles = epoch_id; // temp, changed when loading dram pointers
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (output_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a74c:	0097d713          	srli	a4, a5, 0x9
    a750:	0027d793          	srli	a5, a5, 0x2
    a754:	00177713          	andi	a4, a4, 1
    a758:	0087f793          	andi	a5, a5, 8
    a75c:	00f767b3          	or	a5, a4, a5
    a760:	00161613          	slli	a2, a2, 0x1
    a764:	00c7e633          	or	a2, a5, a2
    a768:	0ff67613          	zext.b	a2, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1341
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a76c:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1340
        dram_q_state_t tt_l1_ptr * prev_dram_q_state = curr_dram_q_state;
    a770:	000a0313          	mv	t1, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1359
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (output_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a774:	000a0793          	mv	a5, s4
    a778:	00000893          	li	a7, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1346
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a77c:	02700293          	li	t0, 39
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1341
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a780:	06777063          	bgeu	a4, t2, a7e0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x7ac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1343
          uint32_t dram_buf_size_q_slots = l1_dram_io_state->dram_buf_size_q_slots;
    a784:	0446af83          	lw	t6, 68(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1346
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a788:	01c70333          	add	t1, a4, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1349
            next_dram_q_state = curr_dram_q_state + 1;
    a78c:	02478893          	addi	a7, a5, 36
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1346
          if (num_active_dram_queues == MAX_L0_DRAM_Q_STATE_T-1) {
    a790:	00531463          	bne	t1, t0, a798 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x764>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1347
            next_dram_q_state = (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr;
    a794:	278aa883          	lw	a7, 632(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1352
          curr_dram_q_state->temp0 = write_stride;
    a798:	01b787a3          	sb	s11, 15(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1353
          curr_dram_q_state->dram_q_stream_id = stream_id;
    a79c:	00a78723          	sb	a0, 14(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1359
          curr_dram_q_state->dram_q_state_flags = ((flags & STREAM_DRAM_RAM) != 0 ? 1 : 0) | (output_noc << 1) | ((flags & STREAM_DRAM_STREAMING) != 0 ? 1 << 3 : 0);
    a7a0:	00c78223          	sb	a2, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1360
          curr_dram_q_state->l1_dram_incoming_ptr_index = 0;
    a7a4:	000782a3          	sb	zero, 5(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1362
          curr_dram_q_state->dram_buf_size_q_slots = dram_buf_size_q_slots;
          curr_dram_q_state->next = next_dram_q_state;
    a7a8:	0317a023          	sw	a7, 32(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1363
          curr_dram_q_state->l1_dram_ptrs = (volatile uint32_t tt_l1_ptr *)l1_dram_io_state;
    a7ac:	00d7a023          	sw	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1354
          curr_dram_q_state->dram_ptr_issued_q_slots = q_slot_size_bytes & 0xffff; // temp, changed when loading dram pointers
    a7b0:	01079323          	sh	a6, 6(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1355
          curr_dram_q_state->dram_ptr_flushed_q_slots = total_write_strides; // temp, changed when loading dram pointers
    a7b4:	00b79423          	sh	a1, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1356
          curr_dram_q_state->dram_ptr_incoming_q_slots = (q_slot_size_bytes >> 16) & 0xffff; // temp, changed when loading dram pointers
    a7b8:	01d79523          	sh	t4, 10(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1357
          curr_dram_q_state->dram_ptr_issued_byte = total_write_strides > 1 ? stride_offset_size_bytes : q_slot_size_bytes; // temp, changed when loading dram pointers
    a7bc:	01e7ac23          	sw	t5, 24(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1358
          curr_dram_q_state->dram_num_partial_q_slot_issued_tiles = epoch_id; // temp, changed when loading dram pointers
    a7c0:	0177a823          	sw	s7, 16(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1361
          curr_dram_q_state->dram_buf_size_q_slots = dram_buf_size_q_slots;
    a7c4:	01f79623          	sh	t6, 12(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1341
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a7c8:	00078313          	mv	t1, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1369
#ifdef DRAM_DECOUPLE
          l1_dram_io_state->dram_decoupled = flags & (STREAM_DRAM_OUTPUT | STREAM_DRAM_IO);
#endif
          prev_dram_q_state = curr_dram_q_state;
          curr_dram_q_state = next_dram_q_state;
          l1_dram_io_state = l1_dram_io_state->next;
    a7cc:	05c6a683          	lw	a3, 92(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1368
          curr_dram_q_state = next_dram_q_state;
    a7d0:	00088793          	mv	a5, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1341
        for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a7d4:	00170713          	addi	a4, a4, 1
    a7d8:	00100893          	li	a7, 1
    a7dc:	fa5ff06f          	j	a780 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x74c>
    a7e0:	01c38e33          	add	t3, t2, t3
    a7e4:	00088463          	beqz	a7, a7ec <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x7b8>
    a7e8:	73c4a223          	sw	t3, 1828(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1373
          num_active_dram_queues++;
        }
        prev_dram_q_state->next = start_dram_q_state;        
        num_dram_output_streams++;
    a7ec:	c1842703          	lw	a4, -1000(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1372
        prev_dram_q_state->next = start_dram_q_state;        
    a7f0:	03432023          	sw	s4, 32(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1373
        num_dram_output_streams++;
    a7f4:	00170713          	addi	a4, a4, 1
    a7f8:	c0e42c23          	sw	a4, -1000(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1374
        curr_dram_output_stream_state_init++;
    a7fc:	06090913          	addi	s2, s2, 96
    a800:	00078a13          	mv	s4, a5
    a804:	dedff06f          	j	a5f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1378
        
      }
    }
    else if ((flags & STREAM_INPUT_PARK) != 0) {
    a808:	0017f713          	andi	a4, a5, 1
    a80c:	de0702e3          	beqz	a4, a5f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5bc>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    a810:	01950733          	add	a4, a0, s9
    a814:	00c71713          	slli	a4, a4, 0xc
    a818:	08c70613          	addi	a2, a4, 140
    a81c:	00062683          	lw	a3, 0(a2)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1381
      // DV-only
      // Reg poll, flushed immediately
      while (!stream_phase_is_active(stream_id));
    a820:	0046f693          	andi	a3, a3, 4
    a824:	fe068ce3          	beqz	a3, a81c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x7e8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1383
#ifndef PERF_DUMP
      RISC_POST_STATUS(0xA7000000 | stream_id);
    a828:	a70006b7          	lui	a3, 0xa7000
    a82c:	00d566b3          	or	a3, a0, a3
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a830:	ffb20637          	lui	a2, 0xffb20
    a834:	10d62623          	sw	a3, 268(a2) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    a838:	01c72683          	lw	a3, 28(a4)
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    a83c:	09072b83          	lw	s7, 144(a4)
    a840:	00001637          	lui	a2, 0x1
    a844:	fff60613          	addi	a2, a2, -1 # fff <__firmware_stack_size+0xbff>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1387
#endif
      uint32_t stream_buf_size_words = stream_get_data_buf_size(stream_id);
      uint32_t stream_buf_size_tiles = stream_get_curr_phase_num_msgs(stream_id);
      if ((flags & STREAM_INTERMEDIATE) != 0 || (flags & STREAM_MOVES_RAW_DATA) != 0) {
    a848:	0507f793          	andi	a5, a5, 80
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
    a84c:	00cbdb93          	srli	s7, s7, 0xc
    a850:	00cbfbb3          	and	s7, s7, a2
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1387
    a854:	02078663          	beqz	a5, a880 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x84c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1388
        volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    a858:	ffbf6097          	auipc	ra, 0xffbf6
    a85c:	82c080e7          	jalr	-2004(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    a860:	ffbf5097          	auipc	ra, 0xffbf5
    a864:	7e8080e7          	jalr	2024(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    a868:	01950533          	add	a0, a0, s9
    a86c:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1389
        tiles_received_ptr[0] += stream_buf_size_tiles; // ok to be like this because its a park buffer and wont wrap
    a870:	01052783          	lw	a5, 16(a0)
    a874:	00fb8bb3          	add	s7, s7, a5
    a878:	01752823          	sw	s7, 16(a0)
    a87c:	d75ff06f          	j	a5f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5bc>
stream_push_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:280
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX);
    a880:	00472783          	lw	a5, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:281
  uint32_t tiles_left_in_phase = rmw & 0xffff;
    a884:	02c12603          	lw	a2, 44(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:282
  rmw = rmw & ~0xffff;
    a888:	ffff05b7          	lui	a1, 0xffff0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:285
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    a88c:	00c69693          	slli	a3, a3, 0xc
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:281
  uint32_t tiles_left_in_phase = rmw & 0xffff;
    a890:	00c7f633          	and	a2, a5, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:283
  tiles_left_in_phase -= num_tiles;
    a894:	41760633          	sub	a2, a2, s7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:282
  rmw = rmw & ~0xffff;
    a898:	00b7f7b3          	and	a5, a5, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:284
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | tiles_left_in_phase)); // used as scratch reg for source endpoint streams
    a89c:	00c7e7b3          	or	a5, a5, a2
    a8a0:	00f72223          	sw	a5, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:285
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    a8a4:	0176ebb3          	or	s7, a3, s7
    a8a8:	07772c23          	sw	s7, 120(a4)
    a8ac:	d45ff06f          	j	a5f0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x5bc>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1408
        i++, curr_active_stream_info++) {
      uint32_t flags = curr_active_stream_info->flags;
      if ((((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) && ((flags & STREAM_IS_FORK) == 0)) ||
          (((flags & STREAM_DRAM_OUTPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0))) {
        dram_prefetch_has_data[num_dram_prefetch_streams] = false;
        dram_prefetch_epoch_stream_info[num_dram_prefetch_streams] = RISC_EPOCH_INFO_PTR->active_streams[i];
    a8b0:	00020837          	lui	a6, 0x20
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1397
  num_dram_prefetch_streams = 0;
    a8b4:	e4042023          	sw	zero, -448(s0)
    a8b8:	00000793          	li	a5, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1401
    for (uint32_t i = 0;
    a8bc:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1397
  num_dram_prefetch_streams = 0;
    a8c0:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1398
  curr_active_stream_info = active_stream_info;
    a8c4:	00048693          	mv	a3, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1405
      if ((((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) && ((flags & STREAM_IS_FORK) == 0)) ||
    a8c8:	00400893          	li	a7, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1408
        dram_prefetch_epoch_stream_info[num_dram_prefetch_streams] = RISC_EPOCH_INFO_PTR->active_streams[i];
    a8cc:	08080813          	addi	a6, a6, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1405
      if ((((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) && ((flags & STREAM_IS_FORK) == 0)) ||
    a8d0:	00800313          	li	t1, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1402
        i < num_active_streams;
    a8d4:	16c51a63          	bne	a0, a2, aa48 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa14>
    a8d8:	00058463          	beqz	a1, a8e0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8ac>
    a8dc:	e4f42023          	sw	a5, -448(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1440
            curr_dram_q_state->dram_ptr_issued_q_slots = dram_ptr_issued_q_slots;
            curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
            curr_dram_q_state->dram_ptr_flushed_q_slots = dram_ptr_issued_q_slots;
            l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
            if (is_dram_streaming_read)
              l1_ptrs->dram_streaming_tag = DRAM_STREAMING_SYNC_NUMBER;
    a8e0:	bad0fb37          	lui	s6, 0xbad0f
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    a8e4:	ffb21ab7          	lui	s5, 0xffb21
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1417
    bool reads_flushed = true;
    a8e8:	00100913          	li	s2, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1440
              l1_ptrs->dram_streaming_tag = DRAM_STREAMING_SYNC_NUMBER;
    a8ec:	00db0b13          	addi	s6, s6, 13 # bad0f00d <TENSIX_MAILBOX_BASE+0xbae4f00d>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    a8f0:	c28a8a93          	addi	s5, s5, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    a8f4:	00100b93          	li	s7, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1421
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    a8f8:	01012983          	lw	s3, 16(sp)
    a8fc:	00000a13          	li	s4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1425
          RISC_POST_STATUS(0xA8100000 | i);
    a900:	a8100c37          	lui	s8, 0xa8100
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a904:	ffb20cb7          	lui	s9, 0xffb20
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1421
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    a908:	7244a783          	lw	a5, 1828(s1)
    a90c:	18fa6863          	bltu	s4, a5, aa9c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa68>
    a910:	ec040a13          	addi	s4, s0, -320
    a914:	e6040993          	addi	s3, s0, -416
    a918:	00098d13          	mv	s10, s3
    a91c:	000a0d93          	mv	s11, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1460
            ncrisc_noc_fast_read_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_ptr_addr, (uint32_t)l1_ptr_addr, DRAM_HEADER_SIZE, NCRISC_HEADER_RD_TRID);
          }
        }
      }

      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a920:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1465
        curr_active_stream_info = dram_prefetch_active_stream_info[i];
        uint32_t stream_id = curr_active_stream_info->stream_id;
        if (!dram_prefetch_has_data[i]) {
  #ifndef PERF_DUMP
          RISC_POST_STATUS(0xA8200000 | stream_id);
    a924:	a8200337          	lui	t1, 0xa8200
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a928:	ffb20e37          	lui	t3, 0xffb20
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1460
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a92c:	e4042783          	lw	a5, -448(s0)
    a930:	24fce263          	bltu	s9, a5, ab74 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb40>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    a934:	ffb207b7          	lui	a5, 0xffb20
    a938:	24c7a783          	lw	a5, 588(a5) # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1490
        }
      }

      reads_flushed = true;
      for (uint32_t n = 0; n < NUM_NOCS; n++) {
        reads_flushed = reads_flushed && ncrisc_noc_reads_flushed_l1(n, NCRISC_HEADER_RD_TRID);
    a93c:	00000913          	li	s2, 0
    a940:	00079863          	bnez	a5, a950 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x91c>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
    a944:	ffb307b7          	lui	a5, 0xffb30
    a948:	24c7a903          	lw	s2, 588(a5) # ffb3024c <TENSIX_MAILBOX_BASE+0xffc7024c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1490
    a94c:	00193913          	seqz	s2, s2
    a950:	03810713          	addi	a4, sp, 56
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1474
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a954:	00098e93          	mv	t4, s3
    a958:	000a0f13          	mv	t5, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1495
      }

      all_dram_prefetch_have_data = true;

      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a95c:	00000313          	li	t1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1493
      all_dram_prefetch_have_data = true;
    a960:	00100c13          	li	s8, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1502
        uint32_t stream_id = curr_active_stream_info->stream_id;
        uint32_t flags = curr_active_stream_info->flags;
        if ((flags & STREAM_DRAM_INPUT) != 0 || (flags & STREAM_DRAM_OUTPUT) != 0) {
          if (!dram_prefetch_has_data[i]) {
  #ifndef PERF_DUMP
            RISC_POST_STATUS(0xA8300000 | stream_id);
    a964:	a8300d37          	lui	s10, 0xa8300
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a968:	ffb20db7          	lui	s11, 0xffb20
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1495
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    a96c:	e4042783          	lw	a5, -448(s0)
    a970:	2cf37863          	bgeu	t1, a5, ac40 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc0c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1496
        curr_active_stream_info = dram_prefetch_active_stream_info[i];
    a974:	000f2783          	lw	a5, 0(t5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1498
        uint32_t flags = curr_active_stream_info->flags;
    a978:	0067d603          	lhu	a2, 6(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1499
        if ((flags & STREAM_DRAM_INPUT) != 0 || (flags & STREAM_DRAM_OUTPUT) != 0) {
    a97c:	00c67693          	andi	a3, a2, 12
    a980:	0a068a63          	beqz	a3, aa34 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa00>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1500
          if (!dram_prefetch_has_data[i]) {
    a984:	00074683          	lbu	a3, 0(a4)
    a988:	0a069663          	bnez	a3, aa34 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa00>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1497
        uint32_t stream_id = curr_active_stream_info->stream_id;
    a98c:	0007c783          	lbu	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1505
  #endif

            epoch_stream_info_t tt_l1_ptr * l1_stream_info = dram_prefetch_epoch_stream_info[i];
    a990:	000eae03          	lw	t3, 0(t4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1518
              if ((flags & STREAM_DRAM_INPUT) != 0 &&
                  (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST])))) &&
                  (is_dram_padding ||
                   ((flags & STREAM_DRAM_RAM) != 0) || 
                   (l1_dram_io_state->rd_flags & DRAM_Q_HEADER_ZERO_FLAG) != 0 ||
                   !dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, l1_dram_io_state->rd_dram_wrptr)) &&
    a994:	00467693          	andi	a3, a2, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1507
            uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    a998:	086e5f83          	lhu	t6, 134(t3) # ffb20086 <TENSIX_MAILBOX_BASE+0xffc60086>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1522
                  (is_dram_padding || rd_epoch_id_tag == DRAM_QUEUE_NO_EPOCH_CHECK || rd_epoch_id_tag == l1_stream_info->producer_epoch_id)) {
                if (q == num_dram_io_qs-1)
                  dram_prefetch_has_data[i] = true;
              } else if ((flags & STREAM_DRAM_OUTPUT) != 0 &&
    a99c:	00867c93          	andi	s9, a2, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1509
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a9a0:	00000513          	li	a0, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1515
                  (is_dram_padding ||
    a9a4:	20067613          	andi	a2, a2, 512
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1502
            RISC_POST_STATUS(0xA8300000 | stream_id);
    a9a8:	01a7e7b3          	or	a5, a5, s10
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    a9ac:	10fda623          	sw	a5, 268(s11) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1508
            volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a9b0:	088e2783          	lw	a5, 136(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1518
                   !dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, l1_dram_io_state->rd_dram_wrptr)) &&
    a9b4:	00d12a23          	sw	a3, 20(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1524
                        (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
                if (q == num_dram_io_qs-1)
    a9b8:	ffff8393          	addi	t2, t6, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1508
            volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    a9bc:	01c7a783          	lw	a5, 28(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1509
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    a9c0:	07f57a63          	bgeu	a0, t6, aa34 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa00>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1511
              uint16_t rd_epoch_id_tag = l1_dram_io_state->rd_epoch_id_tag;
    a9c4:	00a7d283          	lhu	t0, 10(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1512
              bool is_dram_padding = l1_dram_io_state->dram_padding;
    a9c8:	03e7c683          	lbu	a3, 62(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1518
                   !dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, l1_dram_io_state->rd_dram_wrptr)) &&
    a9cc:	01412583          	lw	a1, 20(sp)
    a9d0:	04058e63          	beqz	a1, aa2c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9f8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1513
              if ((flags & STREAM_DRAM_INPUT) != 0 &&
    a9d4:	04090c63          	beqz	s2, aa2c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9f8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1514
                  (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST])))) &&
    a9d8:	24069a63          	bnez	a3, ac2c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbf8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1515
                  (is_dram_padding ||
    a9dc:	04061263          	bnez	a2, aa20 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9ec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1517
                   (l1_dram_io_state->rd_flags & DRAM_Q_HEADER_ZERO_FLAG) != 0 ||
    a9e0:	00e7d683          	lhu	a3, 14(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1516
                   ((flags & STREAM_DRAM_RAM) != 0) || 
    a9e4:	0016f693          	andi	a3, a3, 1
    a9e8:	02069c63          	bnez	a3, aa20 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9ec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1518
                   !dram_io_local_empty(l1_dram_io_state->rd_dram_local_rdptr, l1_dram_io_state->rd_dram_rdptr, l1_dram_io_state->rd_dram_wrptr)) &&
    a9ec:	0087d803          	lhu	a6, 8(a5)
    a9f0:	0007d583          	lhu	a1, 0(a5)
    a9f4:	0047d683          	lhu	a3, 4(a5)
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:75
}

inline __attribute__((always_inline)) uint32_t dram_io_local_empty(uint32_t local_rd_ptr, uint32_t rd_ptr, uint32_t wr_ptr) {
  if (rd_ptr == wr_ptr)
    a9f8:	02d58a63          	beq	a1, a3, aa2c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9f8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:78
    return true;

  uint32_t case1 = rd_ptr < wr_ptr && (local_rd_ptr < rd_ptr || local_rd_ptr >= wr_ptr);
    a9fc:	7cd5f863          	bgeu	a1, a3, b1cc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1198>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:78
    aa00:	00090893          	mv	a7, s2
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:78
    aa04:	00b86663          	bltu	a6, a1, aa10 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9dc>
    aa08:	00d838b3          	sltu	a7, a6, a3
    aa0c:	0018c893          	xori	a7, a7, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
    aa10:	00b6f663          	bgeu	a3, a1, aa1c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9e8>
    aa14:	00d86463          	bltu	a6, a3, aa1c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9e8>
    aa18:	00b86a63          	bltu	a6, a1, aa2c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9f8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:81
  
  return case1 || case2;
    aa1c:	00089863          	bnez	a7, aa2c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9f8>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1519
                  (is_dram_padding || rd_epoch_id_tag == DRAM_QUEUE_NO_EPOCH_CHECK || rd_epoch_id_tag == l1_stream_info->producer_epoch_id)) {
    aa20:	20028663          	beqz	t0, ac2c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbf8>
    aa24:	002e5683          	lhu	a3, 2(t3)
    aa28:	20568263          	beq	a3, t0, ac2c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbf8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1522
              } else if ((flags & STREAM_DRAM_OUTPUT) != 0 &&
    aa2c:	1e0c9e63          	bnez	s9, ac28 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbf4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1527
                  dram_prefetch_has_data[i] = true;
              } else {
                all_dram_prefetch_have_data = false;
    aa30:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1495
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    aa34:	00130313          	addi	t1, t1, 1 # a8200001 <TENSIX_MAILBOX_BASE+0xa8340001>
    aa38:	00170713          	addi	a4, a4, 1
    aa3c:	004f0f13          	addi	t5, t5, 4
    aa40:	004e8e93          	addi	t4, t4, 4
    aa44:	f29ff06f          	j	a96c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x938>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1404
      uint32_t flags = curr_active_stream_info->flags;
    aa48:	0066d703          	lhu	a4, 6(a3) # a7000006 <TENSIX_MAILBOX_BASE+0xa7140006>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1405
      if ((((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0) && ((flags & STREAM_IS_FORK) == 0)) ||
    aa4c:	12677e13          	andi	t3, a4, 294
    aa50:	011e0663          	beq	t3, a7, aa5c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa28>
    aa54:	02a77713          	andi	a4, a4, 42
    aa58:	02671c63          	bne	a4, t1, aa90 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa5c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1407
        dram_prefetch_has_data[num_dram_prefetch_streams] = false;
    aa5c:	05010713          	addi	a4, sp, 80
    aa60:	00f70733          	add	a4, a4, a5
    aa64:	fe070423          	sb	zero, -24(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1408
        dram_prefetch_epoch_stream_info[num_dram_prefetch_streams] = RISC_EPOCH_INFO_PTR->active_streams[i];
    aa68:	04460713          	addi	a4, a2, 68
    aa6c:	00271713          	slli	a4, a4, 0x2
    aa70:	00e80733          	add	a4, a6, a4
    aa74:	00472e03          	lw	t3, 4(a4)
    aa78:	00279593          	slli	a1, a5, 0x2
    aa7c:	00b40733          	add	a4, s0, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1409
        dram_prefetch_active_stream_info[num_dram_prefetch_streams] = curr_active_stream_info;
    aa80:	ecd72023          	sw	a3, -320(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1410
        num_dram_prefetch_streams++;
    aa84:	00178793          	addi	a5, a5, 1
    aa88:	00100593          	li	a1, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1408
        dram_prefetch_epoch_stream_info[num_dram_prefetch_streams] = RISC_EPOCH_INFO_PTR->active_streams[i];
    aa8c:	e7c72023          	sw	t3, -416(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1401
    for (uint32_t i = 0;
    aa90:	00160613          	addi	a2, a2, 1
    aa94:	00c68693          	addi	a3, a3, 12
    aa98:	e3dff06f          	j	a8d4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8a0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1423
        if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_PTRS_LOADED_FLAG) == 0) {
    aa9c:	0049c783          	lbu	a5, 4(s3)
    aaa0:	0107f713          	andi	a4, a5, 16
    aaa4:	04071a63          	bnez	a4, aaf8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xac4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1425
          RISC_POST_STATUS(0xA8100000 | i);
    aaa8:	018a6733          	or	a4, s4, s8
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    aaac:	10eca623          	sw	a4, 268(s9) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    aab0:	0059c703          	lbu	a4, 5(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1427
          volatile uint32_t tt_l1_ptr * l1_ptr_addr = curr_dram_q_state->l1_dram_ptrs;
    aab4:	0009a683          	lw	a3, 0(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    aab8:	04070c63          	beqz	a4, ab10 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xadc>
    aabc:	0087f713          	andi	a4, a5, 8
    aac0:	04070863          	beqz	a4, ab10 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xadc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1431
          bool is_dram_padding = l1_ptrs->dram_padding;
    aac4:	03e6c703          	lbu	a4, 62(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    aac8:	00100713          	li	a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1433
            uint32_t dram_ptr_issued_q_slots = l1_ptrs->rd_dram_rdptr;
    aacc:	0006d603          	lhu	a2, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1434
            uint32_t dram_ptr_incoming_q_slots = l1_ptrs->rd_dram_wrptr;
    aad0:	0046d583          	lhu	a1, 4(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1435
            curr_dram_q_state->dram_ptr_issued_q_slots = dram_ptr_issued_q_slots;
    aad4:	00c99323          	sh	a2, 6(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1437
            curr_dram_q_state->dram_ptr_flushed_q_slots = dram_ptr_issued_q_slots;
    aad8:	00c99423          	sh	a2, 8(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1438
            l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
    aadc:	0006d603          	lhu	a2, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1436
            curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
    aae0:	00b99523          	sh	a1, 10(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1438
            l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
    aae4:	02c69023          	sh	a2, 32(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1439
            if (is_dram_streaming_read)
    aae8:	00070463          	beqz	a4, aaf0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xabc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1440
              l1_ptrs->dram_streaming_tag = DRAM_STREAMING_SYNC_NUMBER;
    aaec:	0166ae23          	sw	s6, 28(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1441
            curr_dram_q_state->dram_q_state_flags |= DRAM_Q_PTRS_LOADED_FLAG;
    aaf0:	0107e793          	ori	a5, a5, 16
    aaf4:	00f98223          	sb	a5, 4(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1421
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    aaf8:	02700793          	li	a5, 39
    aafc:	06fa1663          	bne	s4, a5, ab68 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb34>
    ab00:	000207b7          	lui	a5, 0x20
    ab04:	2f87a983          	lw	s3, 760(a5) # 202f8 <risc_chip_specific.cc.5b7d4a1c+0x131c>
    ab08:	02800a13          	li	s4, 40
    ab0c:	dfdff06f          	j	a908 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1431
          bool is_dram_padding = l1_ptrs->dram_padding;
    ab10:	03e6c703          	lbu	a4, 62(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1432
          if (is_dram_streaming_read || is_dram_padding) {
    ab14:	00070663          	beqz	a4, ab20 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xaec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1430
          bool is_dram_streaming_read = curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    ab18:	00000713          	li	a4, 0
    ab1c:	fb1ff06f          	j	aacc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xa98>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1442
          } else if (reads_flushed) {
    ab20:	fc090ce3          	beqz	s2, aaf8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xac4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1443
            uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    ab24:	0017d513          	srli	a0, a5, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1445
            if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    ab28:	0087f793          	andi	a5, a5, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1443
            uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    ab2c:	00357513          	andi	a0, a0, 3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1445
            if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    ab30:	02078663          	beqz	a5, ab5c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb28>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    ab34:	0306a583          	lw	a1, 48(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    ab38:	0346a603          	lw	a2, 52(a3)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    ab3c:	01051793          	slli	a5, a0, 0x10
    ab40:	015787b3          	add	a5, a5, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    ab44:	0007a703          	lw	a4, 0(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1454
            while (!ncrisc_noc_fast_read_ok_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
    ab48:	fe071ee3          	bnez	a4, ab44 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb10>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1455
            ncrisc_noc_fast_read_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_ptr_addr, (uint32_t)l1_ptr_addr, DRAM_HEADER_SIZE, NCRISC_HEADER_RD_TRID);
    ab4c:	00300793          	li	a5, 3
    ab50:	02000713          	li	a4, 32
    ab54:	afcff0ef          	jal	ra, 9e50 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
    ab58:	fa1ff06f          	j	aaf8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xac4>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    ab5c:	0486a583          	lw	a1, 72(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    ab60:	04c6a603          	lw	a2, 76(a3)
    ab64:	fd9ff06f          	j	ab3c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb08>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1421
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    ab68:	001a0a13          	addi	s4, s4, 1
    ab6c:	02498993          	addi	s3, s3, 36
    ab70:	d99ff06f          	j	a908 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1463
        if (!dram_prefetch_has_data[i]) {
    ab74:	03810793          	addi	a5, sp, 56
    ab78:	019787b3          	add	a5, a5, s9
    ab7c:	0007c783          	lbu	a5, 0(a5)
    ab80:	08079c63          	bnez	a5, ac18 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbe4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1462
        uint32_t stream_id = curr_active_stream_info->stream_id;
    ab84:	000da783          	lw	a5, 0(s11)
    ab88:	0007c783          	lbu	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1465
          RISC_POST_STATUS(0xA8200000 | stream_id);
    ab8c:	0067e7b3          	or	a5, a5, t1
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    ab90:	10fe2623          	sw	a5, 268(t3)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1468
          if (reads_flushed) {
    ab94:	08090263          	beqz	s2, ac18 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbe4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1469
            epoch_stream_info_t tt_l1_ptr * l1_stream_info = dram_prefetch_epoch_stream_info[i];
    ab98:	000d2703          	lw	a4, 0(s10) # a8300000 <TENSIX_MAILBOX_BASE+0xa8440000>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1474
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    ab9c:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1470
            epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    aba0:	08872783          	lw	a5, 136(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1471
            uint32_t num_dram_io_qs = l1_stream_info->num_dram_io_bufs;
    aba4:	08675e83          	lhu	t4, 134(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1473
            uint32_t input_noc = l1_dram_io_info->input_noc;
    aba8:	0047c503          	lbu	a0, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1472
            volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    abac:	01c7ac03          	lw	s8, 28(a5)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    abb0:	01051893          	slli	a7, a0, 0x10
    abb4:	015888b3          	add	a7, a7, s5
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1474
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    abb8:	07d87063          	bgeu	a6, t4, ac18 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbe4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1475
              if (!l1_dram_io_state->dram_padding) {
    abbc:	03ec4783          	lbu	a5, 62(s8) # a810003e <TENSIX_MAILBOX_BASE+0xa824003e>
    abc0:	04079663          	bnez	a5, ac0c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xbd8>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    abc4:	048c2583          	lw	a1, 72(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    abc8:	04cc2603          	lw	a2, 76(s8)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    abcc:	0008a783          	lw	a5, 0(a7)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1479
                while (!ncrisc_noc_fast_read_ok_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
    abd0:	fe079ee3          	bnez	a5, abcc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb98>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1480
                ncrisc_noc_fast_read_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr, (uint32_t)l1_ptr_addr, DRAM_HEADER_SIZE, NCRISC_HEADER_RD_TRID);
    abd4:	00300793          	li	a5, 3
    abd8:	02000713          	li	a4, 32
    abdc:	000c0693          	mv	a3, s8
    abe0:	03112023          	sw	a7, 32(sp)
    abe4:	01012e23          	sw	a6, 28(sp)
    abe8:	01d12c23          	sw	t4, 24(sp)
    abec:	00a12a23          	sw	a0, 20(sp)
    abf0:	a60ff0ef          	jal	ra, 9e50 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
    abf4:	02012883          	lw	a7, 32(sp)
    abf8:	01c12803          	lw	a6, 28(sp)
    abfc:	01812e83          	lw	t4, 24(sp)
    ac00:	01412503          	lw	a0, 20(sp)
    ac04:	ffb20e37          	lui	t3, 0xffb20
    ac08:	a8200337          	lui	t1, 0xa8200
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1482
              l1_dram_io_state = l1_dram_io_state->next;
    ac0c:	05cc2c03          	lw	s8, 92(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1474
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    ac10:	00180813          	addi	a6, a6, 1
    ac14:	fa5ff06f          	j	abb8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xb84>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1460
      for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    ac18:	001c8c93          	addi	s9, s9, 1
    ac1c:	004d8d93          	addi	s11, s11, 4
    ac20:	004d0d13          	addi	s10, s10, 4
    ac24:	d09ff06f          	j	a92c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8f8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1522
              } else if ((flags & STREAM_DRAM_OUTPUT) != 0 &&
    ac28:	e00904e3          	beqz	s2, aa30 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9fc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1524
                if (q == num_dram_io_qs-1)
    ac2c:	00751463          	bne	a0, t2, ac34 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc00>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1525
                  dram_prefetch_has_data[i] = true;
    ac30:	01770023          	sb	s7, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1530
                break;
              }
              l1_dram_io_state = l1_dram_io_state->next;
    ac34:	05c7a783          	lw	a5, 92(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1509
            for (uint32_t q = 0;  q < num_dram_io_qs; q++) {
    ac38:	00150513          	addi	a0, a0, 1
    ac3c:	d85ff06f          	j	a9c0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x98c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1612
            l1_ptrs->dram_streaming_tag = 0;
            uint32_t output_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
            uint64_t dram_ptr_addr = tt_l1_load(&l1_ptrs->dram_streaming_header_addr);
            // L1 and register reads, flushed by immediate use below
            while (!ncrisc_noc_fast_write_ok_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
            ncrisc_noc_fast_write_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF, l1_mem::address_map::ZEROS_BASE, dram_ptr_addr+DRAM_BUF_STREAMING_TAG_OFFSET, 4,
    ac40:	000025b7          	lui	a1, 0x2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1538
      curr_dram_q_state = dram_q_state;
    ac44:	01012c83          	lw	s9, 16(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1539
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    ac48:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1536
      all_dram_io_ptrs_loaded = true;
    ac4c:	00100d93          	li	s11, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1543
          RISC_POST_STATUS(0xA8400000 | i);
    ac50:	a84008b7          	lui	a7, 0xa8400
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    ac54:	ffb20337          	lui	t1, 0xffb20
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1612
            ncrisc_noc_fast_write_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF, l1_mem::address_map::ZEROS_BASE, dram_ptr_addr+DRAM_BUF_STREAMING_TAG_OFFSET, 4,
    ac58:	10058593          	addi	a1, a1, 256 # 2100 <__firmware_start+0x100>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1539
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    ac5c:	7244a783          	lw	a5, 1828(s1)
    ac60:	0efd6a63          	bltu	s10, a5, ad54 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd20>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1418
    while (!all_dram_prefetch_have_data || !all_dram_io_ptrs_loaded) {
    ac64:	c80c0ae3          	beqz	s8, a8f8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8c4>
    ac68:	c80d88e3          	beqz	s11, a8f8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x8c4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1700
          uint32_t dram_io_scatter_chunk_size_bytes = dram_io_scatter_state->scatter_chunk_size_bytes;
          uint32_t next_stream_buf_addr = stream_buf_addr;
          for (uint32_t scatter_idx = 0; scatter_idx < dram_io_scatter_size; scatter_idx++) {
            uint64_t dram_src_addr_w_offset = tt_l1_load(&scatter_offsets[scatter_idx]);
            bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
            dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    ac6c:	c0000ab7          	lui	s5, 0xc0000
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1670
        uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_buf_addr);
    ac70:	0000fb37          	lui	s6, 0xf
    ac74:	0000fbb7          	lui	s7, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1652
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    ac78:	00000913          	li	s2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1700
            dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    ac7c:	fffa8a93          	addi	s5, s5, -1 # bfffffff <TENSIX_MAILBOX_BASE+0xc013ffff>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1670
        uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_buf_addr);
    ac80:	428b0b13          	addi	s6, s6, 1064 # f428 <my_y>
    ac84:	42cb8b93          	addi	s7, s7, 1068 # f42c <my_x>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1652
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    ac88:	e4042783          	lw	a5, -448(s0)
    ac8c:	24f96263          	bltu	s2, a5, aed0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe9c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1722
        }
      }
    }
  }

  curr_dram_output_stream_state_init = dram_output_stream_state;
    ac90:	000107b7          	lui	a5, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1723
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state_init++) {
    ac94:	c1842683          	lw	a3, -1000(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1722
  curr_dram_output_stream_state_init = dram_output_stream_state;
    ac98:	be878793          	addi	a5, a5, -1048 # fbe8 <dram_output_stream_state>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1723
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state_init++) {
    ac9c:	00c12703          	lw	a4, 12(sp)
    aca0:	48e69063          	bne	a3, a4, b120 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10ec>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    aca4:	ffb20737          	lui	a4, 0xffb20
    aca8:	25072783          	lw	a5, 592(a4) # ffb20250 <TENSIX_MAILBOX_BASE+0xffc60250>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1740
      curr_dram_output_stream_state_init->prev_batch_ptr_bytes = 0;
    }
  }

  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    while (!ncrisc_noc_reads_flushed_l1(n, NCRISC_RD_START_TRID));
    acac:	fe079ee3          	bnez	a5, aca8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc74>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
    acb0:	ffb307b7          	lui	a5, 0xffb30
    acb4:	2507a403          	lw	s0, 592(a5) # ffb30250 <TENSIX_MAILBOX_BASE+0xffc70250>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1740
    acb8:	fe041ee3          	bnez	s0, acb4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc80>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    acbc:	ffb207b7          	lui	a5, 0xffb20
    acc0:	a9000737          	lui	a4, 0xa9000
    acc4:	00020937          	lui	s2, 0x20
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    acc8:	001009b7          	lui	s3, 0x100
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    accc:	00003a37          	lui	s4, 0x3
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    acd0:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
    acd4:	08090913          	addi	s2, s2, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1754
       i++, curr_active_stream_info++) {
    volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    uint32_t stream_id = l1_stream_info->stream_id;
    uint32_t flags = l1_stream_info->flags;

    if (((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0)) {
    acd8:	00400a93          	li	s5, 4
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    acdc:	b4098993          	addi	s3, s3, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    ace0:	200a0a13          	addi	s4, s4, 512 # 3200 <__firmware_start+0x1200>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1748
       i < num_active_streams;
    ace4:	1804a783          	lw	a5, 384(s1)
    ace8:	4af47063          	bgeu	s0, a5, b188 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1154>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1750
    volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[i];
    acec:	04440793          	addi	a5, s0, 68
    acf0:	00279793          	slli	a5, a5, 0x2
    acf4:	00f907b3          	add	a5, s2, a5
    acf8:	0047a703          	lw	a4, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1751
    uint32_t stream_id = l1_stream_info->stream_id;
    acfc:	00075503          	lhu	a0, 0(a4) # a9000000 <TENSIX_MAILBOX_BASE+0xa9140000>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1752
    uint32_t flags = l1_stream_info->flags;
    ad00:	03c72683          	lw	a3, 60(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1754
    if (((flags & STREAM_DRAM_INPUT) != 0) && ((flags & STREAM_DRAM_IO) == 0) && ((flags & STREAM_DRAM_STREAMING) == 0)) {
    ad04:	0266f793          	andi	a5, a3, 38
    ad08:	05579263          	bne	a5, s5, ad4c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd18>
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
    ad0c:	013507b3          	add	a5, a0, s3
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1755
      if ((flags & STREAM_INTERMEDIATE) != 0 || (flags & STREAM_MOVES_RAW_DATA) != 0) {
    ad10:	0506f693          	andi	a3, a3, 80
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
    ad14:	00c79793          	slli	a5, a5, 0xc
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1755
    ad18:	44068863          	beqz	a3, b168 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1134>
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170
    ad1c:	0047ab03          	lw	s6, 4(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1757
        uint32_t stream_phase_tiles = stream_src_endpoint_get_phase_tiles_count(stream_id);
        volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    ad20:	ffbf5097          	auipc	ra, 0xffbf5
    ad24:	364080e7          	jalr	868(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
    ad28:	ffbf5097          	auipc	ra, 0xffbf5
    ad2c:	320080e7          	jalr	800(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    ad30:	01350533          	add	a0, a0, s3
    ad34:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1758
        uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    ad38:	01052783          	lw	a5, 16(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
    ad3c:	016787b3          	add	a5, a5, s6
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1760
        uint16_t new_epoch_tiles_received = op_pack_tiles_ptr_add(operand_tiles_received, stream_phase_tiles);
        tiles_received_ptr[0] = new_epoch_tiles_received;
    ad40:	01079793          	slli	a5, a5, 0x10
    ad44:	0107d793          	srli	a5, a5, 0x10
    ad48:	00f52823          	sw	a5, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1747
  for (uint32_t i = 0;
    ad4c:	00140413          	addi	s0, s0, 1
    ad50:	f95ff06f          	j	ace4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xcb0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1541
        if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_PTRS_LOADED_FLAG) == 0) {
    ad54:	004cc503          	lbu	a0, 4(s9)
    ad58:	01057793          	andi	a5, a0, 16
    ad5c:	14079863          	bnez	a5, aeac <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe78>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1543
          RISC_POST_STATUS(0xA8400000 | i);
    ad60:	011d67b3          	or	a5, s10, a7
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    ad64:	10f32623          	sw	a5, 268(t1) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1548
          if (!(reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
    ad68:	02090863          	beqz	s2, ad98 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd64>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1554
          bool is_dram_streaming_write = !curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    ad6c:	005cc703          	lbu	a4, 5(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1545
          volatile uint32_t tt_l1_ptr * l1_ptr_addr = curr_dram_q_state->l1_dram_ptrs;
    ad70:	000ca783          	lw	a5, 0(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1554
          bool is_dram_streaming_write = !curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    ad74:	02071663          	bnez	a4, ada0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd6c>
    ad78:	00857693          	andi	a3, a0, 8
    ad7c:	02068263          	beqz	a3, ada0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd6c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1556
            uint32_t dest_epoch_id = l1_ptrs->dram_streaming_epoch_id;
    ad80:	0187a603          	lw	a2, 24(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1557
            bool tag_match = l1_ptrs->dram_streaming_tag == DRAM_STREAMING_SYNC_NUMBER;
    ad84:	01c7a683          	lw	a3, 28(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1559
            dram_streaming_not_ready = !tag_match || current_epoch_id != dest_epoch_id;
    ad88:	01669863          	bne	a3, s6, ad98 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd64>
    ad8c:	010ca683          	lw	a3, 16(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1554
          bool is_dram_streaming_write = !curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    ad90:	00090e13          	mv	t3, s2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1559
            dram_streaming_not_ready = !tag_match || current_epoch_id != dest_epoch_id;
    ad94:	00d60863          	beq	a2, a3, ada4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd70>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1549
            all_dram_io_ptrs_loaded = false;
    ad98:	00000d93          	li	s11, 0
    ad9c:	1100006f          	j	aeac <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe78>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1554
          bool is_dram_streaming_write = !curr_dram_q_state->l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    ada0:	00000e13          	li	t3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1562
          if (dram_streaming_not_ready || l1_ptrs->rd_stride > curr_dram_q_state->temp0) {
    ada4:	00c7d683          	lhu	a3, 12(a5)
    ada8:	00fcc603          	lbu	a2, 15(s9)
    adac:	fed666e3          	bltu	a2, a3, ad98 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd64>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1571
          if (l1_dram_incoming_ptr_index) { // Read
    adb0:	06070463          	beqz	a4, ae18 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xde4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1572
            if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_RAM) != 0) {
    adb4:	00157713          	andi	a4, a0, 1
    adb8:	04070c63          	beqz	a4, ae10 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xddc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1573
              dram_ptr_issued_q_slots = l1_ptrs->rd_dram_rdptr;
    adbc:	0007d683          	lhu	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1577
            dram_ptr_incoming_q_slots = l1_ptrs->rd_dram_wrptr;
    adc0:	0047de83          	lhu	t4, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1587
          if (is_strided) {
    adc4:	008cd703          	lhu	a4, 8(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1588
            start_bytes = curr_dram_q_state->dram_ptr_issued_byte;
    adc8:	018ca603          	lw	a2, 24(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1591
            start_bytes = 0;
    adcc:	00000f93          	li	t6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1587
          if (is_strided) {
    add0:	00ebfc63          	bgeu	s7, a4, ade8 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xdb4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1589
            inc_size_bytes = ((uint32_t)curr_dram_q_state->dram_ptr_incoming_q_slots << 16) | curr_dram_q_state->dram_ptr_issued_q_slots;
    add4:	00acd703          	lhu	a4, 10(s9)
    add8:	006cd803          	lhu	a6, 6(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1588
            start_bytes = curr_dram_q_state->dram_ptr_issued_byte;
    addc:	00060f93          	mv	t6, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1589
            inc_size_bytes = ((uint32_t)curr_dram_q_state->dram_ptr_incoming_q_slots << 16) | curr_dram_q_state->dram_ptr_issued_q_slots;
    ade0:	01071713          	slli	a4, a4, 0x10
    ade4:	01076633          	or	a2, a4, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1596
          uint32_t dram_data_buf_size_bytes = l1_ptrs->dram_buf_size_bytes;
    ade8:	0407af03          	lw	t5, 64(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  return 0;
}

inline __attribute__((always_inline)) unsigned int mulsi3 (unsigned int a, unsigned int b)
{
  unsigned int r = 0;
    adec:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1596
    adf0:	00068813          	mv	a6, a3
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    adf4:	02080863          	beqz	a6, ae24 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xdf0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
    {
      if (a & 1)
    adf8:	00187293          	andi	t0, a6, 1
    adfc:	00028463          	beqz	t0, ae04 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xdd0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    ae00:	00c70733          	add	a4, a4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    ae04:	00185813          	srli	a6, a6, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    ae08:	00161613          	slli	a2, a2, 0x1
    ae0c:	fe9ff06f          	j	adf4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xdc0>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1575
              dram_ptr_issued_q_slots = l1_ptrs->rd_dram_local_rdptr;
    ae10:	0087d683          	lhu	a3, 8(a5)
    ae14:	fadff06f          	j	adc0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd8c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1579
            dram_ptr_issued_q_slots = l1_ptrs->rd_dram_wrptr;
    ae18:	0047d683          	lhu	a3, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1580
            dram_ptr_incoming_q_slots = l1_ptrs->rd_dram_rdptr;
    ae1c:	0007de83          	lhu	t4, 0(a5)
    ae20:	fa5ff06f          	j	adc4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd90>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    ae24:	01f70733          	add	a4, a4, t6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    ae28:	01e76463          	bltu	a4, t5, ae30 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xdfc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    ae2c:	41e70733          	sub	a4, a4, t5
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1602
          curr_dram_q_state->dram_ptr_issued_byte = start_bytes;
    ae30:	00ecac23          	sw	a4, 24(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1604
          l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
    ae34:	0007d703          	lhu	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1599
          curr_dram_q_state->dram_ptr_issued_q_slots = dram_ptr_issued_q_slots;
    ae38:	00dc9323          	sh	a3, 6(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1600
          curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
    ae3c:	01dc9523          	sh	t4, 10(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1601
          curr_dram_q_state->dram_ptr_flushed_q_slots = dram_ptr_issued_q_slots;
    ae40:	00dc9423          	sh	a3, 8(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1603
          curr_dram_q_state->dram_num_partial_q_slot_issued_tiles = 0;
    ae44:	000ca823          	sw	zero, 16(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1604
          l1_ptrs->wr_dram_rdptr = l1_ptrs->rd_dram_rdptr;
    ae48:	02e79023          	sh	a4, 32(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1606
          if (is_dram_streaming_write) {
    ae4c:	040e0a63          	beqz	t3, aea0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe6c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1608
            uint32_t output_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    ae50:	00155513          	srli	a0, a0, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1607
            l1_ptrs->dram_streaming_tag = 0;
    ae54:	0007ae23          	sw	zero, 28(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1608
            uint32_t output_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    ae58:	00357513          	andi	a0, a0, 3
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    ae5c:	0307a703          	lw	a4, 48(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    ae60:	0347ae03          	lw	t3, 52(a5)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    ae64:	01051793          	slli	a5, a0, 0x10
    ae68:	015787b3          	add	a5, a5, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    ae6c:	0007a683          	lw	a3, 0(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1611
            while (!ncrisc_noc_fast_write_ok_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
    ae70:	fe069ee3          	bnez	a3, ae6c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe38>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1612
            ncrisc_noc_fast_write_l1(output_noc, NCRISC_SMALL_TXN_CMD_BUF, l1_mem::address_map::ZEROS_BASE, dram_ptr_addr+DRAM_BUF_STREAMING_TAG_OFFSET, 4,
    ae74:	01c70613          	addi	a2, a4, 28
    ae78:	00e636b3          	sltu	a3, a2, a4
    ae7c:	00100793          	li	a5, 1
    ae80:	00000813          	li	a6, 0
    ae84:	00400713          	li	a4, 4
    ae88:	01c686b3          	add	a3, a3, t3
    ae8c:	864ff0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    ae90:	000027b7          	lui	a5, 0x2
    ae94:	ffb20337          	lui	t1, 0xffb20
    ae98:	a84008b7          	lui	a7, 0xa8400
    ae9c:	10078593          	addi	a1, a5, 256 # 2100 <__firmware_start+0x100>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1644
          curr_dram_q_state->dram_q_state_flags |= DRAM_Q_PTRS_LOADED_FLAG;
    aea0:	004cc783          	lbu	a5, 4(s9)
    aea4:	0107e793          	ori	a5, a5, 16
    aea8:	00fc8223          	sb	a5, 4(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1539
      for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    aeac:	02700793          	li	a5, 39
    aeb0:	00fd1a63          	bne	s10, a5, aec4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xe90>
    aeb4:	000207b7          	lui	a5, 0x20
    aeb8:	2f87ac83          	lw	s9, 760(a5) # 202f8 <risc_chip_specific.cc.5b7d4a1c+0x131c>
    aebc:	02800d13          	li	s10, 40
    aec0:	d9dff06f          	j	ac5c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc28>
    aec4:	001d0d13          	addi	s10, s10, 1
    aec8:	024c8c93          	addi	s9, s9, 36
    aecc:	d91ff06f          	j	ac5c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc28>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1653
    curr_active_stream_info = dram_prefetch_active_stream_info[i];
    aed0:	000a2783          	lw	a5, 0(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1655
    uint32_t flags = curr_active_stream_info->flags;
    aed4:	0067d683          	lhu	a3, 6(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1657
    if ((flags & STREAM_DRAM_INPUT) != 0) {
    aed8:	0046f713          	andi	a4, a3, 4
    aedc:	22070a63          	beqz	a4, b110 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10dc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1662
      epoch_stream_info_t tt_l1_ptr * l1_stream_info = dram_prefetch_epoch_stream_info[i];
    aee0:	0009ac03          	lw	s8, 0(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1654
    uint32_t stream_id = curr_active_stream_info->stream_id;
    aee4:	0007c783          	lbu	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1663
      epoch_stream_dram_io_info_t tt_l1_ptr * l1_dram_io_info = l1_stream_info->dram_io_info;
    aee8:	088c2503          	lw	a0, 136(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1659
      RISC_POST_STATUS(0xA8500000 | stream_id);
    aeec:	a8500737          	lui	a4, 0xa8500
    aef0:	00e7e7b3          	or	a5, a5, a4
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    aef4:	ffb20737          	lui	a4, 0xffb20
    aef8:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1664
      volatile dram_io_state_t tt_l1_ptr * l1_dram_io_state = l1_dram_io_info->dram_io_state;
    aefc:	01c52783          	lw	a5, 28(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1665
      uint32_t input_noc = l1_dram_io_info->input_noc;
    af00:	00454d03          	lbu	s10, 4(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1666
      uint32_t stream_buf_size_bytes = l1_stream_info->buf_full_size_bytes;
    af04:	014c2d83          	lw	s11, 20(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1667
      uint32_t stream_buf_addr = l1_stream_info->buf_base_addr;
    af08:	018c2c83          	lw	s9, 24(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1669
      if ((l1_dram_io_state->rd_flags & DRAM_Q_HEADER_ZERO_FLAG) != 0) {
    af0c:	00e7d703          	lhu	a4, 14(a5)
    af10:	00177713          	andi	a4, a4, 1
    af14:	0a070663          	beqz	a4, afc0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf8c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1670
        uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_buf_addr);
    af18:	016d07b3          	add	a5, s10, s6
    af1c:	0007c683          	lbu	a3, 0(a5)
    af20:	017d07b3          	add	a5, s10, s7
    af24:	0007c783          	lbu	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1671
        replicate_l1(input_noc, l1_mem::address_map::ZEROS_BASE, replicate_dest_addr, ZERO_GRAD_CHUNK_SIZE_BYTES, stream_buf_size_bytes >> LOG_ZERO_GRAD_CHUNK_SIZE_BYTES, NCRISC_WR_LOCAL_TRID);
    af28:	000028b7          	lui	a7, 0x2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1670
        uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_buf_addr);
    af2c:	00479793          	slli	a5, a5, 0x4
    af30:	00a69693          	slli	a3, a3, 0xa
    af34:	00f6e6b3          	or	a3, a3, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1671
        replicate_l1(input_noc, l1_mem::address_map::ZEROS_BASE, replicate_dest_addr, ZERO_GRAD_CHUNK_SIZE_BYTES, stream_buf_size_bytes >> LOG_ZERO_GRAD_CHUNK_SIZE_BYTES, NCRISC_WR_LOCAL_TRID);
    af38:	20000713          	li	a4, 512
    af3c:	009dd793          	srli	a5, s11, 0x9
    af40:	10088593          	addi	a1, a7, 256 # 2100 <__firmware_start+0x100>
    af44:	000c8613          	mv	a2, s9
    af48:	000d0513          	mv	a0, s10
    af4c:	00d12823          	sw	a3, 16(sp)
    af50:	824ff0ef          	jal	ra, 9f74 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1673
        uint32_t bytes_left = stream_buf_size_bytes - last_offset;
    af54:	1ffdf713          	andi	a4, s11, 511
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1674
        if (bytes_left > 0) {
    af58:	01012683          	lw	a3, 16(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1672
        uint32_t last_offset = ((stream_buf_size_bytes >> LOG_ZERO_GRAD_CHUNK_SIZE_BYTES) << LOG_ZERO_GRAD_CHUNK_SIZE_BYTES);
    af5c:	e00df793          	andi	a5, s11, -512
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1674
        if (bytes_left > 0) {
    af60:	000028b7          	lui	a7, 0x2
    af64:	02070063          	beqz	a4, af84 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf50>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1675
          replicate_l1(input_noc, l1_mem::address_map::ZEROS_BASE, replicate_dest_addr + last_offset, bytes_left, 1, NCRISC_WR_LOCAL_TRID);
    af68:	01978633          	add	a2, a5, s9
    af6c:	00f635b3          	sltu	a1, a2, a5
    af70:	00d586b3          	add	a3, a1, a3
    af74:	00100793          	li	a5, 1
    af78:	10088593          	addi	a1, a7, 256 # 2100 <__firmware_start+0x100>
    af7c:	000d0513          	mv	a0, s10
    af80:	ff5fe0ef          	jal	ra, 9f74 <replicate_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1677
        uint32_t stream_msg_info_buf_ptr = (l1_stream_info->msg_info_buf_start)*MEM_WORD_WIDTH;
    af84:	020c2783          	lw	a5, 32(s8)
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    af88:	ffb20537          	lui	a0, 0xffb20
    af8c:	010d1d13          	slli	s10, s10, 0x10
    af90:	24450513          	addi	a0, a0, 580 # ffb20244 <TENSIX_MAILBOX_BASE+0xffc60244>
    af94:	00ad0d33          	add	s10, s10, a0
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1677
    af98:	00479793          	slli	a5, a5, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1678
        uint32_t tile_size_words = *(volatile uint32_t tt_l1_ptr *)(stream_msg_info_buf_ptr);
    af9c:	0007a783          	lw	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1679
        uint32_t tile_size_bytes = tile_size_words*MEM_WORD_WIDTH;
    afa0:	00479713          	slli	a4, a5, 0x4
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    afa4:	000d2683          	lw	a3, 0(s10)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1680
        while (!ncrisc_noc_nonposted_writes_flushed_l1(input_noc, NCRISC_WR_LOCAL_TRID));
    afa8:	fe069ee3          	bnez	a3, afa4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf70>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1681
        for (uint32_t tile_header_ptr = stream_buf_addr; tile_header_ptr < stream_buf_addr + stream_buf_size_bytes; tile_header_ptr += tile_size_bytes) {
    afac:	019d8db3          	add	s11, s11, s9
    afb0:	17bcf063          	bgeu	s9, s11, b110 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10dc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1682
          *((uint32_t *)(tile_header_ptr)) = tile_size_words;
    afb4:	00fca023          	sw	a5, 0(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1681
        for (uint32_t tile_header_ptr = stream_buf_addr; tile_header_ptr < stream_buf_addr + stream_buf_size_bytes; tile_header_ptr += tile_size_bytes) {
    afb8:	00ec8cb3          	add	s9, s9, a4
    afbc:	ff5ff06f          	j	afb0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf7c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1685
        dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state = l1_dram_io_state->dram_io_scatter_state;
    afc0:	0587a703          	lw	a4, 88(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1687
        if (is_dram_io_scatter) {
    afc4:	0c070663          	beqz	a4, b090 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x105c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1688
          uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_rdptr : l1_dram_io_state->rd_dram_local_rdptr;
    afc8:	2006f693          	andi	a3, a3, 512
    afcc:	02068863          	beqz	a3, affc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xfc8>
    afd0:	0007dd83          	lhu	s11, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1689
          uint32_t inc_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    afd4:	00052683          	lw	a3, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1690
          uint32_t dram_data_buf_size_bytes = l1_dram_io_state->dram_buf_size_bytes;
    afd8:	0407a603          	lw	a2, 64(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    afdc:	00000793          	li	a5, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    afe0:	020d8263          	beqz	s11, b004 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xfd0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    afe4:	001df593          	andi	a1, s11, 1
    afe8:	00058463          	beqz	a1, aff0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xfbc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    afec:	00d787b3          	add	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    aff0:	001ddd93          	srli	s11, s11, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    aff4:	00169693          	slli	a3, a3, 0x1
    aff8:	fe9ff06f          	j	afe0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xfac>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1688
          uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_rdptr : l1_dram_io_state->rd_dram_local_rdptr;
    affc:	0087dd83          	lhu	s11, 8(a5)
    b000:	fd5ff06f          	j	afd4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xfa0>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    b004:	00c7e463          	bltu	a5, a2, b00c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xfd8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    b008:	40c787b3          	sub	a5, a5, a2
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1693
          uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
    b00c:	00472883          	lw	a7, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1694
          volatile tt_uint64_t tt_l1_ptr * scatter_offsets = dram_io_scatter_state->scatter_offsets; // Since this is prolog we cannot use an external index table as dram io code is not proccessed during prolog.
    b010:	01c72303          	lw	t1, 28(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1695
          uint32_t dram_io_scatter_chunk_size_bytes = dram_io_scatter_state->scatter_chunk_size_bytes;
    b014:	00872703          	lw	a4, 8(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1699
            bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    b018:	40000e37          	lui	t3, 0x40000
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1702
              dram_src_addr_w_offset += (buf_offset + DRAM_BUF_DATA_OFFSET);
    b01c:	02078813          	addi	a6, a5, 32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1697
          for (uint32_t scatter_idx = 0; scatter_idx < dram_io_scatter_size; scatter_idx++) {
    b020:	0fb88863          	beq	a7, s11, b110 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10dc>
    b024:	003d9793          	slli	a5, s11, 0x3
    b028:	00f307b3          	add	a5, t1, a5
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    b02c:	0007a583          	lw	a1, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    b030:	0047a783          	lw	a5, 4(a5)
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1700
            dram_src_addr_w_offset = dram_src_addr_w_offset & ~(((uint64_t)IS_DRAM_PADDING_SET) << 32);
    b034:	0157f633          	and	a2, a5, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1699
            bool is_padding_set = ((dram_src_addr_w_offset >> 32) & IS_DRAM_PADDING_SET) != 0;
    b038:	00fe77b3          	and	a5, t3, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1701
            if (!is_padding_set)
    b03c:	00079a63          	bnez	a5, b050 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x101c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1702
              dram_src_addr_w_offset += (buf_offset + DRAM_BUF_DATA_OFFSET);
    b040:	010587b3          	add	a5, a1, a6
    b044:	00b7b6b3          	sltu	a3, a5, a1
    b048:	00c68633          	add	a2, a3, a2
    b04c:	00078593          	mv	a1, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1703
            ncrisc_noc_fast_read_any_len_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, next_stream_buf_addr, dram_io_scatter_chunk_size_bytes, NCRISC_RD_START_TRID);
    b050:	000c8693          	mv	a3, s9
    b054:	00400793          	li	a5, 4
    b058:	000d0513          	mv	a0, s10
    b05c:	01012e23          	sw	a6, 28(sp)
    b060:	00612c23          	sw	t1, 24(sp)
    b064:	01112a23          	sw	a7, 20(sp)
    b068:	00e12823          	sw	a4, 16(sp)
    b06c:	e69fe0ef          	jal	ra, 9ed4 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1704
            next_stream_buf_addr += dram_io_scatter_chunk_size_bytes;
    b070:	01012703          	lw	a4, 16(sp)
    b074:	01412883          	lw	a7, 20(sp)
    b078:	01812303          	lw	t1, 24(sp)
    b07c:	01c12803          	lw	a6, 28(sp)
    b080:	00ec8cb3          	add	s9, s9, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1697
          for (uint32_t scatter_idx = 0; scatter_idx < dram_io_scatter_size; scatter_idx++) {
    b084:	001d8d93          	addi	s11, s11, 1
    b088:	40000e37          	lui	t3, 0x40000
    b08c:	f95ff06f          	j	b020 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xfec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1707
          bool is_dram_padding = l1_dram_io_state->dram_padding;
    b090:	03e7c883          	lbu	a7, 62(a5)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    b094:	0487a703          	lw	a4, 72(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    b098:	04c7a803          	lw	a6, 76(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:32
    return v.v;
    b09c:	00070593          	mv	a1, a4
    b0a0:	00080613          	mv	a2, a6
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1709
          if (!is_dram_padding) {
    b0a4:	04089c63          	bnez	a7, b0fc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10c8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1710
            uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_rdptr : l1_dram_io_state->rd_dram_local_rdptr;
    b0a8:	2006f693          	andi	a3, a3, 512
    b0ac:	02068863          	beqz	a3, b0dc <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10a8>
    b0b0:	0007d683          	lhu	a3, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1711
            uint32_t inc_size_bytes = l1_dram_io_info->dram_q_slot_size_bytes;
    b0b4:	00052603          	lw	a2, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1712
            uint32_t dram_data_buf_size_bytes = l1_dram_io_state->dram_buf_size_bytes;
    b0b8:	0407a783          	lw	a5, 64(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    b0bc:	00000593          	li	a1, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    b0c0:	02068263          	beqz	a3, b0e4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    b0c4:	0016f513          	andi	a0, a3, 1
    b0c8:	00050463          	beqz	a0, b0d0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x109c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    b0cc:	00c585b3          	add	a1, a1, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    b0d0:	0016d693          	srli	a3, a3, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    b0d4:	00161613          	slli	a2, a2, 0x1
    b0d8:	fe9ff06f          	j	b0c0 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x108c>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1710
            uint32_t dram_ptr_issued_q_slots = ((flags & STREAM_DRAM_RAM) != 0) ? l1_dram_io_state->rd_dram_rdptr : l1_dram_io_state->rd_dram_local_rdptr;
    b0dc:	0087d683          	lhu	a3, 8(a5)
    b0e0:	fd5ff06f          	j	b0b4 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1080>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    b0e4:	00f5e463          	bltu	a1, a5, b0ec <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    b0e8:	40f585b3          	sub	a1, a1, a5
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1714
            dram_src_addr_w_offset += (DRAM_BUF_DATA_OFFSET+buf_offset);
    b0ec:	02058593          	addi	a1, a1, 32
    b0f0:	00b705b3          	add	a1, a4, a1
    b0f4:	00e5b733          	sltu	a4, a1, a4
    b0f8:	01070633          	add	a2, a4, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1716
          ncrisc_noc_fast_read_any_len_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_buf_addr, stream_buf_size_bytes, NCRISC_RD_START_TRID);
    b0fc:	00400793          	li	a5, 4
    b100:	000d8713          	mv	a4, s11
    b104:	000c8693          	mv	a3, s9
    b108:	000d0513          	mv	a0, s10
    b10c:	dc9fe0ef          	jal	ra, 9ed4 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1652
  for (uint32_t i = 0; i < num_dram_prefetch_streams; i++) {
    b110:	00190913          	addi	s2, s2, 1
    b114:	004a0a13          	addi	s4, s4, 4
    b118:	00498993          	addi	s3, s3, 4
    b11c:	b6dff06f          	j	ac88 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc54>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1726
    if (curr_dram_output_stream_state_init->moves_raw_data) {
    b120:	0027c703          	lbu	a4, 2(a5)
    b124:	02070863          	beqz	a4, b154 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1120>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1725
    uint32_t dram_ptr_issued_byte = next_dram_q_issue->dram_ptr_issued_byte;
    b128:	0587a703          	lw	a4, 88(a5)
    b12c:	01872703          	lw	a4, 24(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1727
      curr_dram_output_stream_state_init->prev_row_ptr_bytes   = dram_ptr_issued_byte;
    b130:	02e7aa23          	sw	a4, 52(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1728
      curr_dram_output_stream_state_init->prev_zc_ptr_bytes    = dram_ptr_issued_byte;
    b134:	02e7ac23          	sw	a4, 56(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1729
      curr_dram_output_stream_state_init->prev_zr_ptr_bytes    = dram_ptr_issued_byte;
    b138:	02e7ae23          	sw	a4, 60(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1730
      curr_dram_output_stream_state_init->prev_batch_ptr_bytes = dram_ptr_issued_byte;
    b13c:	04e7a023          	sw	a4, 64(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1723
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state_init++) {
    b140:	00c12703          	lw	a4, 12(sp)
    b144:	06078793          	addi	a5, a5, 96
    b148:	00170713          	addi	a4, a4, 1
    b14c:	00e12623          	sw	a4, 12(sp)
    b150:	b4dff06f          	j	ac9c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xc68>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1732
      curr_dram_output_stream_state_init->prev_row_ptr_bytes   = 0;
    b154:	0207aa23          	sw	zero, 52(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1733
      curr_dram_output_stream_state_init->prev_zc_ptr_bytes    = 0;
    b158:	0207ac23          	sw	zero, 56(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1734
      curr_dram_output_stream_state_init->prev_zr_ptr_bytes    = 0;
    b15c:	0207ae23          	sw	zero, 60(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1735
      curr_dram_output_stream_state_init->prev_batch_ptr_bytes = 0;
    b160:	0407a023          	sw	zero, 64(a5)
    b164:	fddff06f          	j	b140 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x110c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1762
      } else {
        uint32_t blob_start_addr = l1_stream_info->blob_start_addr;
    b168:	02472683          	lw	a3, 36(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1763
        uint32_t start_phase_num_cfg_regs = l1_stream_info->start_phase_num_cfg_regs;
    b16c:	01e74703          	lbu	a4, 30(a4)
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    b170:	0207a223          	sw	zero, 36(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:28
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr);
    b174:	02d7a823          	sw	a3, 48(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    b178:	01871713          	slli	a4, a4, 0x18
    b17c:	08e7a823          	sw	a4, 144(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    b180:	0347a423          	sw	s4, 40(a5)
    b184:	bc9ff06f          	j	ad4c <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd18>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1769
        stream_phase_blob_run(stream_id, blob_start_addr, start_phase_num_cfg_regs);
      }
    }
  }
  
  RISC_EPOCH_INFO_PTR->all_streams_ready = 1;
    b188:	00100793          	li	a5, 1
    b18c:	00f906a3          	sb	a5, 13(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1773
#if defined(PERF_DUMP)
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_INIT, risc::PROLOGUE_END_OFFSET);
#endif
}
    b190:	08c12083          	lw	ra, 140(sp)
    b194:	08812403          	lw	s0, 136(sp)
    b198:	08412483          	lw	s1, 132(sp)
    b19c:	08012903          	lw	s2, 128(sp)
    b1a0:	07c12983          	lw	s3, 124(sp)
    b1a4:	07812a03          	lw	s4, 120(sp)
    b1a8:	07412a83          	lw	s5, 116(sp)
    b1ac:	07012b03          	lw	s6, 112(sp)
    b1b0:	06c12b83          	lw	s7, 108(sp)
    b1b4:	06812c03          	lw	s8, 104(sp)
    b1b8:	06412c83          	lw	s9, 100(sp)
    b1bc:	06012d03          	lw	s10, 96(sp)
    b1c0:	05c12d83          	lw	s11, 92(sp)
    b1c4:	09010113          	addi	sp, sp, 144
    b1c8:	00008067          	ret
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
    b1cc:	84b6fae3          	bgeu	a3, a1, aa20 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9ec>
risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:78
  uint32_t case1 = rd_ptr < wr_ptr && (local_rd_ptr < rd_ptr || local_rd_ptr >= wr_ptr);
    b1d0:	00000893          	li	a7, 0
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
    b1d4:	84d872e3          	bgeu	a6, a3, aa18 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9e4>
    b1d8:	849ff06f          	j	aa20 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x9ec>

0000b1dc <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]>:
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2100
  }

}


void risc_dram_stream_handler_epilogue_l1(
    b1dc:	fc010113          	addi	sp, sp, -64
    b1e0:	02812c23          	sw	s0, 56(sp)
    b1e4:	02912a23          	sw	s1, 52(sp)
    b1e8:	03212823          	sw	s2, 48(sp)
    b1ec:	03312623          	sw	s3, 44(sp)
    b1f0:	03412423          	sw	s4, 40(sp)
    b1f4:	03512223          	sw	s5, 36(sp)
    b1f8:	03612023          	sw	s6, 32(sp)
    b1fc:	01712e23          	sw	s7, 28(sp)
    b200:	02112e23          	sw	ra, 60(sp)
    b204:	01812c23          	sw	s8, 24(sp)
    b208:	01912a23          	sw	s9, 20(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2115
#ifdef PERF_DUMP
  risc::record_timestamp_at_offset_l1(risc::perf_event::STREAM_HANDLER_LOOP, risc::STREAM_HANDLER_END_OFFSET);
  risc::record_timestamp_at_offset_l1(risc::perf_event::EPOCH_EPILOGUE, risc::EPILOGUE_START_OFFSET);
#endif
  // Full handshake with brisc
  RISC_EPOCH_INFO_PTR->all_streams_ready = 0;
    b20c:	000207b7          	lui	a5, 0x20
    b210:	080786a3          	sb	zero, 141(a5) # 2008d <risc_chip_specific.cc.5b7d4a1c+0x10b1>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2119

  RISC_POST_STATUS(0x22222222);

  dram_q_state_t tt_l1_ptr * curr_dram_q_state = dram_q_state;
    b214:	0000f4b7          	lui	s1, 0xf
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b218:	222227b7          	lui	a5, 0x22222
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2119
    b21c:	4c048413          	addi	s0, s1, 1216 # f4c0 <active_stream_info>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b220:	ffb20737          	lui	a4, 0xffb20
    b224:	22278793          	addi	a5, a5, 546 # 22222222 <noc_nonblocking_api.cc.88b5909b+0x221ff49e>
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    b228:	001009b7          	lui	s3, 0x100
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    b22c:	ffb21a37          	lui	s4, 0xffb21
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b230:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2120
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    b234:	00000913          	li	s2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2119
  dram_q_state_t tt_l1_ptr * curr_dram_q_state = dram_q_state;
    b238:	18440413          	addi	s0, s0, 388
    b23c:	4c048493          	addi	s1, s1, 1216
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
    b240:	b4098993          	addi	s3, s3, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2126
    old_i = i; // Not sure if i++ happens before or after the other incremrent, this statement makes it clear what the order should be
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)curr_dram_q_state->l1_dram_ptrs;
    uint8_t q_stream_id = curr_dram_q_state->dram_q_stream_id;
    uint32_t stream_vc = stream_get_output_unicast_vc(q_stream_id);

    if (l1_ptrs->wr_stride == (DRAM_STRIDE_WRAP_BIT + 0)) {
    b244:	00004ab7          	lui	s5, 0x4
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    b248:	c28a0a13          	addi	s4, s4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2120
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    b24c:	02700b13          	li	s6, 39
    b250:	00020bb7          	lui	s7, 0x20
    b254:	7244a783          	lw	a5, 1828(s1)
    b258:	08f97863          	bgeu	s2, a5, b2e8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x10c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2124
    uint32_t stream_vc = stream_get_output_unicast_vc(q_stream_id);
    b25c:	00e44783          	lbu	a5, 14(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2122
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)curr_dram_q_state->l1_dram_ptrs;
    b260:	00042583          	lw	a1, 0(s0)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
    b264:	013787b3          	add	a5, a5, s3
    b268:	00c79793          	slli	a5, a5, 0xc
    b26c:	0287a703          	lw	a4, 40(a5)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2126
    if (l1_ptrs->wr_stride == (DRAM_STRIDE_WRAP_BIT + 0)) {
    b270:	02c5d783          	lhu	a5, 44(a1)
    b274:	05579c63          	bne	a5, s5, b2cc <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xf0>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    b278:	0485a783          	lw	a5, 72(a1)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2127
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    b27c:	00444503          	lbu	a0, 4(s0)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    b280:	04c5a683          	lw	a3, 76(a1)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2129
      uint64_t dram_buf_addr_plus_offset = tt_l1_load(&l1_ptrs->dram_buf_addr) + DRAM_BUF_STRIDE_OFFSET;
      uint32_t l1_dram_incoming_ptr_index = curr_dram_q_state->l1_dram_incoming_ptr_index;
    b284:	00544803          	lbu	a6, 5(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2130
      l1_ptrs->wr_stride = 0;
    b288:	02059623          	sh	zero, 44(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2128
      uint64_t dram_buf_addr_plus_offset = tt_l1_load(&l1_ptrs->dram_buf_addr) + DRAM_BUF_STRIDE_OFFSET;
    b28c:	00c78613          	addi	a2, a5, 12
    b290:	00f637b3          	sltu	a5, a2, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2127
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    b294:	00155513          	srli	a0, a0, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2128
      uint64_t dram_buf_addr_plus_offset = tt_l1_load(&l1_ptrs->dram_buf_addr) + DRAM_BUF_STRIDE_OFFSET;
    b298:	00d786b3          	add	a3, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2127
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
    b29c:	00357513          	andi	a0, a0, 3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2131
      uint32_t output_vc = l1_dram_incoming_ptr_index ? DRAM_PTR_UPDATE_VC : stream_vc;
    b2a0:	00100793          	li	a5, 1
    b2a4:	00081663          	bnez	a6, b2b0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xd4>
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
    b2a8:	01275713          	srli	a4, a4, 0x12
    b2ac:	00777793          	andi	a5, a4, 7
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    b2b0:	01051713          	slli	a4, a0, 0x10
    b2b4:	01470733          	add	a4, a4, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    b2b8:	00072803          	lw	a6, 0(a4)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2133
      // Reg poll loop, flushed immediately
      while (!ncrisc_noc_fast_write_ok_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
    b2bc:	fe081ee3          	bnez	a6, b2b8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0xdc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2134
      ncrisc_noc_fast_write_l1(input_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr_plus_offset, 2,
    b2c0:	00200713          	li	a4, 2
    b2c4:	02c58593          	addi	a1, a1, 44
    b2c8:	c29fe0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2120
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
    b2cc:	01691863          	bne	s2, s6, b2dc <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x100>
    b2d0:	2f8ba403          	lw	s0, 760(s7) # 202f8 <risc_chip_specific.cc.5b7d4a1c+0x131c>
    b2d4:	02800913          	li	s2, 40
    b2d8:	f7dff06f          	j	b254 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x78>
    b2dc:	00190913          	addi	s2, s2, 1
    b2e0:	02440413          	addi	s0, s0, 36
    b2e4:	f71ff06f          	j	b254 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x78>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b2e8:	333337b7          	lui	a5, 0x33333
    b2ec:	ffb20737          	lui	a4, 0xffb20
    b2f0:	33378793          	addi	a5, a5, 819 # 33333333 <noc_nonblocking_api.cc.88b5909b+0x333105af>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b2f4:	00100437          	lui	s0, 0x100
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:632
          }
          stream_reset(stream_id);
        }
        all_streams_done &= stream_done;
#ifdef ERISC
        RISC_POST_STATUS(0x44000000 | (stream_id << 16) | (poll_count & 0xFFFF));
    b2f8:	00010937          	lui	s2, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:626
            test_mailbox_ptr[0] = RISC_DETECTED_STREAM_ASSERT;
    b2fc:	deeeb9b7          	lui	s3, 0xdeeeb
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b300:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:599
  uint32_t poll_count = 0;
    b304:	00000a93          	li	s5, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
    b308:	b4040413          	addi	s0, s0, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:632
        RISC_POST_STATUS(0x44000000 | (stream_id << 16) | (poll_count & 0xFFFF));
    b30c:	fff90913          	addi	s2, s2, -1 # ffff <dram_input_stream_state+0x177>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:626
            test_mailbox_ptr[0] = RISC_DETECTED_STREAM_ASSERT;
    b310:	aad98993          	addi	s3, s3, -1363 # deeeaaad <TENSIX_MAILBOX_BASE+0xdf02aaad>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:608
    risc_stream_resart_check(stream_restart_check_cnt, num_active_streams, active_stream_info);
    b314:	00c10513          	addi	a0, sp, 12
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:607
    stream_restart_check_cnt = 0;
    b318:	00012623          	sw	zero, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:608
    risc_stream_resart_check(stream_restart_check_cnt, num_active_streams, active_stream_info);
    b31c:	841fe0ef          	jal	ra, 9b5c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:619
            volatile epoch_stream_info_t tt_l1_ptr * stream_info = RISC_EPOCH_INFO_PTR->active_streams[s];
    b320:	00020537          	lui	a0, 0x20
    b324:	00048613          	mv	a2, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:610
    for (uint32_t s = 0; s < num_active_streams; s++) {
    b328:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:605
    all_streams_done = true;
    b32c:	00100a13          	li	s4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:612
      if ((flags & STREAM_INTERMEDIATE) == 0 && ((flags & STREAM_MOVES_RAW_DATA) == 0 || (flags & STREAM_DRAM_OUTPUT) != 0)) {
    b330:	04000893          	li	a7, 64
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:632
        RISC_POST_STATUS(0x44000000 | (stream_id << 16) | (poll_count & 0xFFFF));
    b334:	012af333          	and	t1, s5, s2
    b338:	44000e37          	lui	t3, 0x44000
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b33c:	ffb20eb7          	lui	t4, 0xffb20
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    b340:	00100f13          	li	t5, 1
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:619
            volatile epoch_stream_info_t tt_l1_ptr * stream_info = RISC_EPOCH_INFO_PTR->active_streams[s];
    b344:	08050513          	addi	a0, a0, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:610
    for (uint32_t s = 0; s < num_active_streams; s++) {
    b348:	1804a783          	lw	a5, 384(s1)
    b34c:	0af5f063          	bgeu	a1, a5, b3ec <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x210>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:611
      uint32_t flags = active_stream_info[s].flags;
    b350:	00665683          	lhu	a3, 6(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:612
      if ((flags & STREAM_INTERMEDIATE) == 0 && ((flags & STREAM_MOVES_RAW_DATA) == 0 || (flags & STREAM_DRAM_OUTPUT) != 0)) {
    b354:	0106f793          	andi	a5, a3, 16
    b358:	08079463          	bnez	a5, b3e0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x204>
    b35c:	0486f793          	andi	a5, a3, 72
    b360:	09178063          	beq	a5, a7, b3e0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x204>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:613
        uint32_t stream_id = active_stream_info[s].stream_id;
    b364:	00064783          	lbu	a5, 0(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:614
        bool stream_done = false;
    b368:	00000293          	li	t0, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b36c:	00878733          	add	a4, a5, s0
    b370:	00c71713          	slli	a4, a4, 0xc
    b374:	08c72f83          	lw	t6, 140(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    b378:	3a472803          	lw	a6, 932(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b37c:	001fff93          	andi	t6, t6, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    b380:	040f8663          	beqz	t6, b3cc <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    b384:	01185813          	srli	a6, a6, 0x11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    b388:	04081263          	bnez	a6, b3cc <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f0>
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:616
          if ((flags & STREAM_MOVES_RAW_DATA) != 0) {
    b38c:	0406f693          	andi	a3, a3, 64
    b390:	00069e63          	bnez	a3, b3ac <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1d0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:619
            volatile epoch_stream_info_t tt_l1_ptr * stream_info = RISC_EPOCH_INFO_PTR->active_streams[s];
    b394:	04458693          	addi	a3, a1, 68
    b398:	00269693          	slli	a3, a3, 0x2
    b39c:	00d506b3          	add	a3, a0, a3
    b3a0:	0046a683          	lw	a3, 4(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:620
            stream_done = (stream_info->epoch_iters_remaining == 0);
    b3a4:	0306a683          	lw	a3, 48(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:623
        if (stream_done) {
    b3a8:	02069263          	bnez	a3, b3cc <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1f0>
assert_check(unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:359
  uint32_t debug_assert = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_ASSERTIONS_REG_INDEX);
    b3ac:	0b872683          	lw	a3, 184(a4)
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:624
          if (assert_check(stream_id, false)) {
    b3b0:	00068463          	beqz	a3, b3b8 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x1dc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:626
            test_mailbox_ptr[0] = RISC_DETECTED_STREAM_ASSERT;
    b3b4:	01302223          	sw	s3, 4(zero) # 4 <TENSIX_L1_BASE+0x4>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    b3b8:	02872683          	lw	a3, 40(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    b3bc:	00100293          	li	t0, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    b3c0:	dff6f693          	andi	a3, a3, -513
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    b3c4:	02d72423          	sw	a3, 40(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    b3c8:	07e72e23          	sw	t5, 124(a4)
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:632
        RISC_POST_STATUS(0x44000000 | (stream_id << 16) | (poll_count & 0xFFFF));
    b3cc:	01079793          	slli	a5, a5, 0x10
    b3d0:	0067e7b3          	or	a5, a5, t1
    b3d4:	01c7e7b3          	or	a5, a5, t3
    b3d8:	005a7a33          	and	s4, s4, t0
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b3dc:	10fea623          	sw	a5, 268(t4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_all_streams_done_check(unsigned long&, active_stream_info_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:610
    for (uint32_t s = 0; s < num_active_streams; s++) {
    b3e0:	00158593          	addi	a1, a1, 1
    b3e4:	00c60613          	addi	a2, a2, 12
    b3e8:	f61ff06f          	j	b348 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x16c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:639
      }
    }
#ifdef ERISC
    risc_context_switch();
#endif
    poll_count++;
    b3ec:	001a8a93          	addi	s5, s5, 1 # 4001 <__trisc0_size+0x1>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:637
    risc_context_switch();
    b3f0:	d40fe0ef          	jal	ra, 9930 <risc_context_switch()>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:600
  while (!all_streams_done) {
    b3f4:	f20a00e3          	beqz	s4, b314 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x138>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2194
#endif

  // Reset streams that need to be reset
  // We cannot easily reset this in brisc because we can have a case where brisc wants to go idle but risc hasnt loaded 
  // dram io yet (for example if the dram io stream goes to another core)
  dram_input_stream_state_t* curr_dram_input_stream_state = dram_input_stream_state;
    b3f8:	000109b7          	lui	s3, 0x10
    b3fc:	4c098493          	addi	s1, s3, 1216 # 104c0 <input_stream_state+0xe0>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b400:	00100937          	lui	s2, 0x100
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2195
  for (uint32_t i = 0;
    b404:	00000a93          	li	s5, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2194
  dram_input_stream_state_t* curr_dram_input_stream_state = dram_input_stream_state;
    b408:	9c848493          	addi	s1, s1, -1592
    b40c:	4c098993          	addi	s3, s3, 1216
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
    b410:	b4090913          	addi	s2, s2, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    b414:	00100b13          	li	s6, 1
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2196
       i < num_dram_input_streams;
    b418:	c149a783          	lw	a5, -1004(s3)
    b41c:	10faf663          	bgeu	s5, a5, b528 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x34c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2198
       i++, curr_dram_input_stream_state++) {
        uint32_t stream_id = curr_dram_input_stream_state->stream_id;
    b420:	0004cb83          	lbu	s7, 0(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2201
        uint32_t moves_raw_data = curr_dram_input_stream_state->moves_raw_data;

        if (moves_raw_data) {
    b424:	0104c783          	lbu	a5, 16(s1)
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b428:	012b8433          	add	s0, s7, s2
    b42c:	00c41413          	slli	s0, s0, 0xc
    b430:	08c40c93          	addi	s9, s0, 140
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2201
    b434:	06078663          	beqz	a5, b4a0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2c4>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    b438:	000ca783          	lw	a5, 0(s9)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2202
          while (stream_phase_is_active(stream_id)) {
    b43c:	0047f793          	andi	a5, a5, 4
    b440:	06078063          	beqz	a5, b4a0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2c4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2203
            uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    b444:	000b8513          	mv	a0, s7
    b448:	ffbf5097          	auipc	ra, 0xffbf5
    b44c:	c3c080e7          	jalr	-964(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
    b450:	ffbf5097          	auipc	ra, 0xffbf5
    b454:	bf8080e7          	jalr	-1032(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    b458:	01250533          	add	a0, a0, s2
    b45c:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2203
    b460:	01052c03          	lw	s8, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2204
            uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    b464:	000b8513          	mv	a0, s7
    b468:	ffbf5097          	auipc	ra, 0xffbf5
    b46c:	c1c080e7          	jalr	-996(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    b470:	ffbf5097          	auipc	ra, 0xffbf5
    b474:	bd8080e7          	jalr	-1064(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    b478:	01250533          	add	a0, a0, s2
    b47c:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2204
    b480:	00c52783          	lw	a5, 12(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2206
            uint16_t tiles_available = op_pack_tiles_ptr_sub(operand_tiles_received, operand_tiles_acked);
            if (tiles_available == 0) {
    b484:	010c1c13          	slli	s8, s8, 0x10
    b488:	010c5c13          	srli	s8, s8, 0x10
    b48c:	01079793          	slli	a5, a5, 0x10
    b490:	0107d793          	srli	a5, a5, 0x10
    b494:	fafc12e3          	bne	s8, a5, b438 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x25c>
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    b498:	07642e23          	sw	s6, 124(s0)
    b49c:	f9dff06f          	j	b438 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x25c>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    b4a0:	3a440693          	addi	a3, s0, 932
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b4a4:	000ca703          	lw	a4, 0(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    b4a8:	0006a783          	lw	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b4ac:	00177713          	andi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    b4b0:	fe070ae3          	beqz	a4, b4a4 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2c8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    b4b4:	0117d793          	srli	a5, a5, 0x11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    b4b8:	fe0796e3          	bnez	a5, b4a4 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2c8>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    b4bc:	02842783          	lw	a5, 40(s0)
    b4c0:	03848713          	addi	a4, s1, 56
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2218
        stream_reset(stream_id);

        uint32_t fork_index = 0;
        while (true) {
          uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
          if (fork_stream_id == NULL_STREAM) {
    b4c4:	0ff00593          	li	a1, 255
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    b4c8:	dff7f793          	andi	a5, a5, -513
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    b4cc:	02f42423          	sw	a5, 40(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    b4d0:	07642e23          	sw	s6, 124(s0)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2217
          uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    b4d4:	00074783          	lbu	a5, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2218
          if (fork_stream_id == NULL_STREAM) {
    b4d8:	04b78263          	beq	a5, a1, b51c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x340>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b4dc:	012787b3          	add	a5, a5, s2
    b4e0:	00c79793          	slli	a5, a5, 0xc
    b4e4:	08c78513          	addi	a0, a5, 140
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    b4e8:	3a478813          	addi	a6, a5, 932
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b4ec:	00052603          	lw	a2, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    b4f0:	00082683          	lw	a3, 0(a6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    b4f4:	00167613          	andi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    b4f8:	fe060ae3          	beqz	a2, b4ec <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x310>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    b4fc:	0116d693          	srli	a3, a3, 0x11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    b500:	fe0696e3          	bnez	a3, b4ec <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x310>
stream_reset(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:348
  uint32_t val = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    b504:	0287a683          	lw	a3, 40(a5)
    b508:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:349
  val &= (~(1<<PHASE_AUTO_CONFIG));
    b50c:	dff6f693          	andi	a3, a3, -513
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:350
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, val); // disable auto-config
    b510:	02d7a423          	sw	a3, 40(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:351
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    b514:	0767ae23          	sw	s6, 124(a5)
    b518:	fbdff06f          	j	b4d4 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x2f8>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2195
  for (uint32_t i = 0;
    b51c:	001a8a93          	addi	s5, s5, 1
    b520:	05448493          	addi	s1, s1, 84
    b524:	ef5ff06f          	j	b418 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x23c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b528:	444447b7          	lui	a5, 0x44444
    b52c:	ffb20737          	lui	a4, 0xffb20
    b530:	44478793          	addi	a5, a5, 1092 # 44444444 <noc_nonblocking_api.cc.88b5909b+0x444216c0>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:142
  bool all_flushed = true;
    b534:	ffb20637          	lui	a2, 0xffb20
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    b538:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
ncrisc_noc_all_reads_flushed_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    b53c:	27860593          	addi	a1, a2, 632 # ffb20278 <TENSIX_MAILBOX_BASE+0xffc60278>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:142
  bool all_flushed = true;
    b540:	000a0793          	mv	a5, s4
    b544:	24860713          	addi	a4, a2, 584
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    b548:	00072683          	lw	a3, 0(a4)
ncrisc_noc_all_reads_flushed_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    b54c:	00470713          	addi	a4, a4, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:144
    all_flushed &= NOC_STATUS_READ_REG_L1(noc, NIU_MST_REQS_OUTSTANDING_ID(id)) == 0;
    b550:	0016b693          	seqz	a3, a3
    b554:	00d7f7b3          	and	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    b558:	feb718e3          	bne	a4, a1, b548 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x36c>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2230
  }

  RISC_POST_STATUS(0x44444444);

  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    while (!ncrisc_noc_all_reads_flushed_l1(n));
    b55c:	fe0782e3          	beqz	a5, b540 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x364>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:142
  bool all_flushed = true;
    b560:	ffb305b7          	lui	a1, 0xffb30
ncrisc_noc_all_reads_flushed_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    b564:	27858513          	addi	a0, a1, 632 # ffb30278 <TENSIX_MAILBOX_BASE+0xffc70278>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:142
  bool all_flushed = true;
    b568:	00078693          	mv	a3, a5
    b56c:	24858713          	addi	a4, a1, 584
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    b570:	00072603          	lw	a2, 0(a4)
ncrisc_noc_all_reads_flushed_l1(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    b574:	00470713          	addi	a4, a4, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:144
    all_flushed &= NOC_STATUS_READ_REG_L1(noc, NIU_MST_REQS_OUTSTANDING_ID(id)) == 0;
    b578:	00163613          	seqz	a2, a2
    b57c:	00c6f6b3          	and	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:143
  for (uint32_t id = NCRISC_RD_DEF_TRID; id <= NCRISC_RD_END_TRID; id++) {
    b580:	fea718e3          	bne	a4, a0, b570 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x394>
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2230
    b584:	fe0682e3          	beqz	a3, b568 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x38c>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    b588:	ffb20737          	lui	a4, 0xffb20
    b58c:	24072783          	lw	a5, 576(a4) # ffb20240 <TENSIX_MAILBOX_BASE+0xffc60240>
    b590:	24472683          	lw	a3, 580(a4)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2233
  }
  for (uint32_t n = 0; n < NUM_NOCS; n++) {
    while (!ncrisc_noc_nonposted_all_writes_flushed_l1(n));
    b594:	00d7e7b3          	or	a5, a5, a3
    b598:	fe079ae3          	bnez	a5, b58c <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x3b0>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
    b59c:	ffb30737          	lui	a4, 0xffb30
    b5a0:	24072783          	lw	a5, 576(a4) # ffb30240 <TENSIX_MAILBOX_BASE+0xffc70240>
    b5a4:	24472683          	lw	a3, 580(a4)
risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2233
    b5a8:	00d7e7b3          	or	a5, a5, a3
    b5ac:	fe079ae3          	bnez	a5, b5a0 <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]+0x3c4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2248
  //Trisc Kernels send a last spill request for last partial half buffer when kernels finish.
  risc::check_dram_spill_requests(true);
  risc::record_timestamp_at_offset_l1(risc::perf_event::EPOCH_EPILOGUE, risc::EPILOGUE_END_OFFSET);
#endif

}
    b5b0:	03c12083          	lw	ra, 60(sp)
    b5b4:	03812403          	lw	s0, 56(sp)
    b5b8:	03412483          	lw	s1, 52(sp)
    b5bc:	03012903          	lw	s2, 48(sp)
    b5c0:	02c12983          	lw	s3, 44(sp)
    b5c4:	02812a03          	lw	s4, 40(sp)
    b5c8:	02412a83          	lw	s5, 36(sp)
    b5cc:	02012b03          	lw	s6, 32(sp)
    b5d0:	01c12b83          	lw	s7, 28(sp)
    b5d4:	01812c03          	lw	s8, 24(sp)
    b5d8:	01412c83          	lw	s9, 20(sp)
    b5dc:	04010113          	addi	sp, sp, 64
    b5e0:	00008067          	ret

0000b5e4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]>:
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:432
    int num_32B_rdwr_loops          = 1; // Common case, only 4B with upper+lower update_mask bits set will use 2 loops.
    int update_mask_start_idx       = 0;
    int update_mask_bits_per_loop   = 16;

    // For 4B field sizes, determine number of loops and/or DRAM addr offset if single loop.
    if ((varinst_cmd_info.field_size_bytes == 4) && (varinst_cmd_info.update_mask & 0xFF00)){
    b5e4:	00e55783          	lhu	a5, 14(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:419
void run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo &varinst_cmd_info, uint64_t &queue_addr_ptr, uint32_t header_addr, volatile uint32_t tt_l1_ptr *header_addr_ptr){
    b5e8:	fb010113          	addi	sp, sp, -80
    b5ec:	04812423          	sw	s0, 72(sp)
    b5f0:	03512a23          	sw	s5, 52(sp)
    b5f4:	04112623          	sw	ra, 76(sp)
    b5f8:	04912223          	sw	s1, 68(sp)
    b5fc:	05212023          	sw	s2, 64(sp)
    b600:	03312e23          	sw	s3, 60(sp)
    b604:	03412c23          	sw	s4, 56(sp)
    b608:	03612823          	sw	s6, 48(sp)
    b60c:	03712623          	sw	s7, 44(sp)
    b610:	03812423          	sw	s8, 40(sp)
    b614:	03912223          	sw	s9, 36(sp)
    b618:	03a12023          	sw	s10, 32(sp)
    b61c:	01b12e23          	sw	s11, 28(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:432
    if ((varinst_cmd_info.field_size_bytes == 4) && (varinst_cmd_info.update_mask & 0xFF00)){
    b620:	0387f793          	andi	a5, a5, 56
    b624:	02000713          	li	a4, 32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:419
void run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo &varinst_cmd_info, uint64_t &queue_addr_ptr, uint32_t header_addr, volatile uint32_t tt_l1_ptr *header_addr_ptr){
    b628:	00050413          	mv	s0, a0
    b62c:	00058a93          	mv	s5, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:432
    if ((varinst_cmd_info.field_size_bytes == 4) && (varinst_cmd_info.update_mask & 0xFF00)){
    b630:	14e79463          	bne	a5, a4, b778 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x194>
    b634:	00c55783          	lhu	a5, 12(a0)
    b638:	f007f713          	andi	a4, a5, -256
    b63c:	12070e63          	beqz	a4, b778 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x194>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:433
        if (varinst_cmd_info.update_mask & 0x00FF){
    b640:	0ff7f793          	zext.b	a5, a5
    b644:	14079063          	bnez	a5, b784 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1a0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:437
            num_32B_rdwr_loops = 2;
            update_mask_bits_per_loop = 8; // num_varinst_words;
        }else{
            queue_addr_ptr += read_size;
    b648:	0005a783          	lw	a5, 0(a1)
    b64c:	0045a683          	lw	a3, 4(a1)
    b650:	02078713          	addi	a4, a5, 32
    b654:	00f737b3          	sltu	a5, a4, a5
    b658:	00d787b3          	add	a5, a5, a3
    b65c:	00e5a023          	sw	a4, 0(a1)
    b660:	00f5a223          	sw	a5, 4(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:429
    int update_mask_bits_per_loop   = 16;
    b664:	01000c93          	li	s9, 16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:438
            update_mask_start_idx += num_varinst_words;
    b668:	00800b13          	li	s6, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:427
    int num_32B_rdwr_loops          = 1; // Common case, only 4B with upper+lower update_mask bits set will use 2 loops.
    b66c:	00100493          	li	s1, 1
    b670:	00349493          	slli	s1, s1, 0x3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:449
    for (int loop_idx=0; loop_idx<num_32B_rdwr_loops; loop_idx++){

        int field_offset_1B = 0;

        // Step 1 : Read 32B chunk from DRAM to L1 and wait for read to complete.
        ncrisc_noc_fast_read_any_len_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_addr_ptr, header_addr, read_size, NCRISC_HEADER_RD_TRID);
    b674:	00027937          	lui	s2, 0x27
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    b678:	ffb219b7          	lui	s3, 0xffb21
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:466
            if (update_word) {

                // Instead of modulo operator, for 2 loops, want to re-use same 8 slots of 32B L1 for each loop.
                uint16_t field_offset_4B        = field_offset_1B >= read_size ? (field_offset_1B - read_size) >> 2 : (field_offset_1B) >> 2;
                uint32_t field_shift_amt        = (field_offset_1B << 3) & 0x1F; // Number of bits to shift by into 4B word to reach field.
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    b67c:	00010a37          	lui	s4, 0x10
    b680:	016484b3          	add	s1, s1, s6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:449
        ncrisc_noc_fast_read_any_len_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_addr_ptr, header_addr, read_size, NCRISC_HEADER_RD_TRID);
    b684:	0000fd37          	lui	s10, 0xf
    b688:	ca090913          	addi	s2, s2, -864 # 26ca0 <noc_nonblocking_api.cc.88b5909b+0x3f1c>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    b68c:	c2898993          	addi	s3, s3, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:466
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    b690:	fffa0a13          	addi	s4, s4, -1 # ffff <dram_input_stream_state+0x177>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:449
        ncrisc_noc_fast_read_any_len_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_addr_ptr, header_addr, read_size, NCRISC_HEADER_RD_TRID);
    b694:	000aa583          	lw	a1, 0(s5)
    b698:	004aa603          	lw	a2, 4(s5)
    b69c:	42ad4503          	lbu	a0, 1066(s10) # f42a <loading_noc>
    b6a0:	00300793          	li	a5, 3
    b6a4:	02000713          	li	a4, 32
    b6a8:	00090693          	mv	a3, s2
    b6ac:	829fe0ef          	jal	ra, 9ed4 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:450
        while (!ncrisc_noc_reads_flushed_l1(loading_noc, NCRISC_HEADER_RD_TRID));
    b6b0:	42ad4783          	lbu	a5, 1066(s10)
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    b6b4:	ffb20737          	lui	a4, 0xffb20
    b6b8:	01079793          	slli	a5, a5, 0x10
    b6bc:	24c70713          	addi	a4, a4, 588 # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
    b6c0:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    b6c4:	0007a703          	lw	a4, 0(a5)
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:450
    b6c8:	fe071ee3          	bnez	a4, b6c4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0xe0>
    b6cc:	000b0c13          	mv	s8, s6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:446
        int field_offset_1B = 0;
    b6d0:	00000b93          	li	s7, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:453
        for (int i = update_mask_start_idx; i < 16; i++) {
    b6d4:	00f00d93          	li	s11, 15
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:456
            if (i > (update_mask_start_idx + update_mask_bits_per_loop - 1)){
    b6d8:	019b08b3          	add	a7, s6, s9
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:453
        for (int i = update_mask_start_idx; i < 16; i++) {
    b6dc:	1b8dca63          	blt	s11, s8, b890 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x2ac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:456
            if (i > (update_mask_start_idx + update_mask_bits_per_loop - 1)){
    b6e0:	151c5063          	bge	s8, a7, b820 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:460
            bool update_word = (varinst_cmd_info.update_mask >> i) & 0x1;
    b6e4:	00c45783          	lhu	a5, 12(s0)
    b6e8:	4187d7b3          	sra	a5, a5, s8
    b6ec:	0017f793          	andi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:461
            if (update_word) {
    b6f0:	12078063          	beqz	a5, b810 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x22c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:464
                uint16_t field_offset_4B        = field_offset_1B >= read_size ? (field_offset_1B - read_size) >> 2 : (field_offset_1B) >> 2;
    b6f4:	01f00793          	li	a5, 31
    b6f8:	402bd713          	srai	a4, s7, 0x2
    b6fc:	0177d663          	bge	a5, s7, b708 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x124>
    b700:	fe0b8713          	addi	a4, s7, -32
    b704:	40275713          	srai	a4, a4, 0x2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:466
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    b708:	00e45683          	lhu	a3, 14(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:465
                uint32_t field_shift_amt        = (field_offset_1B << 3) & 0x1F; // Number of bits to shift by into 4B word to reach field.
    b70c:	003b9793          	slli	a5, s7, 0x3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:464
                uint16_t field_offset_4B        = field_offset_1B >= read_size ? (field_offset_1B - read_size) >> 2 : (field_offset_1B) >> 2;
    b710:	01071713          	slli	a4, a4, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:465
                uint32_t field_shift_amt        = (field_offset_1B << 3) & 0x1F; // Number of bits to shift by into 4B word to reach field.
    b714:	01f7f313          	andi	t1, a5, 31
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:466
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    b718:	01000613          	li	a2, 16
    b71c:	0386f793          	andi	a5, a3, 56
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:464
                uint16_t field_offset_4B        = field_offset_1B >= read_size ? (field_offset_1B - read_size) >> 2 : (field_offset_1B) >> 2;
    b720:	01075713          	srli	a4, a4, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:466
                uint32_t field_mask_4B          = varinst_cmd_info.field_size_bytes == 2 ? 0xFFFF : varinst_cmd_info.field_size_bytes == 1 ? 0xFF : 0xFFFFFFFFF;
    b724:	000a0513          	mv	a0, s4
    b728:	00c78a63          	beq	a5, a2, b73c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x158>
    b72c:	00800613          	li	a2, 8
    b730:	0ff00513          	li	a0, 255
    b734:	00c78463          	beq	a5, a2, b73c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x158>
    b738:	fff00513          	li	a0, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:470
                uint32_t field_mask_shifted_4B  = field_mask_4B << field_shift_amt;

                // TODO - Could improve by avoiding datacopies, and using references.
                uint32_t rd_val_field = (header_addr_ptr[field_offset_4B] & field_mask_shifted_4B) >> field_shift_amt;
    b73c:	00271713          	slli	a4, a4, 0x2
    b740:	012705b3          	add	a1, a4, s2
    b744:	0005a603          	lw	a2, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:467
                uint32_t field_mask_shifted_4B  = field_mask_4B << field_shift_amt;
    b748:	00651833          	sll	a6, a0, t1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:473
                uint32_t wr_val_field = 0;

                if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdIncWrap){
    b74c:	0076f713          	andi	a4, a3, 7
    b750:	00100793          	li	a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:470
                uint32_t rd_val_field = (header_addr_ptr[field_offset_4B] & field_mask_shifted_4B) >> field_shift_amt;
    b754:	00c87633          	and	a2, a6, a2
    b758:	00665633          	srl	a2, a2, t1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:473
                if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdIncWrap){
    b75c:	02f71c63          	bne	a4, a5, b794 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:476
                    // Can't use modulo, do wrapping manually. This isn't efficient for the case where existing data is 
                    // many times larget than wrap value. Could be optimized, but this shouldn't be common.
                    wr_val_field = rd_val_field + varinst_cmd_info.operand_0;
    b760:	01042783          	lw	a5, 16(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:477
                    while (wr_val_field >= varinst_cmd_info.operand_1) {
    b764:	01442703          	lw	a4, 20(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:476
                    wr_val_field = rd_val_field + varinst_cmd_info.operand_0;
    b768:	00f607b3          	add	a5, a2, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:477
                    while (wr_val_field >= varinst_cmd_info.operand_1) {
    b76c:	02e7ec63          	bltu	a5, a4, b7a4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:478
                        wr_val_field -= varinst_cmd_info.operand_1;
    b770:	40e787b3          	sub	a5, a5, a4
    b774:	ff9ff06f          	j	b76c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x188>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:429
    int update_mask_bits_per_loop   = 16;
    b778:	01000c93          	li	s9, 16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:428
    int update_mask_start_idx       = 0;
    b77c:	00000b13          	li	s6, 0
    b780:	eedff06f          	j	b66c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x88>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:435
            update_mask_bits_per_loop = 8; // num_varinst_words;
    b784:	00800c93          	li	s9, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:428
    int update_mask_start_idx       = 0;
    b788:	00000b13          	li	s6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:434
            num_32B_rdwr_loops = 2;
    b78c:	00200493          	li	s1, 2
    b790:	ee1ff06f          	j	b670 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x8c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:480
                    }
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdInc){
    b794:	00200793          	li	a5, 2
    b798:	08f71863          	bne	a4, a5, b828 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x244>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:481
                    wr_val_field = rd_val_field + varinst_cmd_info.operand_0;
    b79c:	01042783          	lw	a5, 16(s0)
    b7a0:	00f607b3          	add	a5, a2, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:495
                            wr_val_field += (varinst_cmd_info.operand_0 << j);
                        }
                    }
                }

                header_addr_ptr[field_offset_4B] = header_addr_ptr[field_offset_4B] & ~field_mask_shifted_4B;
    b7a4:	0005a683          	lw	a3, 0(a1)
    b7a8:	fff84713          	not	a4, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:496
                header_addr_ptr[field_offset_4B] = header_addr_ptr[field_offset_4B] | ((wr_val_field & field_mask_4B) << field_shift_amt);
    b7ac:	00f577b3          	and	a5, a0, a5
    b7b0:	006797b3          	sll	a5, a5, t1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:495
                header_addr_ptr[field_offset_4B] = header_addr_ptr[field_offset_4B] & ~field_mask_shifted_4B;
    b7b4:	00d77733          	and	a4, a4, a3
    b7b8:	00e5a023          	sw	a4, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:496
                header_addr_ptr[field_offset_4B] = header_addr_ptr[field_offset_4B] | ((wr_val_field & field_mask_4B) << field_shift_amt);
    b7bc:	0005a703          	lw	a4, 0(a1)
    b7c0:	00e7e7b3          	or	a5, a5, a4
    b7c4:	00f5a023          	sw	a5, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:503
                // queue_addr_ptr, varinst_cmd_info.field_size_bytes, varinst_cmd_info.num_buffers, varinst_cmd_info.num_readers, varinst_cmd_info.reader_index, i, varinst_cmd_info.opcode, rd_val_field, wr_val_field);

            // Step 3 : Write updated fields back to DRAM. Not entire 32B chunk, but just updated fields, one at a time.
            // This is a bit dangerous, write back entire 4B word that may have been partially (1B or 2B) updated. It works to solve Rdptr/Wrptr modification race though since
            // they are in different 4B words.
            while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    b7c8:	42ad4503          	lbu	a0, 1066(s10)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    b7cc:	01051793          	slli	a5, a0, 0x10
    b7d0:	013787b3          	add	a5, a5, s3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    b7d4:	0007a703          	lw	a4, 0(a5)
run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:503
    b7d8:	fe071ee3          	bnez	a4, b7d4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1f0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:504
            ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[field_offset_4B])), queue_addr_ptr + field_offset_1B, write_size,
    b7dc:	000aa603          	lw	a2, 0(s5)
    b7e0:	004aa783          	lw	a5, 4(s5)
    b7e4:	00cb8633          	add	a2, s7, a2
    b7e8:	41fbd693          	srai	a3, s7, 0x1f
    b7ec:	01763333          	sltu	t1, a2, s7
    b7f0:	00f686b3          	add	a3, a3, a5
    b7f4:	00000813          	li	a6, 0
    b7f8:	00100793          	li	a5, 1
    b7fc:	00400713          	li	a4, 4
    b800:	00d306b3          	add	a3, t1, a3
    b804:	01112623          	sw	a7, 12(sp)
    b808:	ee8fe0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    b80c:	00c12883          	lw	a7, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:508
                                    DRAM_PTR_UPDATE_VC, false, false, 1, NCRISC_WR_DEF_TRID);
            }

            field_offset_1B += varinst_cmd_info.field_size_bytes;
    b810:	00c42783          	lw	a5, 12(s0)
    b814:	0137d793          	srli	a5, a5, 0x13
    b818:	0077f793          	andi	a5, a5, 7
    b81c:	00fb8bb3          	add	s7, s7, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:453
        for (int i = update_mask_start_idx; i < 16; i++) {
    b820:	001c0c13          	addi	s8, s8, 1
    b824:	eb9ff06f          	j	b6dc <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0xf8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:482
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdSet){
    b828:	00300793          	li	a5, 3
    b82c:	00f71663          	bne	a4, a5, b838 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x254>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:483
                    wr_val_field = varinst_cmd_info.operand_0;
    b830:	01042783          	lw	a5, 16(s0)
    b834:	f71ff06f          	j	b7a4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:484
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdAdd){
    b838:	00400793          	li	a5, 4
    b83c:	00f71a63          	bne	a4, a5, b850 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x26c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:485
                    wr_val_field = varinst_cmd_info.operand_0 + varinst_cmd_info.operand_1;
    b840:	01042703          	lw	a4, 16(s0)
    b844:	01442783          	lw	a5, 20(s0)
    b848:	00f707b3          	add	a5, a4, a5
    b84c:	f59ff06f          	j	b7a4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:486
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdMul){
    b850:	00500693          	li	a3, 5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:471
                uint32_t wr_val_field = 0;
    b854:	00000793          	li	a5, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:486
                }else if (varinst_cmd_info.opcode == epoch_queue::VarinstCmdMul){
    b858:	f4d716e3          	bne	a4, a3, b7a4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:489
                        if (varinst_cmd_info.operand_1 & (1u << j)) {
    b85c:	01442e03          	lw	t3, 20(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:488
                    for (uint32_t j = 0; j < 32; ++j) {
    b860:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:489
                        if (varinst_cmd_info.operand_1 & (1u << j)) {
    b864:	00100e93          	li	t4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:488
                    for (uint32_t j = 0; j < 32; ++j) {
    b868:	02000613          	li	a2, 32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:489
                        if (varinst_cmd_info.operand_1 & (1u << j)) {
    b86c:	00ee96b3          	sll	a3, t4, a4
    b870:	01c6f6b3          	and	a3, a3, t3
    b874:	00068863          	beqz	a3, b884 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x2a0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:490
                            wr_val_field += (varinst_cmd_info.operand_0 << j);
    b878:	01042683          	lw	a3, 16(s0)
    b87c:	00e696b3          	sll	a3, a3, a4
    b880:	00d787b3          	add	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:488
                    for (uint32_t j = 0; j < 32; ++j) {
    b884:	00170713          	addi	a4, a4, 1
    b888:	fec712e3          	bne	a4, a2, b86c <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x288>
    b88c:	f19ff06f          	j	b7a4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0x1c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:512
        }

        // If there is a next loop, offset read/write location by next 32B chunk.
        queue_addr_ptr += read_size;
    b890:	000aa783          	lw	a5, 0(s5)
    b894:	004aa683          	lw	a3, 4(s5)
    b898:	02078713          	addi	a4, a5, 32
    b89c:	00f737b3          	sltu	a5, a4, a5
    b8a0:	00d787b3          	add	a5, a5, a3
    b8a4:	00eaa023          	sw	a4, 0(s5)
    b8a8:	00faa223          	sw	a5, 4(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:513
        update_mask_start_idx += num_varinst_words;
    b8ac:	008b0b13          	addi	s6, s6, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:444
    for (int loop_idx=0; loop_idx<num_32B_rdwr_loops; loop_idx++){
    b8b0:	de9b12e3          	bne	s6, s1, b694 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]+0xb0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:515
    }
    b8b4:	04c12083          	lw	ra, 76(sp)
    b8b8:	04812403          	lw	s0, 72(sp)
    b8bc:	04412483          	lw	s1, 68(sp)
    b8c0:	04012903          	lw	s2, 64(sp)
    b8c4:	03c12983          	lw	s3, 60(sp)
    b8c8:	03812a03          	lw	s4, 56(sp)
    b8cc:	03412a83          	lw	s5, 52(sp)
    b8d0:	03012b03          	lw	s6, 48(sp)
    b8d4:	02c12b83          	lw	s7, 44(sp)
    b8d8:	02812c03          	lw	s8, 40(sp)
    b8dc:	02412c83          	lw	s9, 36(sp)
    b8e0:	02012d03          	lw	s10, 32(sp)
    b8e4:	01c12d83          	lw	s11, 28(sp)
    b8e8:	05010113          	addi	sp, sp, 80
    b8ec:	00008067          	ret

0000b8f0 <run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&) [clone .constprop.0] [clone .isra.0]>:
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:251

inline __attribute__((section("code_l1"))) void risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo &varinst_cmd_info, volatile uint32_t *noc_read_scratch_buf, uint64_t &my_q_table_offset, uint32_t &my_q_rd_ptr, uint64_t dram_next_epoch_ptr) {

  volatile epoch_queue::VarinstCmdInfo* varinst_info;

  uint64_t my_q_entry_offset = (my_q_rd_ptr & (EPOCH_QUEUE_NUM_SLOTS-1)) * epoch_queue::EPOCH_Q_SLOT_SIZE + epoch_queue::EPOCH_Q_SLOTS_OFFSET + my_q_table_offset;
    b8f0:	0000f7b7          	lui	a5, 0xf
    b8f4:	4207a783          	lw	a5, 1056(a5) # f420 <my_q_table_offset>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:140
void run_dram_queue_update(
    b8f8:	e7010113          	addi	sp, sp, -400
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:252
  uint32_t noc_read_dest_buf_offset = my_q_entry_offset % (NOC_WORD_BYTES);
    b8fc:	01f7f713          	andi	a4, a5, 31
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:140
    b900:	17812423          	sw	s8, 360(sp)
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:253
  uint32_t noc_read_dest_buf_addr = (uint32_t)(noc_read_scratch_buf);
    b904:	0000f7b7          	lui	a5, 0xf
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:154
    if (varinst_cmd){
    b908:	00054c03          	lbu	s8, 0(a0)
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:253
    b90c:	44078793          	addi	a5, a5, 1088 # f440 <noc_read_scratch_buf>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:140
void run_dram_queue_update(
    b910:	18112623          	sw	ra, 396(sp)
    b914:	18812423          	sw	s0, 392(sp)
    b918:	18912223          	sw	s1, 388(sp)
    b91c:	19212023          	sw	s2, 384(sp)
    b920:	17312e23          	sw	s3, 380(sp)
    b924:	17412c23          	sw	s4, 376(sp)
    b928:	17512a23          	sw	s5, 372(sp)
    b92c:	17612823          	sw	s6, 368(sp)
    b930:	17712623          	sw	s7, 364(sp)
    b934:	17912223          	sw	s9, 356(sp)
    b938:	17a12023          	sw	s10, 352(sp)
    b93c:	15b12e23          	sw	s11, 348(sp)
    b940:	00a12223          	sw	a0, 4(sp)
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:254
  uint32_t noc_read_dest_buf_ptr_addr = noc_read_dest_buf_addr+noc_read_dest_buf_offset;
    b944:	00e787b3          	add	a5, a5, a4
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:154
    if (varinst_cmd){
    b948:	1a0c0463          	beqz	s8, baf0 <erisc.cc.d3d9c141+0x7d>
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:258

  varinst_info = (volatile epoch_queue::VarinstCmdInfo*)noc_read_dest_buf_ptr_addr;

  varinst_cmd_info.dram_addr_lower = varinst_info->dram_addr_lower;
    b94c:	0007a883          	lw	a7, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:259
  varinst_cmd_info.dram_addr_upper = varinst_info->dram_addr_upper;
    b950:	0047d503          	lhu	a0, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:258
  varinst_cmd_info.dram_addr_lower = varinst_info->dram_addr_lower;
    b954:	03112823          	sw	a7, 48(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:259
  varinst_cmd_info.dram_addr_upper = varinst_info->dram_addr_upper;
    b958:	02a11a23          	sh	a0, 52(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:260
  varinst_cmd_info.dram_core_x = varinst_info->dram_core_x;
    b95c:	0047a683          	lw	a3, 4(a5)
    b960:	0106d693          	srli	a3, a3, 0x10
    b964:	03f6f813          	andi	a6, a3, 63
    b968:	03615683          	lhu	a3, 54(sp)
    b96c:	fc06f693          	andi	a3, a3, -64
    b970:	0106e6b3          	or	a3, a3, a6
    b974:	02d11b23          	sh	a3, 54(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:261
  varinst_cmd_info.dram_core_y = varinst_info->dram_core_y;
    b978:	0047a703          	lw	a4, 4(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:159
        cmd_info_queue_header_addr |= static_cast<uint64_t>(cmd.varinst_cmd_info.dram_core_x & 0x3F) << 48;
    b97c:	01081813          	slli	a6, a6, 0x10
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:261
    b980:	01675713          	srli	a4, a4, 0x16
    b984:	03f77313          	andi	t1, a4, 63
    b988:	fffff737          	lui	a4, 0xfffff
    b98c:	03f70713          	addi	a4, a4, 63 # fffff03f <TENSIX_MAILBOX_BASE+0x13f03f>
    b990:	00631613          	slli	a2, t1, 0x6
    b994:	00e6f733          	and	a4, a3, a4
    b998:	00c76733          	or	a4, a4, a2
    b99c:	02e11b23          	sh	a4, 54(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:262
  varinst_cmd_info.cmd_type = varinst_info->cmd_type;
    b9a0:	0047a683          	lw	a3, 4(a5)
    b9a4:	01471713          	slli	a4, a4, 0x14
    b9a8:	01c6d693          	srli	a3, a3, 0x1c
    b9ac:	00c69693          	slli	a3, a3, 0xc
    b9b0:	01475713          	srli	a4, a4, 0x14
    b9b4:	00d76733          	or	a4, a4, a3
    b9b8:	02e11b23          	sh	a4, 54(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:263
  varinst_cmd_info.num_buffers = varinst_info->num_buffers;
    b9bc:	0087c903          	lbu	s2, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:264
  varinst_cmd_info.reader_index = varinst_info->reader_index;
    b9c0:	0097ca83          	lbu	s5, 9(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:265
  varinst_cmd_info.num_readers = varinst_info->num_readers;
    b9c4:	00a7cb03          	lbu	s6, 10(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:266
  varinst_cmd_info.update_mask = varinst_info->update_mask;
    b9c8:	00c7d703          	lhu	a4, 12(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:263
  varinst_cmd_info.num_buffers = varinst_info->num_buffers;
    b9cc:	03210c23          	sb	s2, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:266
  varinst_cmd_info.update_mask = varinst_info->update_mask;
    b9d0:	02e11e23          	sh	a4, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:267
  varinst_cmd_info.opcode = varinst_info->opcode;
    b9d4:	00c7a683          	lw	a3, 12(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:264
  varinst_cmd_info.reader_index = varinst_info->reader_index;
    b9d8:	03510ca3          	sb	s5, 57(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:267
  varinst_cmd_info.opcode = varinst_info->opcode;
    b9dc:	0106d693          	srli	a3, a3, 0x10
    b9e0:	0076f713          	andi	a4, a3, 7
    b9e4:	03e15683          	lhu	a3, 62(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:265
  varinst_cmd_info.num_readers = varinst_info->num_readers;
    b9e8:	03610d23          	sb	s6, 58(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:267
  varinst_cmd_info.opcode = varinst_info->opcode;
    b9ec:	ff86f693          	andi	a3, a3, -8
    b9f0:	00e6e6b3          	or	a3, a3, a4
    b9f4:	02d11f23          	sh	a3, 62(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:268
  varinst_cmd_info.field_size_bytes = varinst_info->field_size_bytes;
    b9f8:	00c7a703          	lw	a4, 12(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:159
    b9fc:	01056533          	or	a0, a0, a6
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:268
    ba00:	01075713          	srli	a4, a4, 0x10
    ba04:	03877613          	andi	a2, a4, 56
    ba08:	fc76f713          	andi	a4, a3, -57
    ba0c:	00c76733          	or	a4, a4, a2
    ba10:	02e11f23          	sh	a4, 62(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:269
  varinst_cmd_info.operand_0 = varinst_info->operand_0;
    ba14:	0107a683          	lw	a3, 16(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:167
             cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdAdd || 
    ba18:	00777713          	andi	a4, a4, 7
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:269
    ba1c:	04d12023          	sw	a3, 64(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:270
  varinst_cmd_info.operand_1 = varinst_info->operand_1;
    ba20:	0147a683          	lw	a3, 20(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:271
  varinst_cmd_info.sync_loc_enable = varinst_info->sync_loc_enable;
    ba24:	0187a603          	lw	a2, 24(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:270
  varinst_cmd_info.operand_1 = varinst_info->operand_1;
    ba28:	04d12223          	sw	a3, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:271
  varinst_cmd_info.sync_loc_enable = varinst_info->sync_loc_enable;
    ba2c:	00167693          	andi	a3, a2, 1
    ba30:	04815603          	lhu	a2, 72(sp)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:160
        cmd_info_queue_header_addr |= static_cast<uint64_t>(cmd.varinst_cmd_info.dram_core_y & 0x3F) << 54;
    ba34:	01631313          	slli	t1, t1, 0x16
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:271
    ba38:	ffe67613          	andi	a2, a2, -2
    ba3c:	00d66633          	or	a2, a2, a3
    ba40:	04c11423          	sh	a2, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:272
  varinst_cmd_info.sync_loc_dram_core_x = varinst_info->sync_loc_dram_core_x;
    ba44:	0187a683          	lw	a3, 24(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:167
             cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdAdd || 
    ba48:	ffd70713          	addi	a4, a4, -3
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:272
    ba4c:	07e6fe13          	andi	t3, a3, 126
    ba50:	f8167693          	andi	a3, a2, -127
    ba54:	01c6e6b3          	or	a3, a3, t3
    ba58:	04d11423          	sh	a3, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:273
  varinst_cmd_info.sync_loc_dram_core_y = varinst_info->sync_loc_dram_core_y;
    ba5c:	0187a603          	lw	a2, 24(a5)
    ba60:	ffffee37          	lui	t3, 0xffffe
    ba64:	00765613          	srli	a2, a2, 0x7
    ba68:	03f67613          	andi	a2, a2, 63
    ba6c:	07fe0e13          	addi	t3, t3, 127 # ffffe07f <TENSIX_MAILBOX_BASE+0x13e07f>
    ba70:	00761613          	slli	a2, a2, 0x7
    ba74:	01c6f6b3          	and	a3, a3, t3
    ba78:	00c6e6b3          	or	a3, a3, a2
    ba7c:	04d11423          	sh	a3, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:274
  varinst_cmd_info.sync_loc_index = varinst_info->sync_loc_index;
    ba80:	01a7d783          	lhu	a5, 26(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:160
        cmd_info_queue_header_addr |= static_cast<uint64_t>(cmd.varinst_cmd_info.dram_core_y & 0x3F) << 54;
    ba84:	00656533          	or	a0, a0, t1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:166
        if ((cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdSet || 
    ba88:	01071713          	slli	a4, a4, 0x10
risc_get_epoch_varinst_info(epoch_queue::VarinstCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:274
    ba8c:	04f11523          	sh	a5, 74(sp)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:161
        cmd_info_num_buffers        = cmd.varinst_cmd_info.num_buffers;
    ba90:	01091913          	slli	s2, s2, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:160
        cmd_info_queue_header_addr |= static_cast<uint64_t>(cmd.varinst_cmd_info.dram_core_y & 0x3F) << 54;
    ba94:	03112023          	sw	a7, 32(sp)
    ba98:	02a12223          	sw	a0, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:166
        if ((cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdSet || 
    ba9c:	01075713          	srli	a4, a4, 0x10
    baa0:	00200793          	li	a5, 2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:161
        cmd_info_num_buffers        = cmd.varinst_cmd_info.num_buffers;
    baa4:	01095913          	srli	s2, s2, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:166
        if ((cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdSet || 
    baa8:	00e7e4e3          	bltu	a5, a4, c2b0 <erisc.cc.d3d9c141+0x83d>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:168
             cmd.varinst_cmd_info.opcode == epoch_queue::VarinstCmdMul) && loop_iteration != 0){
    baac:	0005a783          	lw	a5, 0(a1)
    bab0:	000780e3          	beqz	a5, c2b0 <erisc.cc.d3d9c141+0x83d>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:416
}
    bab4:	18c12083          	lw	ra, 396(sp)
    bab8:	18812403          	lw	s0, 392(sp)
    babc:	18412483          	lw	s1, 388(sp)
    bac0:	18012903          	lw	s2, 384(sp)
    bac4:	17c12983          	lw	s3, 380(sp)
    bac8:	17812a03          	lw	s4, 376(sp)
    bacc:	17412a83          	lw	s5, 372(sp)
    bad0:	17012b03          	lw	s6, 368(sp)
    bad4:	16c12b83          	lw	s7, 364(sp)
    bad8:	16812c03          	lw	s8, 360(sp)
    badc:	16412c83          	lw	s9, 356(sp)
    bae0:	16012d03          	lw	s10, 352(sp)
    bae4:	15c12d83          	lw	s11, 348(sp)
    bae8:	19010113          	addi	sp, sp, 400
    baec:	00008067          	ret
risc_get_epoch_update_info(epoch_queue::IOQueueUpdateCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:235
  queue_update_info.queue_header_addr = update_info->queue_header_addr;
    baf0:	0007a603          	lw	a2, 0(a5)
    baf4:	0047a683          	lw	a3, 4(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:175
        cmd_info_queue_header_addr  = cmd.queue_update_info.queue_header_addr;
    baf8:	02c12023          	sw	a2, 32(sp)
risc_get_epoch_update_info(epoch_queue::IOQueueUpdateCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:235
    bafc:	02d12a23          	sw	a3, 52(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:236
  queue_update_info.num_buffers = update_info->num_buffers;
    bb00:	0087c903          	lbu	s2, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:237
  queue_update_info.reader_index = update_info->reader_index;
    bb04:	0097ca83          	lbu	s5, 9(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:238
  queue_update_info.num_readers = update_info->num_readers;
    bb08:	00a7cb03          	lbu	s6, 10(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:239
  queue_update_info.update_mask = update_info->update_mask;
    bb0c:	00b7c703          	lbu	a4, 11(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:240
  queue_update_info.header[0] = update_info->header[0];
    bb10:	00c7a503          	lw	a0, 12(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:236
  queue_update_info.num_buffers = update_info->num_buffers;
    bb14:	03210c23          	sb	s2, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:240
  queue_update_info.header[0] = update_info->header[0];
    bb18:	02a12e23          	sw	a0, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:241
  queue_update_info.header[1] = update_info->header[1];
    bb1c:	0107a503          	lw	a0, 16(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:176
        cmd_info_num_buffers        = cmd.queue_update_info.num_buffers;
    bb20:	01091913          	slli	s2, s2, 0x10
risc_get_epoch_update_info(epoch_queue::IOQueueUpdateCmdInfo&, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:241
    bb24:	04a12023          	sw	a0, 64(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:242
  queue_update_info.header[2] = update_info->header[2];
    bb28:	0147a503          	lw	a0, 20(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:235
  queue_update_info.queue_header_addr = update_info->queue_header_addr;
    bb2c:	02c12823          	sw	a2, 48(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:242
  queue_update_info.header[2] = update_info->header[2];
    bb30:	04a12223          	sw	a0, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:243
  queue_update_info.header[3] = update_info->header[3];
    bb34:	0187a503          	lw	a0, 24(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:244
  queue_update_info.header[4] = update_info->header[4];
    bb38:	01c7a783          	lw	a5, 28(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:237
  queue_update_info.reader_index = update_info->reader_index;
    bb3c:	03510ca3          	sb	s5, 57(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:238
  queue_update_info.num_readers = update_info->num_readers;
    bb40:	03610d23          	sb	s6, 58(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:239
  queue_update_info.update_mask = update_info->update_mask;
    bb44:	02e10da3          	sb	a4, 59(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:243
  queue_update_info.header[3] = update_info->header[3];
    bb48:	04a12423          	sw	a0, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:244
  queue_update_info.header[4] = update_info->header[4];
    bb4c:	04f12623          	sw	a5, 76(sp)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:175
        cmd_info_queue_header_addr  = cmd.queue_update_info.queue_header_addr;
    bb50:	02d12223          	sw	a3, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:176
        cmd_info_num_buffers        = cmd.queue_update_info.num_buffers;
    bb54:	01095913          	srli	s2, s2, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:181
    bool allocate_queue = !varinst_cmd && (cmd.queue_update_info.update_mask == 0);
    bb58:	76071663          	bnez	a4, c2c4 <erisc.cc.d3d9c141+0x851>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:182
    bool single_sync_mode = allocate_queue || (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable);
    bb5c:	00100793          	li	a5, 1
    bb60:	00f12423          	sw	a5, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:181
    bool allocate_queue = !varinst_cmd && (cmd.queue_update_info.update_mask == 0);
    bb64:	00100c13          	li	s8, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:189
    if (cmd_info_num_buffers > 1) {
    bb68:	00100793          	li	a5, 1
    bb6c:	0000f9b7          	lui	s3, 0xf
    bb70:	0727fc63          	bgeu	a5, s2, bbe8 <erisc.cc.d3d9c141+0x175>
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:184
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    bb74:	02012583          	lw	a1, 32(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    bb78:	02412603          	lw	a2, 36(sp)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:194
        uint64_t queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    bb7c:	42a9c503          	lbu	a0, 1066(s3) # f42a <loading_noc>
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:185
    bb80:	01061793          	slli	a5, a2, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    bb84:	02412603          	lw	a2, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    bb88:	02412803          	lw	a6, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    bb8c:	01065613          	srli	a2, a2, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    bb90:	01685813          	srli	a6, a6, 0x16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    bb94:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    bb98:	03f67613          	andi	a2, a2, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    bb9c:	03f87813          	andi	a6, a6, 63
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:194
    bba0:	12050263          	beqz	a0, bcc4 <erisc.cc.d3d9c141+0x251>
    bba4:	0000f737          	lui	a4, 0xf
    bba8:	41774703          	lbu	a4, 1047(a4) # f417 <noc_size_y>
    bbac:	fff70713          	addi	a4, a4, -1
    bbb0:	41070833          	sub	a6, a4, a6
    bbb4:	0000f737          	lui	a4, 0xf
    bbb8:	41674703          	lbu	a4, 1046(a4) # f416 <noc_size_x>
    bbbc:	00a81813          	slli	a6, a6, 0xa
    bbc0:	fff70713          	addi	a4, a4, -1
    bbc4:	40c70633          	sub	a2, a4, a2
    bbc8:	00461613          	slli	a2, a2, 0x4
    bbcc:	00c7e633          	or	a2, a5, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:195
        ncrisc_noc_fast_read_any_len_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_addr_ptr, 
    bbd0:	000206b7          	lui	a3, 0x20
    bbd4:	00300793          	li	a5, 3
    bbd8:	00391713          	slli	a4, s2, 0x3
    bbdc:	4a068693          	addi	a3, a3, 1184 # 204a0 <risc_chip_specific.cc.5b7d4a1c+0x14c4>
    bbe0:	01066633          	or	a2, a2, a6
    bbe4:	af0fe0ef          	jal	ra, 9ed4 <ncrisc_noc_fast_read_any_len_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:213
    if (allocate_queue) {
    bbe8:	0e0c0263          	beqz	s8, bccc <erisc.cc.d3d9c141+0x259>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:214
        header_addr_ptr[0] = 0;
    bbec:	000277b7          	lui	a5, 0x27
    bbf0:	ca07a023          	sw	zero, -864(a5) # 26ca0 <noc_nonblocking_api.cc.88b5909b+0x3f1c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:215
        header_addr_ptr[1] = 0;
    bbf4:	ca07a223          	sw	zero, -860(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:216
        header_addr_ptr[2] = 0;
    bbf8:	ca07a423          	sw	zero, -856(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:217
        header_addr_ptr[3] = 0;
    bbfc:	ca07a623          	sw	zero, -852(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:218
        header_addr_ptr[4] = 0;
    bc00:	ca07a823          	sw	zero, -848(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:226
    header_addr_ptr[5] = 0;
    bc04:	000277b7          	lui	a5, 0x27
    bc08:	ca07aa23          	sw	zero, -844(a5) # 26cb4 <noc_nonblocking_api.cc.88b5909b+0x3f30>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:227
    header_addr_ptr[6] = 0;
    bc0c:	ca07ac23          	sw	zero, -840(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:228
    header_addr_ptr[7] = 0;
    bc10:	ca07ae23          	sw	zero, -836(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:232
      state[i] = 0;
    bc14:	00090613          	mv	a2, s2
    bc18:	00000593          	li	a1, 0
    bc1c:	05010513          	addi	a0, sp, 80
    bc20:	ffbf6097          	auipc	ra, 0xffbf6
    bc24:	95c080e7          	jalr	-1700(ra) # ffc0157c <TENSIX_MAILBOX_BASE+0xffd4157c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:394
                            l1_ptrs->wr_queue_update_stride = DRAM_STRIDE_WRAP_BIT + reader_index + 1;
    bc28:	000047b7          	lui	a5, 0x4
    bc2c:	00178793          	addi	a5, a5, 1 # 4001 <__trisc0_size+0x1>
    bc30:	00fa87b3          	add	a5, s5, a5
    bc34:	01079793          	slli	a5, a5, 0x10
    bc38:	0107d793          	srli	a5, a5, 0x10
    bc3c:	00f12823          	sw	a5, 16(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:365
                            l1_ptrs->wr_queue_update_stride = reader_index + 1;
    bc40:	001a8793          	addi	a5, s5, 1
    bc44:	00f12a23          	sw	a5, 20(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:241
        risc_context_switch();
    bc48:	ce9fd0ef          	jal	ra, 9930 <risc_context_switch()>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:243
        while (!ncrisc_noc_reads_flushed_l1(loading_noc, NCRISC_HEADER_RD_TRID));
    bc4c:	42a9c783          	lbu	a5, 1066(s3)
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    bc50:	ffb20737          	lui	a4, 0xffb20
    bc54:	01079793          	slli	a5, a5, 0x10
    bc58:	24c70713          	addi	a4, a4, 588 # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
    bc5c:	00e78733          	add	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    bc60:	00072683          	lw	a3, 0(a4)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:243
    bc64:	fe069ee3          	bnez	a3, bc60 <erisc.cc.d3d9c141+0x1ed>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    bc68:	ffb20737          	lui	a4, 0xffb20
    bc6c:	24070713          	addi	a4, a4, 576 # ffb20240 <TENSIX_MAILBOX_BASE+0xffc60240>
    bc70:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    bc74:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:244
        while (!ncrisc_noc_nonposted_writes_flushed_l1(loading_noc, NCRISC_WR_DEF_TRID));
    bc78:	fe071ee3          	bnez	a4, bc74 <erisc.cc.d3d9c141+0x201>
    bc7c:	05010a13          	addi	s4, sp, 80
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:246
        for (int k = 0; k < cmd_info_num_buffers; k++) {
    bc80:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:237
        all_done = true;
    bc84:	00100d13          	li	s10, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:246
        for (int k = 0; k < cmd_info_num_buffers; k++) {
    bc88:	092cc263          	blt	s9, s2, bd0c <erisc.cc.d3d9c141+0x299>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:236
    while (!all_done) {
    bc8c:	fa0d0ee3          	beqz	s10, bc48 <erisc.cc.d3d9c141+0x1d5>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:414
    while (!ncrisc_noc_reads_flushed_l1(loading_noc, NCRISC_HEADER_RD_TRID));
    bc90:	42a9c783          	lbu	a5, 1066(s3)
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    bc94:	ffb20737          	lui	a4, 0xffb20
    bc98:	01079793          	slli	a5, a5, 0x10
    bc9c:	24c70713          	addi	a4, a4, 588 # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
    bca0:	00e78733          	add	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    bca4:	00072683          	lw	a3, 0(a4)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:414
    bca8:	fe069ee3          	bnez	a3, bca4 <erisc.cc.d3d9c141+0x231>
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    bcac:	ffb20737          	lui	a4, 0xffb20
    bcb0:	24070713          	addi	a4, a4, 576 # ffb20240 <TENSIX_MAILBOX_BASE+0xffc60240>
    bcb4:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    bcb8:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:415
    while (!ncrisc_noc_nonposted_writes_flushed_l1(loading_noc, NCRISC_WR_DEF_TRID));
    bcbc:	fe071ee3          	bnez	a4, bcb8 <erisc.cc.d3d9c141+0x245>
    bcc0:	df5ff06f          	j	bab4 <erisc.cc.d3d9c141+0x41>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:194
        uint64_t queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    bcc4:	00a81813          	slli	a6, a6, 0xa
    bcc8:	f01ff06f          	j	bbc8 <erisc.cc.d3d9c141+0x155>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:219
    } else if (!varinst_cmd){
    bccc:	00412783          	lw	a5, 4(sp)
    bcd0:	0007c783          	lbu	a5, 0(a5)
    bcd4:	f20798e3          	bnez	a5, bc04 <erisc.cc.d3d9c141+0x191>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:220
        header_addr_ptr[0] = cmd.queue_update_info.header[0];
    bcd8:	03c12703          	lw	a4, 60(sp)
    bcdc:	000277b7          	lui	a5, 0x27
    bce0:	c8078793          	addi	a5, a5, -896 # 26c80 <noc_nonblocking_api.cc.88b5909b+0x3efc>
    bce4:	02e7a023          	sw	a4, 32(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:221
        header_addr_ptr[1] = cmd.queue_update_info.header[1];
    bce8:	04012703          	lw	a4, 64(sp)
    bcec:	02e7a223          	sw	a4, 36(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:222
        header_addr_ptr[2] = cmd.queue_update_info.header[2];
    bcf0:	04412703          	lw	a4, 68(sp)
    bcf4:	02e7a423          	sw	a4, 40(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:223
        header_addr_ptr[3] = cmd.queue_update_info.header[3];
    bcf8:	04812703          	lw	a4, 72(sp)
    bcfc:	02e7a623          	sw	a4, 44(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:224
        header_addr_ptr[4] = cmd.queue_update_info.header[4];
    bd00:	04c12703          	lw	a4, 76(sp)
    bd04:	02e7a823          	sw	a4, 48(a5)
    bd08:	efdff06f          	j	bc04 <erisc.cc.d3d9c141+0x191>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:247
            if (state[k] == 4)
    bd0c:	000a4703          	lbu	a4, 0(s4)
    bd10:	00400793          	li	a5, 4
    bd14:	00f70c63          	beq	a4, a5, bd2c <erisc.cc.d3d9c141+0x2b9>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:250
            if (single_sync_mode) {
    bd18:	00812783          	lw	a5, 8(sp)
    bd1c:	00078e63          	beqz	a5, bd38 <erisc.cc.d3d9c141+0x2c5>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:251
                if (k > 0) {  // skip since remaining are allocated all at once
    bd20:	000c8c63          	beqz	s9, bd38 <erisc.cc.d3d9c141+0x2c5>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:252
                    state[k] = state[0];
    bd24:	05014783          	lbu	a5, 80(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:403
                    state[k] = 4;
    bd28:	00fa0023          	sb	a5, 0(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:246
        for (int k = 0; k < cmd_info_num_buffers; k++) {
    bd2c:	001c8c93          	addi	s9, s9, 1
    bd30:	001a0a13          	addi	s4, s4, 1
    bd34:	f55ff06f          	j	bc88 <erisc.cc.d3d9c141+0x215>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:268
            if (has_multi_buffers) {
    bd38:	00100793          	li	a5, 1
    bd3c:	1327f463          	bgeu	a5, s2, be64 <erisc.cc.d3d9c141+0x3f1>
    bd40:	000207b7          	lui	a5, 0x20
    bd44:	4a078793          	addi	a5, a5, 1184 # 204a0 <risc_chip_specific.cc.5b7d4a1c+0x14c4>
    bd48:	003c9593          	slli	a1, s9, 0x3
    bd4c:	00f585b3          	add	a1, a1, a5
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:184
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    bd50:	0005a603          	lw	a2, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    bd54:	0045a683          	lw	a3, 4(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:186
  dram_addr_offset = dram_addr_offset_lo | (dram_addr_offset_hi << 32);
    bd58:	01069513          	slli	a0, a3, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    bd5c:	0045a683          	lw	a3, 4(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    bd60:	0045a783          	lw	a5, 4(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:186
  dram_addr_offset = dram_addr_offset_lo | (dram_addr_offset_hi << 32);
    bd64:	01055513          	srli	a0, a0, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    bd68:	0106d693          	srli	a3, a3, 0x10
    bd6c:	03f6f693          	andi	a3, a3, 63
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:276
            uint64_t queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    bd70:	42a9c803          	lbu	a6, 1066(s3)
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    bd74:	0167d793          	srli	a5, a5, 0x16
    bd78:	03f7f793          	andi	a5, a5, 63
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:276
    bd7c:	10080663          	beqz	a6, be88 <erisc.cc.d3d9c141+0x415>
    bd80:	0000f5b7          	lui	a1, 0xf
    bd84:	4175c583          	lbu	a1, 1047(a1) # f417 <noc_size_y>
    bd88:	fff58593          	addi	a1, a1, -1
    bd8c:	40f587b3          	sub	a5, a1, a5
    bd90:	0000f5b7          	lui	a1, 0xf
    bd94:	4165c583          	lbu	a1, 1046(a1) # f416 <noc_size_x>
    bd98:	00a79793          	slli	a5, a5, 0xa
    bd9c:	fff58593          	addi	a1, a1, -1
    bda0:	40d586b3          	sub	a3, a1, a3
    bda4:	00469693          	slli	a3, a3, 0x4
    bda8:	00f6e6b3          	or	a3, a3, a5
    bdac:	00a6e6b3          	or	a3, a3, a0
    bdb0:	02c12423          	sw	a2, 40(sp)
    bdb4:	02d12623          	sw	a3, 44(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:278
            if (allocate_queue) {
    bdb8:	100c0263          	beqz	s8, bebc <erisc.cc.d3d9c141+0x449>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:279
                queue_sync_ptr = NOC_XY_ADDR(
    bdbc:	04012783          	lw	a5, 64(sp)
    bdc0:	03c12583          	lw	a1, 60(sp)
    bdc4:	0c081663          	bnez	a6, be90 <erisc.cc.d3d9c141+0x41d>
    bdc8:	00a79793          	slli	a5, a5, 0xa
    bdcc:	00459413          	slli	s0, a1, 0x4
    bdd0:	04412483          	lw	s1, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:284
                queue_sync_ptr = NOC_XY_ADDR(
    bdd4:	000385b7          	lui	a1, 0x38
    bdd8:	68858593          	addi	a1, a1, 1672 # 38688 <noc_nonblocking_api.cc.88b5909b+0x15904>
    bddc:	00b484b3          	add	s1, s1, a1
    bde0:	00549493          	slli	s1, s1, 0x5
    bde4:	00f46433          	or	s0, s0, a5
    bde8:	06000793          	li	a5, 96
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:292
            uint32_t l1_ptr_addr = ((uint32_t)queue_addr_l1) + MAX_DRAM_QUEUES_TO_UPDATE*8 + k*sizeof(dram_io_state_t);
    bdec:	000218b7          	lui	a7, 0x21
    bdf0:	02fc87b3          	mul	a5, s9, a5
    bdf4:	ca088893          	addi	a7, a7, -864 # 20ca0 <risc_chip_specific.cc.5b7d4a1c+0x1cc4>
    bdf8:	00f12623          	sw	a5, 12(sp)
    bdfc:	01178bb3          	add	s7, a5, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:295
            if (state[k] == 0 || state[k] == 2) {
    be00:	0fd77793          	andi	a5, a4, 253
    be04:	12079c63          	bnez	a5, bf3c <erisc.cc.d3d9c141+0x4c9>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    be08:	11d007b7          	lui	a5, 0x11d00
    be0c:	ffb20737          	lui	a4, 0xffb20
    be10:	00178793          	addi	a5, a5, 1 # 11d00001 <noc_nonblocking_api.cc.88b5909b+0x11cdd27d>
    be14:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:297
                while (!ncrisc_noc_fast_read_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    be18:	42a9c503          	lbu	a0, 1066(s3)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    be1c:	ffb21737          	lui	a4, 0xffb21
    be20:	01051793          	slli	a5, a0, 0x10
    be24:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    be28:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    be2c:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:297
    be30:	fe071ee3          	bnez	a4, be2c <erisc.cc.d3d9c141+0x3b9>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:298
                ncrisc_noc_fast_read_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, queue_sync_ptr, l1_ptr_addr, DRAM_HEADER_SIZE, NCRISC_HEADER_RD_TRID);
    be34:	00300793          	li	a5, 3
    be38:	02000713          	li	a4, 32
    be3c:	000b8693          	mv	a3, s7
    be40:	00048593          	mv	a1, s1
    be44:	00040613          	mv	a2, s0
    be48:	808fe0ef          	jal	ra, 9e50 <ncrisc_noc_fast_read_l1(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:308
                if (state[k] == 2)
    be4c:	000a4703          	lbu	a4, 0(s4)
    be50:	00200793          	li	a5, 2
    be54:	0ef71063          	bne	a4, a5, bf34 <erisc.cc.d3d9c141+0x4c1>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:309
                    state[k] = 3;
    be58:	00300793          	li	a5, 3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:405
                    state[k] = 2;
    be5c:	00fa0023          	sb	a5, 0(s4)
    be60:	3ac0006f          	j	c20c <erisc.cc.d3d9c141+0x799>
risc_get_noc_addr_from_dram_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:168
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    be64:	02012603          	lw	a2, 32(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:169
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    be68:	02412683          	lw	a3, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:170
  dram_addr_offset = dram_addr_offset_lo | (dram_addr_offset_hi << 32);
    be6c:	01069513          	slli	a0, a3, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    be70:	02412683          	lw	a3, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:170
  dram_addr_offset = dram_addr_offset_lo | (dram_addr_offset_hi << 32);
    be74:	01055513          	srli	a0, a0, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    be78:	0106d693          	srli	a3, a3, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:172
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    be7c:	02412783          	lw	a5, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:171
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    be80:	03f6f693          	andi	a3, a3, 63
    be84:	eedff06f          	j	bd70 <erisc.cc.d3d9c141+0x2fd>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:276
            uint64_t queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    be88:	00a79793          	slli	a5, a5, 0xa
    be8c:	f19ff06f          	j	bda4 <erisc.cc.d3d9c141+0x331>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:279
                queue_sync_ptr = NOC_XY_ADDR(
    be90:	0000f537          	lui	a0, 0xf
    be94:	41754403          	lbu	s0, 1047(a0) # f417 <noc_size_y>
    be98:	0000f537          	lui	a0, 0xf
    be9c:	40f40433          	sub	s0, s0, a5
    bea0:	fff40413          	addi	s0, s0, -1
    bea4:	00a41793          	slli	a5, s0, 0xa
    bea8:	41654403          	lbu	s0, 1046(a0) # f416 <noc_size_x>
    beac:	40b40433          	sub	s0, s0, a1
    beb0:	fff40413          	addi	s0, s0, -1
    beb4:	00441413          	slli	s0, s0, 0x4
    beb8:	f19ff06f          	j	bdd0 <erisc.cc.d3d9c141+0x35d>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:283
            } else if (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable){
    bebc:	00412783          	lw	a5, 4(sp)
    bec0:	0007c783          	lbu	a5, 0(a5)
    bec4:	06078263          	beqz	a5, bf28 <erisc.cc.d3d9c141+0x4b5>
    bec8:	04815783          	lhu	a5, 72(sp)
    becc:	0017f793          	andi	a5, a5, 1
    bed0:	04078c63          	beqz	a5, bf28 <erisc.cc.d3d9c141+0x4b5>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:284
                queue_sync_ptr = NOC_XY_ADDR(
    bed4:	04812583          	lw	a1, 72(sp)
    bed8:	0075d413          	srli	s0, a1, 0x7
    bedc:	03f47513          	andi	a0, s0, 63
    bee0:	0015d413          	srli	s0, a1, 0x1
    bee4:	03f47593          	andi	a1, s0, 63
    bee8:	00081a63          	bnez	a6, befc <erisc.cc.d3d9c141+0x489>
    beec:	00a51793          	slli	a5, a0, 0xa
    bef0:	00459413          	slli	s0, a1, 0x4
    bef4:	04a15483          	lhu	s1, 74(sp)
    bef8:	eddff06f          	j	bdd4 <erisc.cc.d3d9c141+0x361>
    befc:	0000f7b7          	lui	a5, 0xf
    bf00:	4177c783          	lbu	a5, 1047(a5) # f417 <noc_size_y>
    bf04:	fff78793          	addi	a5, a5, -1
    bf08:	40a78433          	sub	s0, a5, a0
    bf0c:	0000f537          	lui	a0, 0xf
    bf10:	00a41793          	slli	a5, s0, 0xa
    bf14:	41654403          	lbu	s0, 1046(a0) # f416 <noc_size_x>
    bf18:	fff40413          	addi	s0, s0, -1
    bf1c:	40b40433          	sub	s0, s0, a1
    bf20:	00441413          	slli	s0, s0, 0x4
    bf24:	fd1ff06f          	j	bef4 <erisc.cc.d3d9c141+0x481>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:289
                queue_sync_ptr = queue_addr_ptr;
    bf28:	00060493          	mv	s1, a2
    bf2c:	00068413          	mv	s0, a3
    bf30:	eb9ff06f          	j	bde8 <erisc.cc.d3d9c141+0x375>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:311
                    state[k] = 1;
    bf34:	00100793          	li	a5, 1
    bf38:	f25ff06f          	j	be5c <erisc.cc.d3d9c141+0x3e9>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:313
            } else if (state[k] == 1) {
    bf3c:	00100593          	li	a1, 1
    bf40:	2cb71a63          	bne	a4, a1, c214 <erisc.cc.d3d9c141+0x7a1>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    bf44:	11d007b7          	lui	a5, 0x11d00
    bf48:	00278793          	addi	a5, a5, 2 # 11d00002 <noc_nonblocking_api.cc.88b5909b+0x11cdd27e>
    bf4c:	ffb205b7          	lui	a1, 0xffb20
    bf50:	10f5a623          	sw	a5, 268(a1) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:318
                uint32_t rd_stride = l1_ptrs->rd_queue_update_stride; 
    bf54:	014bd783          	lhu	a5, 20(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:320
                if (!has_multi_readers || reader_index == rd_stride) {
    bf58:	01677863          	bgeu	a4, s6, bf68 <erisc.cc.d3d9c141+0x4f5>
    bf5c:	2afa9663          	bne	s5, a5, c208 <erisc.cc.d3d9c141+0x795>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:321
                    if (!has_multi_readers || reader_index == total_readers-1) {
    bf60:	fffb0793          	addi	a5, s6, -1
    bf64:	28fa9e63          	bne	s5, a5, c200 <erisc.cc.d3d9c141+0x78d>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:322
                        if (varinst_cmd){
    bf68:	00412783          	lw	a5, 4(sp)
    bf6c:	0007c783          	lbu	a5, 0(a5)
    bf70:	08078263          	beqz	a5, bff4 <erisc.cc.d3d9c141+0x581>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:323
                            run_varinst_cmd_dram_rmw(cmd.varinst_cmd_info, queue_addr_ptr, header_addr, header_addr_ptr);
    bf74:	02810593          	addi	a1, sp, 40
    bf78:	03010513          	addi	a0, sp, 48
    bf7c:	e68ff0ef          	jal	ra, b5e4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:340
                        if (single_sync_mode) {
    bf80:	00812783          	lw	a5, 8(sp)
    bf84:	16079263          	bnez	a5, c0e8 <erisc.cc.d3d9c141+0x675>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:360
                    if (has_multi_readers) {
    bf88:	00100793          	li	a5, 1
    bf8c:	0767f063          	bgeu	a5, s6, bfec <erisc.cc.d3d9c141+0x579>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:361
                        if (reader_index == total_readers-1) {
    bf90:	fffb0793          	addi	a5, s6, -1
    bf94:	26fa9663          	bne	s5, a5, c200 <erisc.cc.d3d9c141+0x78d>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:362
                            l1_ptrs->wr_queue_update_stride = DRAM_STRIDE_WRAP_BIT + 0;
    bf98:	000047b7          	lui	a5, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:365
                            l1_ptrs->wr_queue_update_stride = reader_index + 1;
    bf9c:	02fb9a23          	sh	a5, 52(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:366
                            l1_ptrs->rd_queue_update_stride = reader_index + 1;
    bfa0:	00fb9a23          	sh	a5, 20(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:369
                        while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    bfa4:	42a9c503          	lbu	a0, 1066(s3)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    bfa8:	ffb21737          	lui	a4, 0xffb21
    bfac:	01051793          	slli	a5, a0, 0x10
    bfb0:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    bfb4:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    bfb8:	0007a703          	lw	a4, 0(a5) # 4000 <__trisc0_size>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:369
    bfbc:	fe071ee3          	bnez	a4, bfb8 <erisc.cc.d3d9c141+0x545>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:370
                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_queue_update_stride)), queue_sync_ptr+DRAM_BUF_QUEUE_UPDATE_STRIDE_OFFSET, 2,
    bfc0:	01448613          	addi	a2, s1, 20
    bfc4:	009636b3          	sltu	a3, a2, s1
    bfc8:	008686b3          	add	a3, a3, s0
    bfcc:	000215b7          	lui	a1, 0x21
    bfd0:	00c12403          	lw	s0, 12(sp)
    bfd4:	cd458593          	addi	a1, a1, -812 # 20cd4 <risc_chip_specific.cc.5b7d4a1c+0x1cf8>
    bfd8:	00000813          	li	a6, 0
    bfdc:	00100793          	li	a5, 1
    bfe0:	00200713          	li	a4, 2
    bfe4:	00b405b3          	add	a1, s0, a1
    bfe8:	f09fd0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:405
                    state[k] = 2;
    bfec:	00200793          	li	a5, 2
    bff0:	e6dff06f          	j	be5c <erisc.cc.d3d9c141+0x3e9>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:325
                            if (allocate_queue || cmd.queue_update_info.update_mask == 0xff) {
    bff4:	000c1863          	bnez	s8, c004 <erisc.cc.d3d9c141+0x591>
    bff8:	03b14703          	lbu	a4, 59(sp)
    bffc:	0ff00793          	li	a5, 255
    c000:	02f71e63          	bne	a4, a5, c03c <erisc.cc.d3d9c141+0x5c9>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:326
                                while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    c004:	42a9c503          	lbu	a0, 1066(s3)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    c008:	ffb21737          	lui	a4, 0xffb21
    c00c:	01051793          	slli	a5, a0, 0x10
    c010:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    c014:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    c018:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:326
    c01c:	fe071ee3          	bnez	a4, c018 <erisc.cc.d3d9c141+0x5a5>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:327
                                ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[0])), queue_addr_ptr, DRAM_HEADER_SIZE,
    c020:	000275b7          	lui	a1, 0x27
    c024:	00000813          	li	a6, 0
    c028:	00100793          	li	a5, 1
    c02c:	02000713          	li	a4, 32
    c030:	ca058593          	addi	a1, a1, -864 # 26ca0 <noc_nonblocking_api.cc.88b5909b+0x3f1c>
    c034:	ebdfd0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    c038:	f49ff06f          	j	bf80 <erisc.cc.d3d9c141+0x50d>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    c03c:	ffb21e37          	lui	t3, 0xffb21
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:334
                                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[m])), queue_addr_ptr + 4*m, 4,
    c040:	00027eb7          	lui	t4, 0x27
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:325
                            if (allocate_queue || cmd.queue_update_info.update_mask == 0xff) {
    c044:	00000d13          	li	s10, 0
    c048:	00000d93          	li	s11, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:330
                                for (int m = 0; m < 8; m++) {
    c04c:	00000313          	li	t1, 0
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c050:	c28e0e13          	addi	t3, t3, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:334
                                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[m])), queue_addr_ptr + 4*m, 4,
    c054:	ca0e8e93          	addi	t4, t4, -864 # 26ca0 <noc_nonblocking_api.cc.88b5909b+0x3f1c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:330
                                for (int m = 0; m < 8; m++) {
    c058:	02000f13          	li	t5, 32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:331
                                    bool update_word = (cmd.queue_update_info.update_mask >> m) & 0x1;
    c05c:	03b14783          	lbu	a5, 59(sp)
    c060:	4067d7b3          	sra	a5, a5, t1
    c064:	0017f793          	andi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:332
                                    if (update_word) {
    c068:	06078063          	beqz	a5, c0c8 <erisc.cc.d3d9c141+0x655>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:333
                                        while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    c06c:	42a9c503          	lbu	a0, 1066(s3)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c070:	01051793          	slli	a5, a0, 0x10
    c074:	01c787b3          	add	a5, a5, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    c078:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:333
    c07c:	fe071ee3          	bnez	a4, c078 <erisc.cc.d3d9c141+0x605>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:334
                                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[m])), queue_addr_ptr + 4*m, 4,
    c080:	02812603          	lw	a2, 40(sp)
    c084:	02c12683          	lw	a3, 44(sp)
    c088:	00cd0633          	add	a2, s10, a2
    c08c:	01a635b3          	sltu	a1, a2, s10
    c090:	00dd86b3          	add	a3, s11, a3
    c094:	00100793          	li	a5, 1
    c098:	00d586b3          	add	a3, a1, a3
    c09c:	00000813          	li	a6, 0
    c0a0:	01dd05b3          	add	a1, s10, t4
    c0a4:	00400713          	li	a4, 4
    c0a8:	00612c23          	sw	t1, 24(sp)
    c0ac:	e45fd0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    c0b0:	ffb217b7          	lui	a5, 0xffb21
    c0b4:	c2878e13          	addi	t3, a5, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    c0b8:	01812303          	lw	t1, 24(sp)
    c0bc:	000277b7          	lui	a5, 0x27
    c0c0:	02000f13          	li	t5, 32
    c0c4:	ca078e93          	addi	t4, a5, -864 # 26ca0 <noc_nonblocking_api.cc.88b5909b+0x3f1c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:330
                                for (int m = 0; m < 8; m++) {
    c0c8:	004d0793          	addi	a5, s10, 4
    c0cc:	01a7b733          	sltu	a4, a5, s10
    c0d0:	00130313          	addi	t1, t1, 1 # ffb20001 <TENSIX_MAILBOX_BASE+0xffc60001>
    c0d4:	00078d13          	mv	s10, a5
    c0d8:	01b70db3          	add	s11, a4, s11
    c0dc:	f9e790e3          	bne	a5, t5, c05c <erisc.cc.d3d9c141+0x5e9>
    c0e0:	f60d9ee3          	bnez	s11, c05c <erisc.cc.d3d9c141+0x5e9>
    c0e4:	e9dff06f          	j	bf80 <erisc.cc.d3d9c141+0x50d>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:341
                            if (has_multi_buffers) {
    c0e8:	00100793          	li	a5, 1
    c0ec:	0f27fa63          	bgeu	a5, s2, c1e0 <erisc.cc.d3d9c141+0x76d>
    c0f0:	000207b7          	lui	a5, 0x20
    c0f4:	4a078793          	addi	a5, a5, 1184 # 204a0 <risc_chip_specific.cc.5b7d4a1c+0x14c4>
    c0f8:	00f12c23          	sw	a5, 24(sp)
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    c0fc:	000107b7          	lui	a5, 0x10
    c100:	fff78793          	addi	a5, a5, -1 # ffff <dram_input_stream_state+0x177>
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    c104:	ffb21d37          	lui	s10, 0xffb21
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:343
                                for (int b = 1; b < cmd_info_num_buffers; b++) {
    c108:	00100d93          	li	s11, 1
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:185
    c10c:	00f12e23          	sw	a5, 28(sp)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c110:	c28d0d13          	addi	s10, s10, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:346
                                    queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    c114:	42a9c503          	lbu	a0, 1066(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:343
                                for (int b = 1; b < cmd_info_num_buffers; b++) {
    c118:	0d2dd463          	bge	s11, s2, c1e0 <erisc.cc.d3d9c141+0x76d>
    c11c:	01812783          	lw	a5, 24(sp)
    c120:	003d9593          	slli	a1, s11, 0x3
    c124:	00f585b3          	add	a1, a1, a5
risc_get_noc_addr_from_dram_ptr_l1_with_l1_ptr(unsigned long volatile* rvtt_l1_ptr, unsigned long long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:184
  uint64_t dram_addr_offset_lo = noc_read_dest_buf_ptr[0];
    c128:	0005a603          	lw	a2, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:185
  uint64_t dram_addr_offset_hi = noc_read_dest_buf_ptr[1] & 0xFFFF;
    c12c:	0045a783          	lw	a5, 4(a1)
    c130:	01c12703          	lw	a4, 28(sp)
    c134:	00e7f733          	and	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    c138:	0045a783          	lw	a5, 4(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    c13c:	0045a683          	lw	a3, 4(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    c140:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    c144:	0166d693          	srli	a3, a3, 0x16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:187
  dram_coord_x = (noc_read_dest_buf_ptr[1] >> 16) & 0x3F;
    c148:	03f7f793          	andi	a5, a5, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.h:188
  dram_coord_y = (noc_read_dest_buf_ptr[1] >> 22) & 0x3F;
    c14c:	03f6f693          	andi	a3, a3, 63
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:346
                                    queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    c150:	06050663          	beqz	a0, c1bc <erisc.cc.d3d9c141+0x749>
    c154:	0000f5b7          	lui	a1, 0xf
    c158:	4175c583          	lbu	a1, 1047(a1) # f417 <noc_size_y>
    c15c:	fff58593          	addi	a1, a1, -1
    c160:	40d586b3          	sub	a3, a1, a3
    c164:	0000f5b7          	lui	a1, 0xf
    c168:	4165c583          	lbu	a1, 1046(a1) # f416 <noc_size_x>
    c16c:	00a69693          	slli	a3, a3, 0xa
    c170:	fff58593          	addi	a1, a1, -1
    c174:	40f587b3          	sub	a5, a1, a5
    c178:	00479793          	slli	a5, a5, 0x4
    c17c:	00f767b3          	or	a5, a4, a5
    c180:	00d7e6b3          	or	a3, a5, a3
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c184:	01051793          	slli	a5, a0, 0x10
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:346
    c188:	02c12423          	sw	a2, 40(sp)
    c18c:	02d12623          	sw	a3, 44(sp)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
    c190:	01a787b3          	add	a5, a5, s10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    c194:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:347
                                    while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    c198:	fe071ee3          	bnez	a4, c194 <erisc.cc.d3d9c141+0x721>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:348
                                    if (varinst_cmd){
    c19c:	00412783          	lw	a5, 4(sp)
    c1a0:	0007c783          	lbu	a5, 0(a5)
    c1a4:	02078063          	beqz	a5, c1c4 <erisc.cc.d3d9c141+0x751>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:349
                                        run_varinst_cmd_dram_rmw(cmd.varinst_cmd_info, queue_addr_ptr, header_addr, header_addr_ptr);
    c1a8:	02810593          	addi	a1, sp, 40
    c1ac:	03010513          	addi	a0, sp, 48
    c1b0:	c34ff0ef          	jal	ra, b5e4 <run_varinst_cmd_dram_rmw(epoch_queue::VarinstCmdInfo&, unsigned long long&, unsigned long, unsigned long volatile* rvtt_l1_ptr) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:343
                                for (int b = 1; b < cmd_info_num_buffers; b++) {
    c1b4:	001d8d93          	addi	s11, s11, 1
    c1b8:	f5dff06f          	j	c114 <erisc.cc.d3d9c141+0x6a1>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:346
                                    queue_addr_ptr = NOC_XY_ADDR(NOC_X(dram_coord_x), NOC_Y(dram_coord_y), dram_addr_offset);
    c1bc:	00a69693          	slli	a3, a3, 0xa
    c1c0:	fb9ff06f          	j	c178 <erisc.cc.d3d9c141+0x705>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:351
                                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(header_addr_ptr[0])), queue_addr_ptr, DRAM_HEADER_SIZE,
    c1c4:	000275b7          	lui	a1, 0x27
    c1c8:	00000813          	li	a6, 0
    c1cc:	00100793          	li	a5, 1
    c1d0:	02000713          	li	a4, 32
    c1d4:	ca058593          	addi	a1, a1, -864 # 26ca0 <noc_nonblocking_api.cc.88b5909b+0x3f1c>
    c1d8:	d19fd0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
    c1dc:	fd9ff06f          	j	c1b4 <erisc.cc.d3d9c141+0x741>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:356
                            while (!ncrisc_noc_nonposted_writes_flushed_l1(loading_noc, NCRISC_WR_DEF_TRID));
    c1e0:	42a9c783          	lbu	a5, 1066(s3)
NOC_STATUS_READ_REG_L1(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:70
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    c1e4:	ffb20737          	lui	a4, 0xffb20
    c1e8:	01079793          	slli	a5, a5, 0x10
    c1ec:	24070713          	addi	a4, a4, 576 # ffb20240 <TENSIX_MAILBOX_BASE+0xffc60240>
    c1f0:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:72
  return *ptr;
    c1f4:	0007a703          	lw	a4, 0(a5)
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:356
    c1f8:	fe071ee3          	bnez	a4, c1f4 <erisc.cc.d3d9c141+0x781>
    c1fc:	d8dff06f          	j	bf88 <erisc.cc.d3d9c141+0x515>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:365
                            l1_ptrs->wr_queue_update_stride = reader_index + 1;
    c200:	01412783          	lw	a5, 20(sp)
    c204:	d99ff06f          	j	bf9c <erisc.cc.d3d9c141+0x529>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:377
                    state[k] = 0;
    c208:	000a0023          	sb	zero, 0(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:406
                    all_done = false;
    c20c:	00000d13          	li	s10, 0
    c210:	b1dff06f          	j	bd2c <erisc.cc.d3d9c141+0x2b9>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:381
            } else if (state[k] == 3) {
    c214:	00300793          	li	a5, 3
    c218:	b0f71ae3          	bne	a4, a5, bd2c <erisc.cc.d3d9c141+0x2b9>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    c21c:	11d007b7          	lui	a5, 0x11d00
    c220:	ffb20737          	lui	a4, 0xffb20
    c224:	00378793          	addi	a5, a5, 3 # 11d00003 <noc_nonblocking_api.cc.88b5909b+0x11cdd27f>
    c228:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:386
                uint32_t rd_stride = l1_ptrs->rd_queue_update_stride;
    c22c:	014bd703          	lhu	a4, 20(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:388
                if (!has_multi_readers || (reader_index + DRAM_STRIDE_WRAP_BIT) == rd_stride) {
    c230:	0765f463          	bgeu	a1, s6, c298 <erisc.cc.d3d9c141+0x825>
    c234:	000047b7          	lui	a5, 0x4
    c238:	00fa87b3          	add	a5, s5, a5
    c23c:	daf718e3          	bne	a4, a5, bfec <erisc.cc.d3d9c141+0x579>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:390
                        if (reader_index == total_readers-1) {
    c240:	fffb0793          	addi	a5, s6, -1
    c244:	04fa9e63          	bne	s5, a5, c2a0 <erisc.cc.d3d9c141+0x82d>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:391
                            l1_ptrs->wr_queue_update_stride = 0;
    c248:	020b9a23          	sh	zero, 52(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:392
                            l1_ptrs->rd_queue_update_stride = 0;
    c24c:	000b9a23          	sh	zero, 20(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:398
                        while (!ncrisc_noc_fast_write_ok_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF));
    c250:	42a9c503          	lbu	a0, 1066(s3)
NOC_CMD_BUF_READ_REG_L1(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:63
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    c254:	ffb21737          	lui	a4, 0xffb21
    c258:	01051793          	slli	a5, a0, 0x10
    c25c:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    c260:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:65
  return *ptr;
    c264:	0007a703          	lw	a4, 0(a5) # 4000 <__trisc0_size>
run_dram_queue_update(void*, unsigned long volatile*, unsigned long long&, unsigned long&, unsigned long long&, unsigned char&, bool&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:398
    c268:	fe071ee3          	bnez	a4, c264 <erisc.cc.d3d9c141+0x7f1>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:399
                        ncrisc_noc_fast_write_l1(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_queue_update_stride)), queue_sync_ptr+DRAM_BUF_QUEUE_UPDATE_STRIDE_OFFSET, 2,
    c26c:	01448613          	addi	a2, s1, 20
    c270:	009636b3          	sltu	a3, a2, s1
    c274:	008686b3          	add	a3, a3, s0
    c278:	000215b7          	lui	a1, 0x21
    c27c:	00c12403          	lw	s0, 12(sp)
    c280:	cd458593          	addi	a1, a1, -812 # 20cd4 <risc_chip_specific.cc.5b7d4a1c+0x1cf8>
    c284:	00000813          	li	a6, 0
    c288:	00100793          	li	a5, 1
    c28c:	00200713          	li	a4, 2
    c290:	00b405b3          	add	a1, s0, a1
    c294:	c5dfd0ef          	jal	ra, 9ef0 <ncrisc_noc_fast_write_l1(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:403
                    state[k] = 4;
    c298:	00400793          	li	a5, 4
    c29c:	a8dff06f          	j	bd28 <erisc.cc.d3d9c141+0x2b5>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:394
                            l1_ptrs->wr_queue_update_stride = DRAM_STRIDE_WRAP_BIT + reader_index + 1;
    c2a0:	01012783          	lw	a5, 16(sp)
    c2a4:	02fb9a23          	sh	a5, 52(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:395
                            l1_ptrs->rd_queue_update_stride = DRAM_STRIDE_WRAP_BIT + reader_index + 1;
    c2a8:	00fb9a23          	sh	a5, 20(s7)
    c2ac:	fa5ff06f          	j	c250 <erisc.cc.d3d9c141+0x7dd>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:182
    bool single_sync_mode = allocate_queue || (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable);
    c2b0:	04815783          	lhu	a5, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:181
    bool allocate_queue = !varinst_cmd && (cmd.queue_update_info.update_mask == 0);
    c2b4:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:182
    bool single_sync_mode = allocate_queue || (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable);
    c2b8:	0017f793          	andi	a5, a5, 1
    c2bc:	00f12423          	sw	a5, 8(sp)
    c2c0:	8a9ff06f          	j	bb68 <erisc.cc.d3d9c141+0xf5>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:185
    if (!varinst_cmd && !allocate_queue && loop_iteration != 0) {
    c2c4:	0005a783          	lw	a5, 0(a1)
    c2c8:	fe079663          	bnez	a5, bab4 <erisc.cc.d3d9c141+0x41>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:182
    bool single_sync_mode = allocate_queue || (varinst_cmd && cmd.varinst_cmd_info.sync_loc_enable);
    c2cc:	00012423          	sw	zero, 8(sp)
    c2d0:	899ff06f          	j	bb68 <erisc.cc.d3d9c141+0xf5>

0000c2d4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]>:
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:974
#endif
    }
  }
}

void process_dram_write_moves_raw_data_l1(dram_output_stream_state_t* curr_dram_output_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue, uint32_t stream_id,
    c2d4:	fe010113          	addi	sp, sp, -32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:977
                                       uint16_t data_send_chunk_size_tiles, uint32_t output_vc, uint32_t data_send_chunk_size_bytes, uint64_t dram_buf_addr,
                                       uint32_t& stream_rd_ptr_byte, uint32_t dram_buf_size_bytes, bool& full_q_slot_sent) {
  uint32_t untilize_copy_iters = curr_dram_output_stream_state->stream_info->untilize_copy_iters;  
    c2d8:	05c52e03          	lw	t3, 92(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:974
void process_dram_write_moves_raw_data_l1(dram_output_stream_state_t* curr_dram_output_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue, uint32_t stream_id,
    c2dc:	00812e23          	sw	s0, 28(sp)
    c2e0:	00912c23          	sw	s1, 24(sp)
    c2e4:	01212a23          	sw	s2, 20(sp)
    c2e8:	01312823          	sw	s3, 16(sp)
    c2ec:	01412623          	sw	s4, 12(sp)
    c2f0:	01512423          	sw	s5, 8(sp)
    c2f4:	01612223          	sw	s6, 4(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:977
  uint32_t untilize_copy_iters = curr_dram_output_stream_state->stream_info->untilize_copy_iters;  
    c2f8:	084e4f83          	lbu	t6, 132(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:974
void process_dram_write_moves_raw_data_l1(dram_output_stream_state_t* curr_dram_output_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue, uint32_t stream_id,
    c2fc:	02012303          	lw	t1, 32(sp)
    c300:	02412383          	lw	t2, 36(sp)
    c304:	00100293          	li	t0, 1
    c308:	000f8463          	beqz	t6, c310 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x3c>
    c30c:	000f8293          	mv	t0, t6
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c310:	ffb21eb7          	lui	t4, 0xffb21
    c314:	c28eae03          	lw	t3, -984(t4) # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
risc_wait_for_cmd_buf(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:187
  while (!ncrisc_noc_fast_write_ok(noc, cmd_buf));
    c318:	fe0e1ee3          	bnez	t3, c314 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x40>
ncrisc_noc_blitz_write_setup(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:229
    NOC_CMD_STATIC_VC(vc) |
    c31c:	00d69693          	slli	a3, a3, 0xd
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:226
  uint32_t noc_cmd_field =
    c320:	0926e693          	ori	a3, a3, 146
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c324:	ffb20e37          	lui	t3, 0xffb20
    c328:	028e2e83          	lw	t4, 40(t3) # ffb20028 <TENSIX_MAILBOX_BASE+0xffc60028>
ncrisc_noc_blitz_write_setup(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:232
  while (!ncrisc_noc_fast_write_ok(noc, cmd_buf)); 
    c32c:	fe0e9ee3          	bnez	t4, c328 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x54>
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c330:	00de2e23          	sw	a3, 28(t3)
    c334:	02ee2023          	sw	a4, 32(t3)
    c338:	010e2823          	sw	a6, 16(t3)
    c33c:	000e2c23          	sw	zero, 24(t3)
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:986
  uint32_t num_times_to_write = mulsi3(data_send_chunk_size_tiles,untilize_copy_iters);
  risc_wait_for_cmd_buf(0, NCRISC_SMALL_TXN_CMD_BUF); //NOP on Grayskull, Worhmole A0.
                                                      //Make sure there are no long transactions on common rd/wr command buffer on Wormhole B0.
                                                      //We cannot have two NOC command buffers active simultaneously.
  ncrisc_noc_blitz_write_setup(0, NCRISC_WR_CMD_BUF_0, dram_buf_addr, data_send_chunk_size_bytes, output_vc, num_times_to_write, NCRISC_WR_DEF_TRID);
  if (!single_row_copy)
    c340:	020f8063          	beqz	t6, c360 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x8c>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c344:	ffb20e37          	lui	t3, 0xffb20
    c348:	428e2e83          	lw	t4, 1064(t3) # ffb20428 <TENSIX_MAILBOX_BASE+0xffc60428>
ncrisc_noc_blitz_write_setup(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:232
  while (!ncrisc_noc_fast_write_ok(noc, cmd_buf)); 
    c34c:	fe0e9ee3          	bnez	t4, c348 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x74>
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c350:	40de2e23          	sw	a3, 1052(t3)
    c354:	42ee2023          	sw	a4, 1056(t3)
    c358:	410e2823          	sw	a6, 1040(t3)
    c35c:	400e2c23          	sw	zero, 1048(t3)
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:974
void process_dram_write_moves_raw_data_l1(dram_output_stream_state_t* curr_dram_output_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_issue, uint32_t stream_id,
    c360:	00000413          	li	s0, 0
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c364:	ffb20837          	lui	a6, 0xffb20
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c368:	00100f13          	li	t5, 1
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:988
    ncrisc_noc_blitz_write_setup(0, NCRISC_WR_CMD_BUF_1, dram_buf_addr, data_send_chunk_size_bytes, output_vc, num_times_to_write, NCRISC_WR_DEF_TRID);
  for (uint32_t untilize_tiles = 0; untilize_tiles < data_send_chunk_size_tiles; untilize_tiles++) {
    c36c:	1ec47a63          	bgeu	s0, a2, c560 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x28c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:990
    uint32_t dram_wrptr_byte;
    untilize_copy<0>(next_dram_q_issue, dram_buf_addr, curr_dram_output_stream_state->stream_buf_addr_byte, stream_rd_ptr_byte,
    c370:	01452983          	lw	s3, 20(a0)
    c374:	0008ae83          	lw	t4, 0(a7)
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:297
  uint32_t skip_col_bytes_lw = curr_dram_output_stream_state->skip_col_bytes;
  uint32_t dram_wrptr_byte = next_dram_q_issue->dram_ptr_issued_byte;      

  cmd_buf_a_ctrl = NOC_CMD_BUF_READ_REG(NOC_ID, NCRISC_WR_CMD_BUF_0, NOC_CMD_CTRL);
  dram_dest_addr = ((uint32_t)dram_buf_addr) + dram_wrptr_byte;
  if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) == 0) {
    c378:	0045c483          	lbu	s1, 4(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:293
  uint32_t dram_wrptr_byte = next_dram_q_issue->dram_ptr_issued_byte;      
    c37c:	0185a683          	lw	a3, 24(a1)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c380:	02882903          	lw	s2, 40(a6) # ffb20028 <TENSIX_MAILBOX_BASE+0xffc60028>
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:297
  if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) == 0) {
    c384:	0084f493          	andi	s1, s1, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:296
  dram_dest_addr = ((uint32_t)dram_buf_addr) + dram_wrptr_byte;
    c388:	00f68e33          	add	t3, a3, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:297
  if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) == 0) {
    c38c:	00049463          	bnez	s1, c394 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0xc0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:298
    dram_dest_addr += DRAM_BUF_DATA_OFFSET;
    c390:	020e0e13          	addi	t3, t3, 32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:300
  }
  stream_rd_addr = stream_buf_addr + stream_rd_ptr_byte;
    c394:	01d98eb3          	add	t4, s3, t4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:302

  if (single_row_copy) {
    c398:	060f9463          	bnez	t6, c400 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x12c>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
    c39c:	02882903          	lw	s2, 40(a6)
    c3a0:	02880493          	addi	s1, a6, 40
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:303
    while(NOC_CMD_BUF_READ_REG(NOC_ID, NCRISC_WR_CMD_BUF_0, NOC_CMD_CTRL));
    c3a4:	fe091ce3          	bnez	s2, c39c <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0xc8>
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c3a8:	01d82023          	sw	t4, 0(a6)
    c3ac:	01c82623          	sw	t3, 12(a6)
    c3b0:	01e4a023          	sw	t5, 0(s1)
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:996
                     data_send_chunk_size_bytes, curr_dram_output_stream_state, &dram_wrptr_byte, untilize_copy_iters, single_row_copy);
#if defined(PERF_DUMP) && PERF_DUMP_LEVEL > 1
    risc::record_timestamp(risc::perf_event::DRAM_WRITE_SENT | (stream_id << 16) | data_send_chunk_size_bytes);
#endif

    uint32_t log_2x_untilize_copy_iters = curr_dram_output_stream_state->stream_info->log_2x_untilize_copy_iters;  
    c3b4:	05c52e03          	lw	t3, 92(a0)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c3b8:	0008a483          	lw	s1, 0(a7)
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:996
    c3bc:	085e4e03          	lbu	t3, 133(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:997
    stream_rd_ptr_byte = buf_ptr_inc_wrap(stream_rd_ptr_byte, data_send_chunk_size_bytes << log_2x_untilize_copy_iters, curr_dram_output_stream_state->stream_buf_size_bytes);
    c3c0:	01052e83          	lw	t4, 16(a0)
    c3c4:	01c71e33          	sll	t3, a4, t3
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
    c3c8:	009e0e33          	add	t3, t3, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c3cc:	01de6463          	bltu	t3, t4, c3d4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x100>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c3d0:	41de0e33          	sub	t3, t3, t4
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:997
    c3d4:	01c8a023          	sw	t3, 0(a7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1002

    enum move_ptr_along_t {COLUMN, ROW, ZCOLUMN, ZROW, BATCH} move_ptr_along; 

    move_ptr_along = COLUMN;
    uint32_t c_dim_count = curr_dram_output_stream_state->c_dim_count;
    c3d8:	04655e03          	lhu	t3, 70(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1005
    c_dim_count++;
    curr_dram_output_stream_state->c_dim_count = c_dim_count;
    if (c_dim_count == curr_dram_output_stream_state->c_dim_size) {
    c3dc:	04455e83          	lhu	t4, 68(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1004
    curr_dram_output_stream_state->c_dim_count = c_dim_count;
    c3e0:	001e0e13          	addi	t3, t3, 1
    c3e4:	05c51323          	sh	t3, 70(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1005
    if (c_dim_count == curr_dram_output_stream_state->c_dim_size) {
    c3e8:	07de0a63          	beq	t3, t4, c45c <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x188>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c3ec:	00d706b3          	add	a3, a4, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c3f0:	1066f263          	bgeu	a3, t1, c4f4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x220>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1064
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
      curr_dram_output_stream_state->prev_zc_ptr_bytes = dram_wrptr_byte;
      curr_dram_output_stream_state->prev_zr_ptr_bytes = dram_wrptr_byte;
      curr_dram_output_stream_state->prev_batch_ptr_bytes = dram_wrptr_byte;
    }
    next_dram_q_issue->dram_ptr_issued_byte = dram_wrptr_byte;
    c3f4:	00d5ac23          	sw	a3, 24(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:988
  for (uint32_t untilize_tiles = 0; untilize_tiles < data_send_chunk_size_tiles; untilize_tiles++) {
    c3f8:	00140413          	addi	s0, s0, 1
    c3fc:	f71ff06f          	j	c36c <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x98>
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:292
  uint32_t skip_col_bytes_lw = curr_dram_output_stream_state->skip_col_bytes;
    c400:	02052a83          	lw	s5, 32(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:306
    ncrisc_noc_blitz_write(NOC_ID, NCRISC_WR_CMD_BUF_0, stream_rd_addr, dram_dest_addr);
  } else {
    for (uint32_t iter = 0; iter < untilize_copy_iters; iter++) {
    c404:	00000493          	li	s1, 0
    c408:	015e09b3          	add	s3, t3, s5
    c40c:	01d70a33          	add	s4, a4, t4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:315
        ncrisc_noc_blitz_write(NOC_ID, NCRISC_WR_CMD_BUF_0, stream_rd_addr, dram_dest_addr);

        dram_dest_addr += skip_col_bytes_lw;
        stream_rd_addr += data_send_chunk_size_bytes;
      } else {
        while(NOC_CMD_BUF_READ_REG(NOC_ID, NCRISC_WR_CMD_BUF_0, NOC_CMD_CTRL));
    c410:	02091e63          	bnez	s2, c44c <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x178>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c414:	42882903          	lw	s2, 1064(a6)
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c418:	01d82023          	sw	t4, 0(a6)
    c41c:	01c82623          	sw	t3, 12(a6)
    c420:	03e82423          	sw	t5, 40(a6)
    c424:	01598e33          	add	t3, s3, s5
    c428:	00ea0eb3          	add	t4, s4, a4
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:333
        ncrisc_noc_blitz_write(NOC_ID, NCRISC_WR_CMD_BUF_1, stream_rd_addr, dram_dest_addr);

        dram_dest_addr += skip_col_bytes_lw;
        stream_rd_addr += data_send_chunk_size_bytes;
      } else {
        while (NOC_CMD_BUF_READ_REG(NOC_ID, NCRISC_WR_CMD_BUF_1, NOC_CMD_CTRL));
    c42c:	02091463          	bnez	s2, c454 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x180>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c430:	02882903          	lw	s2, 40(a6)
NOC_CMD_BUF_WRITE_REG(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:38
  *ptr = val;
    c434:	41482023          	sw	s4, 1024(a6)
    c438:	41382623          	sw	s3, 1036(a6)
    c43c:	43e82423          	sw	t5, 1064(a6)
void untilize_copy<0>(dram_q_state_t* rvtt_l1_ptr, unsigned long long, unsigned long, unsigned long, unsigned long, dram_output_stream_state_t*, unsigned long*, unsigned long, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:306
    for (uint32_t iter = 0; iter < untilize_copy_iters; iter++) {
    c440:	00148493          	addi	s1, s1, 1
    c444:	fc9292e3          	bne	t0, s1, c408 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x134>
    c448:	f6dff06f          	j	c3b4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0xe0>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    c44c:	02882903          	lw	s2, 40(a6)
    c450:	fc1ff06f          	j	c410 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x13c>
    c454:	42882903          	lw	s2, 1064(a6)
    c458:	fd5ff06f          	j	c42c <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x158>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1010
      uint32_t r_dim_count = curr_dram_output_stream_state->r_dim_count;
    c45c:	04a55e03          	lhu	t3, 74(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1013
      if (r_dim_count == curr_dram_output_stream_state->r_dim_size) {
    c460:	04855e83          	lhu	t4, 72(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1012
      curr_dram_output_stream_state->r_dim_count = r_dim_count;
    c464:	001e0e13          	addi	t3, t3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1006
      curr_dram_output_stream_state->c_dim_count = 0;
    c468:	04051323          	sh	zero, 70(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1012
      curr_dram_output_stream_state->r_dim_count = r_dim_count;
    c46c:	05c51523          	sh	t3, 74(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1009
      dram_wrptr_byte = curr_dram_output_stream_state->prev_row_ptr_bytes;
    c470:	03452683          	lw	a3, 52(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1013
      if (r_dim_count == curr_dram_output_stream_state->r_dim_size) {
    c474:	09de1463          	bne	t3, t4, c4fc <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x228>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1018
        uint32_t zc_dim_count = curr_dram_output_stream_state->zc_dim_count;
    c478:	04e55e03          	lhu	t3, 78(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1021
        if (zc_dim_count == curr_dram_output_stream_state->zc_dim_size) {
    c47c:	04c55e83          	lhu	t4, 76(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1020
        curr_dram_output_stream_state->zc_dim_count = zc_dim_count;
    c480:	001e0e13          	addi	t3, t3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1014
        curr_dram_output_stream_state->r_dim_count = 0;
    c484:	04051523          	sh	zero, 74(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1020
        curr_dram_output_stream_state->zc_dim_count = zc_dim_count;
    c488:	05c51723          	sh	t3, 78(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1017
        dram_wrptr_byte = curr_dram_output_stream_state->prev_zc_ptr_bytes;
    c48c:	03852683          	lw	a3, 56(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1021
        if (zc_dim_count == curr_dram_output_stream_state->zc_dim_size) {
    c490:	09de1063          	bne	t3, t4, c510 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x23c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1026
          uint32_t zr_dim_count = curr_dram_output_stream_state->zr_dim_count;
    c494:	05255e03          	lhu	t3, 82(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1029
          if (zr_dim_count == curr_dram_output_stream_state->zr_dim_size) {
    c498:	05055e83          	lhu	t4, 80(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1028
          curr_dram_output_stream_state->zr_dim_count = zr_dim_count;
    c49c:	001e0e13          	addi	t3, t3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1022
          curr_dram_output_stream_state->zc_dim_count = 0;
    c4a0:	04051723          	sh	zero, 78(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1028
          curr_dram_output_stream_state->zr_dim_count = zr_dim_count;
    c4a4:	05c51923          	sh	t3, 82(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1025
          dram_wrptr_byte = curr_dram_output_stream_state->prev_zr_ptr_bytes;
    c4a8:	03c52683          	lw	a3, 60(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1029
          if (zr_dim_count == curr_dram_output_stream_state->zr_dim_size) {
    c4ac:	09de1a63          	bne	t3, t4, c540 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x26c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1034
            uint32_t batch_dim_count = next_dram_q_issue->dram_num_partial_q_slot_issued_tiles;
    c4b0:	0105ae03          	lw	t3, 16(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1030
            curr_dram_output_stream_state->zr_dim_count = 0;
    c4b4:	04051923          	sh	zero, 82(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1033
            dram_wrptr_byte = curr_dram_output_stream_state->prev_batch_ptr_bytes;
    c4b8:	04052683          	lw	a3, 64(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1035
            batch_dim_count++;
    c4bc:	001e0e93          	addi	t4, t3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1037
            full_q_slot_sent = (batch_dim_count == curr_dram_output_stream_state->q_slot_size_tiles);
    c4c0:	05452e03          	lw	t3, 84(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1036
            next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = batch_dim_count;
    c4c4:	01d5a823          	sw	t4, 16(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1037
            full_q_slot_sent = (batch_dim_count == curr_dram_output_stream_state->q_slot_size_tiles);
    c4c8:	41de0e33          	sub	t3, t3, t4
    c4cc:	001e3e13          	seqz	t3, t3
    c4d0:	01c38023          	sb	t3, 0(t2)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c4d4:	02852e03          	lw	t3, 40(a0)
    c4d8:	01c686b3          	add	a3, a3, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c4dc:	0466fe63          	bgeu	a3, t1, c538 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x264>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1059
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
    c4e0:	02d52a23          	sw	a3, 52(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1060
      curr_dram_output_stream_state->prev_zc_ptr_bytes = dram_wrptr_byte;
    c4e4:	02d52c23          	sw	a3, 56(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1061
      curr_dram_output_stream_state->prev_zr_ptr_bytes = dram_wrptr_byte;
    c4e8:	02d52e23          	sw	a3, 60(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1062
      curr_dram_output_stream_state->prev_batch_ptr_bytes = dram_wrptr_byte;
    c4ec:	04d52023          	sw	a3, 64(a0)
    c4f0:	f05ff06f          	j	c3f4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c4f4:	406686b3          	sub	a3, a3, t1
    c4f8:	efdff06f          	j	c3f4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c4fc:	02452e03          	lw	t3, 36(a0)
    c500:	01c686b3          	add	a3, a3, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c504:	0266f263          	bgeu	a3, t1, c528 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x254>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1047
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
    c508:	02d52a23          	sw	a3, 52(a0)
    c50c:	ee9ff06f          	j	c3f4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c510:	02c52e03          	lw	t3, 44(a0)
    c514:	01c686b3          	add	a3, a3, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c518:	0066fc63          	bgeu	a3, t1, c530 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x25c>
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1050
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
    c51c:	02d52a23          	sw	a3, 52(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1051
      curr_dram_output_stream_state->prev_zc_ptr_bytes = dram_wrptr_byte;
    c520:	02d52c23          	sw	a3, 56(a0)
    c524:	ed1ff06f          	j	c3f4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c528:	406686b3          	sub	a3, a3, t1
    c52c:	fddff06f          	j	c508 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x234>
    c530:	406686b3          	sub	a3, a3, t1
    c534:	fe9ff06f          	j	c51c <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x248>
    c538:	406686b3          	sub	a3, a3, t1
    c53c:	fa5ff06f          	j	c4e0 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x20c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    c540:	03052e03          	lw	t3, 48(a0)
    c544:	01c686b3          	add	a3, a3, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    c548:	0066e463          	bltu	a3, t1, c550 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x27c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    c54c:	406686b3          	sub	a3, a3, t1
process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1054
      curr_dram_output_stream_state->prev_row_ptr_bytes = dram_wrptr_byte;
    c550:	02d52a23          	sw	a3, 52(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1055
      curr_dram_output_stream_state->prev_zc_ptr_bytes = dram_wrptr_byte;
    c554:	02d52c23          	sw	a3, 56(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1056
      curr_dram_output_stream_state->prev_zr_ptr_bytes = dram_wrptr_byte;
    c558:	02d52e23          	sw	a3, 60(a0)
    c55c:	e99ff06f          	j	c3f4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]+0x120>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:1066
  }
}
    c560:	01c12403          	lw	s0, 28(sp)
    c564:	01812483          	lw	s1, 24(sp)
    c568:	01412903          	lw	s2, 20(sp)
    c56c:	01012983          	lw	s3, 16(sp)
    c570:	00c12a03          	lw	s4, 12(sp)
    c574:	00812a83          	lw	s5, 8(sp)
    c578:	00412b03          	lw	s6, 4(sp)
    c57c:	02010113          	addi	sp, sp, 32
    c580:	00008067          	ret

0000c584 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]>:
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:11
void run_epoch(
    c584:	ed010113          	addi	sp, sp, -304
    c588:	12912223          	sw	s1, 292(sp)
    c58c:	12112623          	sw	ra, 300(sp)
    c590:	12812423          	sw	s0, 296(sp)
    c594:	13212023          	sw	s2, 288(sp)
    c598:	11312e23          	sw	s3, 284(sp)
    c59c:	11412c23          	sw	s4, 280(sp)
    c5a0:	11512a23          	sw	s5, 276(sp)
    c5a4:	11612823          	sw	s6, 272(sp)
    c5a8:	11712623          	sw	s7, 268(sp)
    c5ac:	11812423          	sw	s8, 264(sp)
    c5b0:	11912223          	sw	s9, 260(sp)
    c5b4:	11a12023          	sw	s10, 256(sp)
    c5b8:	0fb12e23          	sw	s11, 252(sp)
    c5bc:	00068493          	mv	s1, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:29
    if (!skip_initial_epoch_dram_load) {
    c5c0:	04051463          	bnez	a0, c608 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x84>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    c5c4:	100007b7          	lui	a5, 0x10000
    c5c8:	00278793          	addi	a5, a5, 2 # 10000002 <noc_nonblocking_api.cc.88b5909b+0xffdd27e>
    c5cc:	00058413          	mv	s0, a1
    c5d0:	ffb20737          	lui	a4, 0xffb20
    c5d4:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
    c5d8:	00060593          	mv	a1, a2
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:33
        risc_epoch_load(dram_next_epoch_ptr);
    c5dc:	00040513          	mv	a0, s0
    c5e0:	02c12823          	sw	a2, 48(sp)
    c5e4:	ffbf4097          	auipc	ra, 0xffbf4
    c5e8:	2b0080e7          	jalr	688(ra) # ffc00894 <TENSIX_MAILBOX_BASE+0xffd40894>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:34
        uint32_t overlay_blob_extra_size = RISC_EPOCH_INFO_PTR->overlay_blob_extra_size;
    c5ec:	000207b7          	lui	a5, 0x20
    c5f0:	49c7a603          	lw	a2, 1180(a5) # 2049c <risc_chip_specific.cc.5b7d4a1c+0x14c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:35
        if (overlay_blob_extra_size > 0)
    c5f4:	00060a63          	beqz	a2, c608 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x84>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:36
          risc_extra_overlay_blob_load(dram_next_epoch_ptr, overlay_blob_extra_size);
    c5f8:	03012583          	lw	a1, 48(sp)
    c5fc:	00040513          	mv	a0, s0
    c600:	ffbf4097          	auipc	ra, 0xffbf4
    c604:	2f8080e7          	jalr	760(ra) # ffc008f8 <TENSIX_MAILBOX_BASE+0xffd408f8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:44
    RISC_EPOCH_INFO_PTR->end_program = 0;
    c608:	00020937          	lui	s2, 0x20
    c60c:	080907a3          	sb	zero, 143(s2) # 2008f <risc_chip_specific.cc.5b7d4a1c+0x10b3>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:45
    if (RISC_EPOCH_INFO_PTR->overlay_valid) {
    c610:	30895783          	lhu	a5, 776(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:44
    RISC_EPOCH_INFO_PTR->end_program = 0;
    c614:	08090413          	addi	s0, s2, 128
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:45
    if (RISC_EPOCH_INFO_PTR->overlay_valid) {
    c618:	00079463          	bnez	a5, c620 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x9c>
    c61c:	2b10206f          	j	f0cc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2b48>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:51
        init_ncrisc_streams(0, dram_decouple_mask);
    c620:	00048593          	mv	a1, s1
    c624:	00000513          	li	a0, 0
    c628:	a94fd0ef          	jal	ra, 98bc <init_erisc_streams(void*, unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:57
        risc_dram_stream_handler_init_l1(
    c62c:	a09fd0ef          	jal	ra, a034 <risc_dram_stream_handler_init_l1(void*, unsigned long volatile&, unsigned long volatile&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]>
risc_unpack_pack_stream_handler_init(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:491
  num_input_streams = RISC_EPOCH_INFO_PTR->num_inputs;
    c630:	08092883          	lw	a7, 128(s2)
    c634:	00011637          	lui	a2, 0x11
    c638:	4c060793          	addi	a5, a2, 1216 # 114c0 <num_output_streams+0x5fc>
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:258
  kernel_input_stream_state_t* prev_input_state_ptr = curr_input_state_ptr;
    c63c:	000106b7          	lui	a3, 0x10
    c640:	4c068713          	addi	a4, a3, 1216 # 104c0 <input_stream_state+0xe0>
    c644:	4c068693          	addi	a3, a3, 1216
    c648:	f2070713          	addi	a4, a4, -224
    c64c:	4c060613          	addi	a2, a2, 1216
get_operand_stream_tiles_acked_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:186
inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_operand_stream_tiles_received_ptr(uint32_t stream_id) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
}

inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_operand_stream_tiles_acked_ptr(uint32_t stream_id) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    c650:	00100837          	lui	a6, 0x100
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:259
  for (uint32_t input = 0; input < num_input_streams; input++) {
    c654:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:265
    curr_input_state_ptr->no_hw_clearing = ((input_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((input_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || ((input_stream_info->flags & STREAM_NCRISC_CLEAR) != 0) ||
    c658:	00100313          	li	t1, 1
    c65c:	00001e37          	lui	t3, 0x1
risc_unpack_pack_stream_handler_init(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:491
  num_input_streams = RISC_EPOCH_INFO_PTR->num_inputs;
    c660:	a117a023          	sw	a7, -1536(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:492
  num_output_streams = RISC_EPOCH_INFO_PTR->num_outputs;
    c664:	00442503          	lw	a0, 4(s0)
    c668:	02d12823          	sw	a3, 48(sp)
    c66c:	000106b7          	lui	a3, 0x10
    c670:	3e068693          	addi	a3, a3, 992 # 103e0 <input_stream_state>
    c674:	06d12e23          	sw	a3, 124(sp)
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:280
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_l1_ptr *)&sender_tiles_received[input_stream_info->eth_remote_fw_stream_id];
    c678:	03012683          	lw	a3, 48(sp)
    c67c:	08c12823          	sw	a2, 144(sp)
get_operand_stream_tiles_acked_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:186
    c680:	b4080813          	addi	a6, a6, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:276
    if (stream_type == datacopy_stream_type_t::PACKER) {
    c684:	00200e93          	li	t4, 2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:280
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_l1_ptr *)&sender_tiles_received[input_stream_info->eth_remote_fw_stream_id];
    c688:	c4068f13          	addi	t5, a3, -960
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:281
      curr_input_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)&sender_tiles_acked[curr_input_state_ptr->stream_id];
    c68c:	cc068f93          	addi	t6, a3, -832
risc_unpack_pack_stream_handler_init(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:492
  num_output_streams = RISC_EPOCH_INFO_PTR->num_outputs;
    c690:	a0a7a223          	sw	a0, -1532(a5)
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:257
  kernel_input_stream_state_t* curr_input_state_ptr = (kernel_input_stream_state_t*)input_stream_state;
    c694:	00070793          	mv	a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:259
  for (uint32_t input = 0; input < num_input_streams; input++) {
    c698:	10b88e63          	beq	a7, a1, c7b4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x230>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:260
    volatile epoch_stream_info_t tt_l1_ptr * input_stream_info = RISC_EPOCH_INFO_PTR->inputs[input];
    c69c:	01458713          	addi	a4, a1, 20
    c6a0:	00271713          	slli	a4, a4, 0x2
    c6a4:	00e40733          	add	a4, s0, a4
    c6a8:	00472603          	lw	a2, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:261
    curr_input_state_ptr->epoch_done = 0;
    c6ac:	000780a3          	sb	zero, 1(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:262
    curr_input_state_ptr->stream_id = input_stream_info->stream_id;
    c6b0:	00065703          	lhu	a4, 0(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:263
    curr_input_state_ptr->epoch_tiles_remaining_to_clear = input_stream_info->epoch_num_tiles;
    c6b4:	00862683          	lw	a3, 8(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:262
    curr_input_state_ptr->stream_id = input_stream_info->stream_id;
    c6b8:	00e79123          	sh	a4, 2(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:263
    curr_input_state_ptr->epoch_tiles_remaining_to_clear = input_stream_info->epoch_num_tiles;
    c6bc:	00d7a423          	sw	a3, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:264
    curr_input_state_ptr->num_iter_tiles = input_stream_info->num_iter_tiles;
    c6c0:	05862683          	lw	a3, 88(a2)
    c6c4:	00d7a823          	sw	a3, 16(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:265
    curr_input_state_ptr->no_hw_clearing = ((input_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((input_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || ((input_stream_info->flags & STREAM_NCRISC_CLEAR) != 0) ||
    c6c8:	03c62283          	lw	t0, 60(a2)
    c6cc:	00100693          	li	a3, 1
    c6d0:	0102f293          	andi	t0, t0, 16
    c6d4:	02029463          	bnez	t0, c6fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x178>
    c6d8:	03c62283          	lw	t0, 60(a2)
    c6dc:	0402f293          	andi	t0, t0, 64
    c6e0:	00029e63          	bnez	t0, c6fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x178>
    c6e4:	03c62283          	lw	t0, 60(a2)
    c6e8:	01c2f2b3          	and	t0, t0, t3
    c6ec:	00029863          	bnez	t0, c6fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x178>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:266
                                           ((input_stream_info->flags & STREAM_DRAM_NO_PUSH) != 0);
    c6f0:	03c62683          	lw	a3, 60(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:265
    curr_input_state_ptr->no_hw_clearing = ((input_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((input_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || ((input_stream_info->flags & STREAM_NCRISC_CLEAR) != 0) ||
    c6f4:	00b6d693          	srli	a3, a3, 0xb
    c6f8:	0016f693          	andi	a3, a3, 1
    c6fc:	00d78d23          	sb	a3, 26(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:267
    curr_input_state_ptr->epoch_tiles_cleared = 0;
    c700:	00079623          	sh	zero, 12(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:268
    curr_input_state_ptr->prev_phases_tiles_received = 0;
    c704:	00079723          	sh	zero, 14(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:269
    curr_input_state_ptr->tiles_to_clear = 0;
    c708:	0007aa23          	sw	zero, 20(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:271
    uint32_t stream_type = input_stream_info->datacopy_stream_type & 0x7;
    c70c:	00664283          	lbu	t0, 6(a2)
get_operand_stream_tiles_acked_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:186
    c710:	010706b3          	add	a3, a4, a6
    c714:	00c69693          	slli	a3, a3, 0xc
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:272
    curr_input_state_ptr->eth_fw_stream = 0;
    c718:	000782a3          	sb	zero, 5(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:273
    curr_input_state_ptr->msg_rd_addr = 0;
    c71c:	0207a623          	sw	zero, 44(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:274
    curr_input_state_ptr->msg_wr_addr = 0;
    c720:	0207a823          	sw	zero, 48(a5)
get_operand_stream_tiles_acked_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:186
    c724:	00c68393          	addi	t2, a3, 12
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:271
    uint32_t stream_type = input_stream_info->datacopy_stream_type & 0x7;
    c728:	0ff2f093          	zext.b	ra, t0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:276
    if (stream_type == datacopy_stream_type_t::PACKER) {
    c72c:	0072f293          	andi	t0, t0, 7
    c730:	03d29063          	bne	t0, t4, c750 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1cc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:277
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_stream_tiles_received_ptr(input_stream_info->datacopy_stream_id);
    c734:	00764703          	lbu	a4, 7(a2)
get_packer_stream_tiles_received_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:190
}

inline __attribute__((always_inline)) volatile uint32_t * tt_reg_ptr get_packer_stream_tiles_received_ptr(uint32_t stream_id) {
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX));
    c738:	01070733          	add	a4, a4, a6
    c73c:	00c71713          	slli	a4, a4, 0xc
    c740:	00470713          	addi	a4, a4, 4
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:286
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_stream_tiles_received_ptr(curr_input_state_ptr->stream_id);
    c744:	02e7aa23          	sw	a4, 52(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:287
      curr_input_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_stream_tiles_acked_ptr(curr_input_state_ptr->stream_id);
    c748:	0277ac23          	sw	t2, 56(a5)
    c74c:	03c0006f          	j	c788 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x204>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:279
    } else if (stream_type & 0x4) {
    c750:	0040f293          	andi	t0, ra, 4
    c754:	04028c63          	beqz	t0, c7ac <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x228>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:280
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_l1_ptr *)&sender_tiles_received[input_stream_info->eth_remote_fw_stream_id];
    c758:	03964603          	lbu	a2, 57(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:281
      curr_input_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)&sender_tiles_acked[curr_input_state_ptr->stream_id];
    c75c:	00271713          	slli	a4, a4, 0x2
    c760:	00ef8733          	add	a4, t6, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:282
      curr_input_state_ptr->eth_fw_stream = 1;
    c764:	006782a3          	sb	t1, 5(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:281
      curr_input_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)&sender_tiles_acked[curr_input_state_ptr->stream_id];
    c768:	02e7ac23          	sw	a4, 56(a5)
stream_get_remote_data_buf_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:130
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_BUF_START_REG_INDEX);
    c76c:	00c6a703          	lw	a4, 12(a3)
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:283
      curr_input_state_ptr->msg_wr_addr = stream_get_remote_data_buf_addr(curr_input_state_ptr->stream_id);
    c770:	02e7a823          	sw	a4, 48(a5)
stream_get_data_buf_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:126
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_START_REG_INDEX);
    c774:	0186a703          	lw	a4, 24(a3)
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:280
      curr_input_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_l1_ptr *)&sender_tiles_received[input_stream_info->eth_remote_fw_stream_id];
    c778:	00261613          	slli	a2, a2, 0x2
    c77c:	00cf0633          	add	a2, t5, a2
    c780:	02c7aa23          	sw	a2, 52(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:284
      curr_input_state_ptr->msg_rd_addr = stream_get_data_buf_addr(curr_input_state_ptr->stream_id);
    c784:	02e7a623          	sw	a4, 44(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:290
    curr_input_state_ptr->input_idx = input;
    c788:	00b78023          	sb	a1, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:291
    curr_input_state_ptr->prev_ack_thresh = 0;
    c78c:	00078223          	sb	zero, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:292
    curr_input_state_ptr->num_fork_streams = 0;
    c790:	00078da3          	sb	zero, 27(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:295
    curr_input_state_ptr->next = (curr_input_state_ptr + 1);
    c794:	04078693          	addi	a3, a5, 64
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:296
    prev_input_state_ptr = curr_input_state_ptr;
    c798:	00078713          	mv	a4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:295
    curr_input_state_ptr->next = (curr_input_state_ptr + 1);
    c79c:	fed6ae23          	sw	a3, -4(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:259
  for (uint32_t input = 0; input < num_input_streams; input++) {
    c7a0:	00158593          	addi	a1, a1, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:297
    curr_input_state_ptr++;
    c7a4:	00068793          	mv	a5, a3
    c7a8:	ef1ff06f          	j	c698 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x114>
get_operand_stream_tiles_received_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:182
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    c7ac:	01068713          	addi	a4, a3, 16
    c7b0:	f95ff06f          	j	c744 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c0>
curr_input_state_init(unsigned long, kernel_input_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:299
  prev_input_state_ptr->next = input_stream_state;
    c7b4:	07c12783          	lw	a5, 124(sp)
    c7b8:	000116b7          	lui	a3, 0x11
    c7bc:	02f72e23          	sw	a5, 60(a4)
    c7c0:	9e068693          	addi	a3, a3, -1568 # 109e0 <output_stream_state>
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:305
  kernel_output_stream_state_t* prev_output_state_ptr = curr_output_state_ptr;
    c7c4:	03012783          	lw	a5, 48(sp)
    c7c8:	08d12a23          	sw	a3, 148(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:321
      curr_output_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_l1_ptr*)&receiver_tiles_received[curr_output_state_ptr->stream_id];
    c7cc:	03012683          	lw	a3, 48(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:305
  kernel_output_stream_state_t* prev_output_state_ptr = curr_output_state_ptr;
    c7d0:	52078713          	addi	a4, a5, 1312
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:307
    volatile epoch_stream_info_t tt_l1_ptr * output_stream_info = RISC_EPOCH_INFO_PTR->outputs[output];
    c7d4:	000208b7          	lui	a7, 0x20
get_packer_stream_tiles_received_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:190
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX));
    c7d8:	00100637          	lui	a2, 0x100
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:306
  for (uint32_t output = 0; output < num_output_streams; output++) {
    c7dc:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:304
  kernel_output_stream_state_t* curr_output_state_ptr = (kernel_output_stream_state_t*)output_stream_state;
    c7e0:	00070793          	mv	a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:307
    volatile epoch_stream_info_t tt_l1_ptr * output_stream_info = RISC_EPOCH_INFO_PTR->outputs[output];
    c7e4:	08088893          	addi	a7, a7, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:310
    bool skip_processing = ((output_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((output_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || output_stream_info->legacy_pack;
    c7e8:	00100e13          	li	t3, 1
get_packer_stream_tiles_received_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:190
    c7ec:	b4060613          	addi	a2, a2, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:321
      curr_output_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_l1_ptr*)&receiver_tiles_received[curr_output_state_ptr->stream_id];
    c7f0:	d4068e93          	addi	t4, a3, -704
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:322
      curr_output_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_l1_ptr*)&receiver_tiles_acked[output_stream_info->eth_remote_fw_stream_id];
    c7f4:	dc068f13          	addi	t5, a3, -576
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:334
    for (uint32_t active_streams_idx = 0; active_streams_idx < NOC_NUM_STREAMS; active_streams_idx++) {
    c7f8:	04000f93          	li	t6, 64
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:306
  for (uint32_t output = 0; output < num_output_streams; output++) {
    c7fc:	17050e63          	beq	a0, a6, c978 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x3f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:307
    volatile epoch_stream_info_t tt_l1_ptr * output_stream_info = RISC_EPOCH_INFO_PTR->outputs[output];
    c800:	02c80713          	addi	a4, a6, 44
    c804:	00271713          	slli	a4, a4, 0x2
    c808:	00e88733          	add	a4, a7, a4
    c80c:	00472703          	lw	a4, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:308
    curr_output_state_ptr->epoch_done = 0;
    c810:	000782a3          	sb	zero, 5(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:310
    bool skip_processing = ((output_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((output_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || output_stream_info->legacy_pack;
    c814:	00100313          	li	t1, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:309
    curr_output_state_ptr->stream_id = output_stream_info->stream_id;
    c818:	00075583          	lhu	a1, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:310
    bool skip_processing = ((output_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((output_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || output_stream_info->legacy_pack;
    c81c:	03c72683          	lw	a3, 60(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:309
    curr_output_state_ptr->stream_id = output_stream_info->stream_id;
    c820:	00b79323          	sh	a1, 6(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:310
    bool skip_processing = ((output_stream_info->flags & STREAM_INTERMEDIATE) != 0) || ((output_stream_info->flags & STREAM_MOVES_RAW_DATA) != 0) || output_stream_info->legacy_pack;
    c824:	0106f693          	andi	a3, a3, 16
    c828:	00069c63          	bnez	a3, c840 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2bc>
    c82c:	03c72683          	lw	a3, 60(a4)
    c830:	0406f693          	andi	a3, a3, 64
    c834:	00069663          	bnez	a3, c840 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2bc>
    c838:	03874303          	lbu	t1, 56(a4)
    c83c:	00603333          	snez	t1, t1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:312
    curr_output_state_ptr->skip_processing = skip_processing;
    c840:	00678b23          	sb	t1, 22(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:313
    curr_output_state_ptr->num_msgs_in_block = output_stream_info->num_msgs_in_block;
    c844:	01c75683          	lhu	a3, 28(a4)
    c848:	00d79a23          	sh	a3, 20(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:315
    uint32_t stream_type = output_stream_info->datacopy_stream_type & 0x7;
    c84c:	00674683          	lbu	a3, 6(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:316
    curr_output_state_ptr->eth_fw_stream = 0;
    c850:	00078023          	sb	zero, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:315
    uint32_t stream_type = output_stream_info->datacopy_stream_type & 0x7;
    c854:	0ff6f293          	zext.b	t0, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:317
    if (stream_type == datacopy_stream_type_t::UNPACKER) {
    c858:	0076f693          	andi	a3, a3, 7
    c85c:	03c69663          	bne	a3, t3, c888 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x304>
get_packer_stream_tiles_received_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:190
    c860:	00c586b3          	add	a3, a1, a2
    c864:	00c69693          	slli	a3, a3, 0xc
    c868:	00468693          	addi	a3, a3, 4
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:318
      curr_output_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_stream_tiles_received_ptr(curr_output_state_ptr->stream_id);
    c86c:	02d7a423          	sw	a3, 40(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:319
      curr_output_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_stream_tiles_acked_ptr(output_stream_info->datacopy_stream_id);
    c870:	00774683          	lbu	a3, 7(a4)
get_operand_stream_tiles_acked_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:186
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    c874:	00c686b3          	add	a3, a3, a2
    c878:	00c69693          	slli	a3, a3, 0xc
    c87c:	00c68693          	addi	a3, a3, 12
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:327
      curr_output_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_stream_tiles_acked_ptr(curr_output_state_ptr->stream_id);
    c880:	02d7a623          	sw	a3, 44(a5)
    c884:	02c0006f          	j	c8b0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x32c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:320
    } else if (stream_type & 0x4) {
    c888:	0042f693          	andi	a3, t0, 4
    c88c:	0c068663          	beqz	a3, c958 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x3d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:321
      curr_output_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_l1_ptr*)&receiver_tiles_received[curr_output_state_ptr->stream_id];
    c890:	00259693          	slli	a3, a1, 0x2
    c894:	00de86b3          	add	a3, t4, a3
    c898:	02d7a423          	sw	a3, 40(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:322
      curr_output_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_l1_ptr*)&receiver_tiles_acked[output_stream_info->eth_remote_fw_stream_id];
    c89c:	03974683          	lbu	a3, 57(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:324
      curr_output_state_ptr->eth_fw_stream = 1;
    c8a0:	01c78023          	sb	t3, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:322
      curr_output_state_ptr->epoch_tiles_acked_ptr = (volatile uint32_t tt_l1_ptr*)&receiver_tiles_acked[output_stream_info->eth_remote_fw_stream_id];
    c8a4:	00269693          	slli	a3, a3, 0x2
    c8a8:	00df06b3          	add	a3, t5, a3
    c8ac:	02d7a623          	sw	a3, 44(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:332
    curr_output_state_ptr->num_mblock_buffering = output_stream_info->num_mblock_buffering;
    c8b0:	03a75683          	lhu	a3, 58(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:330
    curr_output_state_ptr->scatter_inner_loop_done = 0;
    c8b4:	0007a423          	sw	zero, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:331
    curr_output_state_ptr->scatter_inner_loop_count = 0;
    c8b8:	0007a623          	sw	zero, 12(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:333
    curr_output_state_ptr->mblock_buffering_count = 0;
    c8bc:	00079923          	sh	zero, 18(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:332
    curr_output_state_ptr->num_mblock_buffering = output_stream_info->num_mblock_buffering;
    c8c0:	00d79823          	sh	a3, 16(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:334
    for (uint32_t active_streams_idx = 0; active_streams_idx < NOC_NUM_STREAMS; active_streams_idx++) {
    c8c4:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:335
      if (curr_output_state_ptr->stream_id == RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx]->stream_id) {
    c8c8:	04468293          	addi	t0, a3, 68
    c8cc:	00229293          	slli	t0, t0, 0x2
    c8d0:	005882b3          	add	t0, a7, t0
    c8d4:	0042a283          	lw	t0, 4(t0)
    c8d8:	0002d283          	lhu	t0, 0(t0)
    c8dc:	08b29863          	bne	t0, a1, c96c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x3e8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:336
        curr_output_state_ptr->active_streams_idx = active_streams_idx;
    c8e0:	00d78223          	sb	a3, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:341
    uint32_t num_fork_streams = output_stream_info->num_fork_streams;
    c8e4:	08c75683          	lhu	a3, 140(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:345
      for (uint32_t k = 0; k < total_fork_streams; k++) {
    c8e8:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:342
    curr_output_state_ptr->num_fork_streams = num_fork_streams;
    c8ec:	00d78ba3          	sb	a3, 23(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:343
    uint32_t total_fork_streams = (num_fork_streams+1);
    c8f0:	00168293          	addi	t0, a3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:346
        uint8_t fork_idx = output_stream_info->fork_idxs[k];
    c8f4:	00b706b3          	add	a3, a4, a1
    c8f8:	0906c683          	lbu	a3, 144(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:347
        curr_output_state_ptr->fork_idxs[k] = fork_idx;
    c8fc:	00b783b3          	add	t2, a5, a1
    c900:	00d38c23          	sb	a3, 24(t2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:348
        if (!fork_skip_processing && k >= 1) {
    c904:	02031863          	bnez	t1, c934 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x3b0>
    c908:	02058663          	beqz	a1, c934 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x3b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:349
          uint32_t fork_stream_id = RISC_EPOCH_INFO_PTR->active_streams[fork_idx]->stream_id;
    c90c:	04468693          	addi	a3, a3, 68
    c910:	00269693          	slli	a3, a3, 0x2
    c914:	00d886b3          	add	a3, a7, a3
    c918:	0046a683          	lw	a3, 4(a3)
    c91c:	0006d683          	lhu	a3, 0(a3)
set_fork_scatter_inner_loop_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:70
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX, val);
    c920:	00c686b3          	add	a3, a3, a2
    c924:	00c69693          	slli	a3, a3, 0xc
    c928:	0006a023          	sw	zero, 0(a3)
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:351
          set_fork_num_msgs_in_block(fork_stream_id, output_stream_info->num_msgs_in_block);
    c92c:	01c75383          	lhu	t2, 28(a4)
set_fork_num_msgs_in_block(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:78
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, val);
    c930:	0076a223          	sw	t2, 4(a3)
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:345
      for (uint32_t k = 0; k < total_fork_streams; k++) {
    c934:	00158593          	addi	a1, a1, 1
    c938:	fa55eee3          	bltu	a1, t0, c8f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x370>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:355
    curr_output_state_ptr->output_idx = output;
    c93c:	010780a3          	sb	a6, 1(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:356
    curr_output_state_ptr->next = (curr_output_state_ptr + 1);
    c940:	03478693          	addi	a3, a5, 52
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:357
    prev_output_state_ptr = curr_output_state_ptr;
    c944:	00078713          	mv	a4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:356
    curr_output_state_ptr->next = (curr_output_state_ptr + 1);
    c948:	fed6ae23          	sw	a3, -4(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:306
  for (uint32_t output = 0; output < num_output_streams; output++) {
    c94c:	00180813          	addi	a6, a6, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:358
    curr_output_state_ptr++;
    c950:	00068793          	mv	a5, a3
    c954:	ea9ff06f          	j	c7fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x278>
get_packer_stream_tiles_received_ptr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:190
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX));
    c958:	00c586b3          	add	a3, a1, a2
    c95c:	00c69693          	slli	a3, a3, 0xc
    c960:	00468293          	addi	t0, a3, 4
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:326
      curr_output_state_ptr->epoch_tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_packer_stream_tiles_received_ptr(curr_output_state_ptr->stream_id);
    c964:	0257a423          	sw	t0, 40(a5)
    c968:	f19ff06f          	j	c880 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2fc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:334
    for (uint32_t active_streams_idx = 0; active_streams_idx < NOC_NUM_STREAMS; active_streams_idx++) {
    c96c:	00168693          	addi	a3, a3, 1
    c970:	f5f69ce3          	bne	a3, t6, c8c8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x344>
    c974:	f71ff06f          	j	c8e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x360>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:360
  prev_output_state_ptr->next = output_stream_state;
    c978:	09412783          	lw	a5, 148(sp)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    c97c:	00100437          	lui	s0, 0x100
curr_output_state_init(unsigned long, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:360
    c980:	02f72823          	sw	a5, 48(a4)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1795
  uint32_t dram_ptr_update_cnt = 1; // I.e. dont check immediately since we checked in prologue
    c984:	00100793          	li	a5, 1
    c988:	0cf12623          	sw	a5, 204(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1797
  uint32_t stream_restart_check_cnt = 1; // I.e. dont check immediately since streams most likely just started
    c98c:	0cf12823          	sw	a5, 208(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:848
      }
    }

#ifdef ERISC
    if (fw_eth_stream_send_tiles_received) {
      eth_send_packet(0, (uint32_t)sender_tiles_received >> 4, (uint32_t)receiver_tiles_received >> 4, sizeof(sender_tiles_received) >> 4);
    c990:	03012783          	lw	a5, 48(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1798
  uint32_t stream_handler_iteration_count = 0;
    c994:	04012c23          	sw	zero, 88(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:848
    c998:	c4078793          	addi	a5, a5, -960
    c99c:	0047d793          	srli	a5, a5, 0x4
    c9a0:	0af12023          	sw	a5, 160(sp)
    c9a4:	03012783          	lw	a5, 48(sp)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
    c9a8:	b4040413          	addi	s0, s0, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:848
    c9ac:	d4078793          	addi	a5, a5, -704
    c9b0:	0047d793          	srli	a5, a5, 0x4
    c9b4:	0af12223          	sw	a5, 164(sp)
risc_streams_kernels_done():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:114
  volatile dram_output_stream_state_t* curr_dram_output_stream_state = dram_output_stream_state;
    c9b8:	0000f7b7          	lui	a5, 0xf
    c9bc:	4c078793          	addi	a5, a5, 1216 # f4c0 <active_stream_info>
    c9c0:	04f12023          	sw	a5, 64(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:109
  if (!RISC_EPOCH_INFO_PTR->all_streams_and_kernels_done)
    c9c4:	000207b7          	lui	a5, 0x20
    c9c8:	08078793          	addi	a5, a5, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
    c9cc:	00e7c783          	lbu	a5, 14(a5)
    c9d0:	06078663          	beqz	a5, ca3c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x4b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:116
      i < num_dram_input_streams;
    c9d4:	03012783          	lw	a5, 48(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:115
  for (uint32_t i = 0;
    c9d8:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:116
      i < num_dram_input_streams;
    c9dc:	c147a683          	lw	a3, -1004(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:113
  volatile dram_input_stream_state_t* curr_dram_input_stream_state = dram_input_stream_state;
    c9e0:	9c878793          	addi	a5, a5, -1592
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:116
      i < num_dram_input_streams;
    c9e4:	00e68c63          	beq	a3, a4, c9fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x478>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:118
    if (curr_dram_input_stream_state->epoch_q_slots_remaining)
    c9e8:	0187a603          	lw	a2, 24(a5)
    c9ec:	04061063          	bnez	a2, ca2c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x4a8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:115
  for (uint32_t i = 0;
    c9f0:	00170713          	addi	a4, a4, 1
    c9f4:	05478793          	addi	a5, a5, 84
    c9f8:	fedff06f          	j	c9e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x460>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:112
  uint8_t done = 1;
    c9fc:	00100693          	li	a3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:125
      i < num_dram_output_streams;
    ca00:	03012783          	lw	a5, 48(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:124
  for (uint32_t i = 0;
    ca04:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:125
      i < num_dram_output_streams;
    ca08:	c187a603          	lw	a2, -1000(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:114
  volatile dram_output_stream_state_t* curr_dram_output_stream_state = dram_output_stream_state;
    ca0c:	04012783          	lw	a5, 64(sp)
    ca10:	72878793          	addi	a5, a5, 1832
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:125
      i < num_dram_output_streams;
    ca14:	02e60063          	beq	a2, a4, ca34 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x4b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:127
    if (curr_dram_output_stream_state->epoch_q_slots_remaining)
    ca18:	0187a583          	lw	a1, 24(a5)
    ca1c:	02059063          	bnez	a1, ca3c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x4b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:124
  for (uint32_t i = 0;
    ca20:	00170713          	addi	a4, a4, 1
    ca24:	06078793          	addi	a5, a5, 96
    ca28:	fedff06f          	j	ca14 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x490>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:120
      done = 0;
    ca2c:	00000693          	li	a3, 0
    ca30:	fd1ff06f          	j	ca00 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x47c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1800
  while (!risc_streams_kernels_done()) {
    ca34:	00068463          	beqz	a3, ca3c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x4b8>
    ca38:	5380206f          	j	ef70 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x29ec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1803
    stream_handler_iteration_count++;
    ca3c:	05812783          	lw	a5, 88(sp)
    ca40:	00178793          	addi	a5, a5, 1
    ca44:	04f12c23          	sw	a5, 88(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1804
    if (stream_handler_iteration_count >= ERISC_LOOP_ITER_COUNT) {
    ca48:	05812703          	lw	a4, 88(sp)
    ca4c:	03100793          	li	a5, 49
    ca50:	00e7f663          	bgeu	a5, a4, ca5c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x4d8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1806
      risc_context_switch();
    ca54:	eddfc0ef          	jal	ra, 9930 <risc_context_switch()>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1805
      stream_handler_iteration_count = 0;
    ca58:	04012c23          	sw	zero, 88(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    ca5c:	111117b7          	lui	a5, 0x11111
    ca60:	11178793          	addi	a5, a5, 273 # 11111111 <noc_nonblocking_api.cc.88b5909b+0x110ee38d>
    ca64:	ffb204b7          	lui	s1, 0xffb20
    ca68:	10f4a623          	sw	a5, 268(s1) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1821
    risc_stream_resart_check(stream_restart_check_cnt, num_active_streams, active_stream_info);
    ca6c:	0d010513          	addi	a0, sp, 208
    ca70:	8ecfd0ef          	jal	ra, 9b5c <risc_stream_resart_check(unsigned long&, unsigned long&, active_stream_info_t*) [clone .constprop.0]>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:651
  bool skip_kernels = RISC_EPOCH_INFO_PTR->skip_kernels;
    ca74:	000207b7          	lui	a5, 0x20
    ca78:	30a7d703          	lhu	a4, 778(a5) # 2030a <risc_chip_specific.cc.5b7d4a1c+0x132e>
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
    ca7c:	000108b7          	lui	a7, 0x10
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:676
    kernel_input_stream_state_t* curr_input_state = input_stream_state;
    ca80:	07c12903          	lw	s2, 124(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:651
  bool skip_kernels = RISC_EPOCH_INFO_PTR->skip_kernels;
    ca84:	08078793          	addi	a5, a5, 128
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:669
      all_kernels_done = true;
    ca88:	00100d13          	li	s10, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:680
    for (uint32_t input = 0; input < num_input_streams; input++) {
    ca8c:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:678
    bool fw_eth_stream_send_tiles_received = false;
    ca90:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:674
    uint32_t streams_to_clear = 0;
    ca94:	00000d93          	li	s11, 0
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
    ca98:	fff88893          	addi	a7, a7, -1 # ffff <dram_input_stream_state+0x177>
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:164
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & ~0xffff;
    ca9c:	ffff0e37          	lui	t3, 0xffff0
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    caa0:	c0000737          	lui	a4, 0xc0000
    caa4:	10e4a623          	sw	a4, 268(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:680
    for (uint32_t input = 0; input < num_input_streams; input++) {
    caa8:	09012703          	lw	a4, 144(sp)
    caac:	a0072703          	lw	a4, -1536(a4) # bffffa00 <TENSIX_MAILBOX_BASE+0xc013fa00>
    cab0:	2ee87663          	bgeu	a6, a4, cd9c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x818>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:682
      uint32_t stream_id = curr_input_state->stream_id;
    cab4:	00295483          	lhu	s1, 2(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:683
      uint32_t epoch_tiles_remaining_to_clear = curr_input_state->epoch_tiles_remaining_to_clear;
    cab8:	00892703          	lw	a4, 8(s2)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    cabc:	008484b3          	add	s1, s1, s0
    cac0:	00c49493          	slli	s1, s1, 0xc
    cac4:	08c4a683          	lw	a3, 140(s1)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
    cac8:	0084a303          	lw	t1, 8(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:704
      curr_input_state++;
    cacc:	04090913          	addi	s2, s2, 64
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:706
      uint32_t stream_skip = (epoch_tiles_remaining_to_clear == 0) || (no_hw_clearing);
    cad0:	2c070263          	beqz	a4, cd94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x810>
    cad4:	fda94583          	lbu	a1, -38(s2)
    cad8:	2a059e63          	bnez	a1, cd94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x810>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:713
      stream_skip = (phase_active == 0) || (phase_tiles_remaining_to_clear == 0);
    cadc:	0046f693          	andi	a3, a3, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
    cae0:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:713
      stream_skip = (phase_active == 0) || (phase_tiles_remaining_to_clear == 0);
    cae4:	2a068863          	beqz	a3, cd94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x810>
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
    cae8:	01137c33          	and	s8, t1, a7
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:713
    caec:	2a0c0463          	beqz	s8, cd94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x810>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:723
      uint32_t input_idx = prev_input_state->input_idx;
    caf0:	fc094a83          	lbu	s5, -64(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:719
      volatile uint32_t tt_reg_ptr* epoch_tiles_acked_ptr = prev_input_state->epoch_tiles_acked_ptr;
    caf4:	ff892583          	lw	a1, -8(s2)
    caf8:	002a9a93          	slli	s5, s5, 0x2
    cafc:	01578ab3          	add	s5, a5, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:724
      uint32_t msg_info_buf_addr = RISC_EPOCH_INFO_PTR->inputs[input_idx]->msg_info_buf_start;
    cb00:	054aa503          	lw	a0, 84(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:726
      uint16_t epoch_tiles_acked = epoch_tiles_acked_ptr[0];
    cb04:	0005aa03          	lw	s4, 0(a1)
stream_phase_tiles_received(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:154
  return NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX) - msg_info_buf_start_addr;
    cb08:	0684a983          	lw	s3, 104(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:721
      uint16_t prev_phases_tiles_received = prev_input_state->prev_phases_tiles_received;
    cb0c:	fce95683          	lhu	a3, -50(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:765
      if (prev_input_state->eth_fw_stream) {
    cb10:	fc594583          	lbu	a1, -59(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:726
      uint16_t epoch_tiles_acked = epoch_tiles_acked_ptr[0];
    cb14:	010a1a13          	slli	s4, s4, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:720
      volatile uint32_t tt_reg_ptr* epoch_tiles_received_ptr = prev_input_state->epoch_tiles_received_ptr;
    cb18:	ff492d03          	lw	s10, -12(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:722
      uint16_t epoch_tiles_cleared = prev_input_state->epoch_tiles_cleared;
    cb1c:	fcc95b83          	lhu	s7, -52(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:726
      uint16_t epoch_tiles_acked = epoch_tiles_acked_ptr[0];
    cb20:	010a5a13          	srli	s4, s4, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:724
      uint32_t msg_info_buf_addr = RISC_EPOCH_INFO_PTR->inputs[input_idx]->msg_info_buf_start;
    cb24:	02052c83          	lw	s9, 32(a0)
stream_phase_tiles_received(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:154
    cb28:	419989b3          	sub	s3, s3, s9
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
    cb2c:	013689b3          	add	s3, a3, s3
    cb30:	01099993          	slli	s3, s3, 0x10
    cb34:	0109d993          	srli	s3, s3, 0x10
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:765
      if (prev_input_state->eth_fw_stream) {
    cb38:	24058663          	beqz	a1, cd84 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x800>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:766
        uint32_t epoch_tiles_relayed = epoch_tiles_received_ptr[0];
    cb3c:	000d2e83          	lw	t4, 0(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:771
        if ((new_epoch_tiles_received > epoch_tiles_relayed)) {
    cb40:	0f3efe63          	bgeu	t4, s3, cc3c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x6b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:773
          uint32_t words_to_relay = mulsi3(tiles_to_relay, RISC_EPOCH_INFO_PTR->inputs[input_idx]->tile_size_words);
    cb44:	054aa583          	lw	a1, 84(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:772
          uint32_t tiles_to_relay = new_epoch_tiles_received - epoch_tiles_relayed;
    cb48:	41d989b3          	sub	s3, s3, t4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    cb4c:	00000b13          	li	s6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:773
          uint32_t words_to_relay = mulsi3(tiles_to_relay, RISC_EPOCH_INFO_PTR->inputs[input_idx]->tile_size_words);
    cb50:	00c5a503          	lw	a0, 12(a1)
    cb54:	00098593          	mv	a1, s3
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    cb58:	00058e63          	beqz	a1, cb74 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x5f0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    cb5c:	0015ff13          	andi	t5, a1, 1
    cb60:	000f0463          	beqz	t5, cb68 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x5e4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    cb64:	00ab0b33          	add	s6, s6, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    cb68:	0015d593          	srli	a1, a1, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    cb6c:	00151513          	slli	a0, a0, 0x1
    cb70:	fe9ff06f          	j	cb58 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x5d4>
stream_get_remote_data_buf_space_available(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:142
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_BUF_SPACE_AVAILABLE_REG_INDEX);
    cb74:	1004a583          	lw	a1, 256(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:775
          if (words_to_relay > space_available) {
    cb78:	0165fa63          	bgeu	a1, s6, cb8c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x608>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:777
            tiles_to_relay = words_to_relay / RISC_EPOCH_INFO_PTR->inputs[input_idx]->tile_size_words;
    cb7c:	054aa503          	lw	a0, 84(s5)
    cb80:	00058b13          	mv	s6, a1
    cb84:	00c52983          	lw	s3, 12(a0)
    cb88:	0335d9b3          	divu	s3, a1, s3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:780
          if (words_to_relay) {
    cb8c:	0a0b0863          	beqz	s6, cc3c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x6b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:767
        uint32_t msg_rd_addr = prev_input_state->msg_rd_addr;
    cb90:	fec92503          	lw	a0, -20(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:768
        uint32_t msg_wr_addr = prev_input_state->msg_wr_addr;
    cb94:	ff092583          	lw	a1, -16(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:781
            eth_send_packet(0, msg_rd_addr, msg_wr_addr, words_to_relay);
    cb98:	000b0613          	mv	a2, s6
    cb9c:	05d12823          	sw	t4, 80(sp)
    cba0:	04d12623          	sw	a3, 76(sp)
    cba4:	04612423          	sw	t1, 72(sp)
    cba8:	04e12223          	sw	a4, 68(sp)
    cbac:	03012e23          	sw	a6, 60(sp)
    cbb0:	02b12c23          	sw	a1, 56(sp)
    cbb4:	02a12a23          	sw	a0, 52(sp)
    cbb8:	ffbf4097          	auipc	ra, 0xffbf4
    cbbc:	834080e7          	jalr	-1996(ra) # ffc003ec <TENSIX_MAILBOX_BASE+0xffd403ec>
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
    cbc0:	05012e83          	lw	t4, 80(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:782
            uint32_t words_to_decrement = -words_to_relay;
    cbc4:	41600633          	neg	a2, s6
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
    cbc8:	01d989b3          	add	s3, s3, t4
stream_update_remote_dest_buf_space_available(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:303
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_BUF_SPACE_AVAILABLE_UPDATE_REG_INDEX, STREAM_REMOTE_DEST_BUF_SPACE_AVAILABLE_UPDATE(dest_num, inc_val));
    cbcc:	00661613          	slli	a2, a2, 0x6
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:785
            epoch_tiles_received_ptr[0] = temp_sum;
    cbd0:	01099993          	slli	s3, s3, 0x10
stream_update_remote_dest_buf_space_available(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:303
    cbd4:	08c4a423          	sw	a2, 136(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:785
    cbd8:	0109d993          	srli	s3, s3, 0x10
    cbdc:	013d2023          	sw	s3, 0(s10)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    cbe0:	01c4a603          	lw	a2, 28(s1)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    cbe4:	03412503          	lw	a0, 52(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    cbe8:	000207b7          	lui	a5, 0x20
    cbec:	000108b7          	lui	a7, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    cbf0:	01650533          	add	a0, a0, s6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    cbf4:	03812583          	lw	a1, 56(sp)
    cbf8:	03c12803          	lw	a6, 60(sp)
    cbfc:	04412703          	lw	a4, 68(sp)
    cc00:	04812303          	lw	t1, 72(sp)
    cc04:	04c12683          	lw	a3, 76(sp)
    cc08:	08078793          	addi	a5, a5, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
    cc0c:	fff88893          	addi	a7, a7, -1 # ffff <dram_input_stream_state+0x177>
    cc10:	ffff0e37          	lui	t3, 0xffff0
    cc14:	00c56463          	bltu	a0, a2, cc1c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x698>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    cc18:	40c50533          	sub	a0, a0, a2
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:786
            prev_input_state->msg_rd_addr = buf_ptr_inc_wrap(msg_rd_addr, words_to_relay, stream_get_data_buf_size(stream_id));
    cc1c:	fea92623          	sw	a0, -20(s2)
stream_get_remote_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:138
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX);
    cc20:	0104a603          	lw	a2, 16(s1)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    cc24:	016585b3          	add	a1, a1, s6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    cc28:	00c5e463          	bltu	a1, a2, cc30 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x6ac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    cc2c:	40c585b3          	sub	a1, a1, a2
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:787
            prev_input_state->msg_wr_addr = buf_ptr_inc_wrap(msg_wr_addr, words_to_relay, stream_get_remote_data_buf_size(stream_id));
    cc30:	feb92823          	sw	a1, -16(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:790
            fw_eth_stream_send_tiles_received = true;
    cc34:	00100613          	li	a2, 1
    cc38:	0080006f          	j	cc40 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x6bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:792
        } else if (epoch_tiles_acked == 0) {
    cc3c:	fe0a0ce3          	beqz	s4, cc34 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x6b0>
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:55
  return a - b;
    cc40:	417a0a33          	sub	s4, s4, s7
    cc44:	010a1a13          	slli	s4, s4, 0x10
    cc48:	010a5a13          	srli	s4, s4, 0x10
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:800
      if (tiles_to_clear > phase_tiles_remaining_to_clear)
    cc4c:	014c7663          	bgeu	s8, s4, cc58 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x6d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:801
        tiles_to_clear = phase_tiles_remaining_to_clear;
    cc50:	01031a13          	slli	s4, t1, 0x10
    cc54:	010a5a13          	srli	s4, s4, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
    cc58:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:802
      if (!tiles_to_clear) {
    cc5c:	120a0c63          	beqz	s4, cd94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x810>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:808
      uint32_t buf_size_tiles = RISC_EPOCH_INFO_PTR->inputs[input_idx]->buf_size_tiles;
    cc60:	054aa503          	lw	a0, 84(s5)
should_stall_for_tile_header_buffer_reset(unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:378
  uint32_t is_remote_src = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, REMOTE_SOURCE);
    cc64:	0284a583          	lw	a1, 40(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:379
  uint32_t msg_info_wr_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX);
    cc68:	0684ae83          	lw	t4, 104(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:807
      uint32_t num_iter_tiles = prev_input_state->num_iter_tiles;
    cc6c:	fd092303          	lw	t1, -48(s2)
should_stall_for_tile_header_buffer_reset(unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:381
  if (is_remote_src && (msg_info_wr_ptr - msg_info_buf_addr >= MAX_TILES_MSG_INFO_BUF_PER_PHASE - 2*buf_size_tiles)) {
    cc70:	0205f593          	andi	a1, a1, 32
    cc74:	08058a63          	beqz	a1, cd08 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x784>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:808
      uint32_t buf_size_tiles = RISC_EPOCH_INFO_PTR->inputs[input_idx]->buf_size_tiles;
    cc78:	01052583          	lw	a1, 16(a0)
should_stall_for_tile_header_buffer_reset(unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:381
    cc7c:	40000513          	li	a0, 1024
    cc80:	419e8eb3          	sub	t4, t4, s9
    cc84:	40b50533          	sub	a0, a0, a1
    cc88:	00151513          	slli	a0, a0, 0x1
    cc8c:	06aeee63          	bltu	t4, a0, cd08 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x784>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:382
    prev_ack_thresh = NOC_STREAM_READ_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX);
    cc90:	0a04ae83          	lw	t4, 160(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:383
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX, 0);
    cc94:	0a04a023          	sw	zero, 160(s1)
stream_receiver_endpoint_tile_clearing_finished(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:335
      return (NOC_STREAM_READ_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX) == 0);
    cc98:	0244a503          	lw	a0, 36(s1)
wait_till_tile_clear_done(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:16
  while(!stream_receiver_endpoint_tile_clearing_finished(stream_id));
    cc9c:	fe051ee3          	bnez	a0, cc98 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x714>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:812
        if (prev_ack_thresh != 0)
    cca0:	000e8463          	beqz	t4, cca8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x724>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:813
          prev_input_state->prev_ack_thresh = prev_ack_thresh;
    cca4:	fdd90223          	sb	t4, -60(s2)
reset_tile_header_buffer(unsigned long, unsigned long, unsigned long, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:391
  uint32_t msg_info_full = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_FULL_REG_INDEX);
    cca8:	09c4af83          	lw	t6, 156(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:392
  uint32_t num_msgs_recv = NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
    ccac:	0484ae83          	lw	t4, 72(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:814
        prev_ack_thresh = prev_input_state->prev_ack_thresh;
    ccb0:	fc494f03          	lbu	t5, -60(s2)
reset_tile_header_buffer(unsigned long, unsigned long, unsigned long, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:394
  if (msg_info_full || (num_msgs_recv == buf_size_tiles)) {
    ccb4:	000f9463          	bnez	t6, ccbc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x738>
    ccb8:	0dd59a63          	bne	a1, t4, cd8c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x808>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:395
    uint32_t buf_space_available = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
    ccbc:	0704ae83          	lw	t4, 112(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:397
    if (buf_space_available == 0) {
    ccc0:	0c0e9663          	bnez	t4, cd8c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x808>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:398
      uint32_t msg_info_rd_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX);
    ccc4:	0204af83          	lw	t6, 32(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:399
      uint32_t msg_info_wr_ptr = NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX);
    ccc8:	0684a583          	lw	a1, 104(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:400
      num_msgs_recv = NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
    cccc:	0484ae83          	lw	t4, 72(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:403
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr);
    ccd0:	0794a423          	sw	s9, 104(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:402
      prev_phases_tiles_received_inc = msg_info_rd_ptr - num_msgs_recv - msg_info_buf_addr;
    ccd4:	419f8533          	sub	a0, t6, s9
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:405
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr + msg_info_num_tiles);
    ccd8:	01d585b3          	add	a1, a1, t4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:404
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX, msg_info_buf_addr + num_msgs_recv);
    ccdc:	01dc82b3          	add	t0, s9, t4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:405
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr + msg_info_num_tiles);
    cce0:	019585b3          	add	a1, a1, s9
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:404
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX, msg_info_buf_addr + num_msgs_recv);
    cce4:	0254a023          	sw	t0, 32(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:405
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr + msg_info_num_tiles);
    cce8:	41f585b3          	sub	a1, a1, t6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:402
      prev_phases_tiles_received_inc = msg_info_rd_ptr - num_msgs_recv - msg_info_buf_addr;
    ccec:	41d50533          	sub	a0, a0, t4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:405
      NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, msg_info_buf_addr + msg_info_num_tiles);
    ccf0:	06b4a423          	sw	a1, 104(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:413
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MEM_BUF_SPACE_AVAILABLE_ACK_THRESHOLD_REG_INDEX, prev_ack_thresh);
    ccf4:	0be4a023          	sw	t5, 160(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:818
          prev_input_state->prev_phases_tiles_received = prev_phases_tiles_received + prev_phases_tiles_received_inc;
    ccf8:	00a686b3          	add	a3, a3, a0
    ccfc:	fcd91723          	sh	a3, -50(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:819
          prev_input_state->fork_prev_pushed_num_tiles = 0;
    cd00:	fc091c23          	sh	zero, -40(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:820
          prev_input_state->prev_ack_thresh = 0;
    cd04:	fc090223          	sb	zero, -60(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:825
      num_iter_tiles -= tiles_to_clear;
    cd08:	414306b3          	sub	a3, t1, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:826
      if (num_iter_tiles == 0) {
    cd0c:	01431663          	bne	t1, s4, cd18 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x794>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:827
        num_iter_tiles = RISC_EPOCH_INFO_PTR->inputs[input_idx]->num_iter_tiles;
    cd10:	054aa683          	lw	a3, 84(s5)
    cd14:	0586a683          	lw	a3, 88(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:835
      prev_input_state->tiles_to_clear = tiles_to_clear;
    cd18:	fd492a23          	sw	s4, -44(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:833
      phase_tiles_remaining_to_clear -= tiles_to_clear;
    cd1c:	414c0c33          	sub	s8, s8, s4
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
    cd20:	014b8bb3          	add	s7, s7, s4
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:832
      epoch_tiles_remaining_to_clear -= tiles_to_clear;
    cd24:	41470a33          	sub	s4, a4, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:829
      prev_input_state->num_iter_tiles = num_iter_tiles;
    cd28:	fcd92823          	sw	a3, -48(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:837
      prev_input_state->epoch_tiles_remaining_to_clear = epoch_tiles_remaining_to_clear;
    cd2c:	fd492423          	sw	s4, -56(s2)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:164
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & ~0xffff;
    cd30:	0084a703          	lw	a4, 8(s1)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
    cd34:	010b9b93          	slli	s7, s7, 0x10
    cd38:	010bdb93          	srli	s7, s7, 0x10
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:836
      prev_input_state->epoch_tiles_cleared = epoch_tiles_cleared;
    cd3c:	fd791623          	sh	s7, -52(s2)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:164
    cd40:	01c77733          	and	a4, a4, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:165
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX, (rmw | val));  // used as scratch reg for receiver endpoint streams
    cd44:	01876733          	or	a4, a4, s8
    cd48:	00e4a423          	sw	a4, 8(s1)
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:193
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE) || !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, PHASE_AUTO_CONFIG);
    cd4c:	0284a703          	lw	a4, 40(s1)
    cd50:	000016b7          	lui	a3, 0x1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:831
      streams_to_clear++;
    cd54:	001d8d93          	addi	s11, s11, 1
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:193
    cd58:	00d77733          	and	a4, a4, a3
    cd5c:	00071a63          	bnez	a4, cd70 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x7ec>
    cd60:	0284a703          	lw	a4, 40(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
    cd64:	00000d13          	li	s10, 0
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:193
    cd68:	20077713          	andi	a4, a4, 512
    cd6c:	02071463          	bnez	a4, cd94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x810>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
    cd70:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:840
      if (next_phase_src_change && !phase_tiles_remaining_to_clear) {
    cd74:	020c1063          	bnez	s8, cd94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x810>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:841
        prev_input_state->prev_phases_tiles_received = epoch_tiles_cleared;
    cd78:	fd791723          	sh	s7, -50(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:842
        prev_input_state->fork_prev_pushed_num_tiles = 0;
    cd7c:	fc091c23          	sh	zero, -40(s2)
    cd80:	0140006f          	j	cd94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x810>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:796
        epoch_tiles_received_ptr[0] = (uint32_t)new_epoch_tiles_received;
    cd84:	013d2023          	sw	s3, 0(s10)
    cd88:	eb9ff06f          	j	cc40 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x6bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:711
      all_kernels_done = false; // prevent breaking from outer loop
    cd8c:	00000d13          	li	s10, 0
reset_tile_header_buffer(unsigned long, unsigned long, unsigned long, unsigned long&, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:411
  if (num_iter_tiles <= buf_size_tiles) {
    cd90:	f665f2e3          	bgeu	a1, t1, ccf4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x770>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:680
    for (uint32_t input = 0; input < num_input_streams; input++) {
    cd94:	00180813          	addi	a6, a6, 1
    cd98:	d11ff06f          	j	caa8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x524>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:847
    if (fw_eth_stream_send_tiles_received) {
    cd9c:	00060c63          	beqz	a2, cdb4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x830>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:848
      eth_send_packet(0, (uint32_t)sender_tiles_received >> 4, (uint32_t)receiver_tiles_received >> 4, sizeof(sender_tiles_received) >> 4);
    cda0:	0a412583          	lw	a1, 164(sp)
    cda4:	0a012503          	lw	a0, 160(sp)
    cda8:	00800613          	li	a2, 8
    cdac:	ffbf3097          	auipc	ra, 0xffbf3
    cdb0:	640080e7          	jalr	1600(ra) # ffc003ec <TENSIX_MAILBOX_BASE+0xffd403ec>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    cdb4:	ffb207b7          	lui	a5, 0xffb20
    cdb8:	d0000737          	lui	a4, 0xd0000
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    cdbc:	00001ab7          	lui	s5, 0x1
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:22
  kernel_input_stream_state_t* curr_input_state = input_stream_state;
    cdc0:	07c12903          	lw	s2, 124(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    cdc4:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
    cdc8:	fffa8a93          	addi	s5, s5, -1 # fff <__firmware_stack_size+0xbff>
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:23
  while (streams_to_clear) {
    cdcc:	080d8a63          	beqz	s11, ce60 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x8dc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:24
    curr_input_state = curr_input_state->next;
    cdd0:	03c92903          	lw	s2, 60(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:26
    int32_t tiles_to_clear = curr_input_state->tiles_to_clear;
    cdd4:	01492a03          	lw	s4, 20(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:27
    if (!tiles_to_clear) {
    cdd8:	fe0a0ae3          	beqz	s4, cdcc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x848>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:31
    uint32_t stream_id = curr_input_state->stream_id;
    cddc:	00295783          	lhu	a5, 2(s2)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    cde0:	008787b3          	add	a5, a5, s0
    cde4:	00c79793          	slli	a5, a5, 0xc
    cde8:	08c7a703          	lw	a4, 140(a5)
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:33
    if (!phase_active) {
    cdec:	00477713          	andi	a4, a4, 4
    cdf0:	fc070ee3          	beqz	a4, cdcc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x848>
stream_receiver_endpoint_tile_clearing_finished(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:335
      return (NOC_STREAM_READ_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX) == 0);
    cdf4:	0247a983          	lw	s3, 36(a5)
    cdf8:	02478b93          	addi	s7, a5, 36
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:37
    while(!stream_receiver_endpoint_tile_clearing_finished(stream_id));
    cdfc:	fe099ce3          	bnez	s3, cdf4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x870>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    ce00:	0907a483          	lw	s1, 144(a5)
    ce04:	00c4d493          	srli	s1, s1, 0xc
    ce08:	0154f4b3          	and	s1, s1, s5
    ce0c:	009a5463          	bge	s4, s1, ce14 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x890>
    ce10:	000a0493          	mv	s1, s4
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:43
    if (!tiles_to_clear_group) {
    ce14:	fa048ce3          	beqz	s1, cdcc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x848>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:47
    uint32_t num_fork_streams = curr_input_state->num_fork_streams;
    ce18:	01b94b03          	lbu	s6, 27(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:48
    if (num_fork_streams > 0) {
    ce1c:	020b1263          	bnez	s6, ce40 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x8bc>
stream_receiver_endpoint_tiles_clear_b0(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:340
    clr_val *= 2;
    ce20:	00149793          	slli	a5, s1, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:341
    clr_val = (~clr_val) + 1;
    ce24:	40f007b3          	neg	a5, a5
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:62
    tiles_to_clear -= tiles_to_clear_group;
    ce28:	409a04b3          	sub	s1, s4, s1
stream_receiver_endpoint_tiles_clear_b0(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:342
    NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, clr_val);
    ce2c:	00fba023          	sw	a5, 0(s7)
process_tile_clearing(kernel_input_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:63
    curr_input_state->tiles_to_clear = tiles_to_clear;
    ce30:	00992a23          	sw	s1, 20(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:64
    uint32_t tiles_to_clear_eq_0 = (tiles_to_clear == 0);
    ce34:	0014b493          	seqz	s1, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:65
    streams_to_clear -= tiles_to_clear_eq_0;
    ce38:	409d8db3          	sub	s11, s11, s1
    ce3c:	f91ff06f          	j	cdcc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x848>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:51
        bool push_flushed = stream_get_push_flushed<true>(curr_input_state->fork_stream_ids[k]);
    ce40:	013907b3          	add	a5, s2, s3
    ce44:	01c7c503          	lbu	a0, 28(a5)
    ce48:	ffbf3097          	auipc	ra, 0xffbf3
    ce4c:	4dc080e7          	jalr	1244(ra) # ffc00324 <TENSIX_MAILBOX_BASE+0xffd40324>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:52
        if (!push_flushed) {
    ce50:	f6050ee3          	beqz	a0, cdcc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x848>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:50
      for (uint32_t k = 0; k < num_fork_streams; k++) {
    ce54:	00198993          	addi	s3, s3, 1
    ce58:	ff69e4e3          	bltu	s3, s6, ce40 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x8bc>
    ce5c:	fc5ff06f          	j	ce20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x89c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    ce60:	ffb207b7          	lui	a5, 0xffb20
    ce64:	e0000737          	lui	a4, 0xe0000
    ce68:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:919
      }
#endif

      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    ce6c:	000209b7          	lui	s3, 0x20
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:857
    kernel_output_stream_state_t* curr_output_state = output_stream_state;
    ce70:	09412483          	lw	s1, 148(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:858
    for (uint32_t output = 0; output < num_output_streams; output++) {
    ce74:	02012c23          	sw	zero, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:919
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    ce78:	08098993          	addi	s3, s3, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:858
    for (uint32_t output = 0; output < num_output_streams; output++) {
    ce7c:	09012783          	lw	a5, 144(sp)
    ce80:	03812703          	lw	a4, 56(sp)
    ce84:	a047a783          	lw	a5, -1532(a5)
    ce88:	68f77663          	bgeu	a4, a5, d514 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf90>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:862
      uint32_t skip_processing = curr_output_state->skip_processing;
    ce8c:	0164c783          	lbu	a5, 22(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:864
      curr_output_state++;
    ce90:	03448493          	addi	s1, s1, 52
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:867
      if (stream_skip) {
    ce94:	66079863          	bnez	a5, d504 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf80>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:860
      uint32_t stream_id = curr_output_state->stream_id;
    ce98:	fd24d783          	lhu	a5, -46(s1)
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:159
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
    ce9c:	ffff8ab7          	lui	s5, 0xffff8
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:860
      uint32_t stream_id = curr_output_state->stream_id;
    cea0:	04f12223          	sw	a5, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:861
      uint32_t active_streams_idx = curr_output_state->active_streams_idx;
    cea4:	fd04c783          	lbu	a5, -48(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:872
      volatile uint32_t tt_reg_ptr* epoch_tiles_acked_ptr = prev_output_state->epoch_tiles_acked_ptr;
    cea8:	ff84ab03          	lw	s6, -8(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:861
      uint32_t active_streams_idx = curr_output_state->active_streams_idx;
    ceac:	02f12e23          	sw	a5, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:873
      volatile uint32_t tt_reg_ptr* epoch_tiles_received_ptr = prev_output_state->epoch_tiles_received_ptr;
    ceb0:	ff44a783          	lw	a5, -12(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:874
      uint32_t num_fork_streams = prev_output_state->num_fork_streams;
    ceb4:	fe34c903          	lbu	s2, -29(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:873
      volatile uint32_t tt_reg_ptr* epoch_tiles_received_ptr = prev_output_state->epoch_tiles_received_ptr;
    ceb8:	04f12423          	sw	a5, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:875
      uint32_t scatter_inner_loop_done = prev_output_state->scatter_inner_loop_done;
    cebc:	fd44aa03          	lw	s4, -44(s1)
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:159
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
    cec0:	fffa8793          	addi	a5, s5, -1 # ffff7fff <TENSIX_MAILBOX_BASE+0x137fff>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:917
      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    cec4:	00000d93          	li	s11, 0
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:159
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
    cec8:	02f12a23          	sw	a5, 52(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:917
      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    cecc:	00190c93          	addi	s9, s2, 1
    ced0:	179df263          	bgeu	s11, s9, d034 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xab0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:918
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    ced4:	000d9463          	bnez	s11, cedc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x958>
    ced8:	1e00206f          	j	f0b8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2b34>
get_fork_idx(kernel_output_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:46
  return output_state->fork_idxs[fork_idx];
    cedc:	01b487b3          	add	a5, s1, s11
    cee0:	fe47cc03          	lbu	s8, -28(a5)
    cee4:	fffd8c93          	addi	s9, s11, -1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:919
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    cee8:	044c0793          	addi	a5, s8, 68
    ceec:	00279793          	slli	a5, a5, 0x2
    cef0:	00f987b3          	add	a5, s3, a5
    cef4:	0047a783          	lw	a5, 4(a5)
    cef8:	0007db83          	lhu	s7, 0(a5)
get_fork_num_msgs_in_block(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:82
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX);
    cefc:	008b87b3          	add	a5, s7, s0
    cf00:	00c79793          	slli	a5, a5, 0xc
    cf04:	0047a783          	lw	a5, 4(a5)
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:159
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
    cf08:	00008737          	lui	a4, 0x8
    cf0c:	00e7f733          	and	a4, a5, a4
    cf10:	0c070e63          	beqz	a4, cfec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa68>
    cf14:	03412703          	lw	a4, 52(sp)
    cf18:	00e7fab3          	and	s5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:161
  if (num_tiles_sending) {
    cf1c:	0c0a8863          	beqz	s5, cfec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa68>
get_scatter_flushed(unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:77
  uint32_t dram_output_no_push = ((active_stream_info[active_streams_idx].flags & STREAM_DRAM_NO_PUSH) != 0);
    cf20:	04012783          	lw	a5, 64(sp)
    cf24:	00c00713          	li	a4, 12
    cf28:	02ec0733          	mul	a4, s8, a4
    cf2c:	00e78733          	add	a4, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:78
  if (dram_output_no_push) {
    cf30:	00675703          	lhu	a4, 6(a4) # 8006 <__trisc_base+0x1406>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:79
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    cf34:	000b8513          	mv	a0, s7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:78
  if (dram_output_no_push) {
    cf38:	01471793          	slli	a5, a4, 0x14
    cf3c:	0a07d063          	bgez	a5, cfdc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa58>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:79
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    cf40:	ffbf3097          	auipc	ra, 0xffbf3
    cf44:	144080e7          	jalr	324(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    cf48:	ffbf3097          	auipc	ra, 0xffbf3
    cf4c:	100080e7          	jalr	256(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    cf50:	00850533          	add	a0, a0, s0
    cf54:	00c51513          	slli	a0, a0, 0xc
get_scatter_flushed(unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:79
    cf58:	01052d03          	lw	s10, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:80
    uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    cf5c:	000b8513          	mv	a0, s7
    cf60:	ffbf3097          	auipc	ra, 0xffbf3
    cf64:	124080e7          	jalr	292(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    cf68:	ffbf3097          	auipc	ra, 0xffbf3
    cf6c:	0e0080e7          	jalr	224(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    cf70:	00850533          	add	a0, a0, s0
    cf74:	00c51513          	slli	a0, a0, 0xc
get_scatter_flushed(unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:80
    cf78:	00c52703          	lw	a4, 12(a0)
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:163
    if (push_flushed) {
    cf7c:	010d1693          	slli	a3, s10, 0x10
    cf80:	0106d693          	srli	a3, a3, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:187
    all_kernels_done = false; // prevent breaking from outer loop
    cf84:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:163
    if (push_flushed) {
    cf88:	01071713          	slli	a4, a4, 0x10
    cf8c:	01075713          	srli	a4, a4, 0x10
    cf90:	04e69e63          	bne	a3, a4, cfec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa68>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:164
      uint32_t scatter_inner_loop_count = fork_idx == ((uint32_t)-1) ? prev_output_state->scatter_inner_loop_count : get_fork_scatter_inner_loop_count(stream_id);
    cf94:	fff00713          	li	a4, -1
    cf98:	04ec9e63          	bne	s9, a4, cff4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa70>
    cf9c:	fd84a703          	lw	a4, -40(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:168
      uint32_t num_scatter_inner_loop = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx]->num_scatter_inner_loop;
    cfa0:	044c0c13          	addi	s8, s8, 68
    cfa4:	002c1c13          	slli	s8, s8, 0x2
    cfa8:	01898c33          	add	s8, s3, s8
    cfac:	004c2683          	lw	a3, 4(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:166
      scatter_inner_loop_count++;
    cfb0:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:169
      if (scatter_inner_loop_count >= num_scatter_inner_loop) {
    cfb4:	0346a683          	lw	a3, 52(a3) # 1034 <__firmware_stack_size+0xc34>
    cfb8:	06d76863          	bltu	a4, a3, d028 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xaa4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:170
        if (fork_idx == ((uint32_t)-1))
    cfbc:	fff00693          	li	a3, -1
    cfc0:	04dc9263          	bne	s9, a3, d004 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa80>
set_scatter_loop_done(unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:66
  scatter_loop_done |= (0x1 << 0);
    cfc4:	001a6a13          	ori	s4, s4, 1
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:178
        prev_output_state->num_msgs_in_block = num_msgs_in_block;
    cfc8:	ff549023          	sh	s5, -32(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:179
        prev_output_state->scatter_inner_loop_count = scatter_inner_loop_count;
    cfcc:	fce4ac23          	sw	a4, -40(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:184
      prev_output_state->scatter_inner_loop_done = scatter_inner_loop_done;
    cfd0:	fd44aa23          	sw	s4, -44(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:187
    all_kernels_done = false; // prevent breaking from outer loop
    cfd4:	00000d13          	li	s10, 0
    cfd8:	0140006f          	j	cfec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa68>
get_scatter_flushed(unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:84
    return stream_get_push_flushed(stream_id);
    cfdc:	ffbf3097          	auipc	ra, 0xffbf3
    cfe0:	3a0080e7          	jalr	928(ra) # ffc0037c <TENSIX_MAILBOX_BASE+0xffd4037c>
    cfe4:	00050d13          	mv	s10, a0
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:163
    if (push_flushed) {
    cfe8:	fa0516e3          	bnez	a0, cf94 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa10>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:917
      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    cfec:	001d8d93          	addi	s11, s11, 1
    cff0:	eddff06f          	j	cecc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x948>
get_fork_scatter_inner_loop_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:74
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX);
    cff4:	008b8733          	add	a4, s7, s0
    cff8:	00c71713          	slli	a4, a4, 0xc
    cffc:	00072703          	lw	a4, 0(a4)
    d000:	fa1ff06f          	j	cfa0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa1c>
set_fork_scatter_loop_done(unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:71
  fork_idx++;
    d004:	001c8c93          	addi	s9, s9, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:73
  scatter_loop_done |= (0x1 << fork_idx);
    d008:	00100693          	li	a3, 1
    d00c:	01969cb3          	sll	s9, a3, s9
    d010:	019a6a33          	or	s4, s4, s9
set_fork_num_msgs_in_block(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:78
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, val);
    d014:	008b8bb3          	add	s7, s7, s0
    d018:	00cb9b93          	slli	s7, s7, 0xc
    d01c:	015ba223          	sw	s5, 4(s7)
set_fork_scatter_inner_loop_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:70
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX, val);
    d020:	00eba023          	sw	a4, 0(s7)
    d024:	fadff06f          	j	cfd0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa4c>
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:177
      if (fork_idx == ((uint32_t)-1)) {
    d028:	fff00693          	li	a3, -1
    d02c:	fedc94e3          	bne	s9, a3, d014 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa90>
    d030:	f99ff06f          	j	cfc8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xa44>
is_all_fork_scatter_loop_done(unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:61
  uint32_t mask = (1 << (num_fork_streams+1)) - 1;
    d034:	00100793          	li	a5, 1
    d038:	019797b3          	sll	a5, a5, s9
    d03c:	fff78793          	addi	a5, a5, -1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:926
                              epoch_tiles_acked_ptr, epoch_tiles_received_ptr, all_kernels_done, k == 0 ? -1 : k-1,
                              scatter_inner_loop_done);
      }

      bool all_scatter_inner_loop_done = is_all_fork_scatter_loop_done(scatter_inner_loop_done, num_fork_streams);
      if (all_scatter_inner_loop_done) {
    d040:	15479263          	bne	a5, s4, d184 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xc00>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:928
        for (uint32_t k = 0; k < num_fork_streams+1; k++) {
          uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    d044:	03c12783          	lw	a5, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:927
        for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    d048:	00000613          	li	a2, 0
process_pipe_scatter_output_loop(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:138
  if (scatter_order_size > 1) {
    d04c:	00100593          	li	a1, 1
    d050:	00c0006f          	j	d05c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xad8>
get_fork_idx(kernel_output_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:46
  return output_state->fork_idxs[fork_idx];
    d054:	00c487b3          	add	a5, s1, a2
    d058:	fe47c783          	lbu	a5, -28(a5)
process_pipe_scatter_output_loop(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:136
  volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    d05c:	04478793          	addi	a5, a5, 68
    d060:	00279793          	slli	a5, a5, 0x2
    d064:	00f987b3          	add	a5, s3, a5
    d068:	0047a783          	lw	a5, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:137
  uint32_t scatter_order_size = l1_stream_info->scatter_order_size;
    d06c:	08e7d683          	lhu	a3, 142(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:138
  if (scatter_order_size > 1) {
    d070:	02d5f863          	bgeu	a1, a3, d0a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xb1c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:139
    uint32_t pipe_scatter_output_loop_size = l1_stream_info->pipe_scatter_output_loop_size;
    d074:	0487a503          	lw	a0, 72(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:140
    uint32_t pipe_scatter_output_loop_count = l1_stream_info->pipe_scatter_output_loop_count;
    d078:	0547a703          	lw	a4, 84(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:141
    pipe_scatter_output_loop_count++;
    d07c:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:142
    if (pipe_scatter_output_loop_count >= pipe_scatter_output_loop_size) {
    d080:	00a76e63          	bltu	a4, a0, d09c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xb18>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:143
      uint32_t scatter_idx = l1_stream_info->scatter_idx;
    d084:	0507a703          	lw	a4, 80(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:144
      scatter_idx++;
    d088:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:145
      if (scatter_idx >= scatter_order_size)
    d08c:	00d76463          	bltu	a4, a3, d094 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xb10>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:146
        scatter_idx -= scatter_order_size;
    d090:	40d70733          	sub	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:147
      l1_stream_info->scatter_idx = scatter_idx;
    d094:	04e7a823          	sw	a4, 80(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:148
      pipe_scatter_output_loop_count = 0;
    d098:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:150
    l1_stream_info->pipe_scatter_output_loop_count = pipe_scatter_output_loop_count;
    d09c:	04e7aa23          	sw	a4, 84(a5)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:927
        for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    d0a0:	00160613          	addi	a2, a2, 1
    d0a4:	fb9668e3          	bltu	a2, s9, d054 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xad0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:933
          process_pipe_scatter_output_loop(fork_active_streams_idx);
        }

        uint32_t num_msgs_in_block = prev_output_state->num_msgs_in_block;
        uint16_t prev_epoch_tiles_acked = *epoch_tiles_acked_ptr;
    d0a8:	000b2783          	lw	a5, 0(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:932
        uint32_t num_msgs_in_block = prev_output_state->num_msgs_in_block;
    d0ac:	fe04d703          	lhu	a4, -32(s1)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
    d0b0:	00f707b3          	add	a5, a4, a5
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:935
        uint16_t new_epoch_tiles_acked = op_pack_tiles_ptr_add(prev_epoch_tiles_acked, num_msgs_in_block);
        *epoch_tiles_acked_ptr = (uint32_t)new_epoch_tiles_acked;
    d0b4:	01079793          	slli	a5, a5, 0x10
    d0b8:	0107d793          	srli	a5, a5, 0x10
    d0bc:	00fb2023          	sw	a5, 0(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:938
            
#ifdef ERISC
        if (prev_output_state->eth_fw_stream) {
    d0c0:	fcc4c783          	lbu	a5, -52(s1)
    d0c4:	08078c63          	beqz	a5, d15c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xbd8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:939
          uint32_t output_idx = prev_output_state->output_idx;
    d0c8:	fcd4c783          	lbu	a5, -51(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:940
          volatile epoch_stream_info_t tt_l1_ptr * output_stream_info = RISC_EPOCH_INFO_PTR->outputs[output_idx];
    d0cc:	02c78793          	addi	a5, a5, 44
    d0d0:	00279793          	slli	a5, a5, 0x2
    d0d4:	00f987b3          	add	a5, s3, a5
    d0d8:	0047a683          	lw	a3, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:941
          uint32_t remote_eth_stream_id = output_stream_info->eth_remote_fw_stream_id;
    d0dc:	0396c783          	lbu	a5, 57(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:942
          uint32_t words_to_relay = mulsi3(num_msgs_in_block, output_stream_info->tile_size_words);
    d0e0:	00c6a603          	lw	a2, 12(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    d0e4:	00000693          	li	a3, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    d0e8:	00070e63          	beqz	a4, d104 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xb80>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    d0ec:	00177593          	andi	a1, a4, 1
    d0f0:	00058463          	beqz	a1, d0f8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xb74>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    d0f4:	00c686b3          	add	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    d0f8:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    d0fc:	00161613          	slli	a2, a2, 0x1
    d100:	fe9ff06f          	j	d0e8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xb64>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:944

          eth_write_remote_reg(0, STREAM_REMOTE_DEST_BUF_SPACE_AVAILABLE_UPDATE_ADDR(remote_eth_stream_id),
    d104:	008787b3          	add	a5, a5, s0
    d108:	00c79793          	slli	a5, a5, 0xc
    d10c:	08878793          	addi	a5, a5, 136
    d110:	00669693          	slli	a3, a3, 0x6
eth_txq_reg_read(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:337
  return ETH_READ_REG(ETH_TXQ0_REGS_START+(qnum*ETH_TXQ_REGS_SIZE)+offset);
    d114:	ffb90737          	lui	a4, 0xffb90
    d118:	00472583          	lw	a1, 4(a4) # ffb90004 <TENSIX_MAILBOX_BASE+0xffcd0004>
eth_write_remote_reg(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:490
  while (eth_txq_reg_read(q_num, ETH_TXQ_CMD) != 0) {
    d11c:	fe059ee3          	bnez	a1, d118 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xb94>
eth_txq_reg_write(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:333
  ETH_WRITE_REG(ETH_TXQ0_REGS_START+(qnum*ETH_TXQ_REGS_SIZE)+offset, val);
    d120:	00f72e23          	sw	a5, 28(a4)
    d124:	04d72223          	sw	a3, 68(a4)
    d128:	00400793          	li	a5, 4
    d12c:	00f72223          	sw	a5, 4(a4)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:946
                               STREAM_REMOTE_DEST_BUF_SPACE_AVAILABLE_UPDATE(0, words_to_relay));
          uint32_t dest_addr = ((uint32_t) epoch_tiles_acked_ptr - (uint32_t) receiver_tiles_acked) & 0x7F;
    d130:	03012783          	lw	a5, 48(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:948
          dest_addr += (uint32_t) sender_tiles_acked;
          eth_send_packet(0, (uint32_t) epoch_tiles_acked_ptr >> 4, dest_addr >> 4, 1);
    d134:	00100613          	li	a2, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:946
          uint32_t dest_addr = ((uint32_t) epoch_tiles_acked_ptr - (uint32_t) receiver_tiles_acked) & 0x7F;
    d138:	dc078593          	addi	a1, a5, -576
    d13c:	40bb05b3          	sub	a1, s6, a1
    d140:	07f5f593          	andi	a1, a1, 127
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:947
          dest_addr += (uint32_t) sender_tiles_acked;
    d144:	cc078793          	addi	a5, a5, -832
    d148:	00b785b3          	add	a1, a5, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:948
          eth_send_packet(0, (uint32_t) epoch_tiles_acked_ptr >> 4, dest_addr >> 4, 1);
    d14c:	0045d593          	srli	a1, a1, 0x4
    d150:	004b5513          	srli	a0, s6, 0x4
    d154:	ffbf3097          	auipc	ra, 0xffbf3
    d158:	298080e7          	jalr	664(ra) # ffc003ec <TENSIX_MAILBOX_BASE+0xffd403ec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:951
      }
#endif
        uint32_t mblock_buffering_count = prev_output_state->mblock_buffering_count;
    d15c:	fde4d783          	lhu	a5, -34(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:952
        uint32_t num_mblock_buffering = prev_output_state->num_mblock_buffering;
    d160:	fdc4d703          	lhu	a4, -36(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:953
        mblock_buffering_count++;
    d164:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:954
        if (mblock_buffering_count >= num_mblock_buffering)
    d168:	00e7e463          	bltu	a5, a4, d170 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xbec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:955
          mblock_buffering_count -= num_mblock_buffering;
    d16c:	40e787b3          	sub	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:956
        prev_output_state->mblock_buffering_count = mblock_buffering_count;
    d170:	fcf49f23          	sh	a5, -34(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:958

        prev_output_state->scatter_inner_loop_count = 0;
    d174:	fc04ac23          	sw	zero, -40(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:959
        if (num_fork_streams > 0) {
    d178:	12091263          	bnez	s2, d29c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xd18>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:968
            set_fork_scatter_inner_loop_count(fork_stream_id, 0);
          }
        }

        scatter_inner_loop_done = 0;
        prev_output_state->scatter_inner_loop_done = scatter_inner_loop_done;
    d17c:	fc04aa23          	sw	zero, -44(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:967
        scatter_inner_loop_done = 0;
    d180:	00000a13          	li	s4, 0
is_scatter_loop_done(unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:50
  return ((scatter_loop_done >> 0) & 0x1);
    d184:	001a7793          	andi	a5, s4, 1
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:198
  bool inner_loop_not_done = fork_idx == ((uint32_t)-1) ? !is_scatter_loop_done(scatter_inner_loop_done) : !is_fork_scatter_loop_done(scatter_inner_loop_done, fork_idx);
    d188:	0017c793          	xori	a5, a5, 1
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:967
        scatter_inner_loop_done = 0;
    d18c:	00000c13          	li	s8, 0
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:198
  bool inner_loop_not_done = fork_idx == ((uint32_t)-1) ? !is_scatter_loop_done(scatter_inner_loop_done) : !is_fork_scatter_loop_done(scatter_inner_loop_done, fork_idx);
    d190:	04f12623          	sw	a5, 76(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:972
      }

      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    d194:	000c1463          	bnez	s8, d19c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xc18>
    d198:	7090106f          	j	f0a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2b1c>
get_fork_idx(kernel_output_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:46
  return output_state->fork_idxs[fork_idx];
    d19c:	018487b3          	add	a5, s1, s8
    d1a0:	fe47cb83          	lbu	s7, -28(a5)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:973
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    d1a4:	044b8793          	addi	a5, s7, 68
    d1a8:	00279793          	slli	a5, a5, 0x2
    d1ac:	00f987b3          	add	a5, s3, a5
    d1b0:	0047a783          	lw	a5, 4(a5)
    d1b4:	0007d503          	lhu	a0, 0(a5)
    d1b8:	fffc0793          	addi	a5, s8, -1
    d1bc:	02f12a23          	sw	a5, 52(sp)
get_fork_num_msgs_in_block(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:82
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX);
    d1c0:	008507b3          	add	a5, a0, s0
    d1c4:	00c79793          	slli	a5, a5, 0xc
    d1c8:	0047aa83          	lw	s5, 4(a5)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:197
  uint32_t num_tiles_sending = (num_msgs_in_block & BRISC_PACKER_SENDING_IN_PROGRESS) != 0 ? num_msgs_in_block & ~BRISC_PACKER_SENDING_IN_PROGRESS : 0;
    d1cc:	000087b7          	lui	a5, 0x8
    d1d0:	00faf7b3          	and	a5, s5, a5
    d1d4:	00078863          	beqz	a5, d1e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xc60>
    d1d8:	ffff87b7          	lui	a5, 0xffff8
    d1dc:	fff78793          	addi	a5, a5, -1 # ffff7fff <TENSIX_MAILBOX_BASE+0x137fff>
    d1e0:	00faf7b3          	and	a5, s5, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:198
  bool inner_loop_not_done = fork_idx == ((uint32_t)-1) ? !is_scatter_loop_done(scatter_inner_loop_done) : !is_fork_scatter_loop_done(scatter_inner_loop_done, fork_idx);
    d1e4:	03412683          	lw	a3, 52(sp)
    d1e8:	fff00713          	li	a4, -1
    d1ec:	0ee69463          	bne	a3, a4, d2d4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xd50>
    d1f0:	04c12703          	lw	a4, 76(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:200
  if (inner_loop_not_done && !num_tiles_sending) {
    d1f4:	2e070663          	beqz	a4, d4e0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf5c>
    d1f8:	2e079463          	bnez	a5, d4e0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf5c>
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    d1fc:	00850933          	add	s2, a0, s0
    d200:	00c91913          	slli	s2, s2, 0xc
    d204:	08c92603          	lw	a2, 140(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    d208:	3a492683          	lw	a3, 932(s2)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    d20c:	00000713          	li	a4, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
    d210:	00167613          	andi	a2, a2, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    d214:	00060663          	beqz	a2, d220 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xc9c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
    d218:	0116d713          	srli	a4, a3, 0x11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
    d21c:	00173713          	seqz	a4, a4
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:203
    uint32_t epoch_iters_remaining = active_stream_info[active_streams_idx].epoch_iters_remaining;
    d220:	04012603          	lw	a2, 64(sp)
    d224:	00c00693          	li	a3, 12
    d228:	02db86b3          	mul	a3, s7, a3
    d22c:	00d606b3          	add	a3, a2, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:204
    if (advance_wait && epoch_iters_remaining > 0) {
    d230:	12070e63          	beqz	a4, d36c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xde8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:203
    uint32_t epoch_iters_remaining = active_stream_info[active_streams_idx].epoch_iters_remaining;
    d234:	0086ae03          	lw	t3, 8(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:204
    if (advance_wait && epoch_iters_remaining > 0) {
    d238:	120e0a63          	beqz	t3, d36c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xde8>
    d23c:	002b9e93          	slli	t4, s7, 0x2
    d240:	013e8eb3          	add	t4, t4, s3
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:101
  volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    d244:	114ea703          	lw	a4, 276(t4)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:205
      epoch_iters_remaining--;
    d248:	fffe0e13          	addi	t3, t3, -1 # fffeffff <TENSIX_MAILBOX_BASE+0x12ffff>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:207
      active_stream_info[active_streams_idx].epoch_iters_remaining = epoch_iters_remaining;
    d24c:	01c6a423          	sw	t3, 8(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:208
      uint32_t start_phase_num_cfg_regs = active_stream_info[active_streams_idx].start_phase_num_cfg_regs;
    d250:	0026c883          	lbu	a7, 2(a3)
    d254:	fde4d303          	lhu	t1, -34(s1)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:102
  uint32_t blob_size = l1_stream_info->blob_size;
    d258:	02872f03          	lw	t5, 40(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:103
  uint32_t blob_base_addr = l1_stream_info->blob_start_addr;
    d25c:	02472383          	lw	t2, 36(a4)
stream_get_auto_cfg_header(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:50
  return NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX);
    d260:	09092d03          	lw	s10, 144(s2)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:105
  bool is_scatter = l1_stream_info->scatter_pipe_state != ((scatter_pipe_state_t*)0);
    d264:	04c72f83          	lw	t6, 76(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:110
  if (is_scatter) {
    d268:	080f9263          	bnez	t6, d2ec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xd68>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:108
  uint32_t blob_start_addr = blob_base_addr;
    d26c:	00038093          	mv	ra, t2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:107
  uint32_t scatter_idx = 0;
    d270:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:106
  uint32_t curr_unroll = 0;
    d274:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    d278:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:102
  uint32_t blob_size = l1_stream_info->blob_size;
    d27c:	000f0293          	mv	t0, t5
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    d280:	0a030863          	beqz	t1, d330 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xdac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    d284:	00137d93          	andi	s11, t1, 1
    d288:	000d8463          	beqz	s11, d290 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xd0c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    d28c:	00560633          	add	a2, a2, t0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    d290:	00135313          	srli	t1, t1, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    d294:	00129293          	slli	t0, t0, 0x1
    d298:	fe9ff06f          	j	d280 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xcfc>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:960
          for (uint32_t k = 0; k < num_fork_streams; k++) {
    d29c:	00000713          	li	a4, 0
get_fork_idx(kernel_output_stream_state_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:44
  fork_idx++;
    d2a0:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:46
  return output_state->fork_idxs[fork_idx];
    d2a4:	00e487b3          	add	a5, s1, a4
    d2a8:	fe47c783          	lbu	a5, -28(a5)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:962
            uint32_t fork_stream_id = RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    d2ac:	04478793          	addi	a5, a5, 68
    d2b0:	00279793          	slli	a5, a5, 0x2
    d2b4:	00f987b3          	add	a5, s3, a5
    d2b8:	0047a783          	lw	a5, 4(a5)
    d2bc:	0007d783          	lhu	a5, 0(a5)
set_fork_scatter_inner_loop_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:70
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_REG_INDEX, val);
    d2c0:	008787b3          	add	a5, a5, s0
    d2c4:	00c79793          	slli	a5, a5, 0xc
    d2c8:	0007a023          	sw	zero, 0(a5)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:960
          for (uint32_t k = 0; k < num_fork_streams; k++) {
    d2cc:	fd276ae3          	bltu	a4, s2, d2a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xd1c>
    d2d0:	eadff06f          	j	d17c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xbf8>
is_fork_scatter_loop_done(unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:55
  fork_idx++;
    d2d4:	03412703          	lw	a4, 52(sp)
    d2d8:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:57
  return ((scatter_loop_done >> fork_idx) & 0x1);
    d2dc:	00ea5733          	srl	a4, s4, a4
    d2e0:	00177713          	andi	a4, a4, 1
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:198
  bool inner_loop_not_done = fork_idx == ((uint32_t)-1) ? !is_scatter_loop_done(scatter_inner_loop_done) : !is_fork_scatter_loop_done(scatter_inner_loop_done, fork_idx);
    d2e4:	00174713          	xori	a4, a4, 1
    d2e8:	f0dff06f          	j	d1f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xc70>
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:111
    scatter_idx = l1_stream_info->scatter_idx;
    d2ec:	05072803          	lw	a6, 80(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:112
    curr_unroll = l1_stream_info->scatter_pipe_state[scatter_idx].curr_unroll;
    d2f0:	04c72603          	lw	a2, 76(a4)
    d2f4:	00481893          	slli	a7, a6, 0x4
    d2f8:	01160633          	add	a2, a2, a7
    d2fc:	00062583          	lw	a1, 0(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:113
    blob_start_addr = l1_stream_info->scatter_pipe_state[scatter_idx].unroll_blobs[curr_unroll].scatter_blob_base_addr;
    d300:	04c72603          	lw	a2, 76(a4)
    d304:	00359293          	slli	t0, a1, 0x3
    d308:	01160633          	add	a2, a2, a7
    d30c:	00c62603          	lw	a2, 12(a2)
    d310:	00560633          	add	a2, a2, t0
    d314:	00062083          	lw	ra, 0(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:114
    start_phase_num_cfg_regs = l1_stream_info->scatter_pipe_state[scatter_idx].unroll_blobs[curr_unroll].start_scatter_blob_num_cfg_regs;
    d318:	04c72603          	lw	a2, 76(a4)
    d31c:	01160633          	add	a2, a2, a7
    d320:	00c62603          	lw	a2, 12(a2)
    d324:	00560633          	add	a2, a2, t0
    d328:	00462883          	lw	a7, 4(a2)
    d32c:	f4dff06f          	j	d278 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xcf4>
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:26
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, 0); // Prevent accidental clearing
    d330:	02092223          	sw	zero, 36(s2)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:118
  blob_start_addr += mulsi3(mblock_buffering_count,blob_size);
    d334:	00160633          	add	a2, a2, ra
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:120
  if (auto_cfg_header == 0 || is_scatter) {
    d338:	000d0463          	beqz	s10, d340 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xdbc>
    d33c:	100f8c63          	beqz	t6, d454 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xed0>
stream_phase_blob_run(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:28
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr);
    d340:	02c92823          	sw	a2, 48(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    d344:	01889893          	slli	a7, a7, 0x18
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    d348:	00003637          	lui	a2, 0x3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:29
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, start_phase_num_cfg_regs << NEXT_PHASE_NUM_CFG_REG_WRITES);
    d34c:	09192823          	sw	a7, 144(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:30
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | (1 << NEXT_PHASE_SRC_CHANGE) | (1 << NEXT_PHASE_DEST_CHANGE));
    d350:	20060613          	addi	a2, a2, 512 # 3200 <__firmware_start+0x1200>
    d354:	02c92423          	sw	a2, 40(s2)
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:126
  if (is_scatter) {
    d358:	120f9463          	bnez	t6, d480 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xefc>
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:214
      all_kernels_done = false; // prevent breaking from outer loop
    d35c:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:210
      if (epoch_iters_remaining == 0) {
    d360:	000e1663          	bnez	t3, d36c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xde8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:211
        volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    d364:	114ea703          	lw	a4, 276(t4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:212
        l1_stream_info->epoch_iters_remaining = 0;
    d368:	02072823          	sw	zero, 48(a4)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    d36c:	08c92603          	lw	a2, 140(s2)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:217
    uint32_t phase_active = stream_phase_is_active(stream_id) && !is_dummy_phase(stream_id);
    d370:	00000713          	li	a4, 0
    d374:	00467613          	andi	a2, a2, 4
    d378:	00060a63          	beqz	a2, d38c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xe08>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
    d37c:	02c92703          	lw	a4, 44(s2)
is_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:438
  uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
    d380:	00f75713          	srli	a4, a4, 0xf
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:217
    d384:	fe170713          	addi	a4, a4, -31
    d388:	00e03733          	snez	a4, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:219
    uint16_t epoch_tiles_received = *epoch_tiles_received_ptr;
    d38c:	04812603          	lw	a2, 72(sp)
    d390:	00062d83          	lw	s11, 0(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:220
    uint16_t epoch_tiles_acked = *epoch_tiles_acked_ptr;
    d394:	000b2603          	lw	a2, 0(s6)
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:55
  return a - b;
    d398:	40cd8db3          	sub	s11, s11, a2
    d39c:	010d9d93          	slli	s11, s11, 0x10
    d3a0:	010ddd93          	srli	s11, s11, 0x10
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:223
    if (num_tiles_recv > 0 && num_tiles_recv >= num_msgs_in_block) {
    d3a4:	120d8c63          	beqz	s11, d4dc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf58>
    d3a8:	135dea63          	bltu	s11, s5, d4dc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf58>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:241
      all_kernels_done = false; // prevent breaking from outer loop
    d3ac:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:224
      if (phase_active) {
    d3b0:	12070863          	beqz	a4, d4e0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf5c>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    d3b4:	09092703          	lw	a4, 144(s2)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    d3b8:	01c92603          	lw	a2, 28(s2)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:227
        if (prev_output_state->eth_fw_stream) {
    d3bc:	fcc4c583          	lbu	a1, -52(s1)
    d3c0:	0e058663          	beqz	a1, d4ac <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf28>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:228
          volatile epoch_stream_info_t tt_l1_ptr * l1_stream_info = RISC_EPOCH_INFO_PTR->active_streams[active_streams_idx];
    d3c4:	044b8713          	addi	a4, s7, 68
    d3c8:	00271713          	slli	a4, a4, 0x2
    d3cc:	00e98733          	add	a4, s3, a4
    d3d0:	00472703          	lw	a4, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:229
          num_tiles = num_msgs_in_block == 0 ? num_tiles_recv : num_msgs_in_block;
    d3d4:	000a8463          	beqz	s5, d3dc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xe58>
    d3d8:	000a8d93          	mv	s11, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:230
          num_words = mulsi3(num_tiles, l1_stream_info->tile_size_words);
    d3dc:	00c72603          	lw	a2, 12(a4)
    d3e0:	000d8713          	mv	a4, s11
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    d3e4:	00177593          	andi	a1, a4, 1
    d3e8:	00058463          	beqz	a1, d3f0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xe6c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    d3ec:	00c787b3          	add	a5, a5, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    d3f0:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    d3f4:	00161613          	slli	a2, a2, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    d3f8:	fe0716e3          	bnez	a4, d3e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xe60>
send_scatter_tiles(unsigned long, unsigned long, unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:90
  if (dram_output_no_push) {
    d3fc:	0066d703          	lhu	a4, 6(a3)
    d400:	01471693          	slli	a3, a4, 0x14
    d404:	0a06dc63          	bgez	a3, d4bc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf38>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:91
    volatile uint32_t tt_reg_ptr* tiles_received_ptr = (volatile uint32_t tt_reg_ptr*)get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    d408:	ffbf3097          	auipc	ra, 0xffbf3
    d40c:	c7c080e7          	jalr	-900(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    d410:	ffbf3097          	auipc	ra, 0xffbf3
    d414:	c38080e7          	jalr	-968(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    d418:	00850533          	add	a0, a0, s0
    d41c:	00c51513          	slli	a0, a0, 0xc
send_scatter_tiles(unsigned long, unsigned long, unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:92
    uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
    d420:	01052783          	lw	a5, 16(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
    d424:	01b78db3          	add	s11, a5, s11
send_scatter_tiles(unsigned long, unsigned long, unsigned long, active_stream_info_t*, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:94
    tiles_received_ptr[0] = new_epoch_tiles_received;
    d428:	010d9d93          	slli	s11, s11, 0x10
    d42c:	010ddd93          	srli	s11, s11, 0x10
    d430:	01b52823          	sw	s11, 16(a0)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:234
        if (fork_idx == ((uint32_t)-1)) {
    d434:	03412703          	lw	a4, 52(sp)
    d438:	fff00793          	li	a5, -1
    d43c:	08f71863          	bne	a4, a5, d4cc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf48>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:235
          prev_output_state->num_msgs_in_block = num_msgs_in_block | BRISC_PACKER_SENDING_IN_PROGRESS;
    d440:	ffff87b7          	lui	a5, 0xffff8
    d444:	00faeab3          	or	s5, s5, a5
    d448:	ff549023          	sh	s5, -32(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:241
      all_kernels_done = false; // prevent breaking from outer loop
    d44c:	00000d13          	li	s10, 0
    d450:	0900006f          	j	d4e0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf5c>
stream_phase_blob_run_offset(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:37
  uint32_t blob_offset = NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX) - blob_base_addr;
    d454:	03092083          	lw	ra, 48(s2)
    d458:	407080b3          	sub	ra, ra, t2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:38
  while (blob_offset >= blob_size)
    d45c:	01e0e663          	bltu	ra, t5, d468 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xee4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:39
    blob_offset -= blob_size;
    d460:	41e080b3          	sub	ra, ra, t5
    d464:	ff9ff06f          	j	d45c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xed8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:40
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_PTR_REG_INDEX, blob_start_addr + blob_offset);
    d468:	001600b3          	add	ra, a2, ra
    d46c:	02192823          	sw	ra, 48(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:41
  uint32_t misc_cfg_reg = NOC_STREAM_READ_REG(stream_id, STREAM_MISC_CFG_REG_INDEX);
    d470:	02892703          	lw	a4, 40(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:42
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, (0x1 << PHASE_AUTO_CONFIG) | misc_cfg_reg);
    d474:	20076713          	ori	a4, a4, 512
    d478:	02e92423          	sw	a4, 40(s2)
    d47c:	ee1ff06f          	j	d35c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xdd8>
run_pack_stream(kernel_output_stream_state_t*, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:128
    uint32_t max_unroll = l1_stream_info->scatter_pipe_state[scatter_idx].max_unroll;
    d480:	04c72603          	lw	a2, 76(a4)
    d484:	00481813          	slli	a6, a6, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:127
    curr_unroll = curr_unroll + 1;
    d488:	00158593          	addi	a1, a1, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:128
    uint32_t max_unroll = l1_stream_info->scatter_pipe_state[scatter_idx].max_unroll;
    d48c:	01060633          	add	a2, a2, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:129
    if (curr_unroll >= max_unroll)
    d490:	00462603          	lw	a2, 4(a2)
    d494:	00c5e463          	bltu	a1, a2, d49c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf18>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:130
      curr_unroll = 0;
    d498:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:131
    l1_stream_info->scatter_pipe_state[scatter_idx].curr_unroll = curr_unroll;
    d49c:	04c72703          	lw	a4, 76(a4)
    d4a0:	01070833          	add	a6, a4, a6
    d4a4:	00b82023          	sw	a1, 0(a6)
    d4a8:	eb5ff06f          	j	d35c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xdd8>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    d4ac:	00871713          	slli	a4, a4, 0x8
    d4b0:	01475d93          	srli	s11, a4, 0x14
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:226
        uint32_t num_words = stream_get_data_buf_size(stream_id);
    d4b4:	00060793          	mv	a5, a2
    d4b8:	f45ff06f          	j	d3fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xe78>
stream_relay_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:207
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
    d4bc:	00c79793          	slli	a5, a5, 0xc
    d4c0:	01b7edb3          	or	s11, a5, s11
    d4c4:	07b92c23          	sw	s11, 120(s2)
    d4c8:	f6dff06f          	j	d434 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xeb0>
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:237
          set_fork_num_msgs_in_block(stream_id, num_msgs_in_block | BRISC_PACKER_SENDING_IN_PROGRESS);
    d4cc:	000087b7          	lui	a5, 0x8
    d4d0:	00faeab3          	or	s5, s5, a5
set_fork_num_msgs_in_block(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:78
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, val);
    d4d4:	01592223          	sw	s5, 4(s2)
    d4d8:	f75ff06f          	j	d44c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xec8>
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:244
      if (phase_active) {
    d4dc:	f60718e3          	bnez	a4, d44c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xec8>
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:978
        process_scatter_send(fork_stream_id, active_stream_info, fork_active_streams_idx, prev_output_state,
                             epoch_tiles_acked_ptr, epoch_tiles_received_ptr, all_kernels_done, k == 0 ? -1 : k-1,
                             scatter_inner_loop_done);
        if (erisc) {
          if (active_stream_info[fork_active_streams_idx].epoch_iters_remaining > 0) {
    d4e0:	00c00793          	li	a5, 12
    d4e4:	02fb8bb3          	mul	s7, s7, a5
    d4e8:	04012783          	lw	a5, 64(sp)
    d4ec:	01778bb3          	add	s7, a5, s7
    d4f0:	008ba783          	lw	a5, 8(s7)
    d4f4:	00078463          	beqz	a5, d4fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xf78>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:979
            all_kernels_done = false;
    d4f8:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:971
      for (uint32_t k = 0; k < num_fork_streams+1; k++) {
    d4fc:	001c0c13          	addi	s8, s8, 1
    d500:	c99c6ae3          	bltu	s8, s9, d194 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xc10>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:858
    for (uint32_t output = 0; output < num_output_streams; output++) {
    d504:	03812783          	lw	a5, 56(sp)
    d508:	00178793          	addi	a5, a5, 1 # 8001 <__trisc_base+0x1401>
    d50c:	02f12c23          	sw	a5, 56(sp)
    d510:	96dff06f          	j	ce7c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x8f8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:991
    if (all_kernels_done) {
      break;
    }
#else
    //erisc does not need the outer loop.
    RISC_EPOCH_INFO_PTR->all_streams_and_kernels_done = all_kernels_done;
    d514:	000207b7          	lui	a5, 0x20
    d518:	09a78723          	sb	s10, 142(a5) # 2008e <risc_chip_specific.cc.5b7d4a1c+0x10b2>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    d51c:	ffb20737          	lui	a4, 0xffb20
    d520:	f00006b7          	lui	a3, 0xf0000
    d524:	10d72623          	sw	a3, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
check_whether_poll_immediately(unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:894
  uint32_t poll_freq = RISC_EPOCH_RUNTIME_CONFIG_PTR->dram_header_polling_freq;
    d528:	0047a783          	lw	a5, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:895
  if (poll_freq && (dram_ptr_update_cnt & DRAM_PTR_UPDATE_MASK) < poll_freq) {
    d52c:	02078063          	beqz	a5, d54c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xfc8>
    d530:	0cc12703          	lw	a4, 204(sp)
    d534:	03f77693          	andi	a3, a4, 63
    d538:	00f6fa63          	bgeu	a3, a5, d54c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xfc8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:896
    dram_ptr_update_cnt = (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK) | (poll_freq & DRAM_PTR_UPDATE_MASK);
    d53c:	03f7f793          	andi	a5, a5, 63
    d540:	fc077713          	andi	a4, a4, -64
    d544:	00e7e7b3          	or	a5, a5, a4
    d548:	0cf12623          	sw	a5, 204(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1833
    bool dram_ptr_update = ((dram_ptr_update_cnt & DRAM_PTR_UPDATE_MASK) == 0);
    d54c:	0cc12783          	lw	a5, 204(sp)
    d550:	03f7f713          	andi	a4, a5, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1834
    dram_ptr_update_cnt = (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK) | ((dram_ptr_update_cnt & DRAM_PTR_UPDATE_MASK) + 1) ;
    d554:	00170693          	addi	a3, a4, 1
    d558:	fc07f793          	andi	a5, a5, -64
    d55c:	00d7e7b3          	or	a5, a5, a3
    d560:	0cf12623          	sw	a5, 204(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1836
    if (dram_ptr_update) {
    d564:	02071263          	bnez	a4, d588 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1004>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    d568:	ffb207b7          	lui	a5, 0xffb20
    d56c:	c0000737          	lui	a4, 0xc0000
    d570:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1845
      poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
    d574:	0ec10593          	addi	a1, sp, 236
    d578:	0e810513          	addi	a0, sp, 232
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1838
      bool check_ptrs_flushed = false;
    d57c:	0e010423          	sb	zero, 232(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1845
      poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
    d580:	ffbf3097          	auipc	ra, 0xffbf3
    d584:	f2c080e7          	jalr	-212(ra) # ffc004ac <TENSIX_MAILBOX_BASE+0xffd404ac>
    d588:	03012783          	lw	a5, 48(sp)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:979
            all_kernels_done = false;
    d58c:	04012423          	sw	zero, 72(sp)
    d590:	a0078d13          	addi	s10, a5, -1536
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:460
        uint32_t wrptr_val_issue = next_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
    d594:	ffff87b7          	lui	a5, 0xffff8
    d598:	fff78793          	addi	a5, a5, -1 # ffff7fff <TENSIX_MAILBOX_BASE+0x137fff>
    d59c:	06f12623          	sw	a5, 108(sp)
    d5a0:	fc8d0793          	addi	a5, s10, -56
    d5a4:	04f12223          	sw	a5, 68(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1851
         i < num_dram_input_streams;
    d5a8:	03012783          	lw	a5, 48(sp)
    d5ac:	04812703          	lw	a4, 72(sp)
    d5b0:	c147a783          	lw	a5, -1004(a5)
    d5b4:	20f778e3          	bgeu	a4, a5, dfc4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1a40>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1857
      uint32_t moves_raw_data = curr_dram_input_stream_state->moves_raw_data;
    d5b8:	fd8d4783          	lbu	a5, -40(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1856
      uint32_t stream_id = curr_dram_input_stream_state->stream_id;
    d5bc:	fc8d4483          	lbu	s1, -56(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1857
      uint32_t moves_raw_data = curr_dram_input_stream_state->moves_raw_data;
    d5c0:	02f12a23          	sw	a5, 52(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1861
      read_phase_active(stream_id, curr_dram_input_stream_state, phase_active, curr_phase_tiles_remaining_to_issue);
    d5c4:	04412583          	lw	a1, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1858
      uint32_t epoch_q_slots_remaining = curr_dram_input_stream_state->epoch_q_slots_remaining;
    d5c8:	fe0d2783          	lw	a5, -32(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1854
      dram_q_state_t tt_l1_ptr * next_dram_q_issue_temp = curr_dram_input_stream_state->next_dram_q_issue;
    d5cc:	010d2983          	lw	s3, 16(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1861
      read_phase_active(stream_id, curr_dram_input_stream_state, phase_active, curr_phase_tiles_remaining_to_issue);
    d5d0:	0dc10693          	addi	a3, sp, 220
    d5d4:	0d810613          	addi	a2, sp, 216
    d5d8:	00048513          	mv	a0, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1858
      uint32_t epoch_q_slots_remaining = curr_dram_input_stream_state->epoch_q_slots_remaining;
    d5dc:	0cf12a23          	sw	a5, 212(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1861
      read_phase_active(stream_id, curr_dram_input_stream_state, phase_active, curr_phase_tiles_remaining_to_issue);
    d5e0:	ffbf3097          	auipc	ra, 0xffbf3
    d5e4:	b24080e7          	jalr	-1244(ra) # ffc00104 <TENSIX_MAILBOX_BASE+0xffd40104>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1862
      bool is_dram_streaming_read = next_dram_q_issue->l1_dram_incoming_ptr_index && (next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
    d5e8:	0059c783          	lbu	a5, 5(s3)
    d5ec:	00078863          	beqz	a5, d5fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1078>
    d5f0:	0049c783          	lbu	a5, 4(s3)
    d5f4:	0087f793          	andi	a5, a5, 8
    d5f8:	0e079663          	bnez	a5, d6e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1160>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1865
        uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    d5fc:	fccd5783          	lhu	a5, -52(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1867
        bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
    d600:	00100913          	li	s2, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1865
        uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    d604:	02f12c23          	sw	a5, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1866
        bool q_ptr_update_pending = curr_dram_input_stream_state->q_ptr_update_pending;
    d608:	fcad4783          	lbu	a5, -54(s10)
    d60c:	02f12e23          	sw	a5, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1867
        bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
    d610:	fcbd4783          	lbu	a5, -53(s10)
    d614:	00079e63          	bnez	a5, d630 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x10ac>
stream_is_dram_read_opt_enabled(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:189
  return !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE);
    d618:	008487b3          	add	a5, s1, s0
    d61c:	00c79793          	slli	a5, a5, 0xc
    d620:	0287a903          	lw	s2, 40(a5)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1867
    d624:	00c95913          	srli	s2, s2, 0xc
    d628:	00194913          	xori	s2, s2, 1
    d62c:	00197913          	andi	s2, s2, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1870
        if (moves_raw_data) {
    d630:	03412783          	lw	a5, 52(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1868
        curr_dram_input_stream_state->dram_read_opt_enabled = is_dram_read_opt_enabled;
    d634:	fd2d05a3          	sb	s2, -53(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1870
        if (moves_raw_data) {
    d638:	08078263          	beqz	a5, d6bc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1138>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1871
          if (phase_active && !curr_phase_tiles_remaining_to_issue && !prev_in_flight_data_rec_chunks) {
    d63c:	0d812783          	lw	a5, 216(sp)
    d640:	06078e63          	beqz	a5, d6bc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1138>
    d644:	0dc12783          	lw	a5, 220(sp)
    d648:	06079a63          	bnez	a5, d6bc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1138>
    d64c:	03812783          	lw	a5, 56(sp)
    d650:	06079663          	bnez	a5, d6bc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1138>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1872
            uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    d654:	00048513          	mv	a0, s1
    d658:	ffbf3097          	auipc	ra, 0xffbf3
    d65c:	a2c080e7          	jalr	-1492(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
    d660:	ffbf3097          	auipc	ra, 0xffbf3
    d664:	9e8080e7          	jalr	-1560(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    d668:	00850533          	add	a0, a0, s0
    d66c:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1872
    d670:	01052a03          	lw	s4, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1873
            uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    d674:	00048513          	mv	a0, s1
    d678:	ffbf3097          	auipc	ra, 0xffbf3
    d67c:	a0c080e7          	jalr	-1524(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    d680:	ffbf3097          	auipc	ra, 0xffbf3
    d684:	9c8080e7          	jalr	-1592(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    d688:	00850533          	add	a0, a0, s0
    d68c:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1873
    d690:	00c52783          	lw	a5, 12(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1875
            if (tiles_available == 0) {
    d694:	010a1a13          	slli	s4, s4, 0x10
    d698:	010a5a13          	srli	s4, s4, 0x10
    d69c:	01079793          	slli	a5, a5, 0x10
    d6a0:	0107d793          	srli	a5, a5, 0x10
    d6a4:	00fa1c63          	bne	s4, a5, d6bc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1138>
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    d6a8:	008487b3          	add	a5, s1, s0
    d6ac:	00c79793          	slli	a5, a5, 0xc
    d6b0:	00100713          	li	a4, 1
    d6b4:	06e7ae23          	sw	a4, 124(a5)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1877
              phase_active = false;
    d6b8:	0c012c23          	sw	zero, 216(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1882
        if (epoch_q_slots_remaining && (is_dram_read_opt_enabled || (phase_active && curr_phase_tiles_remaining_to_issue && !q_ptr_update_pending))) {
    d6bc:	0d412783          	lw	a5, 212(sp)
    d6c0:	24078463          	beqz	a5, d908 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1384>
    d6c4:	02091e63          	bnez	s2, d700 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x117c>
    d6c8:	0d812783          	lw	a5, 216(sp)
    d6cc:	00079463          	bnez	a5, d6d4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1150>
    d6d0:	1950106f          	j	f064 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2ae0>
    d6d4:	0dc12783          	lw	a5, 220(sp)
    d6d8:	02079063          	bnez	a5, d6f8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1174>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1930
        if ((is_dram_read_opt_enabled || q_ptr_update_pending || phase_active) && (prev_in_flight_data_rec_chunks > 0)) {
    d6dc:	03812783          	lw	a5, 56(sp)
    d6e0:	60079463          	bnez	a5, dce8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1764>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1850
    for (uint32_t i = 0;
    d6e4:	04812783          	lw	a5, 72(sp)
    d6e8:	054d0d13          	addi	s10, s10, 84
    d6ec:	00178793          	addi	a5, a5, 1
    d6f0:	04f12423          	sw	a5, 72(sp)
    d6f4:	eadff06f          	j	d5a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x101c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1882
        if (epoch_q_slots_remaining && (is_dram_read_opt_enabled || (phase_active && curr_phase_tiles_remaining_to_issue && !q_ptr_update_pending))) {
    d6f8:	03c12783          	lw	a5, 60(sp)
    d6fc:	fe0790e3          	bnez	a5, d6dc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1158>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1886
          volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    d700:	0009aa83          	lw	s5, 0(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1884
          RISC_POST_STATUS(0xD1000000 | stream_id);
    d704:	d10007b7          	lui	a5, 0xd1000
    d708:	00f4e7b3          	or	a5, s1, a5
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    d70c:	ffb206b7          	lui	a3, 0xffb20
    d710:	10f6a623          	sw	a5, 268(a3) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1888
          bool can_do_read = can_do_another_read(curr_dram_input_stream_state->input_noc, data_rec_chunk_size_bytes, curr_dram_input_stream_state->prev_rd_data_word_recv);
    d714:	ffcd2603          	lw	a2, -4(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1887
          uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    d718:	038aa783          	lw	a5, 56(s5)
can_do_another_read(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:360
  next_stride_wrap = !vanilla_stride_wrap;
  return stride_iter_matches_expr;
}

inline __attribute__((always_inline)) bool can_do_another_read(uint32_t input_noc, uint32_t data_rec_chunk_size_bytes, uint32_t prev_rd_data_word_recv) {
  if (prev_rd_data_word_recv == 0)
    d71c:	02060863          	beqz	a2, d74c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x11c8>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1888
          bool can_do_read = can_do_another_read(curr_dram_input_stream_state->input_noc, data_rec_chunk_size_bytes, curr_dram_input_stream_state->prev_rd_data_word_recv);
    d720:	fc9d4703          	lbu	a4, -55(s10)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    d724:	20c68693          	addi	a3, a3, 524
    d728:	01071713          	slli	a4, a4, 0x10
    d72c:	00d70733          	add	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
    d730:	00072703          	lw	a4, 0(a4) # c0000000 <TENSIX_MAILBOX_BASE+0xc0140000>
can_do_another_read(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:364
    return true;
  uint32_t cur_rd_data_word_recv = ncrisc_rd_data_word_recv(input_noc);
  uint32_t words_recv = cur_rd_data_word_recv - prev_rd_data_word_recv;
  uint32_t data_rec_chunk_size_words = data_rec_chunk_size_bytes/NOC_WORD_BYTES;
    d734:	0057d793          	srli	a5, a5, 0x5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:365
  uint32_t data_rec_chunk_size_words_thresh = data_rec_chunk_size_words > READ_WORDS_THRESH ? data_rec_chunk_size_words - READ_WORDS_THRESH : 0;
    d738:	2ee00693          	li	a3, 750
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:363
  uint32_t words_recv = cur_rd_data_word_recv - prev_rd_data_word_recv;
    d73c:	40c70733          	sub	a4, a4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:365
  uint32_t data_rec_chunk_size_words_thresh = data_rec_chunk_size_words > READ_WORDS_THRESH ? data_rec_chunk_size_words - READ_WORDS_THRESH : 0;
    d740:	00d7e663          	bltu	a5, a3, d74c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x11c8>
    d744:	d1278793          	addi	a5, a5, -750 # d0fffd12 <TENSIX_MAILBOX_BASE+0xd113fd12>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:366
  if (words_recv >= data_rec_chunk_size_words_thresh)
    d748:	1cf76063          	bltu	a4, a5, d908 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1384>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    d74c:	ffb207b7          	lui	a5, 0xffb20
    d750:	d1200737          	lui	a4, 0xd1200
    d754:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:180
  if (moves_raw_data) {
    d758:	03412783          	lw	a5, 52(sp)
    d75c:	1c078263          	beqz	a5, d920 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x139c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:181
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
    d760:	018d2783          	lw	a5, 24(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:184
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    d764:	00048513          	mv	a0, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:181
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
    d768:	0887a783          	lw	a5, 136(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:182
    uint32_t scatter_list_stream_id = dram_io_info->scatter_list_stream_id;
    d76c:	0087db03          	lhu	s6, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:183
    uint32_t hw_tilize = dram_io_info->hw_tilize;
    d770:	01b7cb83          	lbu	s7, 27(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:184
    uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    d774:	ffbf3097          	auipc	ra, 0xffbf3
    d778:	910080e7          	jalr	-1776(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    d77c:	ffbf3097          	auipc	ra, 0xffbf3
    d780:	8cc080e7          	jalr	-1844(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    d784:	00850533          	add	a0, a0, s0
    d788:	00c51513          	slli	a0, a0, 0xc
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:184
    d78c:	01052a03          	lw	s4, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:185
    uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    d790:	00048513          	mv	a0, s1
    d794:	ffbf3097          	auipc	ra, 0xffbf3
    d798:	8f0080e7          	jalr	-1808(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    d79c:	ffbf3097          	auipc	ra, 0xffbf3
    d7a0:	8ac080e7          	jalr	-1876(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    d7a4:	00850533          	add	a0, a0, s0
    d7a8:	00c51513          	slli	a0, a0, 0xc
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:185
    d7ac:	00c52783          	lw	a5, 12(a0)
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:55
  return a - b;
    d7b0:	40fa07b3          	sub	a5, s4, a5
    d7b4:	01079793          	slli	a5, a5, 0x10
    d7b8:	0107d793          	srli	a5, a5, 0x10
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:188
    if ((scatter_list_stream_id || hw_tilize) && tiles_available != 0) {
    d7bc:	000b1463          	bnez	s6, d7c4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1240>
    d7c0:	000b8463          	beqz	s7, d7c8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1244>
    d7c4:	14079263          	bnez	a5, d908 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1384>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:194
    uint32_t stream_buf_size_tiles = curr_dram_input_stream_state->stream_info->buf_size_tiles;
    d7c8:	018d2503          	lw	a0, 24(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:193
    uint32_t data_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
    d7cc:	03cad703          	lhu	a4, 60(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:194
    uint32_t stream_buf_size_tiles = curr_dram_input_stream_state->stream_info->buf_size_tiles;
    d7d0:	01052683          	lw	a3, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    d7d4:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:196
    uint32_t in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    d7d8:	00070593          	mv	a1, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:195
    uint32_t stream_buf_free_tiles = stream_buf_size_tiles - tiles_available;
    d7dc:	40f687b3          	sub	a5, a3, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:196
    uint32_t in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    d7e0:	fccd5683          	lhu	a3, -52(s10)
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    d7e4:	00068e63          	beqz	a3, d800 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x127c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    d7e8:	0016f813          	andi	a6, a3, 1
    d7ec:	00080463          	beqz	a6, d7f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1270>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    d7f0:	00b60633          	add	a2, a2, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    d7f4:	0016d693          	srli	a3, a3, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    d7f8:	00159593          	slli	a1, a1, 0x1
    d7fc:	fe9ff06f          	j	d7e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1260>
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:199
    uint32_t stream_msg_info_buf_ptr = (curr_dram_input_stream_state->stream_info->msg_info_buf_start)*MEM_WORD_WIDTH;
    d800:	02052683          	lw	a3, 32(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:198
    uint32_t stream_buf_tiles_free_thr = (data_chunk_size_tiles + in_flight_tiles);
    d804:	00c70733          	add	a4, a4, a2
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1902
            if (stream_has_free_space) {
    d808:	10e7e063          	bltu	a5, a4, d908 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1384>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    d80c:	ffb207b7          	lui	a5, 0xffb20
    d810:	d2000737          	lui	a4, 0xd2000
stream_dram_read_should_reset_pointers(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:235
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX);
    d814:	00848db3          	add	s11, s1, s0
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    d818:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_dram_read_should_reset_pointers(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:235
    d81c:	00cd9d93          	slli	s11, s11, 0xc
    d820:	004da783          	lw	a5, 4(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:236
  uint32_t should_reset_pointers = rmw >> 16;
    d824:	0107d713          	srli	a4, a5, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:237
  if (should_reset_pointers)
    d828:	00070a63          	beqz	a4, d83c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x12b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:238
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw & 0xffff));  // used as scratch reg for receiver endpoint streams
    d82c:	01079793          	slli	a5, a5, 0x10
    d830:	0107d793          	srli	a5, a5, 0x10
    d834:	00fda223          	sw	a5, 4(s11)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1914
                curr_dram_input_stream_state->stream_flushed_ptr_byte = 0;
    d838:	fc0d2a23          	sw	zero, -44(s10)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:445
  uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    d83c:	fccd5783          	lhu	a5, -52(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:447
  bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
    d840:	00100713          	li	a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:445
  uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    d844:	04f12623          	sw	a5, 76(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:447
  bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
    d848:	fcbd4783          	lbu	a5, -53(s10)
    d84c:	04e12823          	sw	a4, 80(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1917
              dram_input_stream_scatter_read(stream_id, curr_phase_tiles_remaining_to_issue, stream_buf_bytes_free, curr_dram_input_stream_state, next_dram_q_issue, dram_ptr_update_cnt);
    d850:	0dc12b03          	lw	s6, 220(sp)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:446
  uint32_t in_flight_bytes = curr_dram_input_stream_state->in_flight_bytes;
    d854:	fdcd2b83          	lw	s7, -36(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:447
  bool is_dram_read_opt_enabled = curr_dram_input_stream_state->dram_read_opt_enabled || stream_is_dram_read_opt_enabled(stream_id);
    d858:	00079c63          	bnez	a5, d870 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x12ec>
stream_is_dram_read_opt_enabled(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:189
  return !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE);
    d85c:	028da783          	lw	a5, 40(s11)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:447
    d860:	00c7d793          	srli	a5, a5, 0xc
    d864:	0017c793          	xori	a5, a5, 1
    d868:	0017f793          	andi	a5, a5, 1
    d86c:	04f12823          	sw	a5, 80(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:448
  volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    d870:	0009a703          	lw	a4, 0(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:452
  uint32_t min_dram_io_entries = curr_dram_input_stream_state->min_dram_io_entries;
    d874:	fced5a03          	lhu	s4, -50(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:449
  uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    d878:	03872783          	lw	a5, 56(a4) # d2000038 <TENSIX_MAILBOX_BASE+0xd2140038>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:450
  dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state = l1_ptrs->dram_io_scatter_state;
    d87c:	05872303          	lw	t1, 88(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:449
  uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    d880:	04f12e23          	sw	a5, 92(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:454
  if (min_dram_io_entries == 0) {
    d884:	120a1063          	bnez	s4, d9a4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1420>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1854
      dram_q_state_t tt_l1_ptr * next_dram_q_issue_temp = curr_dram_input_stream_state->next_dram_q_issue;
    d888:	00098593          	mv	a1, s3
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:455
    min_dram_io_entries = ~0;
    d88c:	fff00a13          	li	s4, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:458
      if (!l1_ptrs->dram_padding) {
    d890:	03e74683          	lbu	a3, 62(a4)
    d894:	00100793          	li	a5, 1
    d898:	04069e63          	bnez	a3, d8f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1370>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:460
        uint32_t wrptr_val_issue = next_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
    d89c:	00a5d683          	lhu	a3, 10(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:459
        uint32_t rdptr_val_issue = next_dram_q_issue->dram_ptr_issued_q_slots;
    d8a0:	0065d503          	lhu	a0, 6(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:460
        uint32_t wrptr_val_issue = next_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
    d8a4:	06c12783          	lw	a5, 108(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:461
        uint32_t dram_buf_size_q_slots = next_dram_q_issue->dram_buf_size_q_slots;
    d8a8:	00c5d603          	lhu	a2, 12(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:460
        uint32_t wrptr_val_issue = next_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
    d8ac:	00f6f6b3          	and	a3, a3, a5
dram_io_entries(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:93
  if (wr_ptr >= rd_ptr)
    d8b0:	0ca6e463          	bltu	a3, a0, d978 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x13f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:94
    return wr_ptr - rd_ptr;
    d8b4:	40a68633          	sub	a2, a3, a0
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:463
        uint16_t rd_epoch_id_tag = l1_ptrs->rd_epoch_id_tag;
    d8b8:	00a75803          	lhu	a6, 10(a4)
    d8bc:	01467463          	bgeu	a2, s4, d8c4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1340>
    d8c0:	00060a13          	mv	s4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:468
        bool dram_q_slot_available = ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 || !dram_io_local_empty(rdptr_val_issue, l1_ptrs->rd_dram_rdptr, wrptr_val_issue)) &&
    d8c4:	0045c603          	lbu	a2, 4(a1)
    d8c8:	00167613          	andi	a2, a2, 1
    d8cc:	00060463          	beqz	a2, d8d4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1350>
    d8d0:	7b00106f          	j	f080 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2afc>
    d8d4:	00075703          	lhu	a4, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:470
        all_dram_q_slot_available = all_dram_q_slot_available && dram_q_slot_available;
    d8d8:	00000793          	li	a5, 0
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:75
  if (rd_ptr == wr_ptr)
    d8dc:	00e68c63          	beq	a3, a4, d8f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1370>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:78
  uint32_t case1 = rd_ptr < wr_ptr && (local_rd_ptr < rd_ptr || local_rd_ptr >= wr_ptr);
    d8e0:	00d76463          	bltu	a4, a3, d8e8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1364>
    d8e4:	7880106f          	j	f06c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2ae8>
    d8e8:	00e56663          	bltu	a0, a4, d8f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1370>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:81
  return case1 || case2;
    d8ec:	00d57463          	bgeu	a0, a3, d8f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1370>
    d8f0:	7900106f          	j	f080 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2afc>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:473
      next_dram_q_issue = (dram_q_state_t tt_l1_ptr *)next_dram_q_issue->next;
    d8f4:	0205a583          	lw	a1, 32(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:474
      l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    d8f8:	0005a703          	lw	a4, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:475
      if (next_dram_q_issue == first_dram_q_issue || !all_dram_q_slot_available) {
    d8fc:	08b98663          	beq	s3, a1, d988 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1404>
    d900:	f80798e3          	bnez	a5, d890 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x130c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:482
  if (min_dram_io_entries <= DRAM_MIN_ENTIRES_POLL && (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK))
    d904:	080a0463          	beqz	s4, d98c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1408>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1930
        if ((is_dram_read_opt_enabled || q_ptr_update_pending || phase_active) && (prev_in_flight_data_rec_chunks > 0)) {
    d908:	dc091ae3          	bnez	s2, d6dc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1158>
    d90c:	03c12783          	lw	a5, 60(sp)
    d910:	dc0796e3          	bnez	a5, d6dc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1158>
    d914:	0d812783          	lw	a5, 216(sp)
    d918:	dc0792e3          	bnez	a5, d6dc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1158>
    d91c:	dc9ff06f          	j	d6e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1160>
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:204
    uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    d920:	038aa683          	lw	a3, 56(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:206
    uint32_t stream_buf_bytes_free_thr = (data_rec_chunk_size_bytes + in_flight_bytes);
    d924:	fdcd2783          	lw	a5, -36(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:208
    stream_has_free_space = (stream_buf_bytes_free >= stream_buf_bytes_free_thr);
    d928:	000d0713          	mv	a4, s10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:212
      if (fork_stream_id == NULL_STREAM) {
    d92c:	0ff00613          	li	a2, 255
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:206
    uint32_t stream_buf_bytes_free_thr = (data_rec_chunk_size_bytes + in_flight_bytes);
    d930:	00f686b3          	add	a3, a3, a5
stream_get_buf_space_available_words(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:181
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
    d934:	008487b3          	add	a5, s1, s0
    d938:	00c79793          	slli	a5, a5, 0xc
    d93c:	0707a783          	lw	a5, 112(a5)
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:207
    stream_buf_bytes_free = (stream_get_buf_space_available_words(stream_id) * MEM_WORD_WIDTH);
    d940:	00479793          	slli	a5, a5, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:208
    stream_has_free_space = (stream_buf_bytes_free >= stream_buf_bytes_free_thr);
    d944:	00d7b7b3          	sltu	a5, a5, a3
    d948:	0017c793          	xori	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:210
    while (stream_has_free_space) {
    d94c:	fa078ee3          	beqz	a5, d908 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1384>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:211
      uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    d950:	00074783          	lbu	a5, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:212
      if (fork_stream_id == NULL_STREAM) {
    d954:	00170713          	addi	a4, a4, 1
    d958:	eac78ae3          	beq	a5, a2, d80c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1288>
stream_get_buf_space_available_words(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:181
    d95c:	008787b3          	add	a5, a5, s0
    d960:	00c79793          	slli	a5, a5, 0xc
    d964:	0707a783          	lw	a5, 112(a5)
get_buf_space_available_words(dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, bool, unsigned long&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:216
      uint32_t fork_stream_buf_bytes_free = (stream_get_buf_space_available_words(fork_stream_id) * MEM_WORD_WIDTH);
    d968:	00479793          	slli	a5, a5, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:217
      stream_has_free_space &= (fork_stream_buf_bytes_free >= stream_buf_bytes_free_thr);
    d96c:	00d7b7b3          	sltu	a5, a5, a3
    d970:	0017c793          	xori	a5, a5, 1
    d974:	fd9ff06f          	j	d94c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x13c8>
dram_io_entries(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:96
    return 2*buf_size_q_slots - rd_ptr + wr_ptr;
    d978:	00161613          	slli	a2, a2, 0x1
    d97c:	00d60633          	add	a2, a2, a3
    d980:	40a60633          	sub	a2, a2, a0
    d984:	f35ff06f          	j	d8b8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1334>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:482
  if (min_dram_io_entries <= DRAM_MIN_ENTIRES_POLL && (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK))
    d988:	000a1c63          	bnez	s4, d9a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x141c>
    d98c:	0cc12a03          	lw	s4, 204(sp)
    d990:	fc0a7a13          	andi	s4, s4, -64
    d994:	000a0663          	beqz	s4, d9a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x141c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:483
    dram_ptr_update_cnt = 0;
    d998:	0c012623          	sw	zero, 204(sp)
    d99c:	00000a13          	li	s4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:485
  if (all_dram_q_slot_available) {
    d9a0:	f60784e3          	beqz	a5, d908 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1384>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    d9a4:	ffb207b7          	lui	a5, 0xffb20
    d9a8:	d30006b7          	lui	a3, 0xd3000
    d9ac:	10d7a623          	sw	a3, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    d9b0:	01cda683          	lw	a3, 28(s11)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    d9b4:	fd4d2783          	lw	a5, -44(s10)
    d9b8:	00fb87b3          	add	a5, s7, a5
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:494
    uint32_t stream_buf_size_bytes = stream_get_data_buf_size(stream_id) * MEM_WORD_WIDTH;
    d9bc:	00469693          	slli	a3, a3, 0x4
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    d9c0:	00d7e463          	bltu	a5, a3, d9c8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1444>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    d9c4:	40d787b3          	sub	a5, a5, a3
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:498
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
    d9c8:	018d2683          	lw	a3, 24(s10)
    d9cc:	0886aa83          	lw	s5, 136(a3) # d3000088 <TENSIX_MAILBOX_BASE+0xd3140088>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    d9d0:	04872283          	lw	t0, 72(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    d9d4:	04c72f83          	lw	t6, 76(a4)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:500
    uint32_t data_rec_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
    d9d8:	03c75c03          	lhu	s8, 60(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:501
    uint32_t q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
    d9dc:	05072683          	lw	a3, 80(a4)
    d9e0:	06d12023          	sw	a3, 96(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:502
    uint32_t dram_data_buf_size_bytes = l1_ptrs->dram_buf_size_bytes;
    d9e4:	04072683          	lw	a3, 64(a4)
    d9e8:	04d12a23          	sw	a3, 84(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:510
    uint32_t rd_ptr_autoinc = (next_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
    d9ec:	0049c683          	lbu	a3, 4(s3)
    d9f0:	0016f693          	andi	a3, a3, 1
    d9f4:	20068863          	beqz	a3, dc04 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1680>
    d9f8:	00275c83          	lhu	s9, 2(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:513
    bool has_scatter_offsets = get_scatter_offsets(dram_io_scatter_state, scatter_offsets, dram_io_info->scatter_list_stream_id);
    d9fc:	008ad703          	lhu	a4, 8(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:512
    volatile tt_uint64_t tt_l1_ptr * scatter_offsets = dram_io_scatter_state->scatter_offsets;
    da00:	01c32803          	lw	a6, 28(t1)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:373
  else
    return false;
}

inline __attribute__((always_inline)) bool get_scatter_offsets(dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state, volatile tt_uint64_t tt_l1_ptr * &scatter_offsets, uint32_t scatter_list_stream_id) {
  if (scatter_list_stream_id) {
    da04:	02070863          	beqz	a4, da34 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x14b0>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    da08:	00870733          	add	a4, a4, s0
    da0c:	00c71713          	slli	a4, a4, 0xc
    da10:	08c72603          	lw	a2, 140(a4)
stream_tiles_outstanding(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:316
  return NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
    da14:	04872583          	lw	a1, 72(a4)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:445
  uint32_t prev_in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    da18:	04c12683          	lw	a3, 76(sp)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:376
    uint32_t phase_active = stream_phase_is_active(scatter_list_stream_id);
    int32_t tiles_available = stream_tiles_outstanding(scatter_list_stream_id);
    if (!phase_active || !tiles_available)
    da1c:	00467613          	andi	a2, a2, 4
    da20:	26060663          	beqz	a2, dc8c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1708>
    da24:	26058463          	beqz	a1, dc8c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1708>
stream_phase_next_recved_tile_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:146
  return NOC_STREAM_READ_REG(stream_id, STREAM_NEXT_RECEIVED_MSG_ADDR_REG_INDEX);
    da28:	04c72803          	lw	a6, 76(a4)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:378
      return false;
    scatter_offsets = ((volatile tt_uint64_t tt_l1_ptr *)(stream_phase_next_recved_tile_addr(scatter_list_stream_id)*MEM_WORD_WIDTH + DRAM_SCATTER_LIST_START_OFFSET));
    da2c:	00180813          	addi	a6, a6, 1
    da30:	00481813          	slli	a6, a6, 0x4
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:509
    uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
    da34:	00432683          	lw	a3, 4(t1)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    da38:	ffb20637          	lui	a2, 0xffb20
    da3c:	d40005b7          	lui	a1, 0xd4000
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:508
    uint32_t dram_io_scatter_chunk_size_bytes = dram_io_scatter_state->scatter_chunk_size_bytes;
    da40:	00832703          	lw	a4, 8(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:522
    uint32_t dram_embeddings_row_shift = dram_io_info->dram_embeddings_row_shift;
    da44:	010aa383          	lw	t2, 16(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:86
  return (ncrisc_noc_reads_flushed(noc, transaction_id) || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))));
}

inline __attribute__((always_inline)) void dram_input_stream_issue_scatter_read_init(uint32_t data_rec_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_bytes, uint32_t stream_dest_addr, uint32_t& transaction_id) {
  if (transaction_id == NCRISC_RD_END_TRID) {
    transaction_id = NCRISC_RD_START_TRID;
    da48:	00400893          	li	a7, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:509
    uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
    da4c:	06d12423          	sw	a3, 104(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:523
    uint32_t dram_io_scatter_chunk_size_tiles = dram_io_scatter_state->scatter_chunk_size_tiles;
    da50:	01032683          	lw	a3, 16(t1)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    da54:	10b62623          	sw	a1, 268(a2) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:531
      dram_ptr_update_cnt = dram_ptr_update_cnt | (DRAM_PTR_UPDATE_MASK + 1);
    da58:	0cc12603          	lw	a2, 204(sp)
dram_input_stream_issue_scatter_read_init(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:85
  if (transaction_id == NCRISC_RD_END_TRID) {
    da5c:	00d00593          	li	a1, 13
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:531
    da60:	04066613          	ori	a2, a2, 64
    da64:	0cc12623          	sw	a2, 204(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:533
      uint32_t stream_dest_addr = curr_dram_input_stream_state->stream_buf_addr_byte + stream_wr_ptr_byte;
    da68:	fd0d2603          	lw	a2, -48(s10)
    da6c:	00c787b3          	add	a5, a5, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:534
      uint32_t scatter_idx = next_dram_q_issue->scatter_offsets_index;
    da70:	01c9a603          	lw	a2, 28(s3)
    da74:	0ec12023          	sw	a2, 224(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:536
        uint32_t transaction_id = curr_dram_input_stream_state->transaction_id_issued;
    da78:	ff8d4603          	lbu	a2, -8(s10)
dram_input_stream_issue_scatter_read_init(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:85
    da7c:	00b60463          	beq	a2, a1, da84 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1500>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:88
  } else {
    transaction_id += 1;
    da80:	00160893          	addi	a7, a2, 1
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:539
        curr_dram_input_stream_state->prev_rd_data_word_recv = ncrisc_rd_data_word_recv(curr_dram_input_stream_state->input_noc);
    da84:	fc9d4503          	lbu	a0, -55(s10)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
    da88:	ffb205b7          	lui	a1, 0xffb20
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:538
        curr_dram_input_stream_state->transaction_id_issued = transaction_id;
    da8c:	ff1d0c23          	sb	a7, -8(s10)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
    da90:	20c58593          	addi	a1, a1, 524 # ffb2020c <TENSIX_MAILBOX_BASE+0xffc6020c>
    da94:	01051613          	slli	a2, a0, 0x10
    da98:	00b60633          	add	a2, a2, a1
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:540
        if (dram_io_info->scatter_list_stream_id || dram_io_info->hw_tilize) {
    da9c:	008ad583          	lhu	a1, 8(s5)
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
    daa0:	00062603          	lw	a2, 0(a2)
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:539
        curr_dram_input_stream_state->prev_rd_data_word_recv = ncrisc_rd_data_word_recv(curr_dram_input_stream_state->input_noc);
    daa4:	fecd2e23          	sw	a2, -4(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:552
          uint32_t scatter_loop_index = curr_dram_input_stream_state->scatter_loop_index;
    daa8:	ff0d2603          	lw	a2, -16(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:540
        if (dram_io_info->scatter_list_stream_id || dram_io_info->hw_tilize) {
    daac:	00059663          	bnez	a1, dab8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1534>
    dab0:	01bac583          	lbu	a1, 27(s5)
    dab4:	14058c63          	beqz	a1, dc0c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1688>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:541
          uint32_t c_dim_count = curr_dram_input_stream_state->c_dim_count;
    dab8:	fead5583          	lhu	a1, -22(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:544
          uint32_t scatter_loop_index = curr_dram_input_stream_state->scatter_loop_index;
    dabc:	0ec12623          	sw	a2, 236(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:541
          uint32_t c_dim_count = curr_dram_input_stream_state->c_dim_count;
    dac0:	0eb12223          	sw	a1, 228(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:543
          uint32_t col_offset_bytes = curr_dram_input_stream_state->col_offset_bytes;
    dac4:	fecd2583          	lw	a1, -20(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:542
          uint32_t c_dim_size = curr_dram_input_stream_state->c_dim_size;
    dac8:	fe8d5083          	lhu	ra, -24(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:543
          uint32_t col_offset_bytes = curr_dram_input_stream_state->col_offset_bytes;
    dacc:	0eb12423          	sw	a1, 232(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:545
          dram_input_stream_issue_scatter_read_indicies(dram_io_info->hw_tilize, curr_dram_input_stream_state->input_noc, next_dram_q_issue->dram_ptr_issued_byte, data_rec_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
    dad0:	01bacf03          	lbu	t5, 27(s5)
    dad4:	0189a603          	lw	a2, 24(s3)
    dad8:	00000593          	li	a1, 0
    dadc:	01e03eb3          	snez	t4, t5
    dae0:	000f0463          	beqz	t5, dae8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1564>
    dae4:	00caa583          	lw	a1, 12(s5)
    dae8:	03112423          	sw	a7, 40(sp)
    daec:	0e810893          	addi	a7, sp, 232
    daf0:	03112223          	sw	a7, 36(sp)
    daf4:	00aad883          	lhu	a7, 10(s5)
    daf8:	00b12a23          	sw	a1, 20(sp)
    dafc:	0ec10593          	addi	a1, sp, 236
    db00:	00b12223          	sw	a1, 4(sp)
    db04:	0e010593          	addi	a1, sp, 224
    db08:	00b12023          	sw	a1, 0(sp)
    db0c:	00112e23          	sw	ra, 28(sp)
    db10:	00050593          	mv	a1, a0
    db14:	00712823          	sw	t2, 16(sp)
    db18:	00512423          	sw	t0, 8(sp)
    db1c:	01f12623          	sw	t6, 12(sp)
    db20:	000e8513          	mv	a0, t4
    db24:	03112023          	sw	a7, 32(sp)
    db28:	0e410893          	addi	a7, sp, 228
    db2c:	01112c23          	sw	a7, 24(sp)
    db30:	00080893          	mv	a7, a6
    db34:	00078813          	mv	a6, a5
    db38:	00070793          	mv	a5, a4
    db3c:	00068713          	mv	a4, a3
    db40:	000c0693          	mv	a3, s8
    db44:	06612823          	sw	t1, 112(sp)
    db48:	ffbf3097          	auipc	ra, 0xffbf3
    db4c:	e8c080e7          	jalr	-372(ra) # ffc009d4 <TENSIX_MAILBOX_BASE+0xffd409d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:548
          curr_dram_input_stream_state->scatter_loop_index = scatter_loop_index;
    db50:	0ec12783          	lw	a5, 236(sp)
    db54:	fefd2823          	sw	a5, -16(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:549
          curr_dram_input_stream_state->c_dim_count = c_dim_count;
    db58:	0e412783          	lw	a5, 228(sp)
    db5c:	fefd1523          	sh	a5, -22(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:550
          curr_dram_input_stream_state->col_offset_bytes = col_offset_bytes;
    db60:	0e812783          	lw	a5, 232(sp)
    db64:	fefd2623          	sw	a5, -20(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:564
      uint32_t dram_num_partial_q_slot_issued_tiles = next_dram_q_issue->dram_num_partial_q_slot_issued_tiles;
    db68:	0109a803          	lw	a6, 16(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:568
      clear_scatter_offsets(curr_dram_input_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
    db6c:	008ad783          	lhu	a5, 8(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:557
          curr_dram_input_stream_state->scatter_loop_inc = scatter_loop_inc;
    db70:	07012303          	lw	t1, 112(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:568
      clear_scatter_offsets(curr_dram_input_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
    db74:	06812683          	lw	a3, 104(sp)
    db78:	0e010713          	addi	a4, sp, 224
    db7c:	000a8613          	mv	a2, s5
    db80:	00098593          	mv	a1, s3
    db84:	fe4d0513          	addi	a0, s10, -28
    db88:	06612a23          	sw	t1, 116(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:565
      dram_num_partial_q_slot_issued_tiles += data_rec_chunk_size_tiles;
    db8c:	010c0833          	add	a6, s8, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:566
      next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = dram_num_partial_q_slot_issued_tiles;
    db90:	0109a823          	sw	a6, 16(s3)
    db94:	07012823          	sw	a6, 112(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:568
      clear_scatter_offsets(curr_dram_input_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
    db98:	ffbf3097          	auipc	ra, 0xffbf3
    db9c:	8ac080e7          	jalr	-1876(ra) # ffc00444 <TENSIX_MAILBOX_BASE+0xffd40444>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:571
      in_flight_data_rec_chunks++;
    dba0:	04c12783          	lw	a5, 76(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:573
      if (!is_dram_read_opt_enabled) {
    dba4:	07012803          	lw	a6, 112(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:571
      in_flight_data_rec_chunks++;
    dba8:	00178693          	addi	a3, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:572
      in_flight_bytes += data_rec_chunk_size_bytes;
    dbac:	05c12783          	lw	a5, 92(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:573
      if (!is_dram_read_opt_enabled) {
    dbb0:	07412303          	lw	t1, 116(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:572
      in_flight_bytes += data_rec_chunk_size_bytes;
    dbb4:	00fb8bb3          	add	s7, s7, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:573
      if (!is_dram_read_opt_enabled) {
    dbb8:	05012783          	lw	a5, 80(sp)
    dbbc:	00079463          	bnez	a5, dbc4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1640>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:574
        curr_phase_tiles_remaining_to_issue -= data_rec_chunk_size_tiles;
    dbc0:	418b0b33          	sub	s6, s6, s8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:578
      if (full_q_slot_recv) {
    dbc4:	06012783          	lw	a5, 96(sp)
    dbc8:	0d079263          	bne	a5, a6, dc8c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1708>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:580
        uint32_t rdptr_val_issue = next_dram_q_issue->dram_ptr_issued_q_slots;
    dbcc:	0069d783          	lhu	a5, 6(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:586
        uint32_t dram_data_buf_fetch_rdptr_byte = next_dram_q_issue->dram_ptr_issued_byte;
    dbd0:	0189a703          	lw	a4, 24(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:579
        uint32_t q_slot_size_bytes = dram_io_scatter_state->q_slot_size_bytes;
    dbd4:	00c32503          	lw	a0, 12(t1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:582
        min_dram_io_entries--;
    dbd8:	fffa0a13          	addi	s4, s4, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:584
        next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = 0;
    dbdc:	0009a823          	sw	zero, 16(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    dbe0:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:586
        uint32_t dram_data_buf_fetch_rdptr_byte = next_dram_q_issue->dram_ptr_issued_byte;
    dbe4:	000c8613          	mv	a2, s9
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    dbe8:	06060663          	beqz	a2, dc54 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x16d0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    dbec:	00167813          	andi	a6, a2, 1
    dbf0:	00080463          	beqz	a6, dbf8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1674>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    dbf4:	00a585b3          	add	a1, a1, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    dbf8:	00165613          	srli	a2, a2, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    dbfc:	00151513          	slli	a0, a0, 0x1
    dc00:	fe9ff06f          	j	dbe8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1664>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:510
    uint32_t rd_ptr_autoinc = (next_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
    dc04:	01075c83          	lhu	s9, 16(a4)
    dc08:	df5ff06f          	j	d9fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1478>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:554
          dram_input_stream_issue_scatter_read(curr_dram_input_stream_state->input_noc, next_dram_q_issue->dram_ptr_issued_byte, data_rec_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
    dc0c:	0189a583          	lw	a1, 24(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:552
          uint32_t scatter_loop_index = curr_dram_input_stream_state->scatter_loop_index;
    dc10:	0ec12423          	sw	a2, 232(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:553
          uint32_t scatter_loop_inc = curr_dram_input_stream_state->scatter_loop_inc;
    dc14:	ff4d2603          	lw	a2, -12(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:554
          dram_input_stream_issue_scatter_read(curr_dram_input_stream_state->input_noc, next_dram_q_issue->dram_ptr_issued_byte, data_rec_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
    dc18:	01112423          	sw	a7, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:553
          uint32_t scatter_loop_inc = curr_dram_input_stream_state->scatter_loop_inc;
    dc1c:	0ec12623          	sw	a2, 236(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:554
          dram_input_stream_issue_scatter_read(curr_dram_input_stream_state->input_noc, next_dram_q_issue->dram_ptr_issued_byte, data_rec_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
    dc20:	0ec10613          	addi	a2, sp, 236
    dc24:	00c12223          	sw	a2, 4(sp)
    dc28:	0e810613          	addi	a2, sp, 232
    dc2c:	00c12023          	sw	a2, 0(sp)
    dc30:	0e010893          	addi	a7, sp, 224
    dc34:	000c0613          	mv	a2, s8
    dc38:	06612823          	sw	t1, 112(sp)
    dc3c:	d51fb0ef          	jal	ra, 998c <dram_input_stream_issue_scatter_read(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&, unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:556
          curr_dram_input_stream_state->scatter_loop_index = scatter_loop_index;
    dc40:	0e812783          	lw	a5, 232(sp)
    dc44:	fefd2823          	sw	a5, -16(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:557
          curr_dram_input_stream_state->scatter_loop_inc = scatter_loop_inc;
    dc48:	0ec12783          	lw	a5, 236(sp)
    dc4c:	fefd2a23          	sw	a5, -12(s10)
    dc50:	f19ff06f          	j	db68 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x15e4>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    dc54:	05412603          	lw	a2, 84(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    dc58:	00b70733          	add	a4, a4, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    dc5c:	00c76463          	bltu	a4, a2, dc64 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x16e0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    dc60:	40c70733          	sub	a4, a4, a2
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
    dc64:	01978cb3          	add	s9, a5, s9
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:589
        rdptr_val_issue = dram_io_incr_ptr(rdptr_val_issue, rd_ptr_autoinc, next_dram_q_issue->dram_buf_size_q_slots);
    dc68:	00c9d783          	lhu	a5, 12(s3)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:54
  uint32_t double_buf_size_q_slots = 2*buf_size_q_slots;
    dc6c:	00179793          	slli	a5, a5, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
    dc70:	00fce463          	bltu	s9, a5, dc78 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x16f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
    dc74:	40fc8cb3          	sub	s9, s9, a5
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1854
      dram_q_state_t tt_l1_ptr * next_dram_q_issue_temp = curr_dram_input_stream_state->next_dram_q_issue;
    dc78:	00098793          	mv	a5, s3
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:592
          next_dram_q_issue->dram_ptr_issued_byte = dram_data_buf_fetch_rdptr_byte;
    dc7c:	00e7ac23          	sw	a4, 24(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:593
          next_dram_q_issue->dram_ptr_issued_q_slots = rdptr_val_issue;
    dc80:	01979323          	sh	s9, 6(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:594
          next_dram_q_issue = (dram_q_state_t tt_l1_ptr *)next_dram_q_issue->next;
    dc84:	0207a783          	lw	a5, 32(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:595
          if (next_dram_q_issue == first_dram_q_issue) {
    dc88:	fef99ae3          	bne	s3, a5, dc7c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x16f8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:605
    if (!is_dram_read_opt_enabled) {
    dc8c:	05012783          	lw	a5, 80(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:602
    curr_dram_input_stream_state->min_dram_io_entries = min_dram_io_entries;
    dc90:	fd4d1723          	sh	s4, -50(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:603
    curr_dram_input_stream_state->in_flight_data_rec_chunks = in_flight_data_rec_chunks;
    dc94:	fcdd1623          	sh	a3, -52(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:604
    curr_dram_input_stream_state->in_flight_bytes = in_flight_bytes;
    dc98:	fd7d2e23          	sw	s7, -36(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:605
    if (!is_dram_read_opt_enabled) {
    dc9c:	c60796e3          	bnez	a5, d908 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1384>
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    dca0:	004da783          	lw	a5, 4(s11)
    dca4:	ffff0737          	lui	a4, 0xffff0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    dca8:	000d0693          	mv	a3, s10
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:611
        if (fork_stream_id == NULL_STREAM) {
    dcac:	0ff00593          	li	a1, 255
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    dcb0:	00e7f7b3          	and	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    dcb4:	0167e7b3          	or	a5, a5, s6
    dcb8:	00fda223          	sw	a5, 4(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    dcbc:	ffff0637          	lui	a2, 0xffff0
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:610
        uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    dcc0:	0006c783          	lbu	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:611
        if (fork_stream_id == NULL_STREAM) {
    dcc4:	00168693          	addi	a3, a3, 1
    dcc8:	c4b780e3          	beq	a5, a1, d908 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1384>
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
    dccc:	008787b3          	add	a5, a5, s0
    dcd0:	00c79793          	slli	a5, a5, 0xc
    dcd4:	0047a703          	lw	a4, 4(a5)
    dcd8:	00c77733          	and	a4, a4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    dcdc:	01676733          	or	a4, a4, s6
    dce0:	00e7a223          	sw	a4, 4(a5)
    dce4:	fddff06f          	j	dcc0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x173c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1934
          dram_q_state_t tt_l1_ptr * next_dram_q_in_flight = curr_dram_input_stream_state->next_dram_q_in_flight;
    dce8:	014d2a83          	lw	s5, 20(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1932
          RISC_POST_STATUS(0xE0000000 | stream_id);
    dcec:	e00007b7          	lui	a5, 0xe0000
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1935
          volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;
    dcf0:	000aab03          	lw	s6, 0(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1932
          RISC_POST_STATUS(0xE0000000 | stream_id);
    dcf4:	00f4e7b3          	or	a5, s1, a5
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    dcf8:	ffb20737          	lui	a4, 0xffb20
    dcfc:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1949
          uint32_t transaction_id = curr_dram_input_stream_state->transaction_id_flushed;
    dd00:	ff9d4c83          	lbu	s9, -7(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1939
          uint32_t stream_flushed_ptr_byte = curr_dram_input_stream_state->stream_flushed_ptr_byte;
    dd04:	fd4d2a03          	lw	s4, -44(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:95
}

inline __attribute__((always_inline)) bool dram_input_stream_check_next_chunk_flushed(uint32_t input_noc, uint32_t chunk_pending_start_addr, uint32_t chunk_size_bytes, uint32_t scatter_chunk_size_bytes, uint32_t& transaction_id) {
  uint32_t transaction_id_temp = transaction_id;
  if (transaction_id_temp == NCRISC_RD_END_TRID) {
    transaction_id_temp = NCRISC_RD_START_TRID;
    dd08:	00400993          	li	s3, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1936
          dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state = l1_ptrs->dram_io_scatter_state;
    dd0c:	058b2783          	lw	a5, 88(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1940
          uint32_t data_rec_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    dd10:	038b2b83          	lw	s7, 56(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1937
          uint32_t input_noc = curr_dram_input_stream_state->input_noc;
    dd14:	fc9d4783          	lbu	a5, -55(s10)
    dd18:	04f12623          	sw	a5, 76(sp)
dram_input_stream_check_next_chunk_flushed(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:94
  if (transaction_id_temp == NCRISC_RD_END_TRID) {
    dd1c:	00d00793          	li	a5, 13
    dd20:	00fc8463          	beq	s9, a5, dd28 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x17a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:97
  } else {
    transaction_id_temp += 1;
    dd24:	001c8993          	addi	s3, s9, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:99
  }
  bool reads_flushed = ncrisc_noc_reads_flushed(input_noc, transaction_id_temp);
    dd28:	04c12503          	lw	a0, 76(sp)
    dd2c:	00098593          	mv	a1, s3
    dd30:	ffbf2097          	auipc	ra, 0xffbf2
    dd34:	2d0080e7          	jalr	720(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    dd38:	00050c13          	mv	s8, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:100
  if (reads_flushed) {
    dd3c:	00050463          	beqz	a0, dd44 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x17c0>
    dd40:	3140106f          	j	f054 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2ad0>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1952
          if (is_dram_read_opt_enabled) {
    dd44:	9a0900e3          	beqz	s2, d6e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1160>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1949
          uint32_t transaction_id = curr_dram_input_stream_state->transaction_id_flushed;
    dd48:	000c8993          	mv	s3, s9
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1953
            read_phase_active(stream_id, curr_dram_input_stream_state, phase_active, curr_phase_tiles_remaining_to_issue);
    dd4c:	04412583          	lw	a1, 68(sp)
    dd50:	0dc10693          	addi	a3, sp, 220
    dd54:	0d810613          	addi	a2, sp, 216
    dd58:	00048513          	mv	a0, s1
    dd5c:	ffbf2097          	auipc	ra, 0xffbf2
    dd60:	3a8080e7          	jalr	936(ra) # ffc00104 <TENSIX_MAILBOX_BASE+0xffd40104>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1954
            if (moves_raw_data) {
    dd64:	03412783          	lw	a5, 52(sp)
    dd68:	04078263          	beqz	a5, ddac <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1828>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1955
              if (phase_active && !curr_phase_tiles_remaining_to_issue) {
    dd6c:	0d812783          	lw	a5, 216(sp)
    dd70:	02078e63          	beqz	a5, ddac <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1828>
    dd74:	0dc12783          	lw	a5, 220(sp)
    dd78:	02079a63          	bnez	a5, ddac <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1828>
stream_next_phase_src_change(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:193
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, NEXT_PHASE_SRC_CHANGE) || !NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, PHASE_AUTO_CONFIG);
    dd7c:	00848cb3          	add	s9, s1, s0
    dd80:	00cc9c93          	slli	s9, s9, 0xc
    dd84:	028ca783          	lw	a5, 40(s9)
    dd88:	00001737          	lui	a4, 0x1
    dd8c:	00e7f7b3          	and	a5, a5, a4
    dd90:	0e079263          	bnez	a5, de74 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x18f0>
    dd94:	028ca783          	lw	a5, 40(s9)
    dd98:	2007f793          	andi	a5, a5, 512
    dd9c:	0c078c63          	beqz	a5, de74 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x18f0>
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    dda0:	00100793          	li	a5, 1
    dda4:	06fcae23          	sw	a5, 124(s9)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1964
                  phase_active = false;
    dda8:	0c012c23          	sw	zero, 216(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1976
          if (next_data_rec_chunk_flushed && (!is_dram_read_opt_enabled || ((q_ptr_update_pending || phase_active) && curr_phase_tiles_remaining_to_issue))) {
    ddac:	920c0ce3          	beqz	s8, d6e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1160>
    ddb0:	03c12783          	lw	a5, 60(sp)
    ddb4:	00079663          	bnez	a5, ddc0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x183c>
    ddb8:	0d812783          	lw	a5, 216(sp)
    ddbc:	920784e3          	beqz	a5, d6e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1160>
    ddc0:	0dc12783          	lw	a5, 220(sp)
    ddc4:	920780e3          	beqz	a5, d6e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1160>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    ddc8:	ffb207b7          	lui	a5, 0xffb20
    ddcc:	e1000737          	lui	a4, 0xe1000
    ddd0:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1981
            uint32_t data_rec_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
    ddd4:	03cb5c03          	lhu	s8, 60(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1982
            uint32_t q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
    ddd8:	050b2783          	lw	a5, 80(s6)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:134
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
    dddc:	00848b33          	add	s6, s1, s0
    dde0:	00cb1b13          	slli	s6, s6, 0xc
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1980
            uint32_t in_flight_data_rec_chunks = curr_dram_input_stream_state->in_flight_data_rec_chunks;
    dde4:	fccd5d83          	lhu	s11, -52(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1982
            uint32_t q_slot_size_tiles = l1_ptrs->dram_q_slot_size_tiles;
    dde8:	02f12e23          	sw	a5, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1983
            uint32_t flushed_partial_q_slot_tiles = next_dram_q_in_flight->flushed_partial_q_slot_tiles;
    ddec:	014aa783          	lw	a5, 20(s5)
    ddf0:	0ef12623          	sw	a5, 236(sp)
stream_get_data_buf_size(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:134
    ddf4:	01cb2c83          	lw	s9, 28(s6)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2019
                push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
    ddf8:	03412783          	lw	a5, 52(sp)
    ddfc:	00f037b3          	snez	a5, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1984
            uint32_t stream_buf_size_bytes = stream_get_data_buf_size(stream_id) * MEM_WORD_WIDTH;
    de00:	004c9c93          	slli	s9, s9, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2019
                push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
    de04:	04f12823          	sw	a5, 80(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1988
              flushed_partial_q_slot_tiles += data_rec_chunk_size_tiles;
    de08:	0ec12783          	lw	a5, 236(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1994
              if (full_q_slot_flushed) {
    de0c:	03c12703          	lw	a4, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1988
              flushed_partial_q_slot_tiles += data_rec_chunk_size_tiles;
    de10:	00fc07b3          	add	a5, s8, a5
    de14:	0ef12623          	sw	a5, 236(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1994
              if (full_q_slot_flushed) {
    de18:	0af71a63          	bne	a4, a5, decc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1948>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1995
                bool update_pass = dram_input_stream_scatter_queue_update(stream_id, epoch_q_slots_remaining, moves_raw_data, input_noc, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes, 
    de1c:	0ec10793          	addi	a5, sp, 236
    de20:	00f12223          	sw	a5, 4(sp)
    de24:	04412803          	lw	a6, 68(sp)
    de28:	0cc10793          	addi	a5, sp, 204
    de2c:	04c12683          	lw	a3, 76(sp)
    de30:	03412603          	lw	a2, 52(sp)
    de34:	00f12023          	sw	a5, 0(sp)
    de38:	000a8893          	mv	a7, s5
    de3c:	000b8793          	mv	a5, s7
    de40:	000c0713          	mv	a4, s8
    de44:	0d410593          	addi	a1, sp, 212
    de48:	00048513          	mv	a0, s1
    de4c:	ffbf3097          	auipc	ra, 0xffbf3
    de50:	ee8080e7          	jalr	-280(ra) # ffc00d34 <TENSIX_MAILBOX_BASE+0xffd40d34>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1997
                if (!update_pass)
    de54:	06051e63          	bnez	a0, ded0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x194c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2047
            curr_dram_input_stream_state->epoch_q_slots_remaining = epoch_q_slots_remaining;
    de58:	0d412783          	lw	a5, 212(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2045
            curr_dram_input_stream_state->transaction_id_flushed = transaction_id;
    de5c:	ff3d0ca3          	sb	s3, -7(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2046
            curr_dram_input_stream_state->next_dram_q_in_flight = next_dram_q_in_flight;
    de60:	015d2a23          	sw	s5, 20(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2047
            curr_dram_input_stream_state->epoch_q_slots_remaining = epoch_q_slots_remaining;
    de64:	fefd2023          	sw	a5, -32(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2048
            curr_dram_input_stream_state->in_flight_data_rec_chunks = in_flight_data_rec_chunks;
    de68:	fdbd1623          	sh	s11, -52(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2049
            curr_dram_input_stream_state->stream_flushed_ptr_byte = stream_flushed_ptr_byte;
    de6c:	fd4d2a23          	sw	s4, -44(s10)
    de70:	875ff06f          	j	d6e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1160>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1958
                  uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    de74:	00048513          	mv	a0, s1
    de78:	ffbf2097          	auipc	ra, 0xffbf2
    de7c:	20c080e7          	jalr	524(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    de80:	ffbf2097          	auipc	ra, 0xffbf2
    de84:	1c8080e7          	jalr	456(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    de88:	00850533          	add	a0, a0, s0
    de8c:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1958
    de90:	01052d83          	lw	s11, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1959
                  uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    de94:	00048513          	mv	a0, s1
    de98:	ffbf2097          	auipc	ra, 0xffbf2
    de9c:	1ec080e7          	jalr	492(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    dea0:	ffbf2097          	auipc	ra, 0xffbf2
    dea4:	1a8080e7          	jalr	424(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    dea8:	00850533          	add	a0, a0, s0
    deac:	00c51513          	slli	a0, a0, 0xc
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1959
    deb0:	00c52783          	lw	a5, 12(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1962
                if (tiles_available == 0) {
    deb4:	010d9d93          	slli	s11, s11, 0x10
    deb8:	010ddd93          	srli	s11, s11, 0x10
    debc:	01079793          	slli	a5, a5, 0x10
    dec0:	0107d793          	srli	a5, a5, 0x10
    dec4:	eefd94e3          	bne	s11, a5, ddac <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1828>
    dec8:	ed9ff06f          	j	dda0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x181c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2000
                next_dram_q_in_flight->flushed_partial_q_slot_tiles = flushed_partial_q_slot_tiles;
    decc:	00faaa23          	sw	a5, 20(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2003
              if (is_dram_read_opt_enabled) {
    ded0:	04090e63          	beqz	s2, df2c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x19a8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2004
                curr_phase_tiles_remaining_to_issue -= prev_data_rec_chunk_size_tiles;
    ded4:	0dc12783          	lw	a5, 220(sp)
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    ded8:	ffff06b7          	lui	a3, 0xffff0
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2004
    dedc:	41878733          	sub	a4, a5, s8
    dee0:	0ce12e23          	sw	a4, 220(sp)
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
    dee4:	004b2783          	lw	a5, 4(s6)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2010
                  if (fork_stream_id == NULL_STREAM) {
    dee8:	0ff00513          	li	a0, 255
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
    deec:	ffff05b7          	lui	a1, 0xffff0
    def0:	00d7f7b3          	and	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    def4:	00e7e7b3          	or	a5, a5, a4
    def8:	00fb2223          	sw	a5, 4(s6)
    defc:	000d0693          	mv	a3, s10
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2009
                  uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
    df00:	0006c783          	lbu	a5, 0(a3) # ffff0000 <TENSIX_MAILBOX_BASE+0x130000>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2010
                  if (fork_stream_id == NULL_STREAM) {
    df04:	00168693          	addi	a3, a3, 1
    df08:	02a78263          	beq	a5, a0, df2c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x19a8>
stream_src_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    df0c:	008787b3          	add	a5, a5, s0
    df10:	00c79793          	slli	a5, a5, 0xc
    df14:	0047a703          	lw	a4, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    df18:	0dc12603          	lw	a2, 220(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:175
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & ~0xffff;
    df1c:	00b77733          	and	a4, a4, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:176
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX, (rmw | val));  // used as scratch reg for source endpoint streams
    df20:	00c76733          	or	a4, a4, a2
    df24:	00e7a223          	sw	a4, 4(a5)
    df28:	fd9ff06f          	j	df00 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x197c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2018
              if (!curr_dram_input_stream_state->q_ptr_update_pending)
    df2c:	fcad4783          	lbu	a5, -54(s10)
    df30:	08079663          	bnez	a5, dfbc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1a38>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2019
                push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
    df34:	05012603          	lw	a2, 80(sp)
    df38:	04412503          	lw	a0, 68(sp)
    df3c:	000b8713          	mv	a4, s7
    df40:	000c0693          	mv	a3, s8
    df44:	00048593          	mv	a1, s1
    df48:	ffbf2097          	auipc	ra, 0xffbf2
    df4c:	280080e7          	jalr	640(ra) # ffc001c8 <TENSIX_MAILBOX_BASE+0xffd401c8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2023
              prev_in_flight_data_rec_chunks--;
    df50:	03812783          	lw	a5, 56(sp)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    df54:	017a0a33          	add	s4, s4, s7
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2023
    df58:	fff78793          	addi	a5, a5, -1
    df5c:	02f12c23          	sw	a5, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2025
              curr_dram_input_stream_state->in_flight_bytes -= prev_data_rec_chunk_size_bytes;
    df60:	fdcd2783          	lw	a5, -36(s10)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2024
              in_flight_data_rec_chunks--;
    df64:	fffd8d93          	addi	s11, s11, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2025
              curr_dram_input_stream_state->in_flight_bytes -= prev_data_rec_chunk_size_bytes;
    df68:	417787b3          	sub	a5, a5, s7
    df6c:	fcfd2e23          	sw	a5, -36(s10)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    df70:	019a6463          	bltu	s4, s9, df78 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x19f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    df74:	419a0a33          	sub	s4, s4, s9
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2033
              if (is_dram_read_opt_enabled) {
    df78:	00090663          	beqz	s2, df84 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1a00>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2034
                if (!curr_phase_tiles_remaining_to_issue) {
    df7c:	0dc12783          	lw	a5, 220(sp)
    df80:	ec078ce3          	beqz	a5, de58 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x18d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2039
              if (!prev_in_flight_data_rec_chunks) {
    df84:	03812783          	lw	a5, 56(sp)
    df88:	ec0788e3          	beqz	a5, de58 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x18d4>
dram_input_stream_check_next_chunk_flushed(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:94
  if (transaction_id_temp == NCRISC_RD_END_TRID) {
    df8c:	00d00793          	li	a5, 13
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:95
    transaction_id_temp = NCRISC_RD_START_TRID;
    df90:	00400593          	li	a1, 4
dram_input_stream_check_next_chunk_flushed(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:94
  if (transaction_id_temp == NCRISC_RD_END_TRID) {
    df94:	00f98463          	beq	s3, a5, df9c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1a18>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:97
    transaction_id_temp += 1;
    df98:	00198593          	addi	a1, s3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:99
  bool reads_flushed = ncrisc_noc_reads_flushed(input_noc, transaction_id_temp);
    df9c:	04c12503          	lw	a0, 76(sp)
    dfa0:	04b12a23          	sw	a1, 84(sp)
    dfa4:	ffbf2097          	auipc	ra, 0xffbf2
    dfa8:	05c080e7          	jalr	92(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:100
  if (reads_flushed) {
    dfac:	05412583          	lw	a1, 84(sp)
    dfb0:	ea0504e3          	beqz	a0, de58 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x18d4>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:101
    transaction_id = transaction_id_temp;
    dfb4:	00058993          	mv	s3, a1
    dfb8:	e51ff06f          	j	de08 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1884>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2021
                curr_dram_input_stream_state->q_ptr_update_pending = false;
    dfbc:	fc0d0523          	sb	zero, -54(s10)
    dfc0:	f91ff06f          	j	df50 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x19cc>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:405
  dram_output_stream_state_t* curr_dram_output_stream_state = dram_output_stream_state;
    dfc4:	04012783          	lw	a5, 64(sp)
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2063
    uint32_t total_tiles_to_clear = 0;
    dfc8:	04012223          	sw	zero, 68(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:405
    dfcc:	72878d93          	addi	s11, a5, 1832
    dfd0:	000107b7          	lui	a5, 0x10
    dfd4:	be878793          	addi	a5, a5, -1048 # fbe8 <dram_output_stream_state>
    dfd8:	08f12c23          	sw	a5, 152(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:454
    uint32_t write_stride = curr_dram_output_stream_state->write_stride & ~DRAM_STRIDE_UPDATE_WAIT;
    dfdc:	ffff87b7          	lui	a5, 0xffff8
    dfe0:	fff78793          	addi	a5, a5, -1 # ffff7fff <TENSIX_MAILBOX_BASE+0x137fff>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:406
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state++) {
    dfe4:	04012e23          	sw	zero, 92(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:454
    uint32_t write_stride = curr_dram_output_stream_state->write_stride & ~DRAM_STRIDE_UPDATE_WAIT;
    dfe8:	08f12023          	sw	a5, 128(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:406
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state++) {
    dfec:	03012783          	lw	a5, 48(sp)
    dff0:	05c12703          	lw	a4, 92(sp)
    dff4:	c187a783          	lw	a5, -1000(a5)
    dff8:	1af76e63          	bltu	a4, a5, e1b4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c30>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    dffc:	000014b7          	lui	s1, 0x1
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
    e000:	00010937          	lui	s2, 0x10
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    e004:	fff48493          	addi	s1, s1, -1 # fff <__firmware_stack_size+0xbff>
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
    e008:	fff90913          	addi	s2, s2, -1 # ffff <dram_input_stream_state+0x177>
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:893
  while (total_tiles_to_clear) {
    e00c:	04412783          	lw	a5, 68(sp)
    e010:	00079463          	bnez	a5, e018 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1a94>
    e014:	9b1fe06f          	j	c9c4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x440>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:895
    RISC_POST_STATUS(0x20000000 | total_tiles_to_clear);
    e018:	04412703          	lw	a4, 68(sp)
    e01c:	200007b7          	lui	a5, 0x20000
    e020:	00f767b3          	or	a5, a4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:897
    dram_output_stream_state_t* curr_dram_output_stream_state_clear = dram_output_stream_state;
    e024:	09812a83          	lw	s5, 152(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e028:	ffb20737          	lui	a4, 0xffb20
    e02c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:898
    for (uint32_t i = 0;
    e030:	00000c13          	li	s8, 0
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    e034:	00100993          	li	s3, 1
stream_set_curr_phase_num_msgs(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:201
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX) & ~0xFFFFFF;
    e038:	ff000a37          	lui	s4, 0xff000
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:899
         i < num_dram_output_streams;
    e03c:	03012783          	lw	a5, 48(sp)
    e040:	c187a783          	lw	a5, -1000(a5) # 1ffffc18 <noc_nonblocking_api.cc.88b5909b+0x1ffdce94>
    e044:	fcfc74e3          	bgeu	s8, a5, e00c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1a88>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:902
      uint32_t tiles_to_clear = curr_dram_output_stream_state_clear->tiles_to_clear;
    e048:	006adc83          	lhu	s9, 6(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:905
      if (!tiles_to_clear) {
    e04c:	140c8e63          	beqz	s9, e1a8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c24>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:912
      uint32_t dram_output_no_push = curr_dram_output_stream_state_clear->stream_info->dram_io_info->dram_output_no_push;
    e050:	05caa783          	lw	a5, 92(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:911
      uint32_t stream_id = curr_dram_output_stream_state_clear->stream_id;
    e054:	000acd83          	lbu	s11, 0(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:912
      uint32_t dram_output_no_push = curr_dram_output_stream_state_clear->stream_info->dram_io_info->dram_output_no_push;
    e058:	0887a783          	lw	a5, 136(a5)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    e05c:	008d8bb3          	add	s7, s11, s0
    e060:	00cb9b93          	slli	s7, s7, 0xc
    e064:	08cba703          	lw	a4, 140(s7)
    e068:	002acd03          	lbu	s10, 2(s5)
    e06c:	00275713          	srli	a4, a4, 0x2
    e070:	00177713          	andi	a4, a4, 1
    e074:	0067c783          	lbu	a5, 6(a5)
    e078:	00fd6d33          	or	s10, s10, a5
    e07c:	0ffd7d13          	zext.b	s10, s10
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:915
      if (moves_raw_data || dram_output_no_push) {
    e080:	7c0d00e3          	beqz	s10, f040 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2abc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:916
        uint16_t operand_tiles_received = (uint16_t)*get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    e084:	000d8513          	mv	a0, s11
    e088:	02e12a23          	sw	a4, 52(sp)
    e08c:	ffbf2097          	auipc	ra, 0xffbf2
    e090:	ff8080e7          	jalr	-8(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    e094:	ffbf2097          	auipc	ra, 0xffbf2
    e098:	fb4080e7          	jalr	-76(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    e09c:	00850533          	add	a0, a0, s0
    e0a0:	00c51513          	slli	a0, a0, 0xc
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:916
    e0a4:	01052b03          	lw	s6, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:917
        uint16_t operand_tiles_acked = (uint16_t)*get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    e0a8:	000d8513          	mv	a0, s11
    e0ac:	ffbf2097          	auipc	ra, 0xffbf2
    e0b0:	fd8080e7          	jalr	-40(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_START_REG_INDEX));
    e0b4:	ffbf2097          	auipc	ra, 0xffbf2
    e0b8:	f94080e7          	jalr	-108(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    e0bc:	00850533          	add	a0, a0, s0
    e0c0:	00c51513          	slli	a0, a0, 0xc
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:917
    e0c4:	00c52783          	lw	a5, 12(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:926
      if (!phase_active || !tiles_available) {
    e0c8:	03412703          	lw	a4, 52(sp)
    e0cc:	0c070e63          	beqz	a4, e1a8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c24>
op_pack_tiles_ptr_sub(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:55
  return a - b;
    e0d0:	40fb07b3          	sub	a5, s6, a5
    e0d4:	01079793          	slli	a5, a5, 0x10
    e0d8:	0107d793          	srli	a5, a5, 0x10
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:926
    e0dc:	0c078663          	beqz	a5, e1a8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c24>
stream_receiver_endpoint_tile_clearing_finished(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:335
      return (NOC_STREAM_READ_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX) == 0);
    e0e0:	024ba703          	lw	a4, 36(s7)
    e0e4:	024b8693          	addi	a3, s7, 36
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:931
      while(!stream_receiver_endpoint_tile_clearing_finished(stream_id));
    e0e8:	fe071ce3          	bnez	a4, e0e0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1b5c>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
    e0ec:	090ba703          	lw	a4, 144(s7)
    e0f0:	00c75713          	srli	a4, a4, 0xc
    e0f4:	00977733          	and	a4, a4, s1
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:935
      if (num_msgs_left_in_phase < tiles_available)
    e0f8:	00f77663          	bgeu	a4, a5, e104 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1b80>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:936
        tiles_available = num_msgs_left_in_phase;
    e0fc:	01071793          	slli	a5, a4, 0x10
    e100:	0107d793          	srli	a5, a5, 0x10
    e104:	000c8b13          	mv	s6, s9
    e108:	0197f463          	bgeu	a5, s9, e110 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1b8c>
    e10c:	00078b13          	mv	s6, a5
    e110:	010b1b13          	slli	s6, s6, 0x10
    e114:	010b5b13          	srli	s6, s6, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:939
      if (!tiles_available) {
    e118:	080b0863          	beqz	s6, e1a8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c24>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:944
      total_tiles_to_clear -= tiles_available;
    e11c:	04412783          	lw	a5, 68(sp)
    e120:	416787b3          	sub	a5, a5, s6
    e124:	04f12223          	sw	a5, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:945
      if (moves_raw_data || dram_output_no_push) {
    e128:	620d0ce3          	beqz	s10, ef60 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x29dc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:947
        volatile uint32_t tt_reg_ptr * tiles_acked_ptr = get_operand_tiles_acked_ptr(stream_id_to_operand(stream_id));
    e12c:	000d8513          	mv	a0, s11
    e130:	ffbf2097          	auipc	ra, 0xffbf2
    e134:	f54080e7          	jalr	-172(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_acked_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:159
    e138:	ffbf2097          	auipc	ra, 0xffbf2
    e13c:	f10080e7          	jalr	-240(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    e140:	00850533          	add	a0, a0, s0
    e144:	00c51513          	slli	a0, a0, 0xc
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:948
        uint16_t operand_tiles_acked = (uint16_t)tiles_acked_ptr[0];
    e148:	00c52783          	lw	a5, 12(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
    e14c:	00fb07b3          	add	a5, s6, a5
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:950
        tiles_acked_ptr[0] = new_epoch_tiles_acked;
    e150:	01079793          	slli	a5, a5, 0x10
    e154:	0107d793          	srli	a5, a5, 0x10
    e158:	00f52623          	sw	a5, 12(a0)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
    e15c:	008ba783          	lw	a5, 8(s7)
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:109
}

inline __attribute__((always_inline)) uint32_t get_total_in_flight_tiles(dram_output_stream_state_t* curr_dram_output_stream_state) {
#ifdef RISC_B0_HW
  uint32_t total_in_flight_tiles = 0;
  if (curr_dram_output_stream_state->moves_raw_data) {
    e160:	002ac683          	lbu	a3, 2(s5)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
    e164:	0127f733          	and	a4, a5, s2
    e168:	008ad783          	lhu	a5, 8(s5)
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:109
    e16c:	00069663          	bnez	a3, e178 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1bf4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:112
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
  } else {
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles + curr_dram_output_stream_state->in_flight_tiles_2;
    e170:	03ead683          	lhu	a3, 62(s5)
    e174:	00d787b3          	add	a5, a5, a3
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:953
        if (!curr_phase_tiles_remaining && !total_in_flight_tiles) {
    e178:	00f767b3          	or	a5, a4, a5
    e17c:	02079263          	bnez	a5, e1a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c1c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:954
          uint32_t flags = curr_dram_output_stream_state_clear->stream_info->flags;
    e180:	05caa783          	lw	a5, 92(s5)
    e184:	03c7a783          	lw	a5, 60(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:955
          if ((flags & STREAM_BRISC_PACK) != 0)
    e188:	4007f793          	andi	a5, a5, 1024
    e18c:	00078863          	beqz	a5, e19c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c18>
stream_set_curr_phase_num_msgs(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:201
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX) & ~0xFFFFFF;
    e190:	090ba783          	lw	a5, 144(s7)
    e194:	0147f7b3          	and	a5, a5, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:202
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, (rmw | (val << CURR_PHASE_NUM_MSGS)));
    e198:	08fba823          	sw	a5, 144(s7)
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    e19c:	073bae23          	sw	s3, 124(s7)
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:966
      curr_dram_output_stream_state_clear->tiles_to_clear = tiles_to_clear;  
    e1a0:	416c8b33          	sub	s6, s9, s6
    e1a4:	016a9323          	sh	s6, 6(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:898
    for (uint32_t i = 0;
    e1a8:	001c0c13          	addi	s8, s8, 1
    e1ac:	060a8a93          	addi	s5, s5, 96
    e1b0:	e8dff06f          	j	e03c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1ab8>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:409
    uint32_t epoch_q_slots_remaining = curr_dram_output_stream_state->epoch_q_slots_remaining;
    e1b4:	018da783          	lw	a5, 24(s11)
    e1b8:	06f12423          	sw	a5, 104(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:411
    if (!epoch_q_slots_remaining) {
    e1bc:	46078663          	beqz	a5, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:426
    dram_q_state_t tt_l1_ptr * next_dram_q_issue = curr_dram_output_stream_state->next_dram_q_issue;
    e1c0:	058da983          	lw	s3, 88(s11)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e1c4:	ffb207b7          	lui	a5, 0xffb20
    e1c8:	f0000737          	lui	a4, 0xf0000
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:408
    uint32_t stream_id = curr_dram_output_stream_state->stream_id;
    e1cc:	000dcc03          	lbu	s8, 0(s11)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e1d0:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:427
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    e1d4:	0009a783          	lw	a5, 0(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:428
    uint16_t data_send_chunk_size_tiles = l1_ptrs->data_chunk_size_tiles;
    e1d8:	03c7da03          	lhu	s4, 60(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:427
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    e1dc:	02f12e23          	sw	a5, 60(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:429
    uint32_t data_send_chunk_size_bytes = l1_ptrs->data_chunk_size_bytes;
    e1e0:	0387a783          	lw	a5, 56(a5)
    e1e4:	04f12a23          	sw	a5, 84(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:430
    uint32_t dram_writes_with_cmd_buf = curr_dram_output_stream_state->stream_info->dram_io_info->dram_writes_with_cmd_buf;
    e1e8:	05cda783          	lw	a5, 92(s11)
    e1ec:	0887a703          	lw	a4, 136(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:431
    uint32_t dram_output_no_push = curr_dram_output_stream_state->stream_info->dram_io_info->dram_output_no_push;
    e1f0:	0887a783          	lw	a5, 136(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:430
    uint32_t dram_writes_with_cmd_buf = curr_dram_output_stream_state->stream_info->dram_io_info->dram_writes_with_cmd_buf;
    e1f4:	01a74703          	lbu	a4, 26(a4) # f000001a <TENSIX_MAILBOX_BASE+0xf014001a>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:431
    uint32_t dram_output_no_push = curr_dram_output_stream_state->stream_info->dram_io_info->dram_output_no_push;
    e1f8:	0067c783          	lbu	a5, 6(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:430
    uint32_t dram_writes_with_cmd_buf = curr_dram_output_stream_state->stream_info->dram_io_info->dram_writes_with_cmd_buf;
    e1fc:	02e12a23          	sw	a4, 52(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:431
    uint32_t dram_output_no_push = curr_dram_output_stream_state->stream_info->dram_io_info->dram_output_no_push;
    e200:	08f12223          	sw	a5, 132(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:434
    if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
    e204:	00071663          	bnez	a4, e210 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c8c>
    e208:	002dc783          	lbu	a5, 2(s11)
    e20c:	40078663          	beqz	a5, e618 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2094>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
    e210:	ffb207b7          	lui	a5, 0xffb20
    e214:	2807a783          	lw	a5, 640(a5) # ffb20280 <TENSIX_MAILBOX_BASE+0xffc60280>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:437
        previous_writes_sent = previous_writes_sent && ncrisc_noc_nonposted_writes_sent(n, NCRISC_WR_DEF_TRID);
    e218:	40079863          	bnez	a5, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
    e21c:	ffb307b7          	lui	a5, 0xffb30
    e220:	2807a783          	lw	a5, 640(a5) # ffb30280 <TENSIX_MAILBOX_BASE+0xffc70280>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:437
    e224:	40079263          	bnez	a5, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:454
    uint32_t write_stride = curr_dram_output_stream_state->write_stride & ~DRAM_STRIDE_UPDATE_WAIT;
    e228:	01cdd783          	lhu	a5, 28(s11)
    e22c:	08012703          	lw	a4, 128(sp)
    e230:	00e7f733          	and	a4, a5, a4
    e234:	02e12c23          	sw	a4, 56(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:455
    bool is_strided_write = curr_dram_output_stream_state->total_write_strides > 1;
    e238:	01edd703          	lhu	a4, 30(s11)
    e23c:	04e12423          	sw	a4, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:456
    if (is_strided_write && (curr_dram_output_stream_state->write_stride & DRAM_STRIDE_UPDATE_WAIT)) {
    e240:	04812683          	lw	a3, 72(sp)
    e244:	00100713          	li	a4, 1
    e248:	3ed76a63          	bltu	a4, a3, e63c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:514
    RISC_POST_STATUS(0xF1000000 | stream_id);
    e24c:	f10007b7          	lui	a5, 0xf1000
    e250:	00fc67b3          	or	a5, s8, a5
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e254:	ffb20737          	lui	a4, 0xffb20
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    e258:	008c0933          	add	s2, s8, s0
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e25c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
    e260:	00c91913          	slli	s2, s2, 0xc
    e264:	08c92b83          	lw	s7, 140(s2)
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:110
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
    e268:	008dd683          	lhu	a3, 8(s11)
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
    e26c:	002bdb93          	srli	s7, s7, 0x2
    e270:	001bf793          	andi	a5, s7, 1
    e274:	06f12023          	sw	a5, 96(sp)
stream_rec_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:159
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & 0xffff;  // used as scratch reg for receiver endpoint streams
    e278:	00892783          	lw	a5, 8(s2)
    e27c:	01079793          	slli	a5, a5, 0x10
    e280:	0107d793          	srli	a5, a5, 0x10
    e284:	04f12823          	sw	a5, 80(sp)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
    e288:	02892783          	lw	a5, 40(s2)
    e28c:	0017d793          	srli	a5, a5, 0x1
    e290:	0017f793          	andi	a5, a5, 1
    e294:	04f12623          	sw	a5, 76(sp)
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:109
  if (curr_dram_output_stream_state->moves_raw_data) {
    e298:	002dc783          	lbu	a5, 2(s11)
    e29c:	4e078663          	beqz	a5, e788 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2204>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:110
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
    e2a0:	06d12623          	sw	a3, 108(sp)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    e2a4:	04c12783          	lw	a5, 76(sp)
    e2a8:	ffb21737          	lui	a4, 0xffb21
    e2ac:	01079793          	slli	a5, a5, 0x10
    e2b0:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:529
      in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots;
    e2b4:	001dc583          	lbu	a1, 1(s11)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
    e2b8:	00e787b3          	add	a5, a5, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:531
      curr_dram_output_stream_state->in_flight_q_slots = 0;
    e2bc:	000d80a3          	sb	zero, 1(s11)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    e2c0:	0007a783          	lw	a5, 0(a5) # f1000000 <TENSIX_MAILBOX_BASE+0xf1140000>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:530
      curr_dram_output_stream_state->in_flight_tiles = 0;
    e2c4:	000d9423          	sh	zero, 8(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:523
    bool stream_sending_q_full = false;
    e2c8:	00000613          	li	a2, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:533
      past_sending_threshold = true;
    e2cc:	00100493          	li	s1, 1
ncrisc_noc_fast_write_bufs_ok(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:199
  return (NOC_CMD_BUF_READ_REG(noc, NCRISC_WR_CMD_BUF, NOC_CMD_CTRL) == NOC_CTRL_STATUS_READY);
    e2d0:	0017b793          	seqz	a5, a5
    e2d4:	002dc503          	lbu	a0, 2(s11)
    e2d8:	08412703          	lw	a4, 132(sp)
    e2dc:	00a76533          	or	a0, a4, a0
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:560
    if (curr_dram_output_stream_state->moves_raw_data || dram_output_no_push) {
    e2e0:	04050463          	beqz	a0, e328 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1da4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:561
      if (phase_active && !curr_phase_tiles_remaining && !total_in_flight_tiles) {
    e2e4:	06012703          	lw	a4, 96(sp)
    e2e8:	04070063          	beqz	a4, e328 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1da4>
    e2ec:	05012703          	lw	a4, 80(sp)
    e2f0:	06c12803          	lw	a6, 108(sp)
    e2f4:	01076cb3          	or	s9, a4, a6
    e2f8:	020c9863          	bnez	s9, e328 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1da4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:562
        uint32_t flags = curr_dram_output_stream_state->stream_info->flags;
    e2fc:	05cda703          	lw	a4, 92(s11)
    e300:	03c72703          	lw	a4, 60(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:563
        if ((flags & STREAM_BRISC_PACK) != 0)
    e304:	40077713          	andi	a4, a4, 1024
    e308:	00070a63          	beqz	a4, e31c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1d98>
stream_set_curr_phase_num_msgs(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:201
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX) & ~0xFFFFFF;
    e30c:	09092703          	lw	a4, 144(s2)
    e310:	ff000837          	lui	a6, 0xff000
    e314:	01077733          	and	a4, a4, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:202
  NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, (rmw | (val << CURR_PHASE_NUM_MSGS)));
    e318:	08e92823          	sw	a4, 144(s2)
stream_force_next_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:355
  NOC_STREAM_WRITE_REG(stream_id, STREAM_RESET_REG_INDEX, 0x1);
    e31c:	00100713          	li	a4, 1
    e320:	06e92e23          	sw	a4, 124(s2)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:566
        phase_active = false;
    e324:	06012023          	sw	zero, 96(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:570
    if (in_flight_tiles) {
    e328:	02068263          	beqz	a3, e34c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1dc8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:571
      epoch_q_slots_remaining -= in_flight_q_slots;
    e32c:	06812703          	lw	a4, 104(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:572
      curr_dram_output_stream_state->tiles_to_clear = in_flight_tiles;
    e330:	00dd9323          	sh	a3, 6(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:571
      epoch_q_slots_remaining -= in_flight_q_slots;
    e334:	40b70733          	sub	a4, a4, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:573
      total_tiles_to_clear += in_flight_tiles;
    e338:	04412583          	lw	a1, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:574
      curr_dram_output_stream_state->epoch_q_slots_remaining = epoch_q_slots_remaining;
    e33c:	00edac23          	sw	a4, 24(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:573
      total_tiles_to_clear += in_flight_tiles;
    e340:	00d586b3          	add	a3, a1, a3
    e344:	04d12223          	sw	a3, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:590
    if (!epoch_q_slots_remaining || !phase_active || !curr_phase_tiles_remaining || !cmd_buf_free || stream_sending_q_full || !past_sending_threshold) {
    e348:	2e070063          	beqz	a4, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
    e34c:	06012703          	lw	a4, 96(sp)
    e350:	2c070c63          	beqz	a4, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
    e354:	05012703          	lw	a4, 80(sp)
    e358:	2c070863          	beqz	a4, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
    e35c:	2c078663          	beqz	a5, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
    e360:	2c061463          	bnez	a2, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
    e364:	2c048263          	beqz	s1, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e368:	ffb207b7          	lui	a5, 0xffb20
    e36c:	f2000737          	lui	a4, 0xf2000
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:578
      in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots;
    e370:	001dcc83          	lbu	s9, 1(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:579
      in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
    e374:	008ddd03          	lhu	s10, 8(s11)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e378:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:601
    uint16_t curr_phase_tiles_sent = curr_dram_output_stream_state->curr_phase_tiles_sent;
    e37c:	00adda83          	lhu	s5, 10(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:604
    if (curr_dram_output_stream_state->moves_raw_data || dram_output_no_push) {
    e380:	6a050e63          	beqz	a0, ea3c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x24b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:606
      curr_phase_tiles_received = *get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
    e384:	000c0513          	mv	a0, s8
    e388:	ffbf2097          	auipc	ra, 0xffbf2
    e38c:	cfc080e7          	jalr	-772(ra) # ffc00084 <TENSIX_MAILBOX_BASE+0xffd40084>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
    e390:	ffbf2097          	auipc	ra, 0xffbf2
    e394:	cb8080e7          	jalr	-840(ra) # ffc00048 <TENSIX_MAILBOX_BASE+0xffd40048>
    e398:	00850533          	add	a0, a0, s0
    e39c:	00c51513          	slli	a0, a0, 0xc
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:606
    e3a0:	01052783          	lw	a5, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:611
      curr_phase_tiles_received = stream_phase_tiles_received(stream_id, stream_msg_info_buf_addr_word);
    e3a4:	01079793          	slli	a5, a5, 0x10
    e3a8:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:612
      tiles_avail_to_send = curr_phase_tiles_received - curr_phase_tiles_sent;
    e3ac:	41578733          	sub	a4, a5, s5
    e3b0:	01071713          	slli	a4, a4, 0x10
    e3b4:	01075713          	srli	a4, a4, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:624
    if (next_data_chunk_available) {
    e3b8:	27476863          	bltu	a4, s4, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e3bc:	ffb20737          	lui	a4, 0xffb20
    e3c0:	f30006b7          	lui	a3, 0xf3000
    e3c4:	10d72623          	sw	a3, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:630
      bool dram_q_space_available =  dram_decoupled ? true : (temp_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ||
    e3c8:	0049c583          	lbu	a1, 4(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:629
      uint32_t dram_rdptr_q_slots = temp_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
    e3cc:	00a9d703          	lhu	a4, 10(s3)
    e3d0:	08012683          	lw	a3, 128(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:631
                                    !dram_io_full(dram_rdptr_q_slots, temp_dram_q_issue->dram_ptr_issued_q_slots, temp_dram_q_issue->dram_buf_size_q_slots);
    e3d4:	00c9d603          	lhu	a2, 12(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:630
      bool dram_q_space_available =  dram_decoupled ? true : (temp_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ||
    e3d8:	0015f593          	andi	a1, a1, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:629
      uint32_t dram_rdptr_q_slots = temp_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
    e3dc:	00d77733          	and	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:631
                                    !dram_io_full(dram_rdptr_q_slots, temp_dram_q_issue->dram_ptr_issued_q_slots, temp_dram_q_issue->dram_buf_size_q_slots);
    e3e0:	0069d683          	lhu	a3, 6(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:630
      bool dram_q_space_available =  dram_decoupled ? true : (temp_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ||
    e3e4:	00059e63          	bnez	a1, e400 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1e7c>
dram_io_full(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:85
  uint32_t wr_ptr_reduced_by_q_slots = wr_ptr - buf_size_q_slots;
    e3e8:	40c685b3          	sub	a1, a3, a2
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:630
    e3ec:	00000493          	li	s1, 0
dram_io_full(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:89
  return case1 || case2;
    e3f0:	00b70863          	beq	a4, a1, e400 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1e7c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:86
  uint32_t rd_ptr_reduced_by_q_slots = rd_ptr - buf_size_q_slots;
    e3f4:	40c704b3          	sub	s1, a4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:89
  return case1 || case2;
    e3f8:	40d484b3          	sub	s1, s1, a3
    e3fc:	009034b3          	snez	s1, s1
dram_io_entries(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:93
  if (wr_ptr >= rd_ptr)
    e400:	64e6e863          	bltu	a3, a4, ea50 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x24cc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:96
    return 2*buf_size_q_slots - rd_ptr + wr_ptr;
    e404:	40e68733          	sub	a4, a3, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:638
      if (this_dram_io_entries >= (temp_dram_q_issue->dram_buf_size_q_slots-DRAM_MIN_ENTIRES_POLL) && (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK))
    e408:	00c76a63          	bltu	a4, a2, e41c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1e98>
    e40c:	0cc12703          	lw	a4, 204(sp)
    e410:	fc077713          	andi	a4, a4, -64
    e414:	00070463          	beqz	a4, e41c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1e98>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:639
        dram_ptr_update_cnt = 0;
    e418:	0c012623          	sw	zero, 204(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:641
      if (dram_q_space_available) {
    e41c:	20048663          	beqz	s1, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e420:	ffb20737          	lui	a4, 0xffb20
    e424:	f40006b7          	lui	a3, 0xf4000
    e428:	10d72623          	sw	a3, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:655
        dram_ptr_update_cnt = dram_ptr_update_cnt | (DRAM_PTR_UPDATE_MASK + 1);
    e42c:	0cc12703          	lw	a4, 204(sp)
    e430:	04076713          	ori	a4, a4, 64
    e434:	0ce12623          	sw	a4, 204(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:657
        uint32_t wr_ptr_autoinc = l1_ptrs->rd_gwr_ptr_autoinc;
    e438:	03c12703          	lw	a4, 60(sp)
    e43c:	00675703          	lhu	a4, 6(a4)
    e440:	06e12623          	sw	a4, 108(sp)
stream_dram_write_should_reset_pointers(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:227
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX);
    e444:	00892703          	lw	a4, 8(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:228
  uint32_t should_reset_pointers = rmw >> 16;
    e448:	01075693          	srli	a3, a4, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:229
  if (should_reset_pointers)
    e44c:	400680e3          	beqz	a3, f04c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2ac8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:230
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX, (rmw & 0xffff));  // used as scratch reg for receiver endpoint streams
    e450:	01071713          	slli	a4, a4, 0x10
    e454:	01075713          	srli	a4, a4, 0x10
    e458:	00e92423          	sw	a4, 8(s2)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:658
        uint32_t stream_rd_ptr_byte = stream_dram_write_should_reset_pointers(stream_id) ? 0 : curr_dram_output_stream_state->stream_rd_ptr_byte;
    e45c:	00000713          	li	a4, 0
    e460:	0ee12023          	sw	a4, 224(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:667
        dram_io_scatter_state_t tt_l1_ptr * dram_io_scatter_state = l1_ptrs->dram_io_scatter_state;
    e464:	03c12703          	lw	a4, 60(sp)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    e468:	02892b03          	lw	s6, 40(s2)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:667
    e46c:	05872b83          	lw	s7, 88(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:668
        epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_output_stream_state->stream_info->dram_io_info;
    e470:	05cda703          	lw	a4, 92(s11)
    e474:	08872c03          	lw	s8, 136(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:671
        if (dram_io_scatter_state != ((dram_io_scatter_state_t*)0)) {
    e478:	040b8063          	beqz	s7, e4b8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1f34>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:672
          scatter_offsets = dram_io_scatter_state->scatter_offsets;
    e47c:	01cba703          	lw	a4, 28(s7)
    e480:	06e12223          	sw	a4, 100(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:673
          has_scatter_offsets = get_scatter_offsets(dram_io_scatter_state, scatter_offsets, dram_io_info->scatter_list_stream_id);
    e484:	008c5703          	lhu	a4, 8(s8)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:373
  if (scatter_list_stream_id) {
    e488:	02070863          	beqz	a4, e4b8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1f34>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    e48c:	00870733          	add	a4, a4, s0
    e490:	00c71713          	slli	a4, a4, 0xc
    e494:	08c72683          	lw	a3, 140(a4)
stream_tiles_outstanding(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:316
  return NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
    e498:	04872603          	lw	a2, 72(a4)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:376
    if (!phase_active || !tiles_available)
    e49c:	0046f693          	andi	a3, a3, 4
    e4a0:	080682e3          	beqz	a3, ed24 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x27a0>
    e4a4:	080600e3          	beqz	a2, ed24 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x27a0>
stream_phase_next_recved_tile_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:146
  return NOC_STREAM_READ_REG(stream_id, STREAM_NEXT_RECEIVED_MSG_ADDR_REG_INDEX);
    e4a8:	04c72703          	lw	a4, 76(a4)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:378
    scatter_offsets = ((volatile tt_uint64_t tt_l1_ptr *)(stream_phase_next_recved_tile_addr(scatter_list_stream_id)*MEM_WORD_WIDTH + DRAM_SCATTER_LIST_START_OFFSET));
    e4ac:	00170713          	addi	a4, a4, 1
    e4b0:	00471713          	slli	a4, a4, 0x4
    e4b4:	06e12223          	sw	a4, 100(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:455
    bool is_strided_write = curr_dram_output_stream_state->total_write_strides > 1;
    e4b8:	04812703          	lw	a4, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:578
      in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots;
    e4bc:	07912a23          	sw	s9, 116(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:455
    bool is_strided_write = curr_dram_output_stream_state->total_write_strides > 1;
    e4c0:	00273713          	sltiu	a4, a4, 2
    e4c4:	00174713          	xori	a4, a4, 1
    e4c8:	0ae12423          	sw	a4, 168(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:657
        uint32_t wr_ptr_autoinc = l1_ptrs->rd_gwr_ptr_autoinc;
    e4cc:	06c12703          	lw	a4, 108(sp)
    e4d0:	06e12823          	sw	a4, 112(sp)
    e4d4:	00071663          	bnez	a4, e4e0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1f5c>
    e4d8:	00100713          	li	a4, 1
    e4dc:	06e12823          	sw	a4, 112(sp)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    e4e0:	012b5b13          	srli	s6, s6, 0x12
    e4e4:	007b7713          	andi	a4, s6, 7
    e4e8:	06e12023          	sw	a4, 96(sp)
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    e4ec:	04c12703          	lw	a4, 76(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:44
  volatile uint32_t tt_reg_ptr * ptr = (volatile uint32_t tt_reg_ptr *)offset;
    e4f0:	00098b13          	mv	s6, s3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
    e4f4:	01071693          	slli	a3, a4, 0x10
    e4f8:	ffb21737          	lui	a4, 0xffb21
    e4fc:	c2870713          	addi	a4, a4, -984 # ffb20c28 <TENSIX_MAILBOX_BASE+0xffc60c28>
    e500:	00e68733          	add	a4, a3, a4
    e504:	0ae12623          	sw	a4, 172(sp)
    e508:	014d0733          	add	a4, s10, s4
    e50c:	06e12423          	sw	a4, 104(sp)
    e510:	015a0733          	add	a4, s4, s5
    e514:	40e787b3          	sub	a5, a5, a4
    e518:	01079793          	slli	a5, a5, 0x10
    e51c:	0107d793          	srli	a5, a5, 0x10
    e520:	06f12c23          	sw	a5, 120(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e524:	ffb207b7          	lui	a5, 0xffb20
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:790
              curr_dram_output_stream_state->write_stride = write_stride | DRAM_STRIDE_UPDATE_WAIT;
    e528:	03812703          	lw	a4, 56(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e52c:	10c78793          	addi	a5, a5, 268 # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
    e530:	08f12623          	sw	a5, 140(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:790
    e534:	ffff87b7          	lui	a5, 0xffff8
    e538:	00f767b3          	or	a5, a4, a5
    e53c:	0af12823          	sw	a5, 176(sp)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:393
      stream_dram_writes_write_scratch(dram_stream, PTR_UPDATE_REG_DRAM_OUTPUT_STREAM_STATE, curr_dram_output_stream_state_idx | PTR_UPDATE_TYPE_DRAM_OUTPUT_STREAM_STATE);
    e540:	05c12783          	lw	a5, 92(sp)
    e544:	00800737          	lui	a4, 0x800
    e548:	00e7e7b3          	or	a5, a5, a4
    e54c:	08f12e23          	sw	a5, 156(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e550:	08c12783          	lw	a5, 140(sp)
    e554:	f5000737          	lui	a4, 0xf5000
    e558:	00e7a023          	sw	a4, 0(a5) # ffff8000 <TENSIX_MAILBOX_BASE+0x138000>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:684
          uint32_t dram_buf_size_bytes = l1_ptrs->dram_buf_size_bytes;
    e55c:	03c12783          	lw	a5, 60(sp)
    e560:	0407ae83          	lw	t4, 64(a5)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    e564:	0487a683          	lw	a3, 72(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    e568:	04c7a503          	lw	a0, 76(a5)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:688
          if (curr_dram_output_stream_state->moves_raw_data) {
    e56c:	002dc783          	lbu	a5, 2(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:686
          bool full_q_slot_sent = false;
    e570:	0c010e23          	sb	zero, 220(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:688
          if (curr_dram_output_stream_state->moves_raw_data) {
    e574:	4e078463          	beqz	a5, ea5c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x24d8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:689
            process_dram_write_moves_raw_data_l1(curr_dram_output_stream_state, next_dram_q_issue, stream_id,
    e578:	0dc10793          	addi	a5, sp, 220
    e57c:	00f12223          	sw	a5, 4(sp)
    e580:	05412703          	lw	a4, 84(sp)
    e584:	00068793          	mv	a5, a3
    e588:	06012683          	lw	a3, 96(sp)
    e58c:	01d12023          	sw	t4, 0(sp)
    e590:	00050813          	mv	a6, a0
    e594:	0e010893          	addi	a7, sp, 224
    e598:	000a0613          	mv	a2, s4
    e59c:	000b0593          	mv	a1, s6
    e5a0:	000d8513          	mv	a0, s11
    e5a4:	09d12423          	sw	t4, 136(sp)
    e5a8:	d2dfd0ef          	jal	ra, c2d4 <process_dram_write_moves_raw_data_l1(dram_output_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long, unsigned short, unsigned long, unsigned long, unsigned long long, unsigned long&, unsigned long, bool&) [clone .constprop.0]>
    e5ac:	08812e83          	lw	t4, 136(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:752
          if (full_q_slot_sent) {
    e5b0:	0dc14d03          	lbu	s10, 220(sp)
    e5b4:	0c0d08e3          	beqz	s10, ee84 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2900>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:757
            if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    e5b8:	004b4783          	lbu	a5, 4(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:753
            volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    e5bc:	000b2803          	lw	a6, 0(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:757
            if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    e5c0:	08f12423          	sw	a5, 136(sp)
    e5c4:	0087f793          	andi	a5, a5, 8
    e5c8:	66078463          	beqz	a5, ec30 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x26ac>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    e5cc:	03082883          	lw	a7, 48(a6) # ff000030 <TENSIX_MAILBOX_BASE+0xff140030>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    e5d0:	03482c83          	lw	s9, 52(a6)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:764
            if (wr_ptr_autoinc > 1) {
    e5d4:	06c12703          	lw	a4, 108(sp)
    e5d8:	00100793          	li	a5, 1
    e5dc:	66e7f863          	bgeu	a5, a4, ec4c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x26c8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:765
              uint32_t q_slot_size_bytes = curr_dram_output_stream_state->stream_info->dram_io_info->dram_q_slot_size_bytes;
    e5e0:	05cda783          	lw	a5, 92(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:766
              next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, mulsi3(wr_ptr_autoinc-1,q_slot_size_bytes), dram_buf_size_bytes);
    e5e4:	07012703          	lw	a4, 112(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:765
              uint32_t q_slot_size_bytes = curr_dram_output_stream_state->stream_info->dram_io_info->dram_q_slot_size_bytes;
    e5e8:	0887a783          	lw	a5, 136(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:766
              next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, mulsi3(wr_ptr_autoinc-1,q_slot_size_bytes), dram_buf_size_bytes);
    e5ec:	fff70713          	addi	a4, a4, -1 # f4ffffff <TENSIX_MAILBOX_BASE+0xf513ffff>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
    e5f0:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:765
              uint32_t q_slot_size_bytes = curr_dram_output_stream_state->stream_info->dram_io_info->dram_q_slot_size_bytes;
    e5f4:	0007a603          	lw	a2, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:766
              next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, mulsi3(wr_ptr_autoinc-1,q_slot_size_bytes), dram_buf_size_bytes);
    e5f8:	018b2783          	lw	a5, 24(s6)
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
    e5fc:	64070063          	beqz	a4, ec3c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x26b8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
    e600:	00177593          	andi	a1, a4, 1
    e604:	00058463          	beqz	a1, e60c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2088>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
    e608:	00c686b3          	add	a3, a3, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
    e60c:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
    e610:	00161613          	slli	a2, a2, 0x1
    e614:	fe9ff06f          	j	e5fc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2078>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
    e618:	00800513          	li	a0, 8
    e61c:	ffbf2097          	auipc	ra, 0xffbf2
    e620:	cd4080e7          	jalr	-812(ra) # ffc002f0 <TENSIX_MAILBOX_BASE+0xffd402f0>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:442
      if (risc_dram_writes_sent(dram_writes_with_cmd_buf, DRAM_STREAM_1))
    e624:	c00512e3          	bnez	a0, e228 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1ca4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:406
  for (uint32_t i = 0; i < num_dram_output_streams; i++, curr_dram_output_stream_state++) {
    e628:	05c12783          	lw	a5, 92(sp)
    e62c:	060d8d93          	addi	s11, s11, 96
    e630:	00178793          	addi	a5, a5, 1
    e634:	04f12e23          	sw	a5, 92(sp)
    e638:	9b5ff06f          	j	dfec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1a68>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:456
    if (is_strided_write && (curr_dram_output_stream_state->write_stride & DRAM_STRIDE_UPDATE_WAIT)) {
    e63c:	01079793          	slli	a5, a5, 0x10
    e640:	4107d793          	srai	a5, a5, 0x10
    e644:	c007d4e3          	bgez	a5, e24c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1cc8>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    e648:	ffb207b7          	lui	a5, 0xffb20
    e64c:	f0300737          	lui	a4, 0xf0300
    e650:	10e7a623          	sw	a4, 268(a5) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:461
      if (!dram_writes_with_cmd_buf && !curr_dram_output_stream_state->moves_raw_data) {
    e654:	03412783          	lw	a5, 52(sp)
    e658:	06078663          	beqz	a5, e6c4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2140>
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
    e65c:	008c04b3          	add	s1, s8, s0
    e660:	00c49493          	slli	s1, s1, 0xc
    e664:	0284a903          	lw	s2, 40(s1)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:474
      dram_q_state_t tt_l1_ptr * next_dram_q_issue = curr_dram_output_stream_state->next_dram_q_issue;
    e668:	058daa83          	lw	s5, 88(s11)
header_reads_flushed(unsigned long, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:81
  return (ncrisc_noc_reads_flushed(noc, transaction_id) || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))));
    e66c:	00300593          	li	a1, 3
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:475
      volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    e670:	000aab03          	lw	s6, 0(s5)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:108
    e674:	00195913          	srli	s2, s2, 0x1
    e678:	00197913          	andi	s2, s2, 1
header_reads_flushed(unsigned long, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:81
    e67c:	00090513          	mv	a0, s2
    e680:	ffbf2097          	auipc	ra, 0xffbf2
    e684:	980080e7          	jalr	-1664(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    e688:	fa0500e3          	beqz	a0, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:486
      if (!stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap)) {
    e68c:	0ec10693          	addi	a3, sp, 236
    e690:	0e810613          	addi	a2, sp, 232
    e694:	0e410593          	addi	a1, sp, 228
    e698:	000b0513          	mv	a0, s6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:484
      uint32_t curr_stride_wrap = 0;
    e69c:	0e012423          	sw	zero, 232(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:485
      uint32_t next_stride_wrap = 0;
    e6a0:	0e012623          	sw	zero, 236(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:486
      if (!stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap)) {
    e6a4:	ffbf2097          	auipc	ra, 0xffbf2
    e6a8:	a18080e7          	jalr	-1512(ra) # ffc000bc <TENSIX_MAILBOX_BASE+0xffd400bc>
    e6ac:	04051c63          	bnez	a0, e704 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2180>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:487
        if (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK)
    e6b0:	0cc12783          	lw	a5, 204(sp)
    e6b4:	fc07f793          	andi	a5, a5, -64
    e6b8:	f60788e3          	beqz	a5, e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:488
          dram_ptr_update_cnt = 0;
    e6bc:	0c012623          	sw	zero, 204(sp)
    e6c0:	f69ff06f          	j	e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:461
      if (!dram_writes_with_cmd_buf && !curr_dram_output_stream_state->moves_raw_data) {
    e6c4:	002dc783          	lbu	a5, 2(s11)
    e6c8:	f8079ae3          	bnez	a5, e65c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20d8>
quick_q_t::peek(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:93
      ret_val = entry_0;
    e6cc:	034da503          	lw	a0, 52(s11)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:460
      bool can_do_stride_update = true;
    e6d0:	00100493          	li	s1, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:463
        if (sending_dram_stream_1 && !risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream_1))
    e6d4:	00050863          	beqz	a0, e6e4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2160>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
    e6d8:	ffbf2097          	auipc	ra, 0xffbf2
    e6dc:	c18080e7          	jalr	-1000(ra) # ffc002f0 <TENSIX_MAILBOX_BASE+0xffd402f0>
    e6e0:	00050493          	mv	s1, a0
quick_q_t::peek(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:91
      ret_val = entry_1;
    e6e4:	038da503          	lw	a0, 56(s11)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:467
        if (sending_dram_stream_2 && !risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream_2))
    e6e8:	00051663          	bnez	a0, e6f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2170>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:470
      if (!can_do_stride_update) {
    e6ec:	f60498e3          	bnez	s1, e65c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20d8>
    e6f0:	f39ff06f          	j	e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
    e6f4:	ffbf2097          	auipc	ra, 0xffbf2
    e6f8:	bfc080e7          	jalr	-1028(ra) # ffc002f0 <TENSIX_MAILBOX_BASE+0xffd402f0>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:467
        if (sending_dram_stream_2 && !risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream_2))
    e6fc:	fe0518e3          	bnez	a0, e6ec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2168>
    e700:	f29ff06f          	j	e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:492
      if (write_stride == rd_stride) {
    e704:	0e412783          	lw	a5, 228(sp)
    e708:	03812703          	lw	a4, 56(sp)
    e70c:	faf712e3          	bne	a4, a5, e6b0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x212c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:494
        if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    e710:	004ac503          	lbu	a0, 4(s5)
    e714:	00857793          	andi	a5, a0, 8
    e718:	06078263          	beqz	a5, e77c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x21f8>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    e71c:	030b2883          	lw	a7, 48(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    e720:	034b2783          	lw	a5, 52(s6)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:501
        update_dram_write_ptrs(is_ram, is_strided_write, write_stride, curr_dram_output_stream_state->total_write_strides, next_dram_q_issue->dram_ptr_issued_q_slots, output_noc, output_vc,
    e724:	006ad703          	lhu	a4, 6(s5)
    e728:	0ec12683          	lw	a3, 236(sp)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    e72c:	0284a803          	lw	a6, 40(s1)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:501
    e730:	00d12623          	sw	a3, 12(sp)
    e734:	0e812683          	lw	a3, 232(sp)
    e738:	00f12023          	sw	a5, 0(sp)
    e73c:	00d12423          	sw	a3, 8(sp)
    e740:	01612223          	sw	s6, 4(sp)
    e744:	01edd683          	lhu	a3, 30(s11)
    e748:	03812603          	lw	a2, 56(sp)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
    e74c:	01285813          	srli	a6, a6, 0x12
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:501
    e750:	00090793          	mv	a5, s2
    e754:	00787813          	andi	a6, a6, 7
    e758:	00100593          	li	a1, 1
    e75c:	00157513          	andi	a0, a0, 1
    e760:	ffbf3097          	auipc	ra, 0xffbf3
    e764:	924080e7          	jalr	-1756(ra) # ffc01084 <TENSIX_MAILBOX_BASE+0xffd41084>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:504
        next_dram_q_issue = next_dram_q_issue->next;
    e768:	020aa783          	lw	a5, 32(s5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:505
        curr_dram_output_stream_state->next_dram_q_issue = next_dram_q_issue;
    e76c:	04fdac23          	sw	a5, 88(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:506
        curr_dram_output_stream_state->write_stride = write_stride;
    e770:	03812783          	lw	a5, 56(sp)
    e774:	00fd9e23          	sh	a5, 28(s11)
    e778:	ad5ff06f          	j	e24c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1cc8>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    e77c:	048b2883          	lw	a7, 72(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    e780:	04cb2783          	lw	a5, 76(s6)
    e784:	fa1ff06f          	j	e724 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x21a0>
get_total_in_flight_tiles(dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:112
    total_in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles + curr_dram_output_stream_state->in_flight_tiles_2;
    e788:	03eddc83          	lhu	s9, 62(s11)
    e78c:	00dc87b3          	add	a5, s9, a3
    e790:	06f12623          	sw	a5, 108(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:527
    if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
    e794:	03412783          	lw	a5, 52(sp)
    e798:	b00796e3          	bnez	a5, e2a4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1d20>
quick_q_t::peek(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:93
      ret_val = entry_0;
    e79c:	034dad03          	lw	s10, 52(s11)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:536
      if (sending_dram_stream && risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream)) {
    e7a0:	060d1263          	bnez	s10, e804 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2280>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:525
    uint32_t in_flight_q_slots = 0;
    e7a4:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:524
    uint32_t in_flight_tiles = 0;
    e7a8:	00000693          	li	a3, 0
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
    e7ac:	ffb12737          	lui	a4, 0xffb12
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:503
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
    e7b0:	ffb487b7          	lui	a5, 0xffb48
    e7b4:	3f47a783          	lw	a5, 1012(a5) # ffb483f4 <TENSIX_MAILBOX_BASE+0xffc883f4>
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:119
    e7b8:	1f072483          	lw	s1, 496(a4) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
    e7bc:	0000f737          	lui	a4, 0xf
    e7c0:	40972023          	sw	s1, 1024(a4) # f400 <local_mem_barrier>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:554
      uint32_t cycles_since_last_write = reg_read_barrier(RISCV_DEBUG_REG_WALL_CLOCK_L) - dram_output_stream_state[0].dram_stream_write_start_time;
    e7c4:	04012703          	lw	a4, 64(sp)
quick_q_t::full():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:114
    return entry_1;
    e7c8:	038da603          	lw	a2, 56(s11)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:554
    e7cc:	76872703          	lw	a4, 1896(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:552
      cmd_buf_free = !has_pending_dram_write_ptrs(dram_stream);
    e7d0:	0177d793          	srli	a5, a5, 0x17
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:554
      uint32_t cycles_since_last_write = reg_read_barrier(RISCV_DEBUG_REG_WALL_CLOCK_L) - dram_output_stream_state[0].dram_stream_write_start_time;
    e7d4:	40e484b3          	sub	s1, s1, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:555
      uint32_t min_cycles_for_trans = data_send_chunk_size_bytes / NOC_WORD_BYTES;
    e7d8:	05412703          	lw	a4, 84(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:552
      cmd_buf_free = !has_pending_dram_write_ptrs(dram_stream);
    e7dc:	0017c793          	xori	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:555
      uint32_t min_cycles_for_trans = data_send_chunk_size_bytes / NOC_WORD_BYTES;
    e7e0:	00575713          	srli	a4, a4, 0x5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:556
      uint32_t cycles_thresh = min_cycles_for_trans > CYCLES_SINCE_LAST_STREAM_DRAM_WRITE_THRESH ? min_cycles_for_trans - CYCLES_SINCE_LAST_STREAM_DRAM_WRITE_THRESH : 0;
    e7e4:	28a00513          	li	a0, 650
quick_q_t::full():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:114
    e7e8:	00c03633          	snez	a2, a2
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:552
      cmd_buf_free = !has_pending_dram_write_ptrs(dram_stream);
    e7ec:	0017f793          	andi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:556
      uint32_t cycles_thresh = min_cycles_for_trans > CYCLES_SINCE_LAST_STREAM_DRAM_WRITE_THRESH ? min_cycles_for_trans - CYCLES_SINCE_LAST_STREAM_DRAM_WRITE_THRESH : 0;
    e7f0:	00a77463          	bgeu	a4, a0, e7f8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2274>
    e7f4:	28a00713          	li	a4, 650
    e7f8:	d7670713          	addi	a4, a4, -650
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:557
      past_sending_threshold = cycles_since_last_write > cycles_thresh;
    e7fc:	009734b3          	sltu	s1, a4, s1
    e800:	ad5ff06f          	j	e2d4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1d50>
risc_dram_writes_sent(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:239
    return stream_dram_writes_sent(dram_stream);
    e804:	000d0513          	mv	a0, s10
    e808:	ffbf2097          	auipc	ra, 0xffbf2
    e80c:	ae8080e7          	jalr	-1304(ra) # ffc002f0 <TENSIX_MAILBOX_BASE+0xffd402f0>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:536
      if (sending_dram_stream && risc_dram_writes_sent(dram_writes_with_cmd_buf, sending_dram_stream)) {
    e810:	f8050ae3          	beqz	a0, e7a4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2220>
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:503
    e814:	008d04b3          	add	s1, s10, s0
    e818:	00c49493          	slli	s1, s1, 0xc
    e81c:	3f44a783          	lw	a5, 1012(s1)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:296
  if ((dram_output_stream_state_idx & PTR_UPDATE_TYPE_DRAM_OUTPUT_STREAM_STATE) != 0) {
    e820:	00800737          	lui	a4, 0x800
    e824:	00e7f733          	and	a4, a5, a4
    e828:	14070463          	beqz	a4, e970 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x23ec>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:297
    dram_output_stream_state_t* curr_dram_output_stream_state = &(dram_output_stream_state_base[dram_output_stream_state_idx & ~PTR_UPDATE_TYPE_DRAM_OUTPUT_STREAM_STATE]);
    e82c:	ff800737          	lui	a4, 0xff800
    e830:	fff70713          	addi	a4, a4, -1 # ff7fffff <TENSIX_MAILBOX_BASE+0xff93ffff>
    e834:	00e7f7b3          	and	a5, a5, a4
    e838:	06000713          	li	a4, 96
    e83c:	02e787b3          	mul	a5, a5, a4
    e840:	09812703          	lw	a4, 152(sp)
    e844:	00f707b3          	add	a5, a4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:298
    dram_q_state_t tt_l1_ptr * next_dram_q_issue = curr_dram_output_stream_state->next_dram_q_issue;
    e848:	0587a703          	lw	a4, 88(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:300
    uint32_t stream_id = curr_dram_output_stream_state->stream_id;
    e84c:	0007c783          	lbu	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:299
    volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_issue->l1_dram_ptrs;
    e850:	00072c83          	lw	s9, 0(a4)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
    e854:	008787b3          	add	a5, a5, s0
    e858:	00c79793          	slli	a5, a5, 0xc
    e85c:	0287aa83          	lw	s5, 40(a5)
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    e860:	0287a803          	lw	a6, 40(a5)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:304
    if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
    e864:	00474783          	lbu	a5, 4(a4)
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
    e868:	001ada93          	srli	s5, s5, 0x1
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    e86c:	01285813          	srli	a6, a6, 0x12
stream_get_output_noc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:108
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, OUTGOING_DATA_NOC);
    e870:	001afa93          	andi	s5, s5, 1
stream_get_output_unicast_vc(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:112
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_MISC_CFG_REG_INDEX, UNICAST_VC_REG);
    e874:	00787813          	andi	a6, a6, 7
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:304
    e878:	0087f713          	andi	a4, a5, 8
    e87c:	10070e63          	beqz	a4, e998 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2414>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    e880:	030cae03          	lw	t3, 48(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    e884:	034cab03          	lw	s6, 52(s9)
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:503
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
    e888:	3e44a703          	lw	a4, 996(s1)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:32
    return v.v;
    e88c:	000e0b93          	mv	s7, t3
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:312
    if (dram_wrptr_q_slots) {
    e890:	04070e63          	beqz	a4, e8ec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2368>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:314
      l1_ptrs->wr_dram_wrptr = dram_wrptr_q_slots;
    e894:	02ec9223          	sh	a4, 36(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:315
      if (!is_ram) {
    e898:	0017f793          	andi	a5, a5, 1
    e89c:	04079663          	bnez	a5, e8e8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2364>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:316
        while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
    e8a0:	00300593          	li	a1, 3
    e8a4:	000a8513          	mv	a0, s5
    e8a8:	07012823          	sw	a6, 112(sp)
    e8ac:	ffbf1097          	auipc	ra, 0xffbf1
    e8b0:	778080e7          	jalr	1912(ra) # ffc00024 <TENSIX_MAILBOX_BASE+0xffd40024>
    e8b4:	07012803          	lw	a6, 112(sp)
    e8b8:	fe0504e3          	beqz	a0, e8a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x231c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:317
        ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_dram_wrptr)), dram_ptr_addr+DRAM_BUF_WRPTR_OFFSET, 2,
    e8bc:	004b8693          	addi	a3, s7, 4
    e8c0:	0176b733          	sltu	a4, a3, s7
    e8c4:	00000893          	li	a7, 0
    e8c8:	00200793          	li	a5, 2
    e8cc:	01670733          	add	a4, a4, s6
    e8d0:	024c8613          	addi	a2, s9, 36
    e8d4:	00300593          	li	a1, 3
    e8d8:	000a8513          	mv	a0, s5
    e8dc:	ffbf2097          	auipc	ra, 0xffbf2
    e8e0:	078080e7          	jalr	120(ra) # ffc00954 <TENSIX_MAILBOX_BASE+0xffd40954>
    e8e4:	07012803          	lw	a6, 112(sp)
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:507
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index, val);
    e8e8:	3e04a223          	sw	zero, 996(s1)
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:503
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
    e8ec:	3e84a703          	lw	a4, 1000(s1)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:324
    if (update_type == PTR_UPDATE_TYPE_EPOCH_W_STRIDE || update_type == PTR_UPDATE_TYPE_EPOCH) {
    e8f0:	ffc007b7          	lui	a5, 0xffc00
    e8f4:	00f706b3          	add	a3, a4, a5
    e8f8:	fff78793          	addi	a5, a5, -1 # ffbfffff <TENSIX_MAILBOX_BASE+0xffd3ffff>
    e8fc:	00f6f7b3          	and	a5, a3, a5
    e900:	0c079a63          	bnez	a5, e9d4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2450>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:332
        l1_ptrs->wr_epoch_id_tag = DRAM_QUEUE_NO_EPOCH_CHECK;
    e904:	020c9523          	sh	zero, 42(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:334
      if (update_type == PTR_UPDATE_TYPE_EPOCH_W_STRIDE) {
    e908:	008007b7          	lui	a5, 0x800
    e90c:	08f71c63          	bne	a4, a5, e9a4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2420>
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:503
    e910:	3ec4a703          	lw	a4, 1004(s1)
    e914:	3f04a783          	lw	a5, 1008(s1)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:337
        l1_ptrs->stride_wrap = stride_wrap;
    e918:	04ec8ba3          	sb	a4, 87(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:338
        l1_ptrs->wr_stride = stride;
    e91c:	02fc9623          	sh	a5, 44(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:339
        l1_ptrs->rd_stride = stride;
    e920:	00fc9623          	sh	a5, 12(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:340
        while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
    e924:	00300593          	li	a1, 3
    e928:	000a8513          	mv	a0, s5
    e92c:	07012823          	sw	a6, 112(sp)
    e930:	ffbf1097          	auipc	ra, 0xffbf1
    e934:	6f4080e7          	jalr	1780(ra) # ffc00024 <TENSIX_MAILBOX_BASE+0xffd40024>
    e938:	07012803          	lw	a6, 112(sp)
    e93c:	fe0504e3          	beqz	a0, e924 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x23a0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:341
        ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_ptr_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 4,
    e940:	00ab8693          	addi	a3, s7, 10
    e944:	0176b733          	sltu	a4, a3, s7
    e948:	00000893          	li	a7, 0
    e94c:	00400793          	li	a5, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:345
        ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_ptr_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
    e950:	01670733          	add	a4, a4, s6
    e954:	02ac8613          	addi	a2, s9, 42
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:357
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_ptr_addr+DRAM_BUF_STRIDE_OFFSET, 2,
    e958:	00300593          	li	a1, 3
    e95c:	000a8513          	mv	a0, s5
    e960:	ffbf2097          	auipc	ra, 0xffbf2
    e964:	ff4080e7          	jalr	-12(ra) # ffc00954 <TENSIX_MAILBOX_BASE+0xffd40954>
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:507
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index, val);
    e968:	3e04a423          	sw	zero, 1000(s1)
    e96c:	3e04aa23          	sw	zero, 1012(s1)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:538
        if (sending_dram_stream == DRAM_STREAM_1) {
    e970:	00800793          	li	a5, 8
    e974:	0afd1a63          	bne	s10, a5, ea28 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x24a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:539
          in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles;
    e978:	008dd683          	lhu	a3, 8(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:540
          in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots;
    e97c:	001dc583          	lbu	a1, 1(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:541
          curr_dram_output_stream_state->in_flight_tiles = 0;
    e980:	000d9423          	sh	zero, 8(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:542
          curr_dram_output_stream_state->in_flight_q_slots = 0;
    e984:	000d80a3          	sb	zero, 1(s11)
quick_q_t::pop():
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:109
    entry_0 = entry_1;
    e988:	038da783          	lw	a5, 56(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:110
    entry_1 = 0;
    e98c:	020dac23          	sw	zero, 56(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:109
    entry_0 = entry_1;
    e990:	02fdaa23          	sw	a5, 52(s11)
    e994:	e19ff06f          	j	e7ac <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2228>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    e998:	048cae03          	lw	t3, 72(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    e99c:	04ccab03          	lw	s6, 76(s9)
    e9a0:	ee9ff06f          	j	e888 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2304>
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:344
        while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
    e9a4:	00300593          	li	a1, 3
    e9a8:	000a8513          	mv	a0, s5
    e9ac:	07012823          	sw	a6, 112(sp)
    e9b0:	ffbf1097          	auipc	ra, 0xffbf1
    e9b4:	674080e7          	jalr	1652(ra) # ffc00024 <TENSIX_MAILBOX_BASE+0xffd40024>
    e9b8:	07012803          	lw	a6, 112(sp)
    e9bc:	fe0504e3          	beqz	a0, e9a4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2420>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:345
        ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_ptr_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
    e9c0:	00ab8693          	addi	a3, s7, 10
    e9c4:	0176b733          	sltu	a4, a3, s7
    e9c8:	00000893          	li	a7, 0
    e9cc:	00200793          	li	a5, 2
    e9d0:	f81ff06f          	j	e950 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x23cc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:350
    } else if (update_type == PTR_UPDATE_TYPE_STRIDE) {
    e9d4:	002007b7          	lui	a5, 0x200
    e9d8:	f8f71ae3          	bne	a4, a5, e96c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x23e8>
stream_dram_writes_read_scratch(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:503
  return NOC_STREAM_READ_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index);
    e9dc:	3ec4a703          	lw	a4, 1004(s1)
    e9e0:	3f04a783          	lw	a5, 1008(s1)
write_pending_dram_write_ptrs(unsigned long, dram_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:353
      l1_ptrs->stride_wrap = stride_wrap;
    e9e4:	04ec8ba3          	sb	a4, 87(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:354
      l1_ptrs->wr_stride = stride;
    e9e8:	02fc9623          	sh	a5, 44(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:355
      l1_ptrs->rd_stride = stride;
    e9ec:	00fc9623          	sh	a5, 12(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:356
      while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
    e9f0:	00300593          	li	a1, 3
    e9f4:	000a8513          	mv	a0, s5
    e9f8:	07012823          	sw	a6, 112(sp)
    e9fc:	ffbf1097          	auipc	ra, 0xffbf1
    ea00:	628080e7          	jalr	1576(ra) # ffc00024 <TENSIX_MAILBOX_BASE+0xffd40024>
    ea04:	07012803          	lw	a6, 112(sp)
    ea08:	fe0504e3          	beqz	a0, e9f0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x246c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:357
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_ptr_addr+DRAM_BUF_STRIDE_OFFSET, 2,
    ea0c:	00cb8693          	addi	a3, s7, 12
    ea10:	0176b733          	sltu	a4, a3, s7
    ea14:	00000893          	li	a7, 0
    ea18:	00200793          	li	a5, 2
    ea1c:	01670733          	add	a4, a4, s6
    ea20:	02cc8613          	addi	a2, s9, 44
    ea24:	f35ff06f          	j	e958 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x23d4>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:544
          in_flight_tiles = curr_dram_output_stream_state->in_flight_tiles_2;
    ea28:	03edd683          	lhu	a3, 62(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:545
          in_flight_q_slots = curr_dram_output_stream_state->in_flight_q_slots_2;
    ea2c:	03cdc583          	lbu	a1, 60(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:546
          curr_dram_output_stream_state->in_flight_tiles_2 = 0;
    ea30:	020d9f23          	sh	zero, 62(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:547
          curr_dram_output_stream_state->in_flight_q_slots_2 = 0;
    ea34:	020d8e23          	sb	zero, 60(s11)
    ea38:	f51ff06f          	j	e988 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2404>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:610
      uint32_t stream_msg_info_buf_addr_word = curr_dram_output_stream_state->stream_info->msg_info_buf_start;
    ea3c:	05cda783          	lw	a5, 92(s11)
    ea40:	0207a703          	lw	a4, 32(a5) # 200020 <noc_nonblocking_api.cc.88b5909b+0x1dd29c>
stream_phase_tiles_received(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:154
  return NOC_STREAM_READ_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX) - msg_info_buf_start_addr;
    ea44:	06892783          	lw	a5, 104(s2)
    ea48:	40e787b3          	sub	a5, a5, a4
    ea4c:	959ff06f          	j	e3a4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1e20>
dram_io_entries(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:96
    return 2*buf_size_q_slots - rd_ptr + wr_ptr;
    ea50:	00161593          	slli	a1, a2, 0x1
    ea54:	00d586b3          	add	a3, a1, a3
    ea58:	9adff06f          	j	e404 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1e80>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:694
            uint32_t stream_msg_info_buf_addr = curr_dram_output_stream_state->stream_info->msg_info_buf_start;
    ea5c:	05cda783          	lw	a5, 92(s11)
stream_get_data_buf_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:126
  return NOC_STREAM_READ_REG(stream_id, STREAM_BUF_START_REG_INDEX);
    ea60:	01892583          	lw	a1, 24(s2)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:694
    ea64:	0207a883          	lw	a7, 32(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:693
            uint32_t stream_rd_addr = (stream_get_data_buf_addr(stream_id) * MEM_WORD_WIDTH) + stream_rd_ptr_byte;
    ea68:	0e012603          	lw	a2, 224(sp)
    ea6c:	00459593          	slli	a1, a1, 0x4
    ea70:	00c585b3          	add	a1, a1, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:706
              dram_output_stream_issue_scatter_write_indicies(output_noc, output_vc, next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
    ea74:	018b2603          	lw	a2, 24(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:696
            if (dram_io_scatter_state != ((dram_io_scatter_state_t*)0)) {
    ea78:	100b8063          	beqz	s7, eb78 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x25f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:701
              uint32_t scatter_idx = next_dram_q_issue->scatter_offsets_index;
    ea7c:	01cb2f03          	lw	t5, 28(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:697
              uint32_t dram_io_scatter_chunk_size_bytes = dram_io_scatter_state->scatter_chunk_size_bytes;
    ea80:	008ba783          	lw	a5, 8(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:698
              uint32_t dram_io_scatter_size = dram_io_scatter_state->scatter_offsets_size;
    ea84:	004bac83          	lw	s9, 4(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:699
              uint32_t dram_embeddings_row_shift = dram_io_info->dram_embeddings_row_shift;
    ea88:	010c2803          	lw	a6, 16(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:700
              uint32_t dram_io_scatter_chunk_size_tiles = dram_io_scatter_state->scatter_chunk_size_tiles;
    ea8c:	010ba703          	lw	a4, 16(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:706
              dram_output_stream_issue_scatter_write_indicies(output_noc, output_vc, next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
    ea90:	03412303          	lw	t1, 52(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:705
              uint32_t col_offset_bytes = curr_dram_output_stream_state->col_offset_bytes;
    ea94:	04cdaf83          	lw	t6, 76(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:706
              dram_output_stream_issue_scatter_write_indicies(output_noc, output_vc, next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
    ea98:	0e410d13          	addi	s10, sp, 228
    ea9c:	09d12423          	sw	t4, 136(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:705
              uint32_t col_offset_bytes = curr_dram_output_stream_state->col_offset_bytes;
    eaa0:	0ff12623          	sw	t6, 236(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:701
              uint32_t scatter_idx = next_dram_q_issue->scatter_offsets_index;
    eaa4:	0fe12223          	sw	t5, 228(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:703
              uint32_t c_dim_count = curr_dram_output_stream_state->c_dim_count;
    eaa8:	046ddf03          	lhu	t5, 70(s11)
    eaac:	0fe12423          	sw	t5, 232(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:704
              uint32_t c_dim_size = curr_dram_output_stream_state->c_dim_size;
    eab0:	044ddf03          	lhu	t5, 68(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:706
              dram_output_stream_issue_scatter_write_indicies(output_noc, output_vc, next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_tiles, dram_io_scatter_chunk_size_tiles,
    eab4:	03112223          	sw	a7, 36(sp)
    eab8:	0ec10893          	addi	a7, sp, 236
    eabc:	02612423          	sw	t1, 40(sp)
    eac0:	03112023          	sw	a7, 32(sp)
    eac4:	00ac5883          	lhu	a7, 10(s8)
    eac8:	01012823          	sw	a6, 16(sp)
    eacc:	00a12623          	sw	a0, 12(sp)
    ead0:	00058813          	mv	a6, a1
    ead4:	04c12503          	lw	a0, 76(sp)
    ead8:	06012583          	lw	a1, 96(sp)
    eadc:	00d12423          	sw	a3, 8(sp)
    eae0:	01e12c23          	sw	t5, 24(sp)
    eae4:	000a0693          	mv	a3, s4
    eae8:	01a12023          	sw	s10, 0(sp)
    eaec:	01112e23          	sw	a7, 28(sp)
    eaf0:	0e810893          	addi	a7, sp, 232
    eaf4:	01112a23          	sw	a7, 20(sp)
    eaf8:	06412883          	lw	a7, 100(sp)
    eafc:	ffbf3097          	auipc	ra, 0xffbf3
    eb00:	8ec080e7          	jalr	-1812(ra) # ffc013e8 <TENSIX_MAILBOX_BASE+0xffd413e8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:710
              curr_dram_output_stream_state->c_dim_count = c_dim_count;
    eb04:	0e812783          	lw	a5, 232(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:713
              clear_scatter_offsets(curr_dram_output_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
    eb08:	000d0713          	mv	a4, s10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:710
              curr_dram_output_stream_state->c_dim_count = c_dim_count;
    eb0c:	04fd9323          	sh	a5, 70(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:711
              curr_dram_output_stream_state->col_offset_bytes = col_offset_bytes;
    eb10:	0ec12783          	lw	a5, 236(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:713
              clear_scatter_offsets(curr_dram_output_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
    eb14:	000c8693          	mv	a3, s9
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:711
              curr_dram_output_stream_state->col_offset_bytes = col_offset_bytes;
    eb18:	04fda623          	sw	a5, 76(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:713
              clear_scatter_offsets(curr_dram_output_stream_state->scatter_list_input_index, next_dram_q_issue, dram_io_scatter_state, dram_io_info, dram_io_scatter_size, scatter_idx, dram_io_info->scatter_list_stream_id);
    eb1c:	008c5783          	lhu	a5, 8(s8)
    eb20:	000c0613          	mv	a2, s8
    eb24:	000b0593          	mv	a1, s6
    eb28:	048d8513          	addi	a0, s11, 72
    eb2c:	ffbf2097          	auipc	ra, 0xffbf2
    eb30:	918080e7          	jalr	-1768(ra) # ffc00444 <TENSIX_MAILBOX_BASE+0xffd40444>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    eb34:	0e012783          	lw	a5, 224(sp)
    eb38:	05412683          	lw	a3, 84(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:737
            stream_rd_ptr_byte = buf_ptr_inc_wrap(stream_rd_ptr_byte, data_send_chunk_size_bytes, curr_dram_output_stream_state->stream_buf_size_bytes);
    eb3c:	010da703          	lw	a4, 16(s11)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
    eb40:	00f687b3          	add	a5, a3, a5
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:724
                dram_output_stream_state[0].dram_stream_write_start_time = reg_read_barrier(RISCV_DEBUG_REG_WALL_CLOCK_L);
    eb44:	08812e83          	lw	t4, 136(sp)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    eb48:	00e7e463          	bltu	a5, a4, eb50 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x25cc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    eb4c:	40e787b3          	sub	a5, a5, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:737
            stream_rd_ptr_byte = buf_ptr_inc_wrap(stream_rd_ptr_byte, data_send_chunk_size_bytes, curr_dram_output_stream_state->stream_buf_size_bytes);
    eb50:	0ef12023          	sw	a5, 224(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:739
            if (!dram_writes_with_cmd_buf)
    eb54:	03412783          	lw	a5, 52(sp)
    eb58:	08079a63          	bnez	a5, ebec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2668>
quick_q_t::push(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:98
    if (entry_1) {
    eb5c:	038da783          	lw	a5, 56(s11)
    eb60:	06078e63          	beqz	a5, ebdc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2658>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    eb64:	dead07b7          	lui	a5, 0xdead0
    eb68:	ffb20737          	lui	a4, 0xffb20
    eb6c:	20078793          	addi	a5, a5, 512 # dead0200 <TENSIX_MAILBOX_BASE+0xdec10200>
    eb70:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
    eb74:	0000006f          	j	eb74 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x25f0>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:716
              if ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) == 0) {
    eb78:	004b4783          	lbu	a5, 4(s6)
    eb7c:	0087f793          	andi	a5, a5, 8
    eb80:	00079463          	bnez	a5, eb88 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2604>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:717
                offset += DRAM_BUF_DATA_OFFSET;
    eb84:	02060613          	addi	a2, a2, 32 # ffff0020 <TENSIX_MAILBOX_BASE+0x130020>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    eb88:	08c12703          	lw	a4, 140(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:719
              uint64_t dram_dest_addr = dram_buf_addr + offset;
    eb8c:	00d606b3          	add	a3, a2, a3
    eb90:	09d12423          	sw	t4, 136(sp)
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    eb94:	f41107b7          	lui	a5, 0xf4110
    eb98:	00f72023          	sw	a5, 0(a4)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:719
    eb9c:	00c6b733          	sltu	a4, a3, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:723
                risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_rd_addr, dram_dest_addr, data_send_chunk_size_bytes, data_send_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);
    eba0:	00a70733          	add	a4, a4, a0
    eba4:	05412783          	lw	a5, 84(sp)
    eba8:	00058613          	mv	a2, a1
    ebac:	06012803          	lw	a6, 96(sp)
    ebb0:	04c12583          	lw	a1, 76(sp)
    ebb4:	03412503          	lw	a0, 52(sp)
    ebb8:	ffbf2097          	auipc	ra, 0xffbf2
    ebbc:	648080e7          	jalr	1608(ra) # ffc01200 <TENSIX_MAILBOX_BASE+0xffd41200>
reg_read_barrier(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:119
    uint32_t data = p_reg[0];
    ebc0:	ffb127b7          	lui	a5, 0xffb12
    ebc4:	1f07a783          	lw	a5, 496(a5) # ffb121f0 <TENSIX_MAILBOX_BASE+0xffc521f0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:120
    local_mem_barrier = data;
    ebc8:	0000f737          	lui	a4, 0xf
    ebcc:	40f72023          	sw	a5, 1024(a4) # f400 <local_mem_barrier>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:724
                dram_output_stream_state[0].dram_stream_write_start_time = reg_read_barrier(RISCV_DEBUG_REG_WALL_CLOCK_L);
    ebd0:	04012703          	lw	a4, 64(sp)
    ebd4:	76f72423          	sw	a5, 1896(a4)
    ebd8:	f5dff06f          	j	eb34 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x25b0>
quick_q_t::push(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:101
    } else if (entry_0) {
    ebdc:	034da783          	lw	a5, 52(s11)
    ebe0:	04078263          	beqz	a5, ec24 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x26a0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:102
      entry_1 = val;
    ebe4:	00800793          	li	a5, 8
    ebe8:	02fdac23          	sw	a5, 56(s11)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:742
            uint32_t dram_num_partial_q_slot_issued_tiles = next_dram_q_issue->dram_num_partial_q_slot_issued_tiles;
    ebec:	010b2783          	lw	a5, 16(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:743
            dram_num_partial_q_slot_issued_tiles += data_send_chunk_size_tiles;
    ebf0:	00fa0733          	add	a4, s4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:744
            next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = dram_num_partial_q_slot_issued_tiles;
    ebf4:	00eb2823          	sw	a4, 16(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:745
            full_q_slot_sent = (dram_num_partial_q_slot_issued_tiles == curr_dram_output_stream_state->q_slot_size_tiles);
    ebf8:	054da783          	lw	a5, 84(s11)
    ebfc:	40e787b3          	sub	a5, a5, a4
    ec00:	0017b793          	seqz	a5, a5
    ec04:	0cf10e23          	sb	a5, 220(sp)
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    ec08:	018b2783          	lw	a5, 24(s6)
    ec0c:	05412703          	lw	a4, 84(sp)
    ec10:	00f707b3          	add	a5, a4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    ec14:	01d7e463          	bltu	a5, t4, ec1c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2698>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    ec18:	41d787b3          	sub	a5, a5, t4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:747
            next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, data_send_chunk_size_bytes, dram_buf_size_bytes);
    ec1c:	00fb2c23          	sw	a5, 24(s6)
    ec20:	991ff06f          	j	e5b0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x202c>
quick_q_t::push(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:104
      entry_0 = val;
    ec24:	00800793          	li	a5, 8
    ec28:	02fdaa23          	sw	a5, 52(s11)
    ec2c:	fc1ff06f          	j	ebec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2668>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
    ec30:	04882883          	lw	a7, 72(a6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
    ec34:	04c82c83          	lw	s9, 76(a6)
    ec38:	99dff06f          	j	e5d4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2050>
buf_ptr_inc_wrap(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:100
  uint32_t result = buf_ptr + inc;
    ec3c:	00d787b3          	add	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:101
  if (result >= buf_size) {
    ec40:	01d7e463          	bltu	a5, t4, ec48 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x26c4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:102
    result -= buf_size;
    ec44:	41d787b3          	sub	a5, a5, t4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:766
              next_dram_q_issue->dram_ptr_issued_byte = buf_ptr_inc_wrap(next_dram_q_issue->dram_ptr_issued_byte, mulsi3(wr_ptr_autoinc-1,q_slot_size_bytes), dram_buf_size_bytes);
    ec48:	00fb2c23          	sw	a5, 24(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:769
            in_flight_q_slots++;
    ec4c:	07412783          	lw	a5, 116(sp)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
    ec50:	07012703          	lw	a4, 112(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:769
    ec54:	00178793          	addi	a5, a5, 1
    ec58:	06f12a23          	sw	a5, 116(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:771
            next_dram_q_issue->dram_ptr_issued_q_slots = dram_io_incr_ptr(temp_dram_q_issue->dram_ptr_issued_q_slots, wr_ptr_autoinc, temp_dram_q_issue->dram_buf_size_q_slots);
    ec5c:	0069d783          	lhu	a5, 6(s3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:770
            next_dram_q_issue->dram_num_partial_q_slot_issued_tiles = 0;
    ec60:	000b2823          	sw	zero, 16(s6)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:53
    ec64:	00e787b3          	add	a5, a5, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:771
            next_dram_q_issue->dram_ptr_issued_q_slots = dram_io_incr_ptr(temp_dram_q_issue->dram_ptr_issued_q_slots, wr_ptr_autoinc, temp_dram_q_issue->dram_buf_size_q_slots);
    ec68:	00c9d703          	lhu	a4, 12(s3)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:54
  uint32_t double_buf_size_q_slots = 2*buf_size_q_slots;
    ec6c:	00171713          	slli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
    ec70:	00e7e463          	bltu	a5, a4, ec78 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x26f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
    ec74:	40e787b3          	sub	a5, a5, a4
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:771
    ec78:	00fb1323          	sh	a5, 6(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:776
            bool stride_iter_matches_expr = is_strided_write && stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
    ec7c:	04812703          	lw	a4, 72(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:774
            uint32_t curr_stride_wrap = 0;
    ec80:	0e012423          	sw	zero, 232(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:775
            uint32_t next_stride_wrap = 0;
    ec84:	0e012623          	sw	zero, 236(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:776
            bool stride_iter_matches_expr = is_strided_write && stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
    ec88:	00100793          	li	a5, 1
    ec8c:	0ce7e263          	bltu	a5, a4, ed50 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x27cc>
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:372
  if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
    ec90:	03412583          	lw	a1, 52(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:786
              set_pending_dram_write_ptrs(dram_stream, dram_writes_with_cmd_buf, is_ram, is_strided_write, write_stride, curr_dram_output_stream_state->total_write_strides, temp_dram_q_issue->dram_ptr_issued_q_slots, output_noc, output_vc,
    ec94:	0069d703          	lhu	a4, 6(s3)
    ec98:	01edd683          	lhu	a3, 30(s11)
    ec9c:	0e812783          	lw	a5, 232(sp)
    eca0:	0ec12603          	lw	a2, 236(sp)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:372
  if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
    eca4:	14058263          	beqz	a1, ede8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2864>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:373
    update_dram_write_ptrs(is_ram, is_strided_write, write_stride, total_write_strides, dram_wrptr_q_slots, output_noc, output_vc,
    eca8:	08812503          	lw	a0, 136(sp)
    ecac:	00c12623          	sw	a2, 12(sp)
    ecb0:	00f12423          	sw	a5, 8(sp)
    ecb4:	01012223          	sw	a6, 4(sp)
    ecb8:	04c12783          	lw	a5, 76(sp)
    ecbc:	06012803          	lw	a6, 96(sp)
    ecc0:	03812603          	lw	a2, 56(sp)
    ecc4:	0a812583          	lw	a1, 168(sp)
    ecc8:	01912023          	sw	s9, 0(sp)
    eccc:	00157513          	andi	a0, a0, 1
    ecd0:	ffbf2097          	auipc	ra, 0xffbf2
    ecd4:	3b4080e7          	jalr	948(ra) # ffc01084 <TENSIX_MAILBOX_BASE+0xffd41084>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:796
              next_dram_q_issue = next_dram_q_issue->next;
    ecd8:	020b2b03          	lw	s6, 32(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:802
          curr_phase_tiles_remaining -= data_send_chunk_size_tiles;
    ecdc:	05012783          	lw	a5, 80(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:810
            curr_dram_output_stream_state->in_flight_q_slots = in_flight_q_slots;
    ece0:	07412703          	lw	a4, 116(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:802
          curr_phase_tiles_remaining -= data_send_chunk_size_tiles;
    ece4:	414787b3          	sub	a5, a5, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:810
            curr_dram_output_stream_state->in_flight_q_slots = in_flight_q_slots;
    ece8:	00ed80a3          	sb	a4, 1(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:811
            curr_dram_output_stream_state->in_flight_tiles = in_flight_tiles;
    ecec:	06812703          	lw	a4, 104(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:802
          curr_phase_tiles_remaining -= data_send_chunk_size_tiles;
    ecf0:	04f12823          	sw	a5, 80(sp)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
    ecf4:	015a0ab3          	add	s5, s4, s5
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:811
            curr_dram_output_stream_state->in_flight_tiles = in_flight_tiles;
    ecf8:	00ed9423          	sh	a4, 8(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:822
          if (!curr_phase_tiles_remaining) {
    ecfc:	05012703          	lw	a4, 80(sp)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
    ed00:	010a9a93          	slli	s5, s5, 0x10
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:803
          if (curr_dram_output_stream_state->moves_raw_data || dram_output_no_push) {
    ed04:	002dc783          	lbu	a5, 2(s11)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
    ed08:	010ada93          	srli	s5, s5, 0x10
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:822
          if (!curr_phase_tiles_remaining) {
    ed0c:	18071063          	bnez	a4, ee8c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2908>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:823
            if (!curr_dram_output_stream_state->moves_raw_data && !dram_output_no_push)
    ed10:	08412703          	lw	a4, 132(sp)
    ed14:	00f767b3          	or	a5, a4, a5
    ed18:	00079463          	bnez	a5, ed20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x279c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:824
              curr_phase_tiles_sent = 0;
    ed1c:	00000a93          	li	s5, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:825
            break;
    ed20:	000b0993          	mv	s3, s6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:874
        curr_dram_output_stream_state->stream_rd_ptr_byte = stream_rd_ptr_byte; 
    ed24:	0e012783          	lw	a5, 224(sp)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:164
  uint32_t rmw = NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX) & ~0xffff;
    ed28:	ffff0737          	lui	a4, 0xffff0
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:874
    ed2c:	00fda623          	sw	a5, 12(s11)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:164
    ed30:	00892783          	lw	a5, 8(s2)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:875
        curr_dram_output_stream_state->next_dram_q_issue = next_dram_q_issue;
    ed34:	053dac23          	sw	s3, 88(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:876
        curr_dram_output_stream_state->curr_phase_tiles_sent = curr_phase_tiles_sent;              
    ed38:	015d9523          	sh	s5, 10(s11)
stream_rec_endpoint_set_phase_tiles_count(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:164
    ed3c:	00e7f7b3          	and	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:165
  NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX, (rmw | val));  // used as scratch reg for receiver endpoint streams
    ed40:	05012703          	lw	a4, 80(sp)
    ed44:	00e7e7b3          	or	a5, a5, a4
    ed48:	00f92423          	sw	a5, 8(s2)
    ed4c:	8ddff06f          	j	e628 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x20a4>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:776
            bool stride_iter_matches_expr = is_strided_write && stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
    ed50:	00080513          	mv	a0, a6
    ed54:	0ec10693          	addi	a3, sp, 236
    ed58:	0e810613          	addi	a2, sp, 232
    ed5c:	0e410593          	addi	a1, sp, 228
    ed60:	0b112c23          	sw	a7, 184(sp)
    ed64:	0b012a23          	sw	a6, 180(sp)
    ed68:	ffbf1097          	auipc	ra, 0xffbf1
    ed6c:	354080e7          	jalr	852(ra) # ffc000bc <TENSIX_MAILBOX_BASE+0xffd400bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:779
            bool do_ptr_update = !is_strided_write || 
    ed70:	03412703          	lw	a4, 52(sp)
    ed74:	0b412803          	lw	a6, 180(sp)
    ed78:	0b812883          	lw	a7, 184(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:776
            bool stride_iter_matches_expr = is_strided_write && stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
    ed7c:	00050793          	mv	a5, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:779
            bool do_ptr_update = !is_strided_write || 
    ed80:	00071663          	bnez	a4, ed8c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2808>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:780
                                                      ((dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) &&
    ed84:	002dc703          	lbu	a4, 2(s11)
    ed88:	04070063          	beqz	a4, edc8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2844>
header_reads_flushed(unsigned long, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:81
  return (ncrisc_noc_reads_flushed(noc, transaction_id) || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))));
    ed8c:	04c12503          	lw	a0, 76(sp)
    ed90:	00300593          	li	a1, 3
    ed94:	0b112e23          	sw	a7, 188(sp)
    ed98:	0af12c23          	sw	a5, 184(sp)
    ed9c:	0b012a23          	sw	a6, 180(sp)
    eda0:	ffbf1097          	auipc	ra, 0xffbf1
    eda4:	260080e7          	jalr	608(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    eda8:	02050063          	beqz	a0, edc8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2844>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:781
                                                       (header_reads_flushed(output_noc, NCRISC_HEADER_RD_TRID, l1_ptr_addr) && stride_iter_matches_expr && write_stride == rd_stride));
    edac:	0b812783          	lw	a5, 184(sp)
    edb0:	00078c63          	beqz	a5, edc8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2844>
    edb4:	0e412783          	lw	a5, 228(sp)
    edb8:	03812703          	lw	a4, 56(sp)
    edbc:	0b412803          	lw	a6, 180(sp)
    edc0:	0bc12883          	lw	a7, 188(sp)
    edc4:	ecf706e3          	beq	a4, a5, ec90 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x270c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:790
              curr_dram_output_stream_state->write_stride = write_stride | DRAM_STRIDE_UPDATE_WAIT;
    edc8:	0b012783          	lw	a5, 176(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:789
              update_dram_q = false;
    edcc:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:790
              curr_dram_output_stream_state->write_stride = write_stride | DRAM_STRIDE_UPDATE_WAIT;
    edd0:	00fd9e23          	sh	a5, 28(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:791
              if (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK)
    edd4:	0cc12783          	lw	a5, 204(sp)
    edd8:	fc07f793          	andi	a5, a5, -64
    eddc:	f00780e3          	beqz	a5, ecdc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2758>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:792
                dram_ptr_update_cnt = 0;
    ede0:	0c012623          	sw	zero, 204(sp)
    ede4:	ef9ff06f          	j	ecdc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2758>
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:372
  if (dram_writes_with_cmd_buf || curr_dram_output_stream_state->moves_raw_data) {
    ede8:	002dc583          	lbu	a1, 2(s11)
    edec:	ea059ee3          	bnez	a1, eca8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2724>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:376
    if (!is_strided_write || write_stride == total_write_strides-1) {
    edf0:	04812503          	lw	a0, 72(sp)
    edf4:	00100593          	li	a1, 1
    edf8:	00a5f863          	bgeu	a1, a0, ee08 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2884>
    edfc:	03812583          	lw	a1, 56(sp)
    ee00:	fff68693          	addi	a3, a3, -1 # f3ffffff <TENSIX_MAILBOX_BASE+0xf413ffff>
    ee04:	04d59a63          	bne	a1, a3, ee58 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x28d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:377
      stream_dram_writes_write_scratch(dram_stream, PTR_UPDATE_REG_WR_PTR_UPDATE, PTR_UPDATE_TYPE_WR_PTR_UPDATE | dram_wrptr_q_slots);
    ee08:	008006b7          	lui	a3, 0x800
    ee0c:	00d76733          	or	a4, a4, a3
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:507
  NOC_STREAM_WRITE_REG(stream_id, STREAM_SCRATCH_0_REG_INDEX + scratch_reg_index, val);
    ee10:	ffb487b7          	lui	a5, 0xffb48
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:379
      if (is_strided_write) {
    ee14:	04812583          	lw	a1, 72(sp)
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:507
    ee18:	3ee7a223          	sw	a4, 996(a5) # ffb483e4 <TENSIX_MAILBOX_BASE+0xffc883e4>
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:379
    ee1c:	00100713          	li	a4, 1
    ee20:	02b77663          	bgeu	a4, a1, ee4c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x28c8>
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:507
    ee24:	3ed7a423          	sw	a3, 1000(a5)
    ee28:	3ec7a623          	sw	a2, 1004(a5)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:382
        stream_dram_writes_write_scratch(dram_stream, PTR_UPDATE_REG_STRIDE, next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0);
    ee2c:	00060463          	beqz	a2, ee34 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x28b0>
    ee30:	00004637          	lui	a2, 0x4
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:507
    ee34:	ffb487b7          	lui	a5, 0xffb48
    ee38:	3ec7a823          	sw	a2, 1008(a5) # ffb483f0 <TENSIX_MAILBOX_BASE+0xffc883f0>
    ee3c:	09c12703          	lw	a4, 156(sp)
    ee40:	ffb487b7          	lui	a5, 0xffb48
    ee44:	3ee7aa23          	sw	a4, 1012(a5) # ffb483f4 <TENSIX_MAILBOX_BASE+0xffc883f4>
    ee48:	e91ff06f          	j	ecd8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2754>
    ee4c:	00400737          	lui	a4, 0x400
    ee50:	3ee7a423          	sw	a4, 1000(a5)
    ee54:	fe9ff06f          	j	ee3c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x28b8>
    ee58:	ffb48737          	lui	a4, 0xffb48
    ee5c:	002006b7          	lui	a3, 0x200
    ee60:	3ed72423          	sw	a3, 1000(a4) # ffb483e8 <TENSIX_MAILBOX_BASE+0xffc883e8>
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:391
      stream_dram_writes_write_scratch(dram_stream, PTR_UPDATE_REG_STRIDE, curr_stride_wrap + write_stride + 1);
    ee64:	03812683          	lw	a3, 56(sp)
    ee68:	00178793          	addi	a5, a5, 1
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:507
    ee6c:	3ec72623          	sw	a2, 1004(a4)
set_pending_dram_write_ptrs(unsigned long, unsigned long, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, unsigned long, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:391
    ee70:	00d787b3          	add	a5, a5, a3
stream_dram_writes_write_scratch(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:507
    ee74:	3ef72823          	sw	a5, 1008(a4)
    ee78:	09c12783          	lw	a5, 156(sp)
    ee7c:	3ef72a23          	sw	a5, 1012(a4)
    ee80:	e59ff06f          	j	ecd8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2754>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:751
          bool update_dram_q = true;
    ee84:	00048d13          	mv	s10, s1
    ee88:	e55ff06f          	j	ecdc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2758>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:828
          if (is_strided_write && !update_dram_q)
    ee8c:	04812683          	lw	a3, 72(sp)
    ee90:	00100713          	li	a4, 1
    ee94:	00d77463          	bgeu	a4, a3, ee9c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2918>
    ee98:	e80d04e3          	beqz	s10, ed20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x279c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:831
          if (!curr_dram_output_stream_state->moves_raw_data && !dram_writes_with_cmd_buf) {
    ee9c:	03412703          	lw	a4, 52(sp)
    eea0:	00f767b3          	or	a5, a4, a5
    eea4:	e6078ee3          	beqz	a5, ed20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x279c>
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
    eea8:	0ac12783          	lw	a5, 172(sp)
    eeac:	0007a783          	lw	a5, 0(a5)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:835
          if (!ncrisc_noc_fast_write_bufs_ok(output_noc)) {
    eeb0:	e60798e3          	bnez	a5, ed20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x279c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:846
          if (!next_data_chunk_available) {
    eeb4:	07812783          	lw	a5, 120(sp)
    eeb8:	e747e4e3          	bltu	a5, s4, ed20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x279c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:851
          dram_q_space_available = dram_decoupled ? true : (temp_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 ||
    eebc:	004b4783          	lbu	a5, 4(s6)
    eec0:	0017f793          	andi	a5, a5, 1
    eec4:	02079463          	bnez	a5, eeec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2968>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:850
          dram_rdptr_q_slots = temp_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
    eec8:	00ab5783          	lhu	a5, 10(s6)
    eecc:	08012703          	lw	a4, 128(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:852
                                   !dram_io_full(dram_rdptr_q_slots, temp_dram_q_issue->dram_ptr_issued_q_slots, temp_dram_q_issue->dram_buf_size_q_slots);
    eed0:	00cb5683          	lhu	a3, 12(s6)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:850
          dram_rdptr_q_slots = temp_dram_q_issue->dram_ptr_incoming_q_slots & ~DRAM_PTR_UPDATE_PENDING_MASK;
    eed4:	00e7f7b3          	and	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:852
                                   !dram_io_full(dram_rdptr_q_slots, temp_dram_q_issue->dram_ptr_issued_q_slots, temp_dram_q_issue->dram_buf_size_q_slots);
    eed8:	006b5703          	lhu	a4, 6(s6)
dram_io_full(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:85
  uint32_t wr_ptr_reduced_by_q_slots = wr_ptr - buf_size_q_slots;
    eedc:	40d70633          	sub	a2, a4, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:89
  return case1 || case2;
    eee0:	e4c780e3          	beq	a5, a2, ed20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x279c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:86
  uint32_t rd_ptr_reduced_by_q_slots = rd_ptr - buf_size_q_slots;
    eee4:	40d787b3          	sub	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:89
  return case1 || case2;
    eee8:	e2f70ce3          	beq	a4, a5, ed20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x279c>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:870
            has_scatter_offsets = true;
    eeec:	00048713          	mv	a4, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:867
          if (dram_io_scatter_state != ((dram_io_scatter_state_t*)0)) {
    eef0:	040b8063          	beqz	s7, ef30 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x29ac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:868
            has_scatter_offsets = get_scatter_offsets(dram_io_scatter_state, scatter_offsets, dram_io_info->scatter_list_stream_id);
    eef4:	008c5783          	lhu	a5, 8(s8)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:373
  if (scatter_list_stream_id) {
    eef8:	06078063          	beqz	a5, ef58 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x29d4>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
    eefc:	008787b3          	add	a5, a5, s0
    ef00:	00c79793          	slli	a5, a5, 0xc
    ef04:	08c7a683          	lw	a3, 140(a5)
stream_tiles_outstanding(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:316
  return NOC_STREAM_READ_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_REG_INDEX);
    ef08:	0487a603          	lw	a2, 72(a5)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:377
      return false;
    ef0c:	00000713          	li	a4, 0
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:376
    if (!phase_active || !tiles_available)
    ef10:	0046f693          	andi	a3, a3, 4
    ef14:	00068e63          	beqz	a3, ef30 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x29ac>
    ef18:	00060c63          	beqz	a2, ef30 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x29ac>
stream_phase_next_recved_tile_addr(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:146
  return NOC_STREAM_READ_REG(stream_id, STREAM_NEXT_RECEIVED_MSG_ADDR_REG_INDEX);
    ef1c:	04c7a783          	lw	a5, 76(a5)
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:378
    scatter_offsets = ((volatile tt_uint64_t tt_l1_ptr *)(stream_phase_next_recved_tile_addr(scatter_list_stream_id)*MEM_WORD_WIDTH + DRAM_SCATTER_LIST_START_OFFSET));
    ef20:	00178793          	addi	a5, a5, 1
    ef24:	00479793          	slli	a5, a5, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:381
    return true;
  } else {
    scatter_offsets = dram_io_scatter_state->scatter_offsets;
    ef28:	06f12223          	sw	a5, 100(sp)
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:382
    return true;
    ef2c:	00048713          	mv	a4, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:678
        while (has_scatter_offsets) {
    ef30:	06812783          	lw	a5, 104(sp)
    ef34:	014787b3          	add	a5, a5, s4
    ef38:	06f12423          	sw	a5, 104(sp)
    ef3c:	07812783          	lw	a5, 120(sp)
    ef40:	414787b3          	sub	a5, a5, s4
    ef44:	01079793          	slli	a5, a5, 0x10
    ef48:	0107d793          	srli	a5, a5, 0x10
    ef4c:	06f12c23          	sw	a5, 120(sp)
    ef50:	e0071063          	bnez	a4, e550 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1fcc>
    ef54:	dcdff06f          	j	ed20 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x279c>
get_scatter_offsets(dram_io_scatter_state_t* rvtt_l1_ptr, tt_uint64_t volatile*& rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:381
    scatter_offsets = dram_io_scatter_state->scatter_offsets;
    ef58:	01cba783          	lw	a5, 28(s7)
    ef5c:	fcdff06f          	j	ef28 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x29a4>
stream_receiver_endpoint_tiles_clear_b0(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:340
    clr_val *= 2;
    ef60:	001b1793          	slli	a5, s6, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:341
    clr_val = (~clr_val) + 1;
    ef64:	40f007b3          	neg	a5, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:342
    NOC_STREAM_WRITE_REG(stream_id, STREAM_RECEIVER_ENDPOINT_MULTI_TILE_CLEAR_REG_INDEX, clr_val);
    ef68:	00f6a023          	sw	a5, 0(a3) # 200000 <noc_nonblocking_api.cc.88b5909b+0x1dd27c>
    ef6c:	a34ff06f          	j	e1a0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c1c>
RISC_POST_STATUS(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/risc.h:26
    ef70:	222237b7          	lui	a5, 0x22223
    ef74:	33378793          	addi	a5, a5, 819 # 22223333 <noc_nonblocking_api.cc.88b5909b+0x222005af>
    ef78:	ffb20737          	lui	a4, 0xffb20
    ef7c:	10f72623          	sw	a5, 268(a4) # ffb2010c <TENSIX_MAILBOX_BASE+0xffc6010c>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2077
  poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
    ef80:	0ec10593          	addi	a1, sp, 236
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2070
  bool check_ptrs_flushed = true;
    ef84:	00100793          	li	a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2077
  poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
    ef88:	0e810513          	addi	a0, sp, 232
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2070
  bool check_ptrs_flushed = true;
    ef8c:	0ef10423          	sb	a5, 232(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2077
  poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
    ef90:	ffbf1097          	auipc	ra, 0xffbf1
    ef94:	51c080e7          	jalr	1308(ra) # ffc004ac <TENSIX_MAILBOX_BASE+0xffd404ac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2080
    while (!ncrisc_noc_reads_flushed(n, NCRISC_HEADER_RD_TRID));
    ef98:	00300593          	li	a1, 3
    ef9c:	00000513          	li	a0, 0
    efa0:	ffbf1097          	auipc	ra, 0xffbf1
    efa4:	060080e7          	jalr	96(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    efa8:	fe0508e3          	beqz	a0, ef98 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2a14>
    efac:	00300593          	li	a1, 3
    efb0:	00100513          	li	a0, 1
    efb4:	ffbf1097          	auipc	ra, 0xffbf1
    efb8:	04c080e7          	jalr	76(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    efbc:	fe0508e3          	beqz	a0, efac <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2a28>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2088
    poll_dram_ptrs(0, num_active_dram_queues, dram_q_state, check_ptrs_flushed, all_ptrs_flushed);
    efc0:	0ec10593          	addi	a1, sp, 236
    efc4:	0e810513          	addi	a0, sp, 232
    efc8:	ffbf1097          	auipc	ra, 0xffbf1
    efcc:	4e4080e7          	jalr	1252(ra) # ffc004ac <TENSIX_MAILBOX_BASE+0xffd404ac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2090
    if (all_ptrs_flushed)
    efd0:	0ec14783          	lbu	a5, 236(sp)
    efd4:	02079863          	bnez	a5, f004 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2a80>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:2093
      while (!ncrisc_noc_reads_flushed(n, NCRISC_HEADER_RD_TRID));
    efd8:	00300593          	li	a1, 3
    efdc:	00000513          	li	a0, 0
    efe0:	ffbf1097          	auipc	ra, 0xffbf1
    efe4:	020080e7          	jalr	32(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    efe8:	fe0508e3          	beqz	a0, efd8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2a54>
    efec:	00300593          	li	a1, 3
    eff0:	00100513          	li	a0, 1
    eff4:	ffbf1097          	auipc	ra, 0xffbf1
    eff8:	00c080e7          	jalr	12(ra) # ffc00000 <TENSIX_MAILBOX_BASE+0xffd40000>
    effc:	fe0508e3          	beqz	a0, efec <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2a68>
    f000:	fc1ff06f          	j	efc0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2a3c>
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:137
}
    f004:	12812403          	lw	s0, 296(sp)
    f008:	12c12083          	lw	ra, 300(sp)
    f00c:	12412483          	lw	s1, 292(sp)
    f010:	12012903          	lw	s2, 288(sp)
    f014:	11c12983          	lw	s3, 284(sp)
    f018:	11812a03          	lw	s4, 280(sp)
    f01c:	11412a83          	lw	s5, 276(sp)
    f020:	11012b03          	lw	s6, 272(sp)
    f024:	10c12b83          	lw	s7, 268(sp)
    f028:	10812c03          	lw	s8, 264(sp)
    f02c:	10412c83          	lw	s9, 260(sp)
    f030:	10012d03          	lw	s10, 256(sp)
    f034:	0fc12d83          	lw	s11, 252(sp)
    f038:	13010113          	addi	sp, sp, 304
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:108
        risc_dram_stream_handler_epilogue_l1(
    f03c:	9a0fc06f          	j	b1dc <risc_dram_stream_handler_epilogue_l1(void*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr) [clone .constprop.0]>
process_dram_write_clear(unsigned long&, dram_output_stream_state_t*, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:926
      if (!phase_active || !tiles_available) {
    f040:	000c8793          	mv	a5, s9
    f044:	88071e63          	bnez	a4, e0e0 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1b5c>
    f048:	960ff06f          	j	e1a8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1c24>
process_dram_write(unsigned long&, dram_output_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:658
        uint32_t stream_rd_ptr_byte = stream_dram_write_should_reset_pointers(stream_id) ? 0 : curr_dram_output_stream_state->stream_rd_ptr_byte;
    f04c:	00cda703          	lw	a4, 12(s11)
    f050:	c10ff06f          	j	e460 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1edc>
risc_dram_stream_handler_loop(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1950
          bool next_data_rec_chunk_flushed = dram_decoupled ? true : dram_input_stream_check_next_chunk_flushed(input_noc, data_rec_chunk_pending_start_addr, data_rec_chunk_size_bytes, scatter_chunk_size_bytes, transaction_id);
    f054:	00090c13          	mv	s8, s2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1952
          if (is_dram_read_opt_enabled) {
    f058:	00090463          	beqz	s2, f060 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2adc>
    f05c:	cf1fe06f          	j	dd4c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x17c8>
    f060:	d69fe06f          	j	ddc8 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1844>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:1930
        if ((is_dram_read_opt_enabled || q_ptr_update_pending || phase_active) && (prev_in_flight_data_rec_chunks > 0)) {
    f064:	03c12783          	lw	a5, 60(sp)
    f068:	8b1fe06f          	j	d918 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1394>
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:79
  uint32_t case2 = rd_ptr > wr_ptr && wr_ptr <= local_rd_ptr && local_rd_ptr < rd_ptr;
    f06c:	00e6fa63          	bgeu	a3, a4, f080 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2afc>
    f070:	00d56863          	bltu	a0, a3, f080 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2afc>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:470
        all_dram_q_slot_available = all_dram_q_slot_available && dram_q_slot_available;
    f074:	00000793          	li	a5, 0
dram_io_local_empty(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:79
    f078:	00e57463          	bgeu	a0, a4, f080 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2afc>
    f07c:	879fe06f          	j	d8f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1370>
dram_input_stream_scatter_read(unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:470
    f080:	00100793          	li	a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:468
        bool dram_q_slot_available = ((next_dram_q_issue->dram_q_state_flags & DRAM_Q_RAM) != 0 || !dram_io_local_empty(rdptr_val_issue, l1_ptrs->rd_dram_rdptr, wrptr_val_issue)) &&
    f084:	00081463          	bnez	a6, f08c <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x2b08>
    f088:	86dfe06f          	j	d8f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1370>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:469
            (rd_epoch_id_tag == DRAM_QUEUE_NO_EPOCH_CHECK || rd_epoch_id_tag == curr_dram_input_stream_state->stream_info->producer_epoch_id);
    f08c:	018d2783          	lw	a5, 24(s10)
    f090:	0027d783          	lhu	a5, 2(a5)
    f094:	40f807b3          	sub	a5, a6, a5
    f098:	0017b793          	seqz	a5, a5
    f09c:	859fe06f          	j	d8f4 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x1370>
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:196
  uint32_t num_msgs_in_block = fork_idx == ((uint32_t)-1) ? prev_output_state->num_msgs_in_block : get_fork_num_msgs_in_block(stream_id);
    f0a0:	fff00793          	li	a5, -1
    f0a4:	fe04da83          	lhu	s5, -32(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:973
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    f0a8:	04412503          	lw	a0, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:972
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    f0ac:	03c12b83          	lw	s7, 60(sp)
process_scatter_send(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:196
  uint32_t num_msgs_in_block = fork_idx == ((uint32_t)-1) ? prev_output_state->num_msgs_in_block : get_fork_num_msgs_in_block(stream_id);
    f0b0:	02f12a23          	sw	a5, 52(sp)
    f0b4:	918fe06f          	j	d1cc <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0xc48>
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:158
  uint32_t num_msgs_in_block = fork_idx == ((uint32_t)-1) ? prev_output_state->num_msgs_in_block : get_fork_num_msgs_in_block(stream_id);
    f0b8:	fe04d783          	lhu	a5, -32(s1)
risc_unpack_pack_stream_handler_loop(unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, active_stream_info_t*, bool):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:919
        uint32_t fork_stream_id = k == 0 ? stream_id : RISC_EPOCH_INFO_PTR->active_streams[fork_active_streams_idx]->stream_id;
    f0bc:	04412b83          	lw	s7, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:918
        uint32_t fork_active_streams_idx = k == 0 ? active_streams_idx : get_fork_idx(prev_output_state, k-1);
    f0c0:	03c12c03          	lw	s8, 60(sp)
process_scatter_flush(unsigned long, active_stream_info_t*, unsigned long, kernel_output_stream_state_t*, unsigned long volatile* rvtt_reg_ptr, unsigned long volatile*, bool&, unsigned long, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/unpack_pack_stream_intf.cc:158
  uint32_t num_msgs_in_block = fork_idx == ((uint32_t)-1) ? prev_output_state->num_msgs_in_block : get_fork_num_msgs_in_block(stream_id);
    f0c4:	fff00c93          	li	s9, -1
    f0c8:	e41fd06f          	j	cf08 <run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long) [clone .constprop.0]+0x984>
run_epoch(void (*)(unsigned long long), void (*)(unsigned long long), void (*)(unsigned long long, unsigned long), void (*)(void*, unsigned long), bool, unsigned long long, bool&, unsigned long volatile&, unsigned long volatile&, unsigned long&, kernel_input_stream_state_t*, unsigned long&, kernel_output_stream_state_t*, unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_input_stream_state_t*, dram_output_stream_state_t*, active_stream_info_t* rvtt_l1_ptr, epoch_stream_info_t* rvtt_l1_ptr* rvtt_l1_ptr, active_stream_info_t** rvtt_l1_ptr, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_epoch.cc:137
}
    f0cc:	12c12083          	lw	ra, 300(sp)
    f0d0:	12812403          	lw	s0, 296(sp)
    f0d4:	12412483          	lw	s1, 292(sp)
    f0d8:	12012903          	lw	s2, 288(sp)
    f0dc:	11c12983          	lw	s3, 284(sp)
    f0e0:	11812a03          	lw	s4, 280(sp)
    f0e4:	11412a83          	lw	s5, 276(sp)
    f0e8:	11012b03          	lw	s6, 272(sp)
    f0ec:	10c12b83          	lw	s7, 268(sp)
    f0f0:	10812c03          	lw	s8, 264(sp)
    f0f4:	10412c83          	lw	s9, 260(sp)
    f0f8:	10012d03          	lw	s10, 256(sp)
    f0fc:	0fc12d83          	lw	s11, 252(sp)
    f100:	13010113          	addi	sp, sp, 304
    f104:	00008067          	ret

Disassembly of section .text:

ffc00000 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>:
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc00000:	3fec87b7          	lui	a5, 0x3fec8
ffc00004:	09078793          	addi	a5, a5, 144 # 3fec8090 <noc_nonblocking_api.cc.88b5909b+0x3fea530c>
ffc00008:	00f585b3          	add	a1, a1, a5
ffc0000c:	01051513          	slli	a0, a0, 0x10
ffc00010:	00259593          	slli	a1, a1, 0x2
ffc00014:	00a585b3          	add	a1, a1, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc00018:	0005a503          	lw	a0, 0(a1) # ffff0000 <TENSIX_MAILBOX_BASE+0x130000>
ncrisc_noc_reads_flushed(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:127
}
ffc0001c:	00153513          	seqz	a0, a0
ffc00020:	00008067          	ret

ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>:
NOC_CMD_BUF_READ_REG(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:43
  uint32_t offset = (buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT) + addr;
ffc00024:	ffb207b7          	lui	a5, 0xffb20
ffc00028:	02878793          	addi	a5, a5, 40 # ffb20028 <TENSIX_MAILBOX_BASE+0xffc60028>
ffc0002c:	00a59593          	slli	a1, a1, 0xa
ffc00030:	00f585b3          	add	a1, a1, a5
ffc00034:	01051513          	slli	a0, a0, 0x10
ffc00038:	00a585b3          	add	a1, a1, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:45
  return *ptr;
ffc0003c:	0005a503          	lw	a0, 0(a1)
ncrisc_noc_fast_read_ok(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:151
}
ffc00040:	00153513          	seqz	a0, a0
ffc00044:	00008067          	ret

ffc00048 <get_operand_stream_id(int)>:
get_operand_stream_id(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:43
  if (*MCAST_PACKER_OPT_EN && operand >= OPERAND_OUTPUT_START_INDEX && operand < OPERAND_INTERMEDIATES_START_INDEX) {
ffc00048:	ffb43737          	lui	a4, 0xffb43
ffc0004c:	3f472703          	lw	a4, 1012(a4) # ffb433f4 <TENSIX_MAILBOX_BASE+0xffc833f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:41
inline uint32_t get_operand_stream_id(int operand) {
ffc00050:	00050793          	mv	a5, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:43
  if (*MCAST_PACKER_OPT_EN && operand >= OPERAND_OUTPUT_START_INDEX && operand < OPERAND_INTERMEDIATES_START_INDEX) {
ffc00054:	00070e63          	beqz	a4, ffc00070 <get_operand_stream_id(int)+0x28>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:43 (discriminator 1)
ffc00058:	ff050713          	addi	a4, a0, -16
ffc0005c:	00700693          	li	a3, 7
ffc00060:	00e6e863          	bltu	a3, a4, ffc00070 <get_operand_stream_id(int)+0x28>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:44
    return MCAST_END_STREAM - (operand - OPERAND_OUTPUT_START_INDEX);
ffc00064:	01300513          	li	a0, 19
ffc00068:	40f50533          	sub	a0, a0, a5
ffc0006c:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:48
  return ((uint32_t)operand) >= INPUT_START_STREAM_1_SIZE ? INPUT_START_STREAM_2 + operand - INPUT_START_STREAM_1_SIZE : OPERAND_START_STREAM + operand;
ffc00070:	00100713          	li	a4, 1
ffc00074:	00478513          	addi	a0, a5, 4
ffc00078:	00f77463          	bgeu	a4, a5, ffc00080 <get_operand_stream_id(int)+0x38>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:48 (discriminator 1)
ffc0007c:	00878513          	addi	a0, a5, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:49
}
ffc00080:	00008067          	ret

ffc00084 <stream_id_to_operand(unsigned long)>:
stream_id_to_operand(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:53
  if (*MCAST_PACKER_OPT_EN && stream_id >= MCAST_START_STREAM && stream_id <= MCAST_END_STREAM) {
ffc00084:	ffb43737          	lui	a4, 0xffb43
ffc00088:	3f472703          	lw	a4, 1012(a4) # ffb433f4 <TENSIX_MAILBOX_BASE+0xffc833f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:51
inline int stream_id_to_operand(uint32_t stream_id) {
ffc0008c:	00050793          	mv	a5, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:53
  if (*MCAST_PACKER_OPT_EN && stream_id >= MCAST_START_STREAM && stream_id <= MCAST_END_STREAM) {
ffc00090:	00070c63          	beqz	a4, ffc000a8 <stream_id_to_operand(unsigned long)+0x24>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:53 (discriminator 1)
ffc00094:	00300713          	li	a4, 3
ffc00098:	00a76863          	bltu	a4, a0, ffc000a8 <stream_id_to_operand(unsigned long)+0x24>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:54
    return OPERAND_OUTPUT_START_INDEX + (MCAST_END_STREAM - stream_id);
ffc0009c:	01300513          	li	a0, 19
ffc000a0:	40f50533          	sub	a0, a0, a5
ffc000a4:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:58
  return stream_id >= INPUT_START_STREAM_2 ? (stream_id - INPUT_START_STREAM_2 + INPUT_START_STREAM_1_SIZE) : (stream_id - OPERAND_START_STREAM);
ffc000a8:	00900713          	li	a4, 9
ffc000ac:	ffc78513          	addi	a0, a5, -4
ffc000b0:	00f77463          	bgeu	a4, a5, ffc000b8 <stream_id_to_operand(unsigned long)+0x34>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:58 (discriminator 1)
ffc000b4:	ff878513          	addi	a0, a5, -8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:59
}
ffc000b8:	00008067          	ret

ffc000bc <stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)>:
stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:349
  uint32_t vanilla_stride_wrap = l1_ptrs->stride_wrap;
ffc000bc:	05754783          	lbu	a5, 87(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:350
  rd_stride = l1_ptrs->rd_stride;
ffc000c0:	00c55503          	lhu	a0, 12(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:351
  curr_stride_wrap = rd_stride & DRAM_STRIDE_WRAP_BIT;
ffc000c4:	00004737          	lui	a4, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:354
  rd_stride = rd_stride & ~DRAM_STRIDE_WRAP_BIT;
ffc000c8:	ffffc837          	lui	a6, 0xffffc
ffc000cc:	fff80813          	addi	a6, a6, -1 # ffffbfff <TENSIX_MAILBOX_BASE+0x13bfff>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:350
  rd_stride = l1_ptrs->rd_stride;
ffc000d0:	00a5a023          	sw	a0, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:351
  curr_stride_wrap = rd_stride & DRAM_STRIDE_WRAP_BIT;
ffc000d4:	00e57533          	and	a0, a0, a4
ffc000d8:	00a62023          	sw	a0, 0(a2) # 4000 <__trisc0_size>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:354
  rd_stride = rd_stride & ~DRAM_STRIDE_WRAP_BIT;
ffc000dc:	0005a603          	lw	a2, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:352
  uint32_t stride_wrap = vanilla_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc000e0:	00f03733          	snez	a4, a5
ffc000e4:	00e71713          	slli	a4, a4, 0xe
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:354
  rd_stride = rd_stride & ~DRAM_STRIDE_WRAP_BIT;
ffc000e8:	01067633          	and	a2, a2, a6
ffc000ec:	00c5a023          	sw	a2, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:355
  next_stride_wrap = !vanilla_stride_wrap;
ffc000f0:	0017b793          	seqz	a5, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:353
  bool stride_iter_matches_expr = !(stride_wrap ^ curr_stride_wrap);
ffc000f4:	40e50533          	sub	a0, a0, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:355
  next_stride_wrap = !vanilla_stride_wrap;
ffc000f8:	00f6a023          	sw	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.h:357
}
ffc000fc:	00153513          	seqz	a0, a0
ffc00100:	00008067          	ret

ffc00104 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)>:
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc00104:	001007b7          	lui	a5, 0x100
ffc00108:	b4078793          	addi	a5, a5, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
ffc0010c:	00f50533          	add	a0, a0, a5
ffc00110:	00c51513          	slli	a0, a0, 0xc
ffc00114:	08c52703          	lw	a4, 140(a0)
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:38
  phase_active = stream_phase_is_active(stream_id) && !is_dummy_phase(stream_id);
ffc00118:	00000793          	li	a5, 0
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
ffc0011c:	00275713          	srli	a4, a4, 0x2
ffc00120:	00177713          	andi	a4, a4, 1
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:38
ffc00124:	00070a63          	beqz	a4, ffc00138 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0x34>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
ffc00128:	02c52783          	lw	a5, 44(a0)
is_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:438
  uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
ffc0012c:	00f7d793          	srli	a5, a5, 0xf
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:38
ffc00130:	fe178793          	addi	a5, a5, -31
ffc00134:	00f037b3          	snez	a5, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:38 (discriminator 6)
ffc00138:	00f62023          	sw	a5, 0(a2)
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170 (discriminator 6)
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
ffc0013c:	00452783          	lw	a5, 4(a0)
ffc00140:	00010537          	lui	a0, 0x10
ffc00144:	fff50513          	addi	a0, a0, -1 # ffff <dram_input_stream_state+0x177>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62 (discriminator 6)
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc00148:	00100837          	lui	a6, 0x100
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170 (discriminator 6)
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
ffc0014c:	00a7f7b3          	and	a5, a5, a0
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:39 (discriminator 6)
  curr_phase_tiles_remaining_to_issue = stream_src_endpoint_get_phase_tiles_count(stream_id);
ffc00150:	00f6a023          	sw	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:40 (discriminator 6)
  uint32_t fork_index = 0;
ffc00154:	03858593          	addi	a1, a1, 56
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:43 (discriminator 6)
    if (fork_stream_id == NULL_STREAM) {
ffc00158:	0ff00e13          	li	t3, 255
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62 (discriminator 6)
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, MSG_FWD_ONGOING);
ffc0015c:	b4080813          	addi	a6, a6, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:41
  while (phase_active && curr_phase_tiles_remaining_to_issue) {
ffc00160:	00062303          	lw	t1, 0(a2)
ffc00164:	06030063          	beqz	t1, ffc001c4 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0xc0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:41 (discriminator 1)
ffc00168:	0006a783          	lw	a5, 0(a3)
ffc0016c:	04078c63          	beqz	a5, ffc001c4 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0xc0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:42
    uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
ffc00170:	0005c703          	lbu	a4, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:43
    if (fork_stream_id == NULL_STREAM) {
ffc00174:	05c70863          	beq	a4, t3, ffc001c4 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0xc0>
stream_phase_is_active(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:62
ffc00178:	01070733          	add	a4, a4, a6
ffc0017c:	00c71713          	slli	a4, a4, 0xc
ffc00180:	08c72883          	lw	a7, 140(a4) # 408c <__trisc0_size+0x8c>
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:47
    phase_active &= stream_phase_is_active(fork_stream_id) && !is_dummy_phase(fork_stream_id);
ffc00184:	00000793          	li	a5, 0
ffc00188:	0048f893          	andi	a7, a7, 4
ffc0018c:	00088a63          	beqz	a7, ffc001a0 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0x9c>
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
ffc00190:	02c72783          	lw	a5, 44(a4)
is_dummy_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:438
  uint32_t cur_phase = stream_get_curr_phase(stream_id) >> EPOCH_SHIFT; 
ffc00194:	00f7d793          	srli	a5, a5, 0xf
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:47
ffc00198:	fe178793          	addi	a5, a5, -31
ffc0019c:	00f037b3          	snez	a5, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:47 (discriminator 6)
ffc001a0:	0067f7b3          	and	a5, a5, t1
ffc001a4:	00f62023          	sw	a5, 0(a2)
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170 (discriminator 6)
  return NOC_STREAM_READ_REG(stream_id, STREAM_REMOTE_SRC_PHASE_REG_INDEX) & 0xffff;  // used as scratch reg for source endpoint streams
ffc001a8:	00472783          	lw	a5, 4(a4)
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:49 (discriminator 6)
    if (fork_phase_tiles_remaining_to_issue < curr_phase_tiles_remaining_to_issue)
ffc001ac:	0006a703          	lw	a4, 0(a3)
stream_src_endpoint_get_phase_tiles_count(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:170 (discriminator 6)
ffc001b0:	00a7f7b3          	and	a5, a5, a0
read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:49 (discriminator 6)
ffc001b4:	00e7f463          	bgeu	a5, a4, ffc001bc <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0xb8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:50
      curr_phase_tiles_remaining_to_issue = fork_phase_tiles_remaining_to_issue;
ffc001b8:	00f6a023          	sw	a5, 0(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:51
    fork_index++;
ffc001bc:	00158593          	addi	a1, a1, 1
ffc001c0:	fa1ff06f          	j	ffc00160 <read_phase_active(unsigned long, dram_input_stream_state_t*, unsigned long&, unsigned long&)+0x5c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:53
}
ffc001c4:	00008067          	ret

ffc001c8 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)>:
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:98
                             uint32_t prev_data_rec_chunk_size_tiles, uint32_t prev_data_rec_chunk_size_bytes) {
ffc001c8:	fe010113          	addi	sp, sp, -32
ffc001cc:	00812c23          	sw	s0, 24(sp)
ffc001d0:	00912a23          	sw	s1, 20(sp)
ffc001d4:	01212823          	sw	s2, 16(sp)
ffc001d8:	01312623          	sw	s3, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:113
    stream_signal_flushed_tiles(stream_id, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes/MEM_WORD_WIDTH);
ffc001dc:	00475413          	srli	s0, a4, 0x4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:98
                             uint32_t prev_data_rec_chunk_size_tiles, uint32_t prev_data_rec_chunk_size_bytes) {
ffc001e0:	00112e23          	sw	ra, 28(sp)
ffc001e4:	01412423          	sw	s4, 8(sp)
ffc001e8:	01512223          	sw	s5, 4(sp)
ffc001ec:	00050913          	mv	s2, a0
ffc001f0:	00060493          	mv	s1, a2
ffc001f4:	00058513          	mv	a0, a1
ffc001f8:	00068993          	mv	s3, a3
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:185
  NOC_STREAM_WRITE_REG(stream_id, STREAM_NUM_MSGS_RECEIVED_INC_REG_INDEX, (num_words << SOURCE_ENDPOINT_NEW_MSGS_TOTAL_SIZE) | num_tiles);
ffc001fc:	00c41413          	slli	s0, s0, 0xc
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:99
  if (moves_raw_data) {
ffc00200:	0a060063          	beqz	a2, ffc002a0 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0xd8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:100
    epoch_stream_dram_io_info_t tt_l1_ptr * dram_io_info = curr_dram_input_stream_state->stream_info->dram_io_info;
ffc00204:	05092783          	lw	a5, 80(s2)
ffc00208:	0887aa03          	lw	s4, 136(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:101
    volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(stream_id));
ffc0020c:	e79ff0ef          	jal	ra, ffc00084 <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
  return (volatile uint32_t tt_reg_ptr *)(uintptr_t)(STREAM_REG_ADDR(get_operand_stream_id(operand), STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX));
ffc00210:	e39ff0ef          	jal	ra, ffc00048 <get_operand_stream_id(int)>
ffc00214:	001007b7          	lui	a5, 0x100
ffc00218:	b4078793          	addi	a5, a5, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
ffc0021c:	00f50533          	add	a0, a0, a5
ffc00220:	00c51513          	slli	a0, a0, 0xc
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:102
    uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
ffc00224:	01052783          	lw	a5, 16(a0)
ffc00228:	01079793          	slli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:106
    if (scatter_list_stream_id || hw_tilize) {
ffc0022c:	008a5683          	lhu	a3, 8(s4) # ff000008 <TENSIX_MAILBOX_BASE+0xff140008>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:104
    uint32_t hw_tilize = dram_io_info->hw_tilize;
ffc00230:	01ba4703          	lbu	a4, 27(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:102
    uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
ffc00234:	0107d793          	srli	a5, a5, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:106
    if (scatter_list_stream_id || hw_tilize) {
ffc00238:	00069463          	bnez	a3, ffc00240 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0x78>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:106 (discriminator 1)
ffc0023c:	00070463          	beqz	a4, ffc00244 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0x7c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:107
      prev_data_rec_chunk_size_tiles = dram_io_info->dram_embeddings_row_tiles;
ffc00240:	018a5983          	lhu	s3, 24(s4)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
  return a + b;
ffc00244:	013787b3          	add	a5, a5, s3
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:111
    tiles_received_ptr[0] = new_epoch_tiles_received;
ffc00248:	01079793          	slli	a5, a5, 0x10
ffc0024c:	0107d793          	srli	a5, a5, 0x10
ffc00250:	00f52823          	sw	a5, 16(a0)
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:185
ffc00254:	00100a37          	lui	s4, 0x100
ffc00258:	0089e433          	or	s0, s3, s0
ffc0025c:	03890913          	addi	s2, s2, 56
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:122
    if (fork_stream_id == NULL_STREAM) {
ffc00260:	0ff00a93          	li	s5, 255
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:185
ffc00264:	b40a0a13          	addi	s4, s4, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:121
    uint32_t fork_stream_id = curr_dram_input_stream_state->fork_stream_ids[fork_index];
ffc00268:	00094503          	lbu	a0, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:122
    if (fork_stream_id == NULL_STREAM) {
ffc0026c:	07550063          	beq	a0, s5, ffc002cc <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0x104>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:125
    if (moves_raw_data) {
ffc00270:	04048663          	beqz	s1, ffc002bc <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0xf4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:126
      volatile uint32_t tt_reg_ptr * tiles_received_ptr = get_operand_tiles_received_ptr(stream_id_to_operand(fork_stream_id));
ffc00274:	e11ff0ef          	jal	ra, ffc00084 <stream_id_to_operand(unsigned long)>
get_operand_tiles_received_ptr(int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_io_map.h:147
ffc00278:	dd1ff0ef          	jal	ra, ffc00048 <get_operand_stream_id(int)>
ffc0027c:	01450533          	add	a0, a0, s4
ffc00280:	00c51513          	slli	a0, a0, 0xc
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:127
      uint16_t operand_tiles_received = (uint16_t)tiles_received_ptr[0];
ffc00284:	01052783          	lw	a5, 16(a0)
op_pack_tiles_ptr_add(unsigned short, unsigned short):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:47
ffc00288:	00f987b3          	add	a5, s3, a5
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:129
      tiles_received_ptr[0] = new_epoch_tiles_received;
ffc0028c:	01079793          	slli	a5, a5, 0x10
ffc00290:	0107d793          	srli	a5, a5, 0x10
ffc00294:	00f52823          	sw	a5, 16(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:120
  while (true) {
ffc00298:	00190913          	addi	s2, s2, 1
ffc0029c:	fcdff06f          	j	ffc00268 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0xa0>
stream_signal_flushed_tiles(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:185
ffc002a0:	001005b7          	lui	a1, 0x100
ffc002a4:	b4058593          	addi	a1, a1, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
ffc002a8:	00b505b3          	add	a1, a0, a1
ffc002ac:	00c59593          	slli	a1, a1, 0xc
ffc002b0:	0086e7b3          	or	a5, a3, s0
ffc002b4:	06f5ac23          	sw	a5, 120(a1)
ffc002b8:	f9dff06f          	j	ffc00254 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0x8c>
ffc002bc:	01450533          	add	a0, a0, s4
ffc002c0:	00c51513          	slli	a0, a0, 0xc
ffc002c4:	06852c23          	sw	s0, 120(a0)
ffc002c8:	fd1ff06f          	j	ffc00298 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)+0xd0>
push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:135
}
ffc002cc:	01c12083          	lw	ra, 28(sp)
ffc002d0:	01812403          	lw	s0, 24(sp)
ffc002d4:	01412483          	lw	s1, 20(sp)
ffc002d8:	01012903          	lw	s2, 16(sp)
ffc002dc:	00c12983          	lw	s3, 12(sp)
ffc002e0:	00812a03          	lw	s4, 8(sp)
ffc002e4:	00412a83          	lw	s5, 4(sp)
ffc002e8:	02010113          	addi	sp, sp, 32
ffc002ec:	00008067          	ret

ffc002f0 <stream_dram_write_ok(unsigned long)>:
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
ffc002f0:	001007b7          	lui	a5, 0x100
ffc002f4:	b4078793          	addi	a5, a5, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
ffc002f8:	00f50533          	add	a0, a0, a5
ffc002fc:	00c51513          	slli	a0, a0, 0xc
ffc00300:	08c52783          	lw	a5, 140(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
ffc00304:	3a452503          	lw	a0, 932(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
ffc00308:	0017f793          	andi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc0030c:	00078863          	beqz	a5, ffc0031c <stream_dram_write_ok(unsigned long)+0x2c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
ffc00310:	01155513          	srli	a0, a0, 0x11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc00314:	00153513          	seqz	a0, a0
ffc00318:	00008067          	ret
stream_dram_write_ok(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
ffc0031c:	00000513          	li	a0, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:496
}
ffc00320:	00008067          	ret

ffc00324 <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]>:
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
ffc00324:	001007b7          	lui	a5, 0x100
ffc00328:	b4078793          	addi	a5, a5, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
ffc0032c:	00f50533          	add	a0, a0, a5
ffc00330:	00c51513          	slli	a0, a0, 0xc
ffc00334:	02c52603          	lw	a2, 44(a0)
bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:245
  uint32_t wait_status = NOC_STREAM_READ_REG(stream_id, STREAM_WAIT_STATUS_REG_INDEX);
ffc00338:	08c52783          	lw	a5, 140(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:246
  wait_status &= (0x1 << MSG_FWD_ONGOING);
ffc0033c:	0047f793          	andi	a5, a5, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:248
  if (wait_status) {
ffc00340:	02078063          	beqz	a5, ffc00360 <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]+0x3c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:249
    uint32_t buf_size = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
ffc00344:	01c52783          	lw	a5, 28(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:250
    uint32_t buf_space_available = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
ffc00348:	07052703          	lw	a4, 112(a0)
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
ffc0034c:	02c52683          	lw	a3, 44(a0)
bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:260
    if (cur_phase == prev_phase) {
ffc00350:	00d61863          	bne	a2, a3, ffc00360 <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]+0x3c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:264
        return buf_size == buf_space_available; // We dont need num_tiles > 0 as there is no resend concept for fracture
ffc00354:	40e78533          	sub	a0, a5, a4
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc00358:	00153513          	seqz	a0, a0
bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:271
}
ffc0035c:	00008067          	ret
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
ffc00360:	08c52703          	lw	a4, 140(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
ffc00364:	3a452783          	lw	a5, 932(a0)
bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc00368:	00000513          	li	a0, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
ffc0036c:	00177713          	andi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc00370:	fe0706e3          	beqz	a4, ffc0035c <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]+0x38>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
ffc00374:	0117d513          	srli	a0, a5, 0x11
ffc00378:	fe1ff06f          	j	ffc00358 <bool stream_get_push_flushed<true, false>(unsigned long, unsigned long) [clone .constprop.0]+0x34>

ffc0037c <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]>:
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
ffc0037c:	001007b7          	lui	a5, 0x100
ffc00380:	b4078793          	addi	a5, a5, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
ffc00384:	00f50533          	add	a0, a0, a5
ffc00388:	00c51513          	slli	a0, a0, 0xc
ffc0038c:	02c52583          	lw	a1, 44(a0)
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:245
  uint32_t wait_status = NOC_STREAM_READ_REG(stream_id, STREAM_WAIT_STATUS_REG_INDEX);
ffc00390:	08c52783          	lw	a5, 140(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:246
  wait_status &= (0x1 << MSG_FWD_ONGOING);
ffc00394:	0047f793          	andi	a5, a5, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:248
  if (wait_status) {
ffc00398:	02078a63          	beqz	a5, ffc003cc <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]+0x50>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
ffc0039c:	08050793          	addi	a5, a0, 128
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:249
    uint32_t buf_size = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX);
ffc003a0:	01c52683          	lw	a3, 28(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:250
    uint32_t buf_space_available = NOC_STREAM_READ_REG(stream_id, STREAM_BUF_SPACE_AVAILABLE_REG_INDEX);
ffc003a4:	07052703          	lw	a4, 112(a0)
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
ffc003a8:	0107a783          	lw	a5, 16(a5)
stream_get_curr_phase(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:66
  return NOC_STREAM_READ_REG(stream_id, STREAM_CURR_PHASE_REG_INDEX);
ffc003ac:	02c52603          	lw	a2, 44(a0)
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:260
    if (cur_phase == prev_phase) {
ffc003b0:	00c59e63          	bne	a1, a2, ffc003cc <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]+0x50>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:266
        return buf_size == buf_space_available && num_tiles > 0; // For this case we might be resending next phase so we need the num_tiles > 0 check
ffc003b4:	00000513          	li	a0, 0
ffc003b8:	02e69863          	bne	a3, a4, ffc003e8 <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]+0x6c>
stream_get_curr_phase_num_msgs(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:197
  return NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, CURR_PHASE_NUM_MSGS);
ffc003bc:	00879513          	slli	a0, a5, 0x8
ffc003c0:	01455513          	srli	a0, a0, 0x14
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:266
        return buf_size == buf_space_available && num_tiles > 0; // For this case we might be resending next phase so we need the num_tiles > 0 check
ffc003c4:	00a03533          	snez	a0, a0
ffc003c8:	00008067          	ret
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
ffc003cc:	08c52703          	lw	a4, 140(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
ffc003d0:	3a452783          	lw	a5, 932(a0)
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:266
        return buf_size == buf_space_available && num_tiles > 0; // For this case we might be resending next phase so we need the num_tiles > 0 check
ffc003d4:	00000513          	li	a0, 0
stream_phase_advance_wait(unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:92
  uint32_t advance_wait = NOC_STREAM_READ_REG_FIELD(stream_id, STREAM_WAIT_STATUS_REG_INDEX, WAIT_SW_PHASE_ADVANCE_SIGNAL);
ffc003d8:	00177713          	andi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc003dc:	00070663          	beqz	a4, ffc003e8 <bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]+0x6c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:93
  uint32_t num_tiles_pending = NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+9) >> MEM_WORD_ADDR_WIDTH;
ffc003e0:	0117d513          	srli	a0, a5, 0x11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:94
  return advance_wait && (num_tiles_pending == 0);
ffc003e4:	00153513          	seqz	a0, a0
bool stream_get_push_flushed<false, false>(unsigned long, unsigned long) [clone .constprop.0]:
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:271
}
ffc003e8:	00008067          	ret

ffc003ec <eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:27
}


void eth_send_packet(uint32_t q_num, uint32_t src_word_addr, uint32_t dest_word_addr, uint32_t num_words) {
  volatile uint32_t *post_code = (volatile uint32_t *) 0xffb3010c;
  uint16_t count = 0;
ffc003ec:	00000713          	li	a4, 0
eth_txq_reg_read(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:337
  return ETH_READ_REG(ETH_TXQ0_REGS_START+(qnum*ETH_TXQ_REGS_SIZE)+offset);
ffc003f0:	ffb907b7          	lui	a5, 0xffb90
eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:29
  while (eth_txq_reg_read(q_num, ETH_TXQ_CMD) != 0) {
    *post_code = 0xDED10000 | count;
ffc003f4:	ded108b7          	lui	a7, 0xded10
ffc003f8:	ffb30837          	lui	a6, 0xffb30
eth_txq_reg_read(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:337
ffc003fc:	0047a303          	lw	t1, 4(a5) # ffb90004 <TENSIX_MAILBOX_BASE+0xffcd0004>
ffc00400:	00478693          	addi	a3, a5, 4
eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:28
  while (eth_txq_reg_read(q_num, ETH_TXQ_CMD) != 0) {
ffc00404:	00030e63          	beqz	t1, ffc00420 <eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x34>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:29
    *post_code = 0xDED10000 | count;
ffc00408:	011766b3          	or	a3, a4, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:30
    count++;
ffc0040c:	00170713          	addi	a4, a4, 1
ffc00410:	01071713          	slli	a4, a4, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:29
    *post_code = 0xDED10000 | count;
ffc00414:	10d82623          	sw	a3, 268(a6) # ffb3010c <TENSIX_MAILBOX_BASE+0xffc7010c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:30
    count++;
ffc00418:	01075713          	srli	a4, a4, 0x10
ffc0041c:	fe1ff06f          	j	ffc003fc <eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x10>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:33
    LOGT("%s", "polling ETH_TXQ_CMD to finish...\n");
  }
  eth_txq_reg_write(q_num, ETH_TXQ_TRANSFER_START_ADDR, src_word_addr << 4);
ffc00420:	00451513          	slli	a0, a0, 0x4
eth_txq_reg_write(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:333
  ETH_WRITE_REG(ETH_TXQ0_REGS_START+(qnum*ETH_TXQ_REGS_SIZE)+offset, val);
ffc00424:	00a7aa23          	sw	a0, 20(a5)
eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:34
  eth_txq_reg_write(q_num, ETH_TXQ_DEST_ADDR, dest_word_addr << 4);
ffc00428:	00459593          	slli	a1, a1, 0x4
eth_txq_reg_write(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:333
ffc0042c:	00b7ae23          	sw	a1, 28(a5)
eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:35
  eth_txq_reg_write(q_num, ETH_TXQ_TRANSFER_SIZE_BYTES, num_words << 4);
ffc00430:	00461613          	slli	a2, a2, 0x4
eth_txq_reg_write(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_init.cpp:333
ffc00434:	00c7ac23          	sw	a2, 24(a5)
ffc00438:	00200793          	li	a5, 2
ffc0043c:	00f6a023          	sw	a5, 0(a3)
eth_send_packet(unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/api/eth_ss.cpp:37
  eth_txq_reg_write(q_num, ETH_TXQ_CMD, ETH_TXQ_CMD_START_DATA);
}
ffc00440:	00008067          	ret

ffc00444 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]>:
clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:258
    scatter_list_input_index += scatter_idx;
ffc00444:	00072803          	lw	a6, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:256
  if (scatter_list_stream_id) {
ffc00448:	04078a63          	beqz	a5, ffc0049c <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x58>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:260
    uint32_t scatter_list_indicies_per_input = dram_io_info->scatter_list_indicies_per_input;
ffc0044c:	00c62883          	lw	a7, 12(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:259
    uint32_t scatter_list_indicies_per_tile = dram_io_info->scatter_list_indicies_per_tile;
ffc00450:	00a65603          	lhu	a2, 10(a2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:257
    uint32_t scatter_list_input_index = scatter_list_input_index_saved;
ffc00454:	00052683          	lw	a3, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:258
    scatter_list_input_index += scatter_idx;
ffc00458:	010686b3          	add	a3, a3, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:261
    if (scatter_idx == scatter_list_indicies_per_tile || scatter_list_input_index == scatter_list_indicies_per_input) {
ffc0045c:	01060463          	beq	a2, a6, ffc00464 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x20>
ffc00460:	03169863          	bne	a3, a7, ffc00490 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x4c>
stream_receiver_endpoint_single_clear_op(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:311
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_CLEAR_REG_INDEX, num_tiles);
ffc00464:	00100637          	lui	a2, 0x100
ffc00468:	b4060613          	addi	a2, a2, -1216 # ffb40 <noc_nonblocking_api.cc.88b5909b+0xdcdbc>
ffc0046c:	00c787b3          	add	a5, a5, a2
ffc00470:	00c79793          	slli	a5, a5, 0xc
ffc00474:	00100613          	li	a2, 1
ffc00478:	04c7aa23          	sw	a2, 84(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:312
  NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_DATA_CLEAR_REG_INDEX, num_tiles);
ffc0047c:	04c7ac23          	sw	a2, 88(a5)
clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:263
      scatter_idx = 0;
ffc00480:	00072023          	sw	zero, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:264
      if (scatter_list_input_index == scatter_list_indicies_per_input) {
ffc00484:	01169463          	bne	a3, a7, ffc0048c <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x48>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:265
        scatter_list_input_index = 0;
ffc00488:	00000693          	li	a3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:267
      scatter_list_input_index_saved = scatter_list_input_index;
ffc0048c:	00d52023          	sw	a3, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:273
    next_dram_q_issue->scatter_offsets_index = scatter_idx;
ffc00490:	00072783          	lw	a5, 0(a4)
ffc00494:	00f5ae23          	sw	a5, 28(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:275
}
ffc00498:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:271
    if (scatter_idx >= dram_io_scatter_size)
ffc0049c:	fed86ae3          	bltu	a6, a3, ffc00490 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x4c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:272
      scatter_idx -= dram_io_scatter_size;
ffc004a0:	40d80833          	sub	a6, a6, a3
ffc004a4:	01072023          	sw	a6, 0(a4)
ffc004a8:	fe9ff06f          	j	ffc00490 <clear_scatter_offsets(unsigned long&, dram_q_state_t* rvtt_l1_ptr, dram_io_scatter_state_t* rvtt_l1_ptr, epoch_stream_dram_io_info_t* rvtt_l1_ptr, unsigned long, unsigned long&, unsigned long) [clone .constprop.0]+0x4c>

ffc004ac <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]>:
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:908
void poll_dram_ptrs(void * pFunction, uint32_t &num_active_dram_queues, dram_q_state_t tt_l1_ptr *dram_q_state, bool& check_ptrs_flushed, bool& all_ptrs_flushed) {
ffc004ac:	fb010113          	addi	sp, sp, -80
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:909
  all_ptrs_flushed = check_ptrs_flushed;
ffc004b0:	00054783          	lbu	a5, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:908
void poll_dram_ptrs(void * pFunction, uint32_t &num_active_dram_queues, dram_q_state_t tt_l1_ptr *dram_q_state, bool& check_ptrs_flushed, bool& all_ptrs_flushed) {
ffc004b4:	04812423          	sw	s0, 72(sp)
ffc004b8:	05212023          	sw	s2, 64(sp)
ffc004bc:	04112623          	sw	ra, 76(sp)
ffc004c0:	04912223          	sw	s1, 68(sp)
ffc004c4:	03312e23          	sw	s3, 60(sp)
ffc004c8:	03412c23          	sw	s4, 56(sp)
ffc004cc:	03512a23          	sw	s5, 52(sp)
ffc004d0:	03612823          	sw	s6, 48(sp)
ffc004d4:	03712623          	sw	s7, 44(sp)
ffc004d8:	03812423          	sw	s8, 40(sp)
ffc004dc:	03912223          	sw	s9, 36(sp)
ffc004e0:	03a12023          	sw	s10, 32(sp)
ffc004e4:	01b12e23          	sw	s11, 28(sp)
ffc004e8:	00050913          	mv	s2, a0
ffc004ec:	00058413          	mv	s0, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:909
  all_ptrs_flushed = check_ptrs_flushed;
ffc004f0:	00f58023          	sb	a5, 0(a1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:917
        ncrisc_noc_reads_flushed(n, NCRISC_HEADER_RD_TRID);
ffc004f4:	00000513          	li	a0, 0
ffc004f8:	00300593          	li	a1, 3
ffc004fc:	b05ff0ef          	jal	ra, ffc00000 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:913
    reads_flushed = reads_flushed && 
ffc00500:	00050863          	beqz	a0, ffc00510 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x64>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:917
        ncrisc_noc_reads_flushed(n, NCRISC_HEADER_RD_TRID);
ffc00504:	00300593          	li	a1, 3
ffc00508:	00100513          	li	a0, 1
ffc0050c:	af5ff0ef          	jal	ra, ffc00000 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:922
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
ffc00510:	0000f9b7          	lui	s3, 0xf
ffc00514:	4c098793          	addi	a5, s3, 1216 # f4c0 <active_stream_info>
ffc00518:	7247a883          	lw	a7, 1828(a5)
ffc0051c:	00050493          	mv	s1, a0
ffc00520:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:921
  dram_q_state_t tt_l1_ptr * curr_dram_q_state = dram_q_state;
ffc00524:	18478793          	addi	a5, a5, 388
ffc00528:	4c098993          	addi	s3, s3, 1216
ffc0052c:	0000fcb7          	lui	s9, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:922
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
ffc00530:	02700313          	li	t1, 39
ffc00534:	00020e37          	lui	t3, 0x20
ffc00538:	0b187663          	bgeu	a6, a7, ffc005e4 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x138>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:924
    curr_dram_q_state->dram_q_state_flags &= ~DRAM_Q_PTRS_LOADED_FLAG;
ffc0053c:	0047c583          	lbu	a1, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:929
    if (ptr_read_pending && (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
ffc00540:	00a79703          	lh	a4, 10(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:924
    curr_dram_q_state->dram_q_state_flags &= ~DRAM_Q_PTRS_LOADED_FLAG;
ffc00544:	0ef5f693          	andi	a3, a1, 239
ffc00548:	00d78223          	sb	a3, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:929
    if (ptr_read_pending && (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
ffc0054c:	06075e63          	bgez	a4, ffc005c8 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x11c>
ffc00550:	06048c63          	beqz	s1, ffc005c8 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x11c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:930
      uint32_t l1_dram_incoming_ptr_index = curr_dram_q_state->l1_dram_incoming_ptr_index;
ffc00554:	0057c503          	lbu	a0, 5(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:925
    volatile uint32_t tt_l1_ptr * l1_ptr_addr = curr_dram_q_state->l1_dram_ptrs;
ffc00558:	0007a703          	lw	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:931
      uint32_t dram_ptr_incoming_q_slots = l1_dram_incoming_ptr_index ? l1_ptrs->rd_dram_wrptr : l1_ptrs->rd_dram_rdptr;
ffc0055c:	04050063          	beqz	a0, ffc0059c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xf0>
ffc00560:	00475603          	lhu	a2, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:937
      curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
ffc00564:	00c79523          	sh	a2, 10(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:941
      if (check_ptrs_flushed) {
ffc00568:	00094603          	lbu	a2, 0(s2)
ffc0056c:	02060263          	beqz	a2, ffc00590 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xe4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:942
        bool updater_stride = l1_ptrs->wr_stride == 0;
ffc00570:	02c75603          	lhu	a2, 44(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:943
        if ((l1_dram_incoming_ptr_index && updater_stride && l1_ptrs->rd_grd_ptr_autoinc && l1_ptrs->wr_dram_rdptr != l1_ptrs->rd_dram_rdptr) || // read
ffc00574:	04050063          	beqz	a0, ffc005b4 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x108>
ffc00578:	00061c63          	bnez	a2, ffc00590 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xe4>
ffc0057c:	00275603          	lhu	a2, 2(a4)
ffc00580:	00060863          	beqz	a2, ffc00590 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xe4>
ffc00584:	02075603          	lhu	a2, 32(a4)
ffc00588:	00075703          	lhu	a4, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:944
            (!l1_dram_incoming_ptr_index && updater_stride && l1_ptrs->wr_dram_wrptr != l1_ptrs->rd_dram_wrptr)) {
ffc0058c:	02e61c63          	bne	a2, a4, ffc005c4 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x118>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:950
        curr_dram_q_state->dram_q_state_flags |= DRAM_Q_PTRS_LOADED_FLAG;
ffc00590:	0106e693          	ori	a3, a3, 16
ffc00594:	00d78223          	sb	a3, 4(a5)
ffc00598:	0300006f          	j	ffc005c8 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x11c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:931
      uint32_t dram_ptr_incoming_q_slots = l1_dram_incoming_ptr_index ? l1_ptrs->rd_dram_wrptr : l1_ptrs->rd_dram_rdptr;
ffc0059c:	00075603          	lhu	a2, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:936
      bool is_dram_streaming_write = !l1_dram_incoming_ptr_index && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0;
ffc005a0:	0085f593          	andi	a1, a1, 8
ffc005a4:	fc0580e3          	beqz	a1, ffc00564 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xb8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:937
      curr_dram_q_state->dram_ptr_incoming_q_slots = dram_ptr_incoming_q_slots;
ffc005a8:	00c79523          	sh	a2, 10(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:939
        l1_ptrs->dram_streaming_tag = 0;
ffc005ac:	00072e23          	sw	zero, 28(a4)
ffc005b0:	fb9ff06f          	j	ffc00568 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xbc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:944
            (!l1_dram_incoming_ptr_index && updater_stride && l1_ptrs->wr_dram_wrptr != l1_ptrs->rd_dram_wrptr)) {
ffc005b4:	fc061ee3          	bnez	a2, ffc00590 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xe4>
ffc005b8:	02475603          	lhu	a2, 36(a4)
ffc005bc:	00475703          	lhu	a4, 4(a4)
ffc005c0:	fcdff06f          	j	ffc0058c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0xe0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:945
          all_ptrs_flushed = false;
ffc005c4:	00040023          	sb	zero, 0(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:922
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
ffc005c8:	00681863          	bne	a6, t1, ffc005d8 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x12c>
ffc005cc:	2f8e2783          	lw	a5, 760(t3) # 202f8 <risc_chip_specific.cc.5b7d4a1c+0x131c>
ffc005d0:	02800813          	li	a6, 40
ffc005d4:	f65ff06f          	j	ffc00538 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x8c>
ffc005d8:	00180813          	addi	a6, a6, 1
ffc005dc:	02478793          	addi	a5, a5, 36
ffc005e0:	f59ff06f          	j	ffc00538 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x8c>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc005e4:	ffb20bb7          	lui	s7, 0xffb20
ncrisc_noc_fast_read(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc005e8:	00001a37          	lui	s4, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc005ec:	0000fab7          	lui	s5, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:93
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
ffc005f0:	00002b37          	lui	s6, 0x2
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:956
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
ffc005f4:	00000d13          	li	s10, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:955
  curr_dram_q_state = dram_q_state;
ffc005f8:	644c8c93          	addi	s9, s9, 1604 # f644 <dram_q_state>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc005fc:	24cb8c13          	addi	s8, s7, 588 # ffb2024c <TENSIX_MAILBOX_BASE+0xffc6024c>
ncrisc_noc_fast_read(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc00600:	c00a0a13          	addi	s4, s4, -1024 # c00 <__firmware_stack_size+0x800>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc00604:	404a8a93          	addi	s5, s5, 1028 # f404 <noc_xy_local_addr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:93
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
ffc00608:	090b0b13          	addi	s6, s6, 144 # 2090 <__firmware_start+0x90>
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:956
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
ffc0060c:	7249a783          	lw	a5, 1828(s3)
ffc00610:	14fd7e63          	bgeu	s10, a5, ffc0076c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x2c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:958
    volatile uint32_t tt_l1_ptr * l1_ptr_addr = curr_dram_q_state->l1_dram_ptrs;
ffc00614:	000cad83          	lw	s11, 0(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:962
    bool has_multi_readers = total_readers > 1 && rd_grd_ptr_autoinc;
ffc00618:	00100693          	li	a3, 1
ffc0061c:	00000713          	li	a4, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:960
    uint32_t rd_grd_ptr_autoinc = l1_ptrs->rd_grd_ptr_autoinc;
ffc00620:	002dd783          	lhu	a5, 2(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:961
    uint32_t total_readers = l1_ptrs->total_readers;
ffc00624:	055dc603          	lbu	a2, 85(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:962
    bool has_multi_readers = total_readers > 1 && rd_grd_ptr_autoinc;
ffc00628:	00c6f463          	bgeu	a3, a2, ffc00630 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x184>
ffc0062c:	00f03733          	snez	a4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:963
    bool is_ram_non_multi_read = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_RAM) != 0 && !has_multi_readers;
ffc00630:	004cc403          	lbu	s0, 4(s9)
ffc00634:	00000793          	li	a5, 0
ffc00638:	00147693          	andi	a3, s0, 1
ffc0063c:	00068463          	beqz	a3, ffc00644 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x198>
ffc00640:	00174793          	xori	a5, a4, 1
ffc00644:	00847713          	andi	a4, s0, 8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:964
    bool is_dram_streaming_read = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0 && curr_dram_q_state->l1_dram_incoming_ptr_index;
ffc00648:	00070663          	beqz	a4, ffc00654 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1a8>
ffc0064c:	005cc683          	lbu	a3, 5(s9)
ffc00650:	02069263          	bnez	a3, ffc00674 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1c8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:965
    bool is_dram_padding = l1_ptrs->dram_padding;
ffc00654:	03edc683          	lbu	a3, 62(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:966
    if (!is_dram_streaming_read && !is_ram_non_multi_read && !is_dram_padding) {
ffc00658:	02078263          	beqz	a5, ffc0067c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1d0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:956
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
ffc0065c:	02700793          	li	a5, 39
ffc00660:	10fd1063          	bne	s10, a5, ffc00760 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x2b4>
ffc00664:	000207b7          	lui	a5, 0x20
ffc00668:	2f87ac83          	lw	s9, 760(a5) # 202f8 <risc_chip_specific.cc.5b7d4a1c+0x131c>
ffc0066c:	02800d13          	li	s10, 40
ffc00670:	f9dff06f          	j	ffc0060c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x160>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:965
    bool is_dram_padding = l1_ptrs->dram_padding;
ffc00674:	03edc783          	lbu	a5, 62(s11)
ffc00678:	fe5ff06f          	j	ffc0065c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:966
    if (!is_dram_streaming_read && !is_ram_non_multi_read && !is_dram_padding) {
ffc0067c:	fe0690e3          	bnez	a3, ffc0065c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:967
      uint32_t ptr_remote = curr_dram_q_state->dram_ptr_incoming_q_slots;
ffc00680:	00acd783          	lhu	a5, 10(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:972
      if (!ptr_read_pending && (curr_dram_q_state->dram_q_state_flags & DRAM_Q_PTRS_LOADED_FLAG) == 0 && (reads_flushed || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))))) {
ffc00684:	01079693          	slli	a3, a5, 0x10
ffc00688:	4106d693          	srai	a3, a3, 0x10
ffc0068c:	fc06c8e3          	bltz	a3, ffc0065c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1b0>
ffc00690:	01047693          	andi	a3, s0, 16
ffc00694:	fc0694e3          	bnez	a3, ffc0065c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1b0>
ffc00698:	fc0482e3          	beqz	s1, ffc0065c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:974
        if ((curr_dram_q_state->dram_q_state_flags & DRAM_Q_STREAMING_FLAG) != 0) {
ffc0069c:	0a070c63          	beqz	a4, ffc00754 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x2a8>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc006a0:	030da603          	lw	a2, 48(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc006a4:	034da683          	lw	a3, 52(s11)
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:979
        if (check_ptrs_flushed && !addr_is_pcie(dram_ptr_addr))
ffc006a8:	00094703          	lbu	a4, 0(s2)
ffc006ac:	02070063          	beqz	a4, ffc006cc <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x220>
addr_is_pcie(unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:60
  uint32_t x = NOC_UNICAST_ADDR_X(dram_ptr_addr);
ffc006b0:	0046d713          	srli	a4, a3, 0x4
ffc006b4:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:62
  return x == 0 && y == 3;
ffc006b8:	fa0712e3          	bnez	a4, ffc0065c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:61
  uint32_t y = NOC_UNICAST_ADDR_Y(dram_ptr_addr);
ffc006bc:	00a6d713          	srli	a4, a3, 0xa
ffc006c0:	03f77713          	andi	a4, a4, 63
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:62
  return x == 0 && y == 3;
ffc006c4:	00300593          	li	a1, 3
ffc006c8:	f8b71ae3          	bne	a4, a1, ffc0065c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1b0>
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:981
        curr_dram_q_state->dram_ptr_incoming_q_slots = ptr_remote | DRAM_PTR_UPDATE_PENDING_MASK;
ffc006cc:	ffff8737          	lui	a4, 0xffff8
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:969
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
ffc006d0:	00145413          	srli	s0, s0, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:981
        curr_dram_q_state->dram_ptr_incoming_q_slots = ptr_remote | DRAM_PTR_UPDATE_PENDING_MASK;
ffc006d4:	00e7e7b3          	or	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:969
      uint32_t input_noc = (curr_dram_q_state->dram_q_state_flags & DRAM_Q_INPUT_NOC_FLAG) >> 1;
ffc006d8:	00347413          	andi	s0, s0, 3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:981
        curr_dram_q_state->dram_ptr_incoming_q_slots = ptr_remote | DRAM_PTR_UPDATE_PENDING_MASK;
ffc006dc:	00fc9523          	sh	a5, 10(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:993
        while (!ncrisc_noc_fast_read_ok(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc006e0:	00300593          	li	a1, 3
ffc006e4:	00040513          	mv	a0, s0
ffc006e8:	00d12623          	sw	a3, 12(sp)
ffc006ec:	00c12423          	sw	a2, 8(sp)
ffc006f0:	935ff0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc006f4:	00812603          	lw	a2, 8(sp)
ffc006f8:	00c12683          	lw	a3, 12(sp)
ffc006fc:	fe0502e3          	beqz	a0, ffc006e0 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x234>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc00700:	01041793          	slli	a5, s0, 0x10
ffc00704:	01878533          	add	a0, a5, s8
ncrisc_noc_fast_read(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:83
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc00708:	08000713          	li	a4, 128
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc0070c:	00052583          	lw	a1, 0(a0)
ncrisc_noc_fast_read(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:83
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc00710:	feb76ee3          	bltu	a4, a1, ffc0070c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x260>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc00714:	00241413          	slli	s0, s0, 0x2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc00718:	014787b3          	add	a5, a5, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc0071c:	008a8433          	add	s0, s5, s0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:91
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
ffc00720:	017787b3          	add	a5, a5, s7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc00724:	00042703          	lw	a4, 0(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:91
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
ffc00728:	01b7a623          	sw	s11, 12(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc0072c:	00e7a823          	sw	a4, 16(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:93
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
ffc00730:	0167ae23          	sw	s6, 28(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:94
    ptr[NOC_TARG_ADDR_LO >> 2] = (uint32_t)src_addr;
ffc00734:	00c7a023          	sw	a2, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:95
    ptr[NOC_TARG_ADDR_MID >> 2] = src_addr >> 32;
ffc00738:	00d7a223          	sw	a3, 4(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:96
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
ffc0073c:	0147ac23          	sw	s4, 24(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:97
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
ffc00740:	02000713          	li	a4, 32
ffc00744:	02e7a023          	sw	a4, 32(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:98
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
ffc00748:	00100713          	li	a4, 1
ffc0074c:	02e7a423          	sw	a4, 40(a5)
ffc00750:	f0dff06f          	j	ffc0065c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1b0>
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc00754:	048da603          	lw	a2, 72(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc00758:	04cda683          	lw	a3, 76(s11)
ffc0075c:	f4dff06f          	j	ffc006a8 <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x1fc>
poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:956
  for (uint32_t i = 0, old_i = 0; i < num_active_dram_queues; i++, curr_dram_q_state = old_i == MAX_L0_DRAM_Q_STATE_T-1 ? (dram_q_state_t tt_l1_ptr *)RISC_EPOCH_INFO_PTR->extra_dram_q_state_addr : curr_dram_q_state + 1) {
ffc00760:	001d0d13          	addi	s10, s10, 1
ffc00764:	024c8c93          	addi	s9, s9, 36
ffc00768:	ea5ff06f          	j	ffc0060c <poll_dram_ptrs(void*, unsigned long&, dram_q_state_t* rvtt_l1_ptr, bool&, bool&) [clone .constprop.0]+0x160>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:999
}
ffc0076c:	04c12083          	lw	ra, 76(sp)
ffc00770:	04812403          	lw	s0, 72(sp)
ffc00774:	04412483          	lw	s1, 68(sp)
ffc00778:	04012903          	lw	s2, 64(sp)
ffc0077c:	03c12983          	lw	s3, 60(sp)
ffc00780:	03812a03          	lw	s4, 56(sp)
ffc00784:	03412a83          	lw	s5, 52(sp)
ffc00788:	03012b03          	lw	s6, 48(sp)
ffc0078c:	02c12b83          	lw	s7, 44(sp)
ffc00790:	02812c03          	lw	s8, 40(sp)
ffc00794:	02412c83          	lw	s9, 36(sp)
ffc00798:	02012d03          	lw	s10, 32(sp)
ffc0079c:	01c12d83          	lw	s11, 28(sp)
ffc007a0:	05010113          	addi	sp, sp, 80
ffc007a4:	00008067          	ret

ffc007a8 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:328
inline void ncrisc_noc_fast_read_any_len(uint32_t noc, uint32_t cmd_buf, uint64_t src_addr, uint32_t dest_addr, uint32_t len_bytes, uint32_t transaction_id) {
ffc007a8:	fe010113          	addi	sp, sp, -32
ffc007ac:	00812c23          	sw	s0, 24(sp)
ffc007b0:	00912a23          	sw	s1, 20(sp)
ffc007b4:	01212823          	sw	s2, 16(sp)
ffc007b8:	01312623          	sw	s3, 12(sp)
ffc007bc:	01412423          	sw	s4, 8(sp)
ffc007c0:	01512223          	sw	s5, 4(sp)
ffc007c4:	00112e23          	sw	ra, 28(sp)
ffc007c8:	00050413          	mv	s0, a0
ffc007cc:	00058a13          	mv	s4, a1
ffc007d0:	00060993          	mv	s3, a2
ffc007d4:	00068a93          	mv	s5, a3
ffc007d8:	00070913          	mv	s2, a4
ffc007dc:	00078493          	mv	s1, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:329
  while (!ncrisc_noc_fast_read_ok(noc, cmd_buf));
ffc007e0:	00300593          	li	a1, 3
ffc007e4:	00040513          	mv	a0, s0
ffc007e8:	83dff0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc007ec:	fe050ae3          	beqz	a0, ffc007e0 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x38>
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc007f0:	3fec88b7          	lui	a7, 0x3fec8
ffc007f4:	09088893          	addi	a7, a7, 144 # 3fec8090 <noc_nonblocking_api.cc.88b5909b+0x3fea530c>
ffc007f8:	011488b3          	add	a7, s1, a7
ffc007fc:	01041813          	slli	a6, s0, 0x10
ffc00800:	00289893          	slli	a7, a7, 0x2
ffc00804:	010888b3          	add	a7, a7, a6
ncrisc_noc_fast_read(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:83
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc00808:	08000793          	li	a5, 128
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc0080c:	0008a703          	lw	a4, 0(a7)
ncrisc_noc_fast_read(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:83
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc00810:	fee7eee3          	bltu	a5, a4, ffc0080c <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x64>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:85
  if (len_bytes > 0) {
ffc00814:	04090e63          	beqz	s2, ffc00870 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0xc8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc00818:	000017b7          	lui	a5, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc0081c:	0000f6b7          	lui	a3, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc00820:	c0078793          	addi	a5, a5, -1024 # c00 <__firmware_stack_size+0x800>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc00824:	00241513          	slli	a0, s0, 0x2
ffc00828:	40468413          	addi	s0, a3, 1028 # f404 <noc_xy_local_addr>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:88
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc0082c:	00f80833          	add	a6, a6, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc00830:	00a40433          	add	s0, s0, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:91
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
ffc00834:	ffb207b7          	lui	a5, 0xffb20
ffc00838:	00f80733          	add	a4, a6, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc0083c:	00042783          	lw	a5, 0(s0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:91
    ptr[NOC_RET_ADDR_LO >> 2] = dest_addr;
ffc00840:	01572623          	sw	s5, 12(a4) # ffff800c <TENSIX_MAILBOX_BASE+0x13800c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:92
    ptr[NOC_RET_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc00844:	00f72823          	sw	a5, 16(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:93
    ptr[NOC_CTRL >> 2] = noc_rd_cmd_field;
ffc00848:	000027b7          	lui	a5, 0x2
ffc0084c:	09078793          	addi	a5, a5, 144 # 2090 <__firmware_start+0x90>
ffc00850:	00f72e23          	sw	a5, 28(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:94
    ptr[NOC_TARG_ADDR_LO >> 2] = (uint32_t)src_addr;
ffc00854:	01472023          	sw	s4, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:95
    ptr[NOC_TARG_ADDR_MID >> 2] = src_addr >> 32;
ffc00858:	01372223          	sw	s3, 4(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:96
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
ffc0085c:	00a49493          	slli	s1, s1, 0xa
ffc00860:	00972c23          	sw	s1, 24(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:97
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
ffc00864:	03272023          	sw	s2, 32(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:98
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
ffc00868:	00100793          	li	a5, 1
ffc0086c:	02f72423          	sw	a5, 40(a4)
ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:331
}
ffc00870:	01c12083          	lw	ra, 28(sp)
ffc00874:	01812403          	lw	s0, 24(sp)
ffc00878:	01412483          	lw	s1, 20(sp)
ffc0087c:	01012903          	lw	s2, 16(sp)
ffc00880:	00c12983          	lw	s3, 12(sp)
ffc00884:	00812a03          	lw	s4, 8(sp)
ffc00888:	00412a83          	lw	s5, 4(sp)
ffc0088c:	02010113          	addi	sp, sp, 32
ffc00890:	00008067          	ret

ffc00894 <risc_epoch_load(unsigned long long)>:
risc_epoch_load(unsigned long long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:143
void risc_epoch_load(uint64_t dram_next_epoch_ptr) {
ffc00894:	ff010113          	addi	sp, sp, -16
ffc00898:	00812423          	sw	s0, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:146
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_next_epoch_ptr, eth_l1_mem::address_map::OVERLAY_BLOB_BASE, epoch_size_bytes, NCRISC_RD_DEF_TRID);
ffc0089c:	0000f437          	lui	s0, 0xf
ffc008a0:	00008737          	lui	a4, 0x8
ffc008a4:	000206b7          	lui	a3, 0x20
ffc008a8:	00058613          	mv	a2, a1
ffc008ac:	00050593          	mv	a1, a0
ffc008b0:	42a44503          	lbu	a0, 1066(s0) # f42a <loading_noc>
ffc008b4:	00200793          	li	a5, 2
ffc008b8:	f8070713          	addi	a4, a4, -128 # 7f80 <__trisc_base+0x1380>
ffc008bc:	08068693          	addi	a3, a3, 128 # 20080 <risc_chip_specific.cc.5b7d4a1c+0x10a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:143
void risc_epoch_load(uint64_t dram_next_epoch_ptr) {
ffc008c0:	00112623          	sw	ra, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:146
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_next_epoch_ptr, eth_l1_mem::address_map::OVERLAY_BLOB_BASE, epoch_size_bytes, NCRISC_RD_DEF_TRID);
ffc008c4:	ee5ff0ef          	jal	ra, ffc007a8 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:147
  while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
ffc008c8:	42a44503          	lbu	a0, 1066(s0)
ffc008cc:	00200593          	li	a1, 2
ffc008d0:	f30ff0ef          	jal	ra, ffc00000 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc008d4:	fe050ae3          	beqz	a0, ffc008c8 <risc_epoch_load(unsigned long long)+0x34>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:148
  *MCAST_PACKER_OPT_EN = RISC_EPOCH_INFO_PTR->has_packer_mcast_opt;
ffc008d8:	000207b7          	lui	a5, 0x20
ffc008dc:	3077c703          	lbu	a4, 775(a5) # 20307 <risc_chip_specific.cc.5b7d4a1c+0x132b>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:150
}
ffc008e0:	00c12083          	lw	ra, 12(sp)
ffc008e4:	00812403          	lw	s0, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:148
  *MCAST_PACKER_OPT_EN = RISC_EPOCH_INFO_PTR->has_packer_mcast_opt;
ffc008e8:	ffb437b7          	lui	a5, 0xffb43
ffc008ec:	3ee7aa23          	sw	a4, 1012(a5) # ffb433f4 <TENSIX_MAILBOX_BASE+0xffc833f4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:150
}
ffc008f0:	01010113          	addi	sp, sp, 16
ffc008f4:	00008067          	ret

ffc008f8 <risc_extra_overlay_blob_load(unsigned long long, unsigned long)>:
risc_extra_overlay_blob_load(unsigned long long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:152
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc008f8:	00058813          	mv	a6, a1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:154
  uint64_t extra_blob_base_dram = dram_next_epoch_ptr + eth_l1_mem::address_map::OVERLAY_BLOB_SIZE;
ffc008fc:	000085b7          	lui	a1, 0x8
ffc00900:	f8058593          	addi	a1, a1, -128 # 7f80 <__trisc_base+0x1380>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:152
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc00904:	ff010113          	addi	sp, sp, -16
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:154
  uint64_t extra_blob_base_dram = dram_next_epoch_ptr + eth_l1_mem::address_map::OVERLAY_BLOB_SIZE;
ffc00908:	00b505b3          	add	a1, a0, a1
ffc0090c:	00a5b533          	sltu	a0, a1, a0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:152
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc00910:	00812423          	sw	s0, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:155
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, extra_blob_base_dram, eth_l1_mem::address_map::OVERLAY_BLOB_BASE + eth_l1_mem::address_map::OVERLAY_BLOB_SIZE, overlay_blob_extra_size, NCRISC_RD_DEF_TRID);
ffc00914:	0000f437          	lui	s0, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:152
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc00918:	00060713          	mv	a4, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:155
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, extra_blob_base_dram, eth_l1_mem::address_map::OVERLAY_BLOB_BASE + eth_l1_mem::address_map::OVERLAY_BLOB_SIZE, overlay_blob_extra_size, NCRISC_RD_DEF_TRID);
ffc0091c:	01050633          	add	a2, a0, a6
ffc00920:	42a44503          	lbu	a0, 1066(s0) # f42a <loading_noc>
ffc00924:	00200793          	li	a5, 2
ffc00928:	000286b7          	lui	a3, 0x28
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:152
void risc_extra_overlay_blob_load(uint64_t dram_next_epoch_ptr, uint32_t overlay_blob_extra_size) {
ffc0092c:	00112623          	sw	ra, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:155
  ncrisc_noc_fast_read_any_len(loading_noc, NCRISC_SMALL_TXN_CMD_BUF, extra_blob_base_dram, eth_l1_mem::address_map::OVERLAY_BLOB_BASE + eth_l1_mem::address_map::OVERLAY_BLOB_SIZE, overlay_blob_extra_size, NCRISC_RD_DEF_TRID);
ffc00930:	e79ff0ef          	jal	ra, ffc007a8 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:156
  while (!ncrisc_noc_reads_flushed(loading_noc, NCRISC_RD_DEF_TRID));
ffc00934:	42a44503          	lbu	a0, 1066(s0)
ffc00938:	00200593          	li	a1, 2
ffc0093c:	ec4ff0ef          	jal	ra, ffc00000 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc00940:	fe050ae3          	beqz	a0, ffc00934 <risc_extra_overlay_blob_load(unsigned long long, unsigned long)+0x3c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/targets/erisc/src/erisc.cc:158
}
ffc00944:	00c12083          	lw	ra, 12(sp)
ffc00948:	00812403          	lw	s0, 8(sp)
ffc0094c:	01010113          	addi	sp, sp, 16
ffc00950:	00008067          	ret

ffc00954 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>:
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:50
  uint32_t offset = (noc << NOC_INSTANCE_OFFSET_BIT) + NOC_STATUS(reg_id);
ffc00954:	3fec8337          	lui	t1, 0x3fec8
ffc00958:	09030313          	addi	t1, t1, 144 # 3fec8090 <noc_nonblocking_api.cc.88b5909b+0x3fea530c>
ffc0095c:	00688333          	add	t1, a7, t1
ffc00960:	01051e13          	slli	t3, a0, 0x10
ffc00964:	00231313          	slli	t1, t1, 0x2
ffc00968:	01c30333          	add	t1, t1, t3
ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:166
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc0096c:	08000e93          	li	t4, 128
NOC_STATUS_READ_REG(unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:52
  return *ptr;
ffc00970:	00032f03          	lw	t5, 0(t1)
ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:166
  while (NOC_STATUS_READ_REG(noc, NIU_MST_REQS_OUTSTANDING_ID(transaction_id)) > ((NOC_MAX_TRANSACTION_ID_COUNT+1)/2));
ffc00974:	ffeeeee3          	bltu	t4, t5, ffc00970 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x1c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:168
  if (len_bytes > 0) {
ffc00978:	04078c63          	beqz	a5, ffc009d0 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]+0x7c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:178
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc0097c:	00a59593          	slli	a1, a1, 0xa
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:172
      NOC_CMD_STATIC_VC(vc) | 
ffc00980:	00d81813          	slli	a6, a6, 0xd
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:178
    uint32_t offset = (cmd_buf << NOC_CMD_BUF_OFFSET_BIT) + (noc << NOC_INSTANCE_OFFSET_BIT);
ffc00984:	01c585b3          	add	a1, a1, t3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:180
    ptr[NOC_CTRL >> 2] = noc_cmd_field;
ffc00988:	ffb20337          	lui	t1, 0xffb20
ffc0098c:	00658e33          	add	t3, a1, t1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:169
    uint32_t noc_cmd_field =
ffc00990:	09286813          	ori	a6, a6, 146
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:180
    ptr[NOC_CTRL >> 2] = noc_cmd_field;
ffc00994:	010e2e23          	sw	a6, 28(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:181
    ptr[NOC_TARG_ADDR_LO >> 2] = src_addr;
ffc00998:	00ce2023          	sw	a2, 0(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:182
    ptr[NOC_TARG_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc0099c:	0000f637          	lui	a2, 0xf
ffc009a0:	00251813          	slli	a6, a0, 0x2
ffc009a4:	40460513          	addi	a0, a2, 1028 # f404 <noc_xy_local_addr>
ffc009a8:	01050533          	add	a0, a0, a6
ffc009ac:	00052603          	lw	a2, 0(a0)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:185
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
ffc009b0:	00a89893          	slli	a7, a7, 0xa
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:182
    ptr[NOC_TARG_ADDR_MID >> 2] = noc_xy_local_addr[noc];
ffc009b4:	00ce2223          	sw	a2, 4(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:183
    ptr[NOC_RET_ADDR_LO >> 2] = (uint32_t)dest_addr;
ffc009b8:	00de2623          	sw	a3, 12(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:184
    ptr[NOC_RET_ADDR_MID >> 2] = dest_addr >> 32;
ffc009bc:	00ee2823          	sw	a4, 16(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:185
    ptr[NOC_PACKET_TAG >> 2] = NOC_PACKET_TAG_TRANSACTION_ID(transaction_id);
ffc009c0:	011e2c23          	sw	a7, 24(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:186
    ptr[NOC_AT_LEN_BE >> 2] = len_bytes;
ffc009c4:	02fe2023          	sw	a5, 32(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:187
    ptr[NOC_CMD_CTRL >> 2] = NOC_CTRL_SEND_REQ;
ffc009c8:	00100793          	li	a5, 1
ffc009cc:	02fe2423          	sw	a5, 40(t3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:189
}
ffc009d0:	00008067          	ret

ffc009d4 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)>:
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc009d4:	f9010113          	addi	sp, sp, -112
ffc009d8:	06912223          	sw	s1, 100(sp)
ffc009dc:	00078493          	mv	s1, a5
ffc009e0:	07812783          	lw	a5, 120(sp)
ffc009e4:	05412c23          	sw	s4, 88(sp)
ffc009e8:	00f12c23          	sw	a5, 24(sp)
ffc009ec:	07c12783          	lw	a5, 124(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc009f0:	0000fa37          	lui	s4, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc009f4:	05512a23          	sw	s5, 84(sp)
ffc009f8:	00f12e23          	sw	a5, 28(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc009fc:	428a0a13          	addi	s4, s4, 1064 # f428 <my_y>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:347
  uint32_t addr_with_offset = dram_data_buf_fetch_rdptr_byte + DRAM_BUF_DATA_OFFSET;
ffc00a00:	02060793          	addi	a5, a2, 32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc00a04:	0000fab7          	lui	s5, 0xf
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:347
  uint32_t addr_with_offset = dram_data_buf_fetch_rdptr_byte + DRAM_BUF_DATA_OFFSET;
ffc00a08:	00f12623          	sw	a5, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc00a0c:	42ca8a93          	addi	s5, s5, 1068 # f42c <my_x>
ffc00a10:	014587b3          	add	a5, a1, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc00a14:	05a12023          	sw	s10, 64(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc00a18:	02f12023          	sw	a5, 32(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:362
        ncrisc_noc_fast_write(input_noc, NCRISC_WR_CMD_BUF,
ffc00a1c:	00002d37          	lui	s10, 0x2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc00a20:	015587b3          	add	a5, a1, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc00a24:	05712623          	sw	s7, 76(sp)
ffc00a28:	05912223          	sw	s9, 68(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc00a2c:	02f12223          	sw	a5, 36(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc00a30:	07012c83          	lw	s9, 112(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:362
        ncrisc_noc_fast_write(input_noc, NCRISC_WR_CMD_BUF,
ffc00a34:	100d0793          	addi	a5, s10, 256 # 2100 <__firmware_start+0x100>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:345
                                                                              uint64_t dram_addr, uint32_t dram_embeddings_row_shift, uint32_t tilize_row_col_offset, uint32_t& c_dim_count, uint32_t c_dim_size, uint32_t c_dim_loop_num_rows, uint32_t& col_offset_bytes, uint32_t transaction_id) {
ffc00a38:	09412b83          	lw	s7, 148(sp)
ffc00a3c:	06812423          	sw	s0, 104(sp)
ffc00a40:	07212023          	sw	s2, 96(sp)
ffc00a44:	05312e23          	sw	s3, 92(sp)
ffc00a48:	05612823          	sw	s6, 80(sp)
ffc00a4c:	05812423          	sw	s8, 72(sp)
ffc00a50:	00080913          	mv	s2, a6
ffc00a54:	06112623          	sw	ra, 108(sp)
ffc00a58:	03b12e23          	sw	s11, 60(sp)
ffc00a5c:	00050b13          	mv	s6, a0
ffc00a60:	00058413          	mv	s0, a1
ffc00a64:	00d12823          	sw	a3, 16(sp)
ffc00a68:	00e12a23          	sw	a4, 20(sp)
ffc00a6c:	00088993          	mv	s3, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:348
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc00a70:	00000c13          	li	s8, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:346
  bool wait_for_zeros = false;
ffc00a74:	00000813          	li	a6, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:362
        ncrisc_noc_fast_write(input_noc, NCRISC_WR_CMD_BUF,
ffc00a78:	02f12423          	sw	a5, 40(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:348 (discriminator 1)
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc00a7c:	01012783          	lw	a5, 16(sp)
ffc00a80:	26fc7263          	bgeu	s8, a5, ffc00ce4 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x310>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:353
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
ffc00a84:	000ca703          	lw	a4, 0(s9)
ffc00a88:	00271793          	slli	a5, a4, 0x2
ffc00a8c:	00f986b3          	add	a3, s3, a5
ffc00a90:	0006aa03          	lw	s4, 0(a3) # 28000 <noc_nonblocking_api.cc.88b5909b+0x527c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:354
    scatter_idx++;
ffc00a94:	00170713          	addi	a4, a4, 1
ffc00a98:	00eca023          	sw	a4, 0(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:355
    if (scatter_offset_val == DRAM_SCATTER_LIST_INVALID) {
ffc00a9c:	fff00713          	li	a4, -1
ffc00aa0:	08ea1863          	bne	s4, a4, ffc00b30 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x15c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc00aa4:	02012783          	lw	a5, 32(sp)
ffc00aa8:	00090693          	mv	a3, s2
ffc00aac:	0007c703          	lbu	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:357
      uint32_t bytes_left = dram_io_scatter_chunk_size_bytes;
ffc00ab0:	00048d93          	mv	s11, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:356
      uint64_t replicate_dest_addr = NOC_XY_ADDR(my_x[input_noc], my_y[input_noc], stream_dest_addr);
ffc00ab4:	00a71793          	slli	a5, a4, 0xa
ffc00ab8:	02412703          	lw	a4, 36(sp)
ffc00abc:	00074703          	lbu	a4, 0(a4)
ffc00ac0:	00471713          	slli	a4, a4, 0x4
ffc00ac4:	00e7ed33          	or	s10, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:359
      while (bytes_left) {
ffc00ac8:	1c0d8463          	beqz	s11, ffc00c90 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2bc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:360
        uint32_t trans_size_bytes = bytes_left >= ZERO_GRAD_CHUNK_SIZE_BYTES ? ZERO_GRAD_CHUNK_SIZE_BYTES : bytes_left;
ffc00acc:	1ff00793          	li	a5, 511
ffc00ad0:	20000a93          	li	s5, 512
ffc00ad4:	01b7e463          	bltu	a5, s11, ffc00adc <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x108>
ffc00ad8:	000d8a93          	mv	s5, s11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:361
        while (!ncrisc_noc_fast_write_ok(input_noc, NCRISC_WR_CMD_BUF));
ffc00adc:	00300593          	li	a1, 3
ffc00ae0:	00040513          	mv	a0, s0
ffc00ae4:	02d12623          	sw	a3, 44(sp)
ffc00ae8:	d3cff0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc00aec:	02c12683          	lw	a3, 44(sp)
ffc00af0:	fe0506e3          	beqz	a0, ffc00adc <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x108>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:362
        ncrisc_noc_fast_write(input_noc, NCRISC_WR_CMD_BUF,
ffc00af4:	02812603          	lw	a2, 40(sp)
ffc00af8:	000d0713          	mv	a4, s10
ffc00afc:	00300593          	li	a1, 3
ffc00b00:	00100893          	li	a7, 1
ffc00b04:	00000813          	li	a6, 0
ffc00b08:	000a8793          	mv	a5, s5
ffc00b0c:	00040513          	mv	a0, s0
ffc00b10:	e45ff0ef          	jal	ra, ffc00954 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:367
        replicate_dest_addr += trans_size_bytes;
ffc00b14:	02c12683          	lw	a3, 44(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:368
        bytes_left -= trans_size_bytes;
ffc00b18:	415d8db3          	sub	s11, s11, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:367
        replicate_dest_addr += trans_size_bytes;
ffc00b1c:	01568633          	add	a2, a3, s5
ffc00b20:	00d635b3          	sltu	a1, a2, a3
ffc00b24:	01a58d33          	add	s10, a1, s10
ffc00b28:	00060693          	mv	a3, a2
ffc00b2c:	f9dff06f          	j	ffc00ac8 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0xf4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:350
    uint32_t scatter_offset_val_inc = 1;
ffc00b30:	00100d93          	li	s11, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:372
      if (hw_tilize && scatter_loop_index > 0) {
ffc00b34:	040b0263          	beqz	s6, ffc00b78 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x1a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:372 (discriminator 1)
ffc00b38:	07412703          	lw	a4, 116(sp)
ffc00b3c:	00072703          	lw	a4, 0(a4)
ffc00b40:	02070c63          	beqz	a4, ffc00b78 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x1a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:373
        uint32_t prev_scatter_offset_val = new_scatter_offsets[scatter_idx-2]; // -2 due to the increment above
ffc00b44:	ffc78793          	addi	a5, a5, -4
ffc00b48:	00f987b3          	add	a5, s3, a5
ffc00b4c:	0007ad83          	lw	s11, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
ffc00b50:	00000793          	li	a5, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:374
        scatter_offset_val_inc = scatter_offset_val - prev_scatter_offset_val;
ffc00b54:	41ba0db3          	sub	s11, s4, s11
ffc00b58:	000d8693          	mv	a3, s11
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
ffc00b5c:	00177613          	andi	a2, a4, 1
ffc00b60:	00060463          	beqz	a2, ffc00b68 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x194>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc00b64:	00d787b3          	add	a5, a5, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc00b68:	00175713          	srli	a4, a4, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc00b6c:	00169693          	slli	a3, a3, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc00b70:	fe0716e3          	bnez	a4, ffc00b5c <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x188>
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:375
        scatter_offset_val += mulsi3(scatter_loop_index, scatter_offset_val_inc);
ffc00b74:	00fa0a33          	add	s4, s4, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:350
    uint32_t scatter_offset_val_inc = 1;
ffc00b78:	08012683          	lw	a3, 128(sp)
ffc00b7c:	000a0793          	mv	a5, s4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
ffc00b80:	00000713          	li	a4, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc00b84:	00078e63          	beqz	a5, ffc00ba0 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x1cc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
ffc00b88:	0017f613          	andi	a2, a5, 1
ffc00b8c:	00060463          	beqz	a2, ffc00b94 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x1c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc00b90:	00d70733          	add	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc00b94:	0017d793          	srli	a5, a5, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc00b98:	00169693          	slli	a3, a3, 0x1
ffc00b9c:	fe9ff06f          	j	ffc00b84 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x1b0>
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:377
      dram_src_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes + tilize_row_col_offset);
ffc00ba0:	08412783          	lw	a5, 132(sp)
ffc00ba4:	000ba603          	lw	a2, 0(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:378
      ncrisc_noc_fast_read_any_len(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_dest_addr, dram_io_scatter_chunk_size_bytes, transaction_id);
ffc00ba8:	01c12503          	lw	a0, 28(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:377
      dram_src_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes + tilize_row_col_offset);
ffc00bac:	00c78633          	add	a2, a5, a2
ffc00bb0:	00c12783          	lw	a5, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:378
      ncrisc_noc_fast_read_any_len(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_dest_addr, dram_io_scatter_chunk_size_bytes, transaction_id);
ffc00bb4:	00090693          	mv	a3, s2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:377
      dram_src_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes + tilize_row_col_offset);
ffc00bb8:	00f60633          	add	a2, a2, a5
ffc00bbc:	01812783          	lw	a5, 24(sp)
ffc00bc0:	00e60633          	add	a2, a2, a4
ffc00bc4:	00f605b3          	add	a1, a2, a5
ffc00bc8:	00c5b633          	sltu	a2, a1, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:378
      ncrisc_noc_fast_read_any_len(input_noc, NCRISC_SMALL_TXN_CMD_BUF, dram_src_addr_w_offset, stream_dest_addr, dram_io_scatter_chunk_size_bytes, transaction_id);
ffc00bcc:	09812783          	lw	a5, 152(sp)
ffc00bd0:	00a60633          	add	a2, a2, a0
ffc00bd4:	00048713          	mv	a4, s1
ffc00bd8:	00040513          	mv	a0, s0
ffc00bdc:	03012623          	sw	a6, 44(sp)
ffc00be0:	bc9ff0ef          	jal	ra, ffc007a8 <ncrisc_noc_fast_read_any_len(unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>
ffc00be4:	02c12803          	lw	a6, 44(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:381
    stream_dest_addr += dram_io_scatter_chunk_size_bytes;
ffc00be8:	00990933          	add	s2, s2, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:383
    uint32_t row_idx = hw_tilize ? scatter_offset_val + scatter_offset_val_inc : scatter_idx;
ffc00bec:	014d8db3          	add	s11, s11, s4
ffc00bf0:	000b1463          	bnez	s6, ffc00bf8 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x224>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:383 (discriminator 2)
ffc00bf4:	000cad83          	lw	s11, 0(s9)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:384 (discriminator 4)
    uint32_t prev_scatter_loop_index = scatter_loop_index;
ffc00bf8:	07412783          	lw	a5, 116(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:386 (discriminator 4)
    bool done_simpler_decompress_scatter_offsets = false;
ffc00bfc:	00000593          	li	a1, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:384 (discriminator 4)
    uint32_t prev_scatter_loop_index = scatter_loop_index;
ffc00c00:	0007a603          	lw	a2, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:387 (discriminator 4)
    if (hw_tilize)
ffc00c04:	040b0663          	beqz	s6, ffc00c50 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x27c>
simpler_decompress_scatter_offsets(unsigned long volatile* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:299
  uint32_t num_iter = scatter_offsets[scatter_idx];
ffc00c08:	000ca703          	lw	a4, 0(s9)
ffc00c0c:	00271713          	slli	a4, a4, 0x2
ffc00c10:	00e98733          	add	a4, s3, a4
ffc00c14:	00072683          	lw	a3, 0(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:300
  uint32_t magic_number = (num_iter & DRAM_IO_IS_SCATTER_LOOP) && (num_iter != DRAM_SCATTER_LIST_INVALID);
ffc00c18:	80000737          	lui	a4, 0x80000
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:301
  if (magic_number) {
ffc00c1c:	ffe74793          	xori	a5, a4, -2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:300
  uint32_t magic_number = (num_iter & DRAM_IO_IS_SCATTER_LOOP) && (num_iter != DRAM_SCATTER_LIST_INVALID);
ffc00c20:	00e68533          	add	a0, a3, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:301
  if (magic_number) {
ffc00c24:	02a7e663          	bltu	a5, a0, ffc00c50 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x27c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:302
    num_iter = num_iter & ~DRAM_IO_IS_SCATTER_LOOP;
ffc00c28:	fff74713          	not	a4, a4
ffc00c2c:	00e6f733          	and	a4, a3, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:303
    if (scatter_loop_index < num_iter) {
ffc00c30:	06e67663          	bgeu	a2, a4, ffc00c9c <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2c8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:304
      scatter_loop_index++;
ffc00c34:	07412703          	lw	a4, 116(sp)
ffc00c38:	00160793          	addi	a5, a2, 1
ffc00c3c:	00f72023          	sw	a5, 0(a4) # 80000000 <TENSIX_MAILBOX_BASE+0x80140000>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:305
      scatter_idx -= 1;
ffc00c40:	000ca783          	lw	a5, 0(s9)
ffc00c44:	fff78793          	addi	a5, a5, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:308
      scatter_idx += 1;
ffc00c48:	00fca023          	sw	a5, 0(s9)
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:310
    return true;
ffc00c4c:	000b0593          	mv	a1, s6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:391
    if ((row_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc00c50:	09012783          	lw	a5, 144(sp)
ffc00c54:	fff78793          	addi	a5, a5, -1
ffc00c58:	01b7fdb3          	and	s11, a5, s11
ffc00c5c:	020d9463          	bnez	s11, ffc00c84 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2b0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:392
      c_dim_count++;
ffc00c60:	08812783          	lw	a5, 136(sp)
ffc00c64:	0007a703          	lw	a4, 0(a5)
ffc00c68:	00170713          	addi	a4, a4, 1
ffc00c6c:	00e7a023          	sw	a4, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:393
      if (c_dim_count >= c_dim_size) {
ffc00c70:	08c12783          	lw	a5, 140(sp)
ffc00c74:	02f76e63          	bltu	a4, a5, ffc00cb0 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2dc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:395
        c_dim_count = 0;
ffc00c78:	08812783          	lw	a5, 136(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:394
        col_offset_bytes = 0;
ffc00c7c:	000ba023          	sw	zero, 0(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:395
        c_dim_count = 0;
ffc00c80:	0007a023          	sw	zero, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:348 (discriminator 2)
  for (uint32_t scatter_tile = 0; scatter_tile < data_rec_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc00c84:	01412783          	lw	a5, 20(sp)
ffc00c88:	00fc0c33          	add	s8, s8, a5
ffc00c8c:	df1ff06f          	j	ffc00a7c <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0xa8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:350
    uint32_t scatter_offset_val_inc = 1;
ffc00c90:	00100d93          	li	s11, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:370
      wait_for_zeros = true;
ffc00c94:	00100813          	li	a6, 1
ffc00c98:	f51ff06f          	j	ffc00be8 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x214>
simpler_decompress_scatter_offsets(unsigned long volatile* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:307
      scatter_loop_index = 0;
ffc00c9c:	07412783          	lw	a5, 116(sp)
ffc00ca0:	0007a023          	sw	zero, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:308
      scatter_idx += 1;
ffc00ca4:	000ca783          	lw	a5, 0(s9)
ffc00ca8:	00178793          	addi	a5, a5, 1
ffc00cac:	f9dff06f          	j	ffc00c48 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x274>
dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:397
        col_offset_bytes += dram_io_scatter_chunk_size_bytes;
ffc00cb0:	000ba783          	lw	a5, 0(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:399
          scatter_idx -= (c_dim_loop_num_rows-prev_scatter_loop_index+1);
ffc00cb4:	09012703          	lw	a4, 144(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:397
        col_offset_bytes += dram_io_scatter_chunk_size_bytes;
ffc00cb8:	009787b3          	add	a5, a5, s1
ffc00cbc:	00fba023          	sw	a5, 0(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:398
        if (done_simpler_decompress_scatter_offsets)
ffc00cc0:	000ca783          	lw	a5, 0(s9)
ffc00cc4:	00058c63          	beqz	a1, ffc00cdc <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x308>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:399
          scatter_idx -= (c_dim_loop_num_rows-prev_scatter_loop_index+1);
ffc00cc8:	fff74713          	not	a4, a4
ffc00ccc:	00c70733          	add	a4, a4, a2
ffc00cd0:	00e787b3          	add	a5, a5, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:401
          scatter_idx -= c_dim_loop_num_rows;
ffc00cd4:	00fca023          	sw	a5, 0(s9)
ffc00cd8:	fadff06f          	j	ffc00c84 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x2b0>
ffc00cdc:	40e787b3          	sub	a5, a5, a4
ffc00ce0:	ff5ff06f          	j	ffc00cd4 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x300>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:407
  if (wait_for_zeros)
ffc00ce4:	00080a63          	beqz	a6, ffc00cf8 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x324>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:408
    while (!ncrisc_noc_nonposted_writes_flushed(input_noc, NCRISC_WR_LOCAL_TRID));
ffc00ce8:	00100593          	li	a1, 1
ffc00cec:	00040513          	mv	a0, s0
ffc00cf0:	b10ff0ef          	jal	ra, ffc00000 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc00cf4:	fe050ae3          	beqz	a0, ffc00ce8 <dram_input_stream_issue_scatter_read_indicies(bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long long, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long)+0x314>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:409
}
ffc00cf8:	06c12083          	lw	ra, 108(sp)
ffc00cfc:	06812403          	lw	s0, 104(sp)
ffc00d00:	06412483          	lw	s1, 100(sp)
ffc00d04:	06012903          	lw	s2, 96(sp)
ffc00d08:	05c12983          	lw	s3, 92(sp)
ffc00d0c:	05812a03          	lw	s4, 88(sp)
ffc00d10:	05412a83          	lw	s5, 84(sp)
ffc00d14:	05012b03          	lw	s6, 80(sp)
ffc00d18:	04c12b83          	lw	s7, 76(sp)
ffc00d1c:	04812c03          	lw	s8, 72(sp)
ffc00d20:	04412c83          	lw	s9, 68(sp)
ffc00d24:	04012d03          	lw	s10, 64(sp)
ffc00d28:	03c12d83          	lw	s11, 60(sp)
ffc00d2c:	07010113          	addi	sp, sp, 112
ffc00d30:	00008067          	ret

ffc00d34 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)>:
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:631
                                            dram_input_stream_state_t* curr_dram_input_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_in_flight, uint32_t &dram_ptr_update_cnt, uint32_t &flushed_partial_q_slot_tiles) {
ffc00d34:	fa010113          	addi	sp, sp, -96
ffc00d38:	03b12623          	sw	s11, 44(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:633
  volatile dram_io_state_t tt_l1_ptr * l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;
ffc00d3c:	0008ad83          	lw	s11, 0(a7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:631
                                            dram_input_stream_state_t* curr_dram_input_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_in_flight, uint32_t &dram_ptr_update_cnt, uint32_t &flushed_partial_q_slot_tiles) {
ffc00d40:	05212823          	sw	s2, 80(sp)
ffc00d44:	05312623          	sw	s3, 76(sp)
ffc00d48:	05412423          	sw	s4, 72(sp)
ffc00d4c:	05512223          	sw	s5, 68(sp)
ffc00d50:	05612023          	sw	s6, 64(sp)
ffc00d54:	03712e23          	sw	s7, 60(sp)
ffc00d58:	03812c23          	sw	s8, 56(sp)
ffc00d5c:	03912a23          	sw	s9, 52(sp)
ffc00d60:	04112e23          	sw	ra, 92(sp)
ffc00d64:	04812c23          	sw	s0, 88(sp)
ffc00d68:	04912a23          	sw	s1, 84(sp)
ffc00d6c:	03a12823          	sw	s10, 48(sp)
ffc00d70:	00068913          	mv	s2, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:637
  uint32_t rd_ptr_autoinc = (next_dram_q_in_flight->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
ffc00d74:	0048c683          	lbu	a3, 4(a7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:636
  uint32_t rd_grd_ptr_autoinc = l1_ptrs->rd_grd_ptr_autoinc;
ffc00d78:	002ddc83          	lhu	s9, 2(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:631
                                            dram_input_stream_state_t* curr_dram_input_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_in_flight, uint32_t &dram_ptr_update_cnt, uint32_t &flushed_partial_q_slot_tiles) {
ffc00d7c:	00060a93          	mv	s5, a2
ffc00d80:	00070b13          	mv	s6, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:634
  uint32_t dram_buf_size_q_slots = next_dram_q_in_flight->dram_buf_size_q_slots;
ffc00d84:	00c8d983          	lhu	s3, 12(a7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:635
  uint32_t rdptr_flushed_val = next_dram_q_in_flight->dram_ptr_flushed_q_slots;  
ffc00d88:	0088d603          	lhu	a2, 8(a7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:631
                                            dram_input_stream_state_t* curr_dram_input_stream_state, dram_q_state_t tt_l1_ptr * next_dram_q_in_flight, uint32_t &dram_ptr_update_cnt, uint32_t &flushed_partial_q_slot_tiles) {
ffc00d8c:	00050a13          	mv	s4, a0
ffc00d90:	00058b93          	mv	s7, a1
ffc00d94:	00078713          	mv	a4, a5
ffc00d98:	00080c13          	mv	s8, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:637
  uint32_t rd_ptr_autoinc = (next_dram_q_in_flight->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
ffc00d9c:	0016f693          	andi	a3, a3, 1
ffc00da0:	0e068c63          	beqz	a3, ffc00e98 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x164>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:637 (discriminator 1)
ffc00da4:	002dd403          	lhu	s0, 2(s11)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:53 (discriminator 4)
  uint32_t next_ptr = curr_ptr + incr;
ffc00da8:	00c40433          	add	s0, s0, a2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:54 (discriminator 4)
  uint32_t double_buf_size_q_slots = 2*buf_size_q_slots;
ffc00dac:	00199993          	slli	s3, s3, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:55 (discriminator 4)
  if (next_ptr >= double_buf_size_q_slots) {
ffc00db0:	01346463          	bltu	s0, s3, ffc00db8 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x84>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
ffc00db4:	41340433          	sub	s0, s0, s3
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:642
  bool has_multi_readers = curr_dram_input_stream_state->stream_info->dram_io_info->has_multi_readers && rd_grd_ptr_autoinc;
ffc00db8:	050c2683          	lw	a3, 80(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:639
  next_dram_q_in_flight->dram_ptr_flushed_q_slots = rdptr_flushed_val;  
ffc00dbc:	01041413          	slli	s0, s0, 0x10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:642
  bool has_multi_readers = curr_dram_input_stream_state->stream_info->dram_io_info->has_multi_readers && rd_grd_ptr_autoinc;
ffc00dc0:	0886a683          	lw	a3, 136(a3)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:639
  next_dram_q_in_flight->dram_ptr_flushed_q_slots = rdptr_flushed_val;  
ffc00dc4:	01045413          	srli	s0, s0, 0x10
ffc00dc8:	00889423          	sh	s0, 8(a7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:642
  bool has_multi_readers = curr_dram_input_stream_state->stream_info->dram_io_info->has_multi_readers && rd_grd_ptr_autoinc;
ffc00dcc:	00088493          	mv	s1, a7
ffc00dd0:	0076c683          	lbu	a3, 7(a3)
ffc00dd4:	0c068e63          	beqz	a3, ffc00eb0 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x17c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:642 (discriminator 1)
ffc00dd8:	200c8863          	beqz	s9, ffc00fe8 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x2b4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:642
ffc00ddc:	00100d13          	li	s10, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:647
      if (!l1_ptrs->dram_padding) {
ffc00de0:	03edc683          	lbu	a3, 62(s11)
ffc00de4:	0a069e63          	bnez	a3, ffc00ea0 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x16c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:648
        total_readers = l1_ptrs->total_readers;
ffc00de8:	055dc683          	lbu	a3, 85(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:649
        has_multi_readers = total_readers > 1 && rd_grd_ptr_autoinc;
ffc00dec:	00100793          	li	a5, 1
ffc00df0:	00000d13          	li	s10, 0
ffc00df4:	00d7f463          	bgeu	a5, a3, ffc00dfc <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0xc8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:649 (discriminator 1)
ffc00df8:	01903d33          	snez	s10, s9
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:650 (discriminator 6)
        rd_grd_ptr_autoinc = l1_ptrs->rd_grd_ptr_autoinc;
ffc00dfc:	002ddc83          	lhu	s9, 2(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:651 (discriminator 6)
        uint32_t reader_index = l1_ptrs->reader_index;
ffc00e00:	054dc783          	lbu	a5, 84(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:653 (discriminator 6)
        uint32_t curr_stride_wrap = 0;
ffc00e04:	00012c23          	sw	zero, 24(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:654 (discriminator 6)
        uint32_t next_stride_wrap = 0;
ffc00e08:	00012e23          	sw	zero, 28(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:651 (discriminator 6)
        uint32_t reader_index = l1_ptrs->reader_index;
ffc00e0c:	00f12223          	sw	a5, 4(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:656 (discriminator 6)
        if (has_multi_readers) {
ffc00e10:	080d0863          	beqz	s10, ffc00ea0 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x16c>
header_reads_flushed(unsigned long, unsigned long, unsigned long volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.h:81
  return (ncrisc_noc_reads_flushed(noc, transaction_id) || check_packet_end_marker((uint32_t)(&(l1_ptr_addr[DRAM_HEADER_LAST]))));
ffc00e14:	00300593          	li	a1, 3
ffc00e18:	00090513          	mv	a0, s2
ffc00e1c:	01112623          	sw	a7, 12(sp)
ffc00e20:	00e12423          	sw	a4, 8(sp)
ffc00e24:	9dcff0ef          	jal	ra, ffc00000 <ncrisc_noc_reads_flushed(unsigned long, unsigned long)>
ffc00e28:	00812703          	lw	a4, 8(sp)
ffc00e2c:	00c12883          	lw	a7, 12(sp)
ffc00e30:	1e051063          	bnez	a0, ffc01010 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x2dc>
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:659
            if (!curr_dram_input_stream_state->q_ptr_update_pending) {
ffc00e34:	002c4783          	lbu	a5, 2(s8)
ffc00e38:	02079063          	bnez	a5, ffc00e58 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x124>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:660
              push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
ffc00e3c:	000b0693          	mv	a3, s6
ffc00e40:	01503633          	snez	a2, s5
ffc00e44:	000a0593          	mv	a1, s4
ffc00e48:	000c0513          	mv	a0, s8
ffc00e4c:	b7cff0ef          	jal	ra, ffc001c8 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:661
              curr_dram_input_stream_state->q_ptr_update_pending = true;
ffc00e50:	00100793          	li	a5, 1
ffc00e54:	00fc0123          	sb	a5, 2(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:663 (discriminator 1)
            return false;
ffc00e58:	00000513          	li	a0, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:754
}
ffc00e5c:	05c12083          	lw	ra, 92(sp)
ffc00e60:	05812403          	lw	s0, 88(sp)
ffc00e64:	05412483          	lw	s1, 84(sp)
ffc00e68:	05012903          	lw	s2, 80(sp)
ffc00e6c:	04c12983          	lw	s3, 76(sp)
ffc00e70:	04812a03          	lw	s4, 72(sp)
ffc00e74:	04412a83          	lw	s5, 68(sp)
ffc00e78:	04012b03          	lw	s6, 64(sp)
ffc00e7c:	03c12b83          	lw	s7, 60(sp)
ffc00e80:	03812c03          	lw	s8, 56(sp)
ffc00e84:	03412c83          	lw	s9, 52(sp)
ffc00e88:	03012d03          	lw	s10, 48(sp)
ffc00e8c:	02c12d83          	lw	s11, 44(sp)
ffc00e90:	06010113          	addi	sp, sp, 96
ffc00e94:	00008067          	ret
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:637 (discriminator 2)
  uint32_t rd_ptr_autoinc = (next_dram_q_in_flight->dram_q_state_flags & DRAM_Q_RAM) != 0 ? l1_ptrs->rd_grd_ptr_autoinc : l1_ptrs->rd_lrd_ptr_autoinc;
ffc00e98:	010dd403          	lhu	s0, 16(s11)
ffc00e9c:	f0dff06f          	j	ffc00da8 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x74>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:678
      next_dram_q_in_flight = (dram_q_state_t tt_l1_ptr *)next_dram_q_in_flight->next;
ffc00ea0:	0204a483          	lw	s1, 32(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:679
      l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;
ffc00ea4:	0004ad83          	lw	s11, 0(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:680
      if (next_dram_q_in_flight == first_dram_q_in_flight) {
ffc00ea8:	f2989ce3          	bne	a7, s1, ffc00de0 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0xac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:686
  if (has_multi_readers || rd_grd_ptr_autoinc) {
ffc00eac:	000d1463          	bnez	s10, ffc00eb4 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x180>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:686 (discriminator 1)
ffc00eb0:	120c8c63          	beqz	s9, ffc00fe8 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x2b4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:642
  bool has_multi_readers = curr_dram_input_stream_state->stream_info->dram_io_info->has_multi_readers && rd_grd_ptr_autoinc;
ffc00eb4:	00048a13          	mv	s4, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:689
      if (!l1_ptrs->dram_padding) {
ffc00eb8:	03edc783          	lbu	a5, 62(s11)
ffc00ebc:	12079063          	bnez	a5, ffc00fdc <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x2a8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:690
        uint32_t rd_grd_ptr_autoinc = l1_ptrs->rd_grd_ptr_autoinc;
ffc00ec0:	002ddd03          	lhu	s10, 2(s11)
tt_l1_load(tt_uint64_t volatile* rvtt_l1_ptr):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:30
    v.hi = p->hi;
ffc00ec4:	048daa83          	lw	s5, 72(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_attribs.h:31
    v.lo = p->lo;
ffc00ec8:	04cdab03          	lw	s6, 76(s11)
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:693
        uint32_t curr_stride_wrap = 0;
ffc00ecc:	00012c23          	sw	zero, 24(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:694
        uint32_t next_stride_wrap = 0;
ffc00ed0:	00012a23          	sw	zero, 20(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:695
        uint32_t total_readers_minus_one = l1_ptrs->total_readers - 1;
ffc00ed4:	055dcc03          	lbu	s8, 85(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:696
        bool has_multi_readers = total_readers_minus_one > 0 && rd_grd_ptr_autoinc;
ffc00ed8:	00000c93          	li	s9, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:695
        uint32_t total_readers_minus_one = l1_ptrs->total_readers - 1;
ffc00edc:	fffc0c13          	addi	s8, s8, -1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:696
        bool has_multi_readers = total_readers_minus_one > 0 && rd_grd_ptr_autoinc;
ffc00ee0:	000c0463          	beqz	s8, ffc00ee8 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x1b4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:696 (discriminator 1)
ffc00ee4:	01a03cb3          	snez	s9, s10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:698 (discriminator 6)
        stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap);
ffc00ee8:	01410693          	addi	a3, sp, 20
ffc00eec:	01810613          	addi	a2, sp, 24
ffc00ef0:	01c10593          	addi	a1, sp, 28
ffc00ef4:	000d8513          	mv	a0, s11
ffc00ef8:	9c4ff0ef          	jal	ra, ffc000bc <stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:700 (discriminator 6)
        if ((next_dram_q_in_flight->dram_q_state_flags & DRAM_Q_RAM) == 0) {
ffc00efc:	004a4783          	lbu	a5, 4(s4)
ffc00f00:	0017f793          	andi	a5, a5, 1
ffc00f04:	0c079863          	bnez	a5, ffc00fd4 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x2a0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:701
          if (!has_multi_readers || l1_ptrs->reader_index == total_readers_minus_one) {
ffc00f08:	100c8063          	beqz	s9, ffc01008 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x2d4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:701 (discriminator 2)
ffc00f0c:	054dc783          	lbu	a5, 84(s11)
ffc00f10:	07878c63          	beq	a5, s8, ffc00f88 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x254>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:720
          uint32_t reader_index = l1_ptrs->reader_index;
ffc00f14:	054dc703          	lbu	a4, 84(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:722
            l1_ptrs->stride_wrap = next_stride_wrap;
ffc00f18:	01412783          	lw	a5, 20(sp)
ffc00f1c:	0ff7f693          	zext.b	a3, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:721
          if (reader_index == total_readers_minus_one) {
ffc00f20:	04ec1a63          	bne	s8, a4, ffc00f74 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x240>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:723
            l1_ptrs->wr_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc00f24:	00f037b3          	snez	a5, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:722
            l1_ptrs->stride_wrap = next_stride_wrap;
ffc00f28:	04dd8ba3          	sb	a3, 87(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:723
            l1_ptrs->wr_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc00f2c:	00e79793          	slli	a5, a5, 0xe
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:727
            l1_ptrs->wr_stride = curr_stride_wrap + reader_index + 1;
ffc00f30:	02fd9623          	sh	a5, 44(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:728
            l1_ptrs->rd_stride = curr_stride_wrap + reader_index + 1;
ffc00f34:	00fd9623          	sh	a5, 12(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:731
          while (!ncrisc_noc_fast_write_ok(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc00f38:	00300593          	li	a1, 3
ffc00f3c:	00090513          	mv	a0, s2
ffc00f40:	8e4ff0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc00f44:	fe050ae3          	beqz	a0, ffc00f38 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x204>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:732
          ncrisc_noc_fast_write(input_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc00f48:	00ca8693          	addi	a3, s5, 12
ffc00f4c:	0156b733          	sltu	a4, a3, s5
ffc00f50:	00000893          	li	a7, 0
ffc00f54:	00100813          	li	a6, 1
ffc00f58:	00200793          	li	a5, 2
ffc00f5c:	01670733          	add	a4, a4, s6
ffc00f60:	02cd8613          	addi	a2, s11, 44
ffc00f64:	00300593          	li	a1, 3
ffc00f68:	00090513          	mv	a0, s2
ffc00f6c:	9e9ff0ef          	jal	ra, ffc00954 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
ffc00f70:	0680006f          	j	ffc00fd8 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x2a4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:726
            l1_ptrs->stride_wrap = next_stride_wrap;
ffc00f74:	04dd8ba3          	sb	a3, 87(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:727
            l1_ptrs->wr_stride = curr_stride_wrap + reader_index + 1;
ffc00f78:	01812783          	lw	a5, 24(sp)
ffc00f7c:	00178793          	addi	a5, a5, 1
ffc00f80:	00e787b3          	add	a5, a5, a4
ffc00f84:	fadff06f          	j	ffc00f30 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x1fc>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:702
            if (rd_grd_ptr_autoinc) {
ffc00f88:	f80d06e3          	beqz	s10, ffc00f14 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x1e0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:703
              l1_ptrs->wr_dram_rdptr = dram_io_incr_ptr(l1_ptrs->wr_dram_rdptr, rd_grd_ptr_autoinc, dram_buf_size_q_slots);
ffc00f8c:	020dd783          	lhu	a5, 32(s11)
dram_io_incr_ptr(unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:53
  uint32_t next_ptr = curr_ptr + incr;
ffc00f90:	01a787b3          	add	a5, a5, s10
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:55
  if (next_ptr >= double_buf_size_q_slots) {
ffc00f94:	0137e463          	bltu	a5, s3, ffc00f9c <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x268>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:56
    next_ptr -= double_buf_size_q_slots;
ffc00f98:	413787b3          	sub	a5, a5, s3
dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:703
ffc00f9c:	02fd9023          	sh	a5, 32(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:705
              while (!ncrisc_noc_fast_write_ok(input_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc00fa0:	00300593          	li	a1, 3
ffc00fa4:	00090513          	mv	a0, s2
ffc00fa8:	87cff0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc00fac:	fe050ae3          	beqz	a0, ffc00fa0 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x26c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:706
              ncrisc_noc_fast_write(input_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_dram_rdptr)), dram_buf_addr+DRAM_BUF_RDPTR_OFFSET, 2,
ffc00fb0:	00000893          	li	a7, 0
ffc00fb4:	00100813          	li	a6, 1
ffc00fb8:	00200793          	li	a5, 2
ffc00fbc:	000a8693          	mv	a3, s5
ffc00fc0:	000b0713          	mv	a4, s6
ffc00fc4:	020d8613          	addi	a2, s11, 32
ffc00fc8:	00300593          	li	a1, 3
ffc00fcc:	00090513          	mv	a0, s2
ffc00fd0:	985ff0ef          	jal	ra, ffc00954 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:719
        if (has_multi_readers) {
ffc00fd4:	f40c90e3          	bnez	s9, ffc00f14 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x1e0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:736
        next_dram_q_in_flight->dram_ptr_flushed_q_slots = rdptr_flushed_val;  
ffc00fd8:	008a1423          	sh	s0, 8(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:739
      next_dram_q_in_flight = (dram_q_state_t tt_l1_ptr *)next_dram_q_in_flight->next;
ffc00fdc:	020a2a03          	lw	s4, 32(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:740
      l1_ptrs = (volatile dram_io_state_t tt_l1_ptr *)next_dram_q_in_flight->l1_dram_ptrs;  
ffc00fe0:	000a2d83          	lw	s11, 0(s4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:741
      if (next_dram_q_in_flight == first_dram_q_in_flight) {
ffc00fe4:	ec9a1ae3          	bne	s4, s1, ffc00eb8 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x184>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:747
  flushed_partial_q_slot_tiles = 0;
ffc00fe8:	06412783          	lw	a5, 100(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:753
  return true;
ffc00fec:	00100513          	li	a0, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:747
  flushed_partial_q_slot_tiles = 0;
ffc00ff0:	0007a023          	sw	zero, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:748
  next_dram_q_in_flight->flushed_partial_q_slot_tiles = 0;
ffc00ff4:	0004aa23          	sw	zero, 20(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:749
  epoch_q_slots_remaining--;
ffc00ff8:	000ba783          	lw	a5, 0(s7)
ffc00ffc:	fff78793          	addi	a5, a5, -1
ffc01000:	00fba023          	sw	a5, 0(s7)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:753
  return true;
ffc01004:	e59ff06f          	j	ffc00e5c <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x128>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:702
            if (rd_grd_ptr_autoinc) {
ffc01008:	fc0d08e3          	beqz	s10, ffc00fd8 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x2a4>
ffc0100c:	f81ff06f          	j	ffc00f8c <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x258>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:667
        if (has_multi_readers && (!stride_iter_matches(l1_ptrs, rd_stride, curr_stride_wrap, next_stride_wrap) || reader_index != rd_stride)) {
ffc01010:	01c10693          	addi	a3, sp, 28
ffc01014:	01810613          	addi	a2, sp, 24
ffc01018:	01410593          	addi	a1, sp, 20
ffc0101c:	000d8513          	mv	a0, s11
ffc01020:	01112623          	sw	a7, 12(sp)
ffc01024:	00e12423          	sw	a4, 8(sp)
ffc01028:	894ff0ef          	jal	ra, ffc000bc <stride_iter_matches(dram_io_state_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long&, unsigned long&)>
ffc0102c:	00812703          	lw	a4, 8(sp)
ffc01030:	00c12883          	lw	a7, 12(sp)
ffc01034:	00050863          	beqz	a0, ffc01044 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x310>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:667 (discriminator 4)
ffc01038:	01412683          	lw	a3, 20(sp)
ffc0103c:	00412783          	lw	a5, 4(sp)
ffc01040:	e6f680e3          	beq	a3, a5, ffc00ea0 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x16c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:668
          if (!curr_dram_input_stream_state->q_ptr_update_pending) {
ffc01044:	002c4783          	lbu	a5, 2(s8)
ffc01048:	02079063          	bnez	a5, ffc01068 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x334>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:669
            push_readdata_to_stream(curr_dram_input_stream_state, stream_id, moves_raw_data, prev_data_rec_chunk_size_tiles, prev_data_rec_chunk_size_bytes);
ffc0104c:	000b0693          	mv	a3, s6
ffc01050:	01503633          	snez	a2, s5
ffc01054:	000a0593          	mv	a1, s4
ffc01058:	000c0513          	mv	a0, s8
ffc0105c:	96cff0ef          	jal	ra, ffc001c8 <push_readdata_to_stream(dram_input_stream_state_t*, unsigned long, bool, unsigned long, unsigned long)>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:670
            curr_dram_input_stream_state->q_ptr_update_pending = true;
ffc01060:	00100793          	li	a5, 1
ffc01064:	00fc0123          	sb	a5, 2(s8)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:672
          if (dram_ptr_update_cnt & ~DRAM_PTR_UPDATE_MASK)
ffc01068:	06012783          	lw	a5, 96(sp)
ffc0106c:	0007a783          	lw	a5, 0(a5)
ffc01070:	fc07f793          	andi	a5, a5, -64
ffc01074:	de0782e3          	beqz	a5, ffc00e58 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x124>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:673
            dram_ptr_update_cnt = 0;
ffc01078:	06012783          	lw	a5, 96(sp)
ffc0107c:	0007a023          	sw	zero, 0(a5)
ffc01080:	dd9ff06f          	j	ffc00e58 <dram_input_stream_scatter_queue_update(unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long, dram_input_stream_state_t*, dram_q_state_t* rvtt_l1_ptr, unsigned long&, unsigned long&)+0x124>

ffc01084 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]>:
update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:56
void update_dram_write_ptrs(bool is_ram, bool is_strided_write, uint32_t write_stride, uint32_t total_write_strides, uint32_t dram_wrptr_q_slots, uint32_t output_noc, uint32_t output_vc, 
ffc01084:	fd010113          	addi	sp, sp, -48
ffc01088:	00812c23          	sw	s0, 24(sp)
ffc0108c:	00912a23          	sw	s1, 20(sp)
ffc01090:	01212823          	sw	s2, 16(sp)
ffc01094:	01312623          	sw	s3, 12(sp)
ffc01098:	01412423          	sw	s4, 8(sp)
ffc0109c:	01512223          	sw	s5, 4(sp)
ffc010a0:	01612023          	sw	s6, 0(sp)
ffc010a4:	00112e23          	sw	ra, 28(sp)
ffc010a8:	00058b13          	mv	s6, a1
ffc010ac:	03112623          	sw	a7, 44(sp)
ffc010b0:	00078913          	mv	s2, a5
ffc010b4:	03012a83          	lw	s5, 48(sp)
ffc010b8:	03412483          	lw	s1, 52(sp)
ffc010bc:	03812783          	lw	a5, 56(sp)
ffc010c0:	03c12983          	lw	s3, 60(sp)
ffc010c4:	00070593          	mv	a1, a4
ffc010c8:	00080a13          	mv	s4, a6
ffc010cc:	00088413          	mv	s0, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:58
  if (!is_strided_write || write_stride == total_write_strides-1) {
ffc010d0:	000b0663          	beqz	s6, ffc010dc <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x58>
ffc010d4:	fff68693          	addi	a3, a3, -1
ffc010d8:	0ec69263          	bne	a3, a2, ffc011bc <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x138>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:59
    l1_ptrs->wr_dram_wrptr = dram_wrptr_q_slots;
ffc010dc:	02b49223          	sh	a1, 36(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:60
    if (!is_ram) {
ffc010e0:	02051e63          	bnez	a0, ffc0111c <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x98>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:61
      while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc010e4:	00300593          	li	a1, 3
ffc010e8:	00090513          	mv	a0, s2
ffc010ec:	f39fe0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc010f0:	fe050ae3          	beqz	a0, ffc010e4 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x60>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:62
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_dram_wrptr)), dram_buf_addr+DRAM_BUF_WRPTR_OFFSET, 2,
ffc010f4:	00440693          	addi	a3, s0, 4
ffc010f8:	0086b733          	sltu	a4, a3, s0
ffc010fc:	00000893          	li	a7, 0
ffc01100:	000a0813          	mv	a6, s4
ffc01104:	00200793          	li	a5, 2
ffc01108:	01570733          	add	a4, a4, s5
ffc0110c:	02448613          	addi	a2, s1, 36
ffc01110:	00300593          	li	a1, 3
ffc01114:	00090513          	mv	a0, s2
ffc01118:	83dff0ef          	jal	ra, ffc00954 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:72
      l1_ptrs->wr_epoch_id_tag = DRAM_QUEUE_NO_EPOCH_CHECK;
ffc0111c:	02049523          	sh	zero, 42(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:74
    if (is_strided_write) {
ffc01120:	060b0a63          	beqz	s6, ffc01194 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x110>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:76
      l1_ptrs->wr_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc01124:	013037b3          	snez	a5, s3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:75
      l1_ptrs->stride_wrap = next_stride_wrap;
ffc01128:	05348ba3          	sb	s3, 87(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:76
      l1_ptrs->wr_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc0112c:	00e79793          	slli	a5, a5, 0xe
ffc01130:	02f49623          	sh	a5, 44(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:77
      l1_ptrs->rd_stride = next_stride_wrap ? DRAM_STRIDE_WRAP_BIT : 0;
ffc01134:	00f49623          	sh	a5, 12(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:78
      while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc01138:	00300593          	li	a1, 3
ffc0113c:	00090513          	mv	a0, s2
ffc01140:	ee5fe0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc01144:	fe050ae3          	beqz	a0, ffc01138 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0xb4>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:79
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_buf_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 4,
ffc01148:	00a40693          	addi	a3, s0, 10
ffc0114c:	0086b733          	sltu	a4, a3, s0
ffc01150:	00000893          	li	a7, 0
ffc01154:	000a0813          	mv	a6, s4
ffc01158:	00400793          	li	a5, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:83
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_buf_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
ffc0115c:	01570733          	add	a4, a4, s5
ffc01160:	02a48613          	addi	a2, s1, 42
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:94
}
ffc01164:	01812403          	lw	s0, 24(sp)
ffc01168:	01c12083          	lw	ra, 28(sp)
ffc0116c:	01412483          	lw	s1, 20(sp)
ffc01170:	00c12983          	lw	s3, 12(sp)
ffc01174:	00812a03          	lw	s4, 8(sp)
ffc01178:	00412a83          	lw	s5, 4(sp)
ffc0117c:	00012b03          	lw	s6, 0(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:91
    ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc01180:	00090513          	mv	a0, s2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:94
}
ffc01184:	01012903          	lw	s2, 16(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:91
    ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc01188:	00300593          	li	a1, 3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:94
}
ffc0118c:	03010113          	addi	sp, sp, 48
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:91
    ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc01190:	fc4ff06f          	j	ffc00954 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:82
      while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc01194:	00300593          	li	a1, 3
ffc01198:	00090513          	mv	a0, s2
ffc0119c:	e89fe0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc011a0:	fe050ae3          	beqz	a0, ffc01194 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x110>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:83
      ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_epoch_id_tag)), dram_buf_addr+DRAM_BUF_EPOCH_ID_TAG_OFFSET, 2,
ffc011a4:	00a40693          	addi	a3, s0, 10
ffc011a8:	0086b733          	sltu	a4, a3, s0
ffc011ac:	00000893          	li	a7, 0
ffc011b0:	000a0813          	mv	a6, s4
ffc011b4:	00200793          	li	a5, 2
ffc011b8:	fa5ff06f          	j	ffc0115c <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0xd8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:88
    l1_ptrs->wr_stride = curr_stride_wrap + write_stride + 1;
ffc011bc:	00178793          	addi	a5, a5, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:87
    l1_ptrs->stride_wrap = next_stride_wrap;
ffc011c0:	05348ba3          	sb	s3, 87(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:88
    l1_ptrs->wr_stride = curr_stride_wrap + write_stride + 1;
ffc011c4:	00c78633          	add	a2, a5, a2
ffc011c8:	02c49623          	sh	a2, 44(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:89
    l1_ptrs->rd_stride = curr_stride_wrap + write_stride + 1;
ffc011cc:	00c49623          	sh	a2, 12(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:90
    while (!ncrisc_noc_fast_write_ok(output_noc, NCRISC_SMALL_TXN_CMD_BUF));
ffc011d0:	00300593          	li	a1, 3
ffc011d4:	00090513          	mv	a0, s2
ffc011d8:	e4dfe0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc011dc:	fe050ae3          	beqz	a0, ffc011d0 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0x14c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:91
    ncrisc_noc_fast_write(output_noc, NCRISC_SMALL_TXN_CMD_BUF, (uint32_t)(&(l1_ptrs->wr_stride)), dram_buf_addr+DRAM_BUF_STRIDE_OFFSET, 2,
ffc011e0:	00c40693          	addi	a3, s0, 12
ffc011e4:	0086b733          	sltu	a4, a3, s0
ffc011e8:	00000893          	li	a7, 0
ffc011ec:	000a0813          	mv	a6, s4
ffc011f0:	00200793          	li	a5, 2
ffc011f4:	01570733          	add	a4, a4, s5
ffc011f8:	02c48613          	addi	a2, s1, 44
ffc011fc:	f69ff06f          	j	ffc01164 <update_dram_write_ptrs(bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, dram_output_stream_state_t*, dram_io_state_t volatile* rvtt_l1_ptr, unsigned long, unsigned long) [clone .constprop.0]+0xe0>

ffc01200 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]>:
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:198
void risc_dram_write (uint32_t dram_writes_with_cmd_buf, uint32_t dram_stream, uint32_t noc, uint32_t src_addr, uint64_t dest_addr, uint32_t len_bytes, uint32_t len_tiles, uint32_t vc, uint32_t stream_msg_info_buf_addr, uint32_t transaction_id)
ffc01200:	fd010113          	addi	sp, sp, -48
ffc01204:	02812423          	sw	s0, 40(sp)
ffc01208:	02912223          	sw	s1, 36(sp)
ffc0120c:	03212023          	sw	s2, 32(sp)
ffc01210:	01312e23          	sw	s3, 28(sp)
ffc01214:	01412c23          	sw	s4, 24(sp)
ffc01218:	01512a23          	sw	s5, 20(sp)
ffc0121c:	01612823          	sw	s6, 16(sp)
ffc01220:	02112623          	sw	ra, 44(sp)
ffc01224:	00058493          	mv	s1, a1
ffc01228:	00060993          	mv	s3, a2
ffc0122c:	00068913          	mv	s2, a3
ffc01230:	00070a93          	mv	s5, a4
ffc01234:	00078413          	mv	s0, a5
ffc01238:	00080a13          	mv	s4, a6
ffc0123c:	00088b13          	mv	s6, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:206
  if (do_dram_writes_with_cmd_buf) {
ffc01240:	0c050663          	beqz	a0, ffc0130c <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x10c>
ffc01244:	00f609b3          	add	s3, a2, a5
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:368

void __attribute__((section("code_l1"))) ncrisc_noc_fast_read_any_len_l1(uint32_t noc, uint32_t cmd_buf, uint64_t src_addr, uint32_t dest_addr, uint32_t len_bytes, uint32_t transaction_id);
#endif

inline void ncrisc_noc_fast_write_any_len(uint32_t noc, uint32_t cmd_buf, uint32_t src_addr, uint64_t dest_addr, uint32_t len_bytes, uint32_t vc, bool mcast, bool linked, uint32_t num_dests, uint32_t transaction_id) {
  while (len_bytes > NOC_MAX_BURST_SIZE) {
ffc01248:	00002b37          	lui	s6, 0x2
ffc0124c:	40898633          	sub	a2, s3, s0
ffc01250:	068b7063          	bgeu	s6, s0, ffc012b0 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0xb0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:369
    while (!ncrisc_noc_fast_write_ok(noc, cmd_buf));
ffc01254:	00300593          	li	a1, 3
ffc01258:	00048513          	mv	a0, s1
ffc0125c:	00c12623          	sw	a2, 12(sp)
ffc01260:	dc5fe0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc01264:	00c12603          	lw	a2, 12(sp)
ffc01268:	fe0506e3          	beqz	a0, ffc01254 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x54>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:370
    ncrisc_noc_fast_write(noc, cmd_buf, src_addr, dest_addr, NOC_MAX_BURST_SIZE, vc, mcast, linked, num_dests, transaction_id);
ffc0126c:	00090693          	mv	a3, s2
ffc01270:	000a8713          	mv	a4, s5
ffc01274:	00048513          	mv	a0, s1
ffc01278:	00000893          	li	a7, 0
ffc0127c:	000a0813          	mv	a6, s4
ffc01280:	000027b7          	lui	a5, 0x2
ffc01284:	00300593          	li	a1, 3
ffc01288:	eccff0ef          	jal	ra, ffc00954 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:372
    src_addr += NOC_MAX_BURST_SIZE;
    dest_addr += NOC_MAX_BURST_SIZE;
ffc0128c:	016907b3          	add	a5, s2, s6
ffc01290:	0127b733          	sltu	a4, a5, s2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:374
    len_bytes -= NOC_MAX_BURST_SIZE;
    if (!ncrisc_noc_fast_write_ok(noc, cmd_buf)) {
ffc01294:	00300593          	li	a1, 3
ffc01298:	00048513          	mv	a0, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:372
    dest_addr += NOC_MAX_BURST_SIZE;
ffc0129c:	00078913          	mv	s2, a5
ffc012a0:	01570ab3          	add	s5, a4, s5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:373
    len_bytes -= NOC_MAX_BURST_SIZE;
ffc012a4:	41640433          	sub	s0, s0, s6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:374
    if (!ncrisc_noc_fast_write_ok(noc, cmd_buf)) {
ffc012a8:	d7dfe0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc012ac:	fa1ff06f          	j	ffc0124c <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x4c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:379
      cmd_buf++;
      if (cmd_buf >= NCRISC_SMALL_TXN_CMD_BUF) cmd_buf = NCRISC_WR_CMD_BUF;
    }
  }
  while (!ncrisc_noc_fast_write_ok(noc, cmd_buf));
ffc012b0:	00300593          	li	a1, 3
ffc012b4:	00048513          	mv	a0, s1
ffc012b8:	00c12623          	sw	a2, 12(sp)
ffc012bc:	d69fe0ef          	jal	ra, ffc00024 <ncrisc_noc_fast_read_ok(unsigned long, unsigned long)>
ffc012c0:	00c12603          	lw	a2, 12(sp)
ffc012c4:	fe0506e3          	beqz	a0, ffc012b0 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0xb0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
  ncrisc_noc_fast_write(noc, cmd_buf, src_addr, dest_addr, len_bytes, vc, mcast, linked, num_dests, transaction_id);
ffc012c8:	00040793          	mv	a5, s0
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:212
}
ffc012cc:	02812403          	lw	s0, 40(sp)
ffc012d0:	02c12083          	lw	ra, 44(sp)
ffc012d4:	01c12983          	lw	s3, 28(sp)
ffc012d8:	01012b03          	lw	s6, 16(sp)
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
ffc012dc:	000a0813          	mv	a6, s4
ffc012e0:	00090693          	mv	a3, s2
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:212
ffc012e4:	01812a03          	lw	s4, 24(sp)
ffc012e8:	02012903          	lw	s2, 32(sp)
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
ffc012ec:	000a8713          	mv	a4, s5
ffc012f0:	00048513          	mv	a0, s1
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:212
ffc012f4:	01412a83          	lw	s5, 20(sp)
ffc012f8:	02412483          	lw	s1, 36(sp)
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
ffc012fc:	00000893          	li	a7, 0
ffc01300:	00300593          	li	a1, 3
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:212
ffc01304:	03010113          	addi	sp, sp, 48
ncrisc_noc_fast_write_any_len(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/noc_nonblocking_api.h:380
ffc01308:	e4cff06f          	j	ffc00954 <ncrisc_noc_fast_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, bool, bool, unsigned long, unsigned long) [clone .constprop.0]>
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:209
    while (!stream_dram_write_ok(dram_stream));
ffc0130c:	00800513          	li	a0, 8
ffc01310:	fe1fe0ef          	jal	ra, ffc002f0 <stream_dram_write_ok(unsigned long)>
ffc01314:	fe050ce3          	beqz	a0, ffc0130c <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x10c>
stream_dram_write(unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:460
  if (len_bytes > 0) {
ffc01318:	0a040463          	beqz	s0, ffc013c0 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x1c0>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:463
    NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_AUTO_CFG_HEADER_REG_INDEX, 1 << CURR_PHASE_NUM_MSGS);
ffc0131c:	ffb487b7          	lui	a5, 0xffb48
ffc01320:	08078713          	addi	a4, a5, 128 # ffb48080 <TENSIX_MAILBOX_BASE+0xffc88080>
ffc01324:	000016b7          	lui	a3, 0x1
ffc01328:	00d72823          	sw	a3, 16(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:465
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_REG_INDEX, dest_addr >> NOC_ADDR_LOCAL_BITS);
ffc0132c:	004ad713          	srli	a4, s5, 0x4
ffc01330:	00e7a423          	sw	a4, 8(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:466
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_BUF_START_HI_REG_INDEX, (dest_buf_addr/MEM_WORD_WIDTH) >> MEM_WORD_ADDR_WIDTH);
ffc01334:	38078693          	addi	a3, a5, 896
ffc01338:	00495713          	srli	a4, s2, 0x4
ffc0133c:	01595913          	srli	s2, s2, 0x15
ffc01340:	0526a423          	sw	s2, 72(a3) # 1048 <__firmware_stack_size+0xc48>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:467
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_BUF_START_REG_INDEX, dest_buf_addr/MEM_WORD_WIDTH);
ffc01344:	00e7a623          	sw	a4, 12(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc01348:	00100693          	li	a3, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:468
    NOC_STREAM_WRITE_REG(stream_id, STREAM_REMOTE_DEST_BUF_SIZE_REG_INDEX, len_bytes/MEM_WORD_WIDTH);
ffc0134c:	00445413          	srli	s0, s0, 0x4
ffc01350:	0087a823          	sw	s0, 16(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc01354:	40968733          	sub	a4, a3, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:470
    NOC_STREAM_WRITE_REG(stream_id, STREAM_BUF_START_REG_INDEX, src_addr/MEM_WORD_WIDTH);
ffc01358:	0049d993          	srli	s3, s3, 0x4
ffc0135c:	0137ac23          	sw	s3, 24(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc01360:	00271713          	slli	a4, a4, 0x2
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:478
                            (1 << DEST_DATA_BUF_NO_FLOW_CTRL) | (vc << UNICAST_VC_REG) | (3 << REG_UPDATE_VC_REG);
ffc01364:	012a1813          	slli	a6, s4, 0x12
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:471
    NOC_STREAM_WRITE_REG(stream_id, STREAM_BUF_SIZE_REG_INDEX, len_bytes/MEM_WORD_WIDTH);
ffc01368:	0087ae23          	sw	s0, 28(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:478
                            (1 << DEST_DATA_BUF_NO_FLOW_CTRL) | (vc << UNICAST_VC_REG) | (3 << REG_UPDATE_VC_REG);
ffc0136c:	01076833          	or	a6, a4, a6
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc01370:	00149493          	slli	s1, s1, 0x1
ffc01374:	0060b737          	lui	a4, 0x60b
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:472
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_PTR_REG_INDEX, tile_header_buf_addr_word);
ffc01378:	0367a023          	sw	s6, 32(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc0137c:	51070713          	addi	a4, a4, 1296 # 60b510 <noc_nonblocking_api.cc.88b5909b+0x5e878c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:478
                            (1 << DEST_DATA_BUF_NO_FLOW_CTRL) | (vc << UNICAST_VC_REG) | (3 << REG_UPDATE_VC_REG);
ffc01380:	009864b3          	or	s1, a6, s1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:473
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MSG_INFO_WR_PTR_REG_INDEX, tile_header_buf_addr_word);
ffc01384:	0767a423          	sw	s6, 104(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:475
    uint32_t misc_cfg_reg = (noc << OUTGOING_DATA_NOC) |  ((1-noc) << REMOTE_SRC_UPDATE_NOC) | 
ffc01388:	00e4e4b3          	or	s1, s1, a4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:479
    NOC_STREAM_WRITE_REG(stream_id, STREAM_MISC_CFG_REG_INDEX, misc_cfg_reg);
ffc0138c:	0297a423          	sw	s1, 40(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:481
    NOC_STREAM_WRITE_REG(stream_id, STREAM_PHASE_ADVANCE_REG_INDEX, 1);
ffc01390:	06d7a623          	sw	a3, 108(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:485
      src_ready_state = (NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+8) >> 4) & 0x7;
ffc01394:	ffb48737          	lui	a4, 0xffb48
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:486
    } while (src_ready_state != 4); // SRC_READY_WAIT_ALL_DESTS
ffc01398:	00400693          	li	a3, 4
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:485
      src_ready_state = (NOC_STREAM_READ_REG(stream_id, STREAM_DEBUG_STATUS_REG_INDEX+8) >> 4) & 0x7;
ffc0139c:	3a072783          	lw	a5, 928(a4) # ffb483a0 <TENSIX_MAILBOX_BASE+0xffc883a0>
ffc013a0:	0047d793          	srli	a5, a5, 0x4
ffc013a4:	0077f793          	andi	a5, a5, 7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:486
    } while (src_ready_state != 4); // SRC_READY_WAIT_ALL_DESTS
ffc013a8:	fed79ae3          	bne	a5, a3, ffc0139c <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]+0x19c>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:488
    NOC_STREAM_WRITE_REG(stream_id, STREAM_DEST_PHASE_READY_UPDATE_REG_INDEX, 1<<PHASE_READY_TWO_WAY_RESP);
ffc013ac:	080007b7          	lui	a5, 0x8000
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:490
    NOC_STREAM_WRITE_REG(stream_id, STREAM_SOURCE_ENDPOINT_NEW_MSG_INFO_REG_INDEX, ((src_addr/MEM_WORD_WIDTH) << SOURCE_ENDPOINT_NEW_MSG_ADDR) | ((len_bytes/MEM_WORD_WIDTH) << SOURCE_ENDPOINT_NEW_MSG_SIZE));
ffc013b0:	01141413          	slli	s0, s0, 0x11
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:488
    NOC_STREAM_WRITE_REG(stream_id, STREAM_DEST_PHASE_READY_UPDATE_REG_INDEX, 1<<PHASE_READY_TWO_WAY_RESP);
ffc013b4:	08f72023          	sw	a5, 128(a4)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/stream_interface.h:490
    NOC_STREAM_WRITE_REG(stream_id, STREAM_SOURCE_ENDPOINT_NEW_MSG_INFO_REG_INDEX, ((src_addr/MEM_WORD_WIDTH) << SOURCE_ENDPOINT_NEW_MSG_ADDR) | ((len_bytes/MEM_WORD_WIDTH) << SOURCE_ENDPOINT_NEW_MSG_SIZE));
ffc013b8:	01346433          	or	s0, s0, s3
ffc013bc:	06872a23          	sw	s0, 116(a4)
risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/wormhole/risc_chip_specific.cc:212
}
ffc013c0:	02c12083          	lw	ra, 44(sp)
ffc013c4:	02812403          	lw	s0, 40(sp)
ffc013c8:	02412483          	lw	s1, 36(sp)
ffc013cc:	02012903          	lw	s2, 32(sp)
ffc013d0:	01c12983          	lw	s3, 28(sp)
ffc013d4:	01812a03          	lw	s4, 24(sp)
ffc013d8:	01412a83          	lw	s5, 20(sp)
ffc013dc:	01012b03          	lw	s6, 16(sp)
ffc013e0:	03010113          	addi	sp, sp, 48
ffc013e4:	00008067          	ret

ffc013e8 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]>:
dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:411
void dram_output_stream_issue_scatter_write_indicies(uint32_t output_noc, uint32_t output_vc, uint32_t dram_data_buf_wr_offset_byte, uint32_t data_send_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_tiles,
ffc013e8:	fb010113          	addi	sp, sp, -80
ffc013ec:	04812423          	sw	s0, 72(sp)
ffc013f0:	00078413          	mv	s0, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:429
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc013f4:	06c12783          	lw	a5, 108(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:411
void dram_output_stream_issue_scatter_write_indicies(uint32_t output_noc, uint32_t output_vc, uint32_t dram_data_buf_wr_offset_byte, uint32_t data_send_chunk_size_tiles, uint32_t dram_io_scatter_chunk_size_tiles,
ffc013f8:	04912223          	sw	s1, 68(sp)
ffc013fc:	05212023          	sw	s2, 64(sp)
ffc01400:	01b12e23          	sw	s11, 28(sp)
ffc01404:	05012483          	lw	s1, 80(sp)
ffc01408:	05812e03          	lw	t3, 88(sp)
ffc0140c:	05c12e83          	lw	t4, 92(sp)
ffc01410:	06412d83          	lw	s11, 100(sp)
ffc01414:	07012903          	lw	s2, 112(sp)
ffc01418:	03312e23          	sw	s3, 60(sp)
ffc0141c:	03412c23          	sw	s4, 56(sp)
ffc01420:	03512a23          	sw	s5, 52(sp)
ffc01424:	03612823          	sw	s6, 48(sp)
ffc01428:	03712623          	sw	s7, 44(sp)
ffc0142c:	03812423          	sw	s8, 40(sp)
ffc01430:	03912223          	sw	s9, 36(sp)
ffc01434:	03a12023          	sw	s10, 32(sp)
ffc01438:	04112623          	sw	ra, 76(sp)
ffc0143c:	00050b13          	mv	s6, a0
ffc01440:	00058c13          	mv	s8, a1
ffc01444:	00068c93          	mv	s9, a3
ffc01448:	00070a13          	mv	s4, a4
ffc0144c:	00080b93          	mv	s7, a6
ffc01450:	00088d13          	mv	s10, a7
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:415
  uint32_t addr_with_offset = dram_data_buf_wr_offset_byte + DRAM_BUF_DATA_OFFSET;
ffc01454:	02060a93          	addi	s5, a2, 32
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:416
  for (uint32_t scatter_tile = 0; scatter_tile < data_send_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc01458:	00000993          	li	s3, 0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:429
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc0145c:	fff78f13          	addi	t5, a5, -1 # 7ffffff <noc_nonblocking_api.cc.88b5909b+0x7fdd27b>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:416
  for (uint32_t scatter_tile = 0; scatter_tile < data_send_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc01460:	0f99f063          	bgeu	s3, s9, ffc01540 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x158>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:420
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
ffc01464:	0004a703          	lw	a4, 0(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:421
    scatter_idx++;
ffc01468:	06012683          	lw	a3, 96(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:420
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
ffc0146c:	00271793          	slli	a5, a4, 0x2
ffc01470:	00fd07b3          	add	a5, s10, a5
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:421
    scatter_idx++;
ffc01474:	00170713          	addi	a4, a4, 1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:420
    uint32_t scatter_offset_val = new_scatter_offsets[scatter_idx];
ffc01478:	0007a783          	lw	a5, 0(a5)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:421
    scatter_idx++;
ffc0147c:	00e4a023          	sw	a4, 0(s1)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:164
  unsigned int r = 0;
ffc01480:	00000713          	li	a4, 0
mulsi3(unsigned int, unsigned int):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:165
  while (a)
ffc01484:	00078e63          	beqz	a5, ffc014a0 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0xb8>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:167
      if (a & 1)
ffc01488:	0017f613          	andi	a2, a5, 1
ffc0148c:	00060463          	beqz	a2, ffc01494 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0xac>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:168
        r += b;
ffc01490:	00d70733          	add	a4, a4, a3
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:169
      a >>= 1;
ffc01494:	0017d793          	srli	a5, a5, 0x1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/risc_common.h:170
      b <<= 1;
ffc01498:	00169693          	slli	a3, a3, 0x1
ffc0149c:	fe9ff06f          	j	ffc01484 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x9c>
dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long):
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:423
    dram_dst_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes);
ffc014a0:	00092303          	lw	t1, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:424
    risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_src_addr, dram_dst_addr_w_offset, dram_io_scatter_chunk_size_bytes, dram_io_scatter_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);
ffc014a4:	07412883          	lw	a7, 116(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:423
    dram_dst_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes);
ffc014a8:	006a8333          	add	t1, s5, t1
ffc014ac:	00e30333          	add	t1, t1, a4
ffc014b0:	01c306b3          	add	a3, t1, t3
ffc014b4:	0066b333          	sltu	t1, a3, t1
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:424
    risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_src_addr, dram_dst_addr_w_offset, dram_io_scatter_chunk_size_bytes, dram_io_scatter_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);
ffc014b8:	07812503          	lw	a0, 120(sp)
ffc014bc:	00040793          	mv	a5, s0
ffc014c0:	01d30733          	add	a4, t1, t4
ffc014c4:	000b8613          	mv	a2, s7
ffc014c8:	000c0813          	mv	a6, s8
ffc014cc:	000b0593          	mv	a1, s6
ffc014d0:	01e12623          	sw	t5, 12(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:423
    dram_dst_addr_w_offset = dram_addr + (mulsi3(scatter_offset_val,dram_embeddings_row_shift) + addr_with_offset + col_offset_bytes);
ffc014d4:	01c12423          	sw	t3, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:424
    risc_dram_write (dram_writes_with_cmd_buf, dram_stream, output_noc, stream_src_addr, dram_dst_addr_w_offset, dram_io_scatter_chunk_size_bytes, dram_io_scatter_chunk_size_tiles, output_vc, stream_msg_info_buf_addr, NCRISC_WR_DEF_TRID);
ffc014d8:	01d12223          	sw	t4, 4(sp)
ffc014dc:	d25ff0ef          	jal	ra, ffc01200 <risc_dram_write(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0] [clone .isra.0]>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:429
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc014e0:	0004a783          	lw	a5, 0(s1)
ffc014e4:	00c12f03          	lw	t5, 12(sp)
ffc014e8:	00412e83          	lw	t4, 4(sp)
ffc014ec:	00ff77b3          	and	a5, t5, a5
ffc014f0:	00812e03          	lw	t3, 8(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:426
    stream_src_addr += dram_io_scatter_chunk_size_bytes;
ffc014f4:	008b8bb3          	add	s7, s7, s0
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:429
    if ((scatter_idx & (c_dim_loop_num_rows-1)) == 0) {
ffc014f8:	02079063          	bnez	a5, ffc01518 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x130>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:430
      c_dim_count++;
ffc014fc:	000da783          	lw	a5, 0(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:431
      if (c_dim_count >= c_dim_size) {
ffc01500:	06812703          	lw	a4, 104(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:430
      c_dim_count++;
ffc01504:	00178793          	addi	a5, a5, 1
ffc01508:	00fda023          	sw	a5, 0(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:431
      if (c_dim_count >= c_dim_size) {
ffc0150c:	00e7ea63          	bltu	a5, a4, ffc01520 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x138>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:432
        col_offset_bytes = 0;
ffc01510:	00092023          	sw	zero, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:433
        c_dim_count = 0;
ffc01514:	000da023          	sw	zero, 0(s11)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:416
  for (uint32_t scatter_tile = 0; scatter_tile < data_send_chunk_size_tiles; scatter_tile += dram_io_scatter_chunk_size_tiles) {
ffc01518:	014989b3          	add	s3, s3, s4
ffc0151c:	f45ff06f          	j	ffc01460 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x78>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:435
        col_offset_bytes += dram_io_scatter_chunk_size_bytes;
ffc01520:	00092783          	lw	a5, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:436
        scatter_idx -= c_dim_loop_num_rows;
ffc01524:	06c12703          	lw	a4, 108(sp)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:435
        col_offset_bytes += dram_io_scatter_chunk_size_bytes;
ffc01528:	008787b3          	add	a5, a5, s0
ffc0152c:	00f92023          	sw	a5, 0(s2)
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:436
        scatter_idx -= c_dim_loop_num_rows;
ffc01530:	0004a783          	lw	a5, 0(s1)
ffc01534:	40e787b3          	sub	a5, a5, a4
ffc01538:	00f4a023          	sw	a5, 0(s1)
ffc0153c:	fddff06f          	j	ffc01518 <dram_output_stream_issue_scatter_write_indicies(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, tt_uint64_t volatile* rvtt_l1_ptr, unsigned long&, unsigned long long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long&, unsigned long, unsigned long, unsigned long, unsigned long) [clone .constprop.0]+0x130>
/proj_sw/user_dev/jnie/budabackend/src/firmware/riscv/common/dram_stream_intf.cc:440
}
ffc01540:	04c12083          	lw	ra, 76(sp)
ffc01544:	04812403          	lw	s0, 72(sp)
ffc01548:	04412483          	lw	s1, 68(sp)
ffc0154c:	04012903          	lw	s2, 64(sp)
ffc01550:	03c12983          	lw	s3, 60(sp)
ffc01554:	03812a03          	lw	s4, 56(sp)
ffc01558:	03412a83          	lw	s5, 52(sp)
ffc0155c:	03012b03          	lw	s6, 48(sp)
ffc01560:	02c12b83          	lw	s7, 44(sp)
ffc01564:	02812c03          	lw	s8, 40(sp)
ffc01568:	02412c83          	lw	s9, 36(sp)
ffc0156c:	02012d03          	lw	s10, 32(sp)
ffc01570:	01c12d83          	lw	s11, 28(sp)
ffc01574:	05010113          	addi	sp, sp, 80
ffc01578:	00008067          	ret

ffc0157c <memset>:
memset():
ffc0157c:	00f00313          	li	t1, 15
ffc01580:	00050713          	mv	a4, a0
ffc01584:	02c37e63          	bgeu	t1, a2, ffc015c0 <memset+0x44>
ffc01588:	00f77793          	andi	a5, a4, 15
ffc0158c:	0a079063          	bnez	a5, ffc0162c <memset+0xb0>
ffc01590:	08059263          	bnez	a1, ffc01614 <memset+0x98>
ffc01594:	ff067693          	andi	a3, a2, -16
ffc01598:	00f67613          	andi	a2, a2, 15
ffc0159c:	00e686b3          	add	a3, a3, a4
ffc015a0:	00b72023          	sw	a1, 0(a4)
ffc015a4:	00b72223          	sw	a1, 4(a4)
ffc015a8:	00b72423          	sw	a1, 8(a4)
ffc015ac:	00b72623          	sw	a1, 12(a4)
ffc015b0:	01070713          	addi	a4, a4, 16
ffc015b4:	fed766e3          	bltu	a4, a3, ffc015a0 <memset+0x24>
ffc015b8:	00061463          	bnez	a2, ffc015c0 <memset+0x44>
ffc015bc:	00008067          	ret
ffc015c0:	40c306b3          	sub	a3, t1, a2
ffc015c4:	00269693          	slli	a3, a3, 0x2
ffc015c8:	00000297          	auipc	t0, 0x0
ffc015cc:	005686b3          	add	a3, a3, t0
ffc015d0:	00c68067          	jr	12(a3)
ffc015d4:	00b70723          	sb	a1, 14(a4)
ffc015d8:	00b706a3          	sb	a1, 13(a4)
ffc015dc:	00b70623          	sb	a1, 12(a4)
ffc015e0:	00b705a3          	sb	a1, 11(a4)
ffc015e4:	00b70523          	sb	a1, 10(a4)
ffc015e8:	00b704a3          	sb	a1, 9(a4)
ffc015ec:	00b70423          	sb	a1, 8(a4)
ffc015f0:	00b703a3          	sb	a1, 7(a4)
ffc015f4:	00b70323          	sb	a1, 6(a4)
ffc015f8:	00b702a3          	sb	a1, 5(a4)
ffc015fc:	00b70223          	sb	a1, 4(a4)
ffc01600:	00b701a3          	sb	a1, 3(a4)
ffc01604:	00b70123          	sb	a1, 2(a4)
ffc01608:	00b700a3          	sb	a1, 1(a4)
ffc0160c:	00b70023          	sb	a1, 0(a4)
ffc01610:	00008067          	ret
ffc01614:	0ff5f593          	zext.b	a1, a1
ffc01618:	00859693          	slli	a3, a1, 0x8
ffc0161c:	00d5e5b3          	or	a1, a1, a3
ffc01620:	01059693          	slli	a3, a1, 0x10
ffc01624:	00d5e5b3          	or	a1, a1, a3
ffc01628:	f6dff06f          	j	ffc01594 <memset+0x18>
ffc0162c:	00279693          	slli	a3, a5, 0x2
ffc01630:	00000297          	auipc	t0, 0x0
ffc01634:	005686b3          	add	a3, a3, t0
ffc01638:	00008293          	mv	t0, ra
ffc0163c:	fa0680e7          	jalr	-96(a3)
ffc01640:	00028093          	mv	ra, t0
ffc01644:	ff078793          	addi	a5, a5, -16
ffc01648:	40f70733          	sub	a4, a4, a5
ffc0164c:	00f60633          	add	a2, a2, a5
ffc01650:	f6c378e3          	bgeu	t1, a2, ffc015c0 <memset+0x44>
ffc01654:	f3dff06f          	j	ffc01590 <memset+0x14>
